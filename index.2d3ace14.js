// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"kn9T2":[function(require,module,exports) {
var Refresh = require('react-refresh/runtime');
Refresh.injectIntoGlobalHook(window);
window.$RefreshReg$ = function() {};
window.$RefreshSig$ = function() {
    return function(type) {
        return type;
    };
};

},{"react-refresh/runtime":"786KC"}],"786KC":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-refresh-runtime.development.js');

},{"./cjs/react-refresh-runtime.development.js":"hdge7"}],"hdge7":[function(require,module,exports) {
/** @license React v0.9.0
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    var REACT_FRAGMENT_TYPE = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        REACT_ELEMENT_TYPE = symbolFor('react.element');
        REACT_PORTAL_TYPE = symbolFor('react.portal');
        REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
        REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
        REACT_PROFILER_TYPE = symbolFor('react.profiler');
        REACT_PROVIDER_TYPE = symbolFor('react.provider');
        REACT_CONTEXT_TYPE = symbolFor('react.context');
        REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
        REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
        REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
        REACT_MEMO_TYPE = symbolFor('react.memo');
        REACT_LAZY_TYPE = symbolFor('react.lazy');
        REACT_BLOCK_TYPE = symbolFor('react.block');
        REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
        REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
        REACT_SCOPE_TYPE = symbolFor('react.scope');
        REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
        REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
        REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
        REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.
    // It's OK to reference families, but use WeakMap/Set for types.
    var allFamiliesByID = new Map();
    var allFamiliesByType = new PossiblyWeakMap();
    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
    // that have actually been edited here. This keeps checks fast.
    // $FlowIssue
    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
    // It is an array of [Family, NextType] tuples.
    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.
    var helpersByRendererID = new Map();
    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.
    var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.
    var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
    // It needs to be weak because we do this even for roots that failed to mount.
    // If there is no WeakMap, we won't attempt to do retrying.
    // $FlowIssue
    var rootElements = typeof WeakMap === 'function' ? new WeakMap() : null;
    var isPerformingRefresh = false;
    function computeFullKey(signature) {
        if (signature.fullKey !== null) return signature.fullKey;
        var fullKey = signature.ownKey;
        var hooks;
        try {
            hooks = signature.getCustomHooks();
        } catch (err) {
            // This can happen in an edge case, e.g. if expression like Foo.useSomething
            // depends on Foo which is lazily initialized during rendering.
            // In that case just assume we'll have to remount.
            signature.forceReset = true;
            signature.fullKey = fullKey;
            return fullKey;
        }
        for(var i = 0; i < hooks.length; i++){
            var hook = hooks[i];
            if (typeof hook !== 'function') {
                // Something's wrong. Assume we need to remount.
                signature.forceReset = true;
                signature.fullKey = fullKey;
                return fullKey;
            }
            var nestedHookSignature = allSignaturesByType.get(hook);
            if (nestedHookSignature === undefined) continue;
            var nestedHookKey = computeFullKey(nestedHookSignature);
            if (nestedHookSignature.forceReset) signature.forceReset = true;
            fullKey += '\n---\n' + nestedHookKey;
        }
        signature.fullKey = fullKey;
        return fullKey;
    }
    function haveEqualSignatures(prevType, nextType) {
        var prevSignature = allSignaturesByType.get(prevType);
        var nextSignature = allSignaturesByType.get(nextType);
        if (prevSignature === undefined && nextSignature === undefined) return true;
        if (prevSignature === undefined || nextSignature === undefined) return false;
        if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) return false;
        if (nextSignature.forceReset) return false;
        return true;
    }
    function isReactClass(type) {
        return type.prototype && type.prototype.isReactComponent;
    }
    function canPreserveStateBetween(prevType, nextType) {
        if (isReactClass(prevType) || isReactClass(nextType)) return false;
        if (haveEqualSignatures(prevType, nextType)) return true;
        return false;
    }
    function resolveFamily(type) {
        // Only check updated types to keep lookups fast.
        return updatedFamiliesByType.get(type);
    } // If we didn't care about IE11, we could use new Map/Set(iterable).
    function cloneMap(map) {
        var clone = new Map();
        map.forEach(function(value, key) {
            clone.set(key, value);
        });
        return clone;
    }
    function cloneSet(set) {
        var clone = new Set();
        set.forEach(function(value) {
            clone.add(value);
        });
        return clone;
    }
    function performReactRefresh() {
        if (pendingUpdates.length === 0) return null;
        if (isPerformingRefresh) return null;
        isPerformingRefresh = true;
        try {
            var staleFamilies = new Set();
            var updatedFamilies = new Set();
            var updates = pendingUpdates;
            pendingUpdates = [];
            updates.forEach(function(_ref) {
                var family = _ref[0], nextType = _ref[1];
                // Now that we got a real edit, we can create associations
                // that will be read by the React reconciler.
                var prevType = family.current;
                updatedFamiliesByType.set(prevType, family);
                updatedFamiliesByType.set(nextType, family);
                family.current = nextType; // Determine whether this should be a re-render or a re-mount.
                if (canPreserveStateBetween(prevType, nextType)) updatedFamilies.add(family);
                else staleFamilies.add(family);
            }); // TODO: rename these fields to something more meaningful.
            var update = {
                updatedFamilies: updatedFamilies,
                // Families that will re-render preserving state
                staleFamilies: staleFamilies // Families that will be remounted
            };
            helpersByRendererID.forEach(function(helpers) {
                // Even if there are no roots, set the handler on first update.
                // This ensures that if *new* roots are mounted, they'll use the resolve handler.
                helpers.setRefreshHandler(resolveFamily);
            });
            var didError = false;
            var firstError = null; // We snapshot maps and sets that are mutated during commits.
            // If we don't do this, there is a risk they will be mutated while
            // we iterate over them. For example, trying to recover a failed root
            // may cause another root to be added to the failed list -- an infinite loop.
            var failedRootsSnapshot = cloneSet(failedRoots);
            var mountedRootsSnapshot = cloneSet(mountedRoots);
            var helpersByRootSnapshot = cloneMap(helpersByRoot);
            failedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
                failedRoots.has(root);
                if (rootElements === null) return;
                if (!rootElements.has(root)) return;
                var element = rootElements.get(root);
                try {
                    helpers.scheduleRoot(root, element);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            mountedRootsSnapshot.forEach(function(root) {
                var helpers = helpersByRootSnapshot.get(root);
                if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
                mountedRoots.has(root);
                try {
                    helpers.scheduleRefresh(root, update);
                } catch (err) {
                    if (!didError) {
                        didError = true;
                        firstError = err;
                    } // Keep trying other roots.
                }
            });
            if (didError) throw firstError;
            return update;
        } finally{
            isPerformingRefresh = false;
        }
    }
    function register(type, id) {
        if (type === null) return;
        if (typeof type !== 'function' && typeof type !== 'object') return;
         // This can happen in an edge case, e.g. if we register
        // return value of a HOC but it returns a cached component.
        // Ignore anything but the first registration for each type.
        if (allFamiliesByType.has(type)) return;
         // Create family or remember to update it.
        // None of this bookkeeping affects reconciliation
        // until the first performReactRefresh() call above.
        var family = allFamiliesByID.get(id);
        if (family === undefined) {
            family = {
                current: type
            };
            allFamiliesByID.set(id, family);
        } else pendingUpdates.push([
            family,
            type
        ]);
        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.
        if (typeof type === 'object' && type !== null) switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                register(type.render, id + '$render');
                break;
            case REACT_MEMO_TYPE:
                register(type.type, id + '$type');
                break;
        }
    }
    function setSignature(type, key) {
        var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
        var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;
        allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function() {
                return [];
            }
        });
    } // This is lazily called during first render for a type.
    // It captures Hook list at that time so inline requires don't break comparisons.
    function collectCustomHooksForSignature(type) {
        var signature = allSignaturesByType.get(type);
        if (signature !== undefined) computeFullKey(signature);
    }
    function getFamilyByID(id) {
        return allFamiliesByID.get(id);
    }
    function getFamilyByType(type) {
        return allFamiliesByType.get(type);
    }
    function findAffectedHostInstances(families) {
        var affectedInstances = new Set();
        mountedRoots.forEach(function(root) {
            var helpers = helpersByRoot.get(root);
            if (helpers === undefined) throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
            var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
            instancesForRoot.forEach(function(inst) {
                affectedInstances.add(inst);
            });
        });
        return affectedInstances;
    }
    function injectIntoGlobalHook(globalObject) {
        // For React Native, the global hook will be set up by require('react-devtools-core').
        // That code will run before us. So we need to monkeypatch functions on existing hook.
        // For React Web, the global hook will be set up by the extension.
        // This will also run before us.
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook === undefined) {
            // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
            // Note that in this case it's important that renderer code runs *after* this method call.
            // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
            var nextID = 0;
            globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
                renderers: new Map(),
                supportsFiber: true,
                inject: function(injected) {
                    return nextID++;
                },
                onScheduleFiberRoot: function(id, root, children) {},
                onCommitFiberRoot: function(id, root, maybePriorityLevel, didError) {},
                onCommitFiberUnmount: function() {}
            };
        } // Here, we just want to get a reference to scheduleRefresh.
        var oldInject = hook.inject;
        hook.inject = function(injected) {
            var id = oldInject.apply(this, arguments);
            if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
            return id;
        }; // Do the same for any already injected roots.
        // This is useful if ReactDOM has already been initialized.
        // https://github.com/facebook/react/issues/17626
        hook.renderers.forEach(function(injected, id) {
            if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
        }); // We also want to track currently mounted roots.
        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;
        var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function() {};
        hook.onScheduleFiberRoot = function(id, root, children) {
            if (!isPerformingRefresh) {
                // If it was intentionally scheduled, don't attempt to restore.
                // This includes intentionally scheduled unmounts.
                failedRoots.delete(root);
                if (rootElements !== null) rootElements.set(root, children);
            }
            return oldOnScheduleFiberRoot.apply(this, arguments);
        };
        hook.onCommitFiberRoot = function(id, root, maybePriorityLevel, didError) {
            var helpers = helpersByRendererID.get(id);
            if (helpers === undefined) return;
            helpersByRoot.set(root, helpers);
            var current = root.current;
            var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
            // This logic is copy-pasted from similar logic in the DevTools backend.
            // If this breaks with some refactoring, you'll want to update DevTools too.
            if (alternate !== null) {
                var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
                var isMounted = current.memoizedState != null && current.memoizedState.element != null;
                if (!wasMounted && isMounted) {
                    // Mount a new root.
                    mountedRoots.add(root);
                    failedRoots.delete(root);
                } else if (wasMounted && isMounted) ;
                else if (wasMounted && !isMounted) {
                    // Unmount an existing root.
                    mountedRoots.delete(root);
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                    else helpersByRoot.delete(root);
                } else if (!wasMounted && !isMounted) {
                    if (didError) // We'll remount it on future edits.
                    failedRoots.add(root);
                }
            } else // Mount a new root.
            mountedRoots.add(root);
            return oldOnCommitFiberRoot.apply(this, arguments);
        };
    }
    function hasUnrecoverableErrors() {
        // TODO: delete this after removing dependency in RN.
        return false;
    } // Exposed for testing.
    function _getMountedRootCount() {
        return mountedRoots.size;
    } // This is a wrapper over more primitive functions for setting signature.
    // Signatures let us decide whether the Hook order has changed on refresh.
    //
    // This function is intended to be used as a transform target, e.g.:
    // var _s = createSignatureFunctionForTransform()
    //
    // function Hello() {
    //   const [foo, setFoo] = useState(0);
    //   const value = useCustomHook();
    //   _s(); /* Second call triggers collecting the custom Hook list.
    //          * This doesn't happen during the module evaluation because we
    //          * don't want to change the module order with inline requires.
    //          * Next calls are noops. */
    //   return <h1>Hi</h1>;
    // }
    //
    // /* First call specifies the signature: */
    // _s(
    //   Hello,
    //   'useState{[foo, setFoo]}(0)',
    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
    // );
    function createSignatureFunctionForTransform() {
        // We'll fill in the signature in two steps.
        // First, we'll know the signature itself. This happens outside the component.
        // Then, we'll know the references to custom Hooks. This happens inside the component.
        // After that, the returned function will be a fast path no-op.
        var status = 'needsSignature';
        var savedType;
        var hasCustomHooks;
        return function(type, key, forceReset, getCustomHooks) {
            switch(status){
                case 'needsSignature':
                    if (type !== undefined) {
                        // If we received an argument, this is the initial registration call.
                        savedType = type;
                        hasCustomHooks = typeof getCustomHooks === 'function';
                        setSignature(type, key, forceReset, getCustomHooks); // The next call we expect is from inside a function, to fill in the custom Hooks.
                        status = 'needsCustomHooks';
                    }
                    break;
                case 'needsCustomHooks':
                    if (hasCustomHooks) collectCustomHooksForSignature(savedType);
                    status = 'resolved';
                    break;
            }
            return type;
        };
    }
    function isLikelyComponentType(type) {
        switch(typeof type){
            case 'function':
                // First, deal with classes.
                if (type.prototype != null) {
                    if (type.prototype.isReactComponent) // React class.
                    return true;
                    var ownNames = Object.getOwnPropertyNames(type.prototype);
                    if (ownNames.length > 1 || ownNames[0] !== 'constructor') // This looks like a class.
                    return false;
                     // eslint-disable-next-line no-proto
                    if (type.prototype.__proto__ !== Object.prototype) // It has a superclass.
                    return false;
                     // Pass through.
                // This looks like a regular function with empty prototype.
                } // For plain functions and arrows, use name as a heuristic.
                var name = type.name || type.displayName;
                return typeof name === 'string' && /^[A-Z]/.test(name);
            case 'object':
                if (type != null) switch(type.$$typeof){
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_MEMO_TYPE:
                        // Definitely React components.
                        return true;
                    default:
                        return false;
                }
                return false;
            default:
                return false;
        }
    }
    exports._getMountedRootCount = _getMountedRootCount;
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
    exports.findAffectedHostInstances = findAffectedHostInstances;
    exports.getFamilyByID = getFamilyByID;
    exports.getFamilyByType = getFamilyByType;
    exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
    exports.injectIntoGlobalHook = injectIntoGlobalHook;
    exports.isLikelyComponentType = isLikelyComponentType;
    exports.performReactRefresh = performReactRefresh;
    exports.register = register;
    exports.setSignature = setSignature;
})();

},{}],"hOxwo":[function(require,module,exports) {
"use strict";
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
module.bundle.HMR_BUNDLE_ID = "4d94d0802d3ace14";
function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
function _createForOfIteratorHelper(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
    if (!it) {
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
            if (it) o = it;
            var i = 0;
            var F = function F() {};
            return {
                s: F,
                n: function n() {
                    if (i >= o.length) return {
                        done: true
                    };
                    return {
                        done: false,
                        value: o[i++]
                    };
                },
                e: function e(_e) {
                    throw _e;
                },
                f: F
            };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    var normalCompletion = true, didErr = false, err;
    return {
        s: function s() {
            it = it.call(o);
        },
        n: function n() {
            var step = it.next();
            normalCompletion = step.done;
            return step;
        },
        e: function e(_e2) {
            didErr = true;
            err = _e2;
        },
        f: function f() {
            try {
                if (!normalCompletion && it.return != null) it.return();
            } finally{
                if (didErr) throw err;
            }
        }
    };
}
function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];
    return arr2;
}
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: mixed;
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
*/ var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData,
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function accept(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function dispose(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData = undefined;
}
module.bundle.Module = Module;
var checkedAssets, acceptedAssets, assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');
}
function getPort() {
    return HMR_PORT || location.port;
} // eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';
    var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe
    ws.onmessage = function(event) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        acceptedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        var data = JSON.parse(event.data);
        if (data.type === 'update') {
            // Remove error overlay if there is one
            if (typeof document !== 'undefined') removeErrorOverlay();
            var assets = data.assets.filter(function(asset) {
                return asset.envHash === HMR_ENV_HASH;
            }); // Handle HMR Update
            var handled = assets.every(function(asset) {
                return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                assets.forEach(function(asset) {
                    hmrApply(module.bundle.root, asset);
                });
                for(var i = 0; i < assetsToAccept.length; i++){
                    var id = assetsToAccept[i][1];
                    if (!acceptedAssets[id]) hmrAcceptRun(assetsToAccept[i][0], id);
                }
            } else if ('reload' in location) location.reload();
            else {
                // Web extension context
                var ext = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;
                if (ext && ext.runtime && ext.runtime.reload) ext.runtime.reload();
            }
        }
        if (data.type === 'error') {
            // Log parcel errors to console
            var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi), _step;
            try {
                for(_iterator.s(); !(_step = _iterator.n()).done;){
                    var ansiDiagnostic = _step.value;
                    var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                    console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\n' + stack + '\n\n' + ansiDiagnostic.hints.join('\n'));
                }
            } catch (err) {
                _iterator.e(err);
            } finally{
                _iterator.f();
            }
            if (typeof document !== 'undefined') {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn('[parcel] 🚨 Connection to the HMR server was lost');
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log('[parcel] ✨ Error resolved');
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement('div');
    overlay.id = OVERLAY_ID;
    var errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    var _iterator2 = _createForOfIteratorHelper(diagnostics), _step2;
    try {
        for(_iterator2.s(); !(_step2 = _iterator2.n()).done;){
            var diagnostic = _step2.value;
            var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;
            errorHTML += "\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          \uD83D\uDEA8 ".concat(diagnostic.message, "\n        </div>\n        <pre>").concat(stack, "</pre>\n        <div>\n          ").concat(diagnostic.hints.map(function(hint) {
                return '<div>💡 ' + hint + '</div>';
            }).join(''), "\n        </div>\n        ").concat(diagnostic.documentation ? "<div>\uD83D\uDCDD <a style=\"color: violet\" href=\"".concat(diagnostic.documentation, "\" target=\"_blank\">Learn more</a></div>") : '', "\n      </div>\n    ");
        }
    } catch (err) {
        _iterator2.e(err);
    } finally{
        _iterator2.f();
    }
    errorHTML += '</div>';
    overlay.innerHTML = errorHTML;
    return overlay;
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute('href', link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href = links[i].getAttribute('href');
            var hostname = getHostname();
            var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrApply(bundle, asset) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === 'css') reloadCSS();
    else if (asset.type === 'js') {
        var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                var oldDeps = modules[asset.id][1];
                for(var dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    var id = oldDeps[dep];
                    var parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            var fn = new Function('require', 'module', 'exports', asset.output);
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id1) {
    var modules = bundle.modules;
    if (!modules) return;
    if (modules[id1]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        var deps = modules[id1][1];
        var orphans = [];
        for(var dep in deps){
            var parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id1];
        delete bundle.cache[id1]; // Now delete the orphans.
        orphans.forEach(function(id) {
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id1);
}
function hmrAcceptCheck(bundle, id, depsByBundle) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
     // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    var parents = getParents(module.bundle.root, id);
    var accepted = false;
    while(parents.length > 0){
        var v = parents.shift();
        var a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            var p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push.apply(parents, _toConsumableArray(p));
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle, id, depsByBundle) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToAccept.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) return true;
}
function hmrAcceptRun(bundle, id) {
    var cached = bundle.cache[id];
    bundle.hotData = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData;
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData);
    });
    delete bundle.cache[id];
    bundle(id);
    cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) // $FlowFixMe[method-unbinding]
        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
    });
    acceptedAssets[id] = true;
}

},{}],"4aBH6":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$2a8f = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$2a8f.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _normalizeCss = require("normalize.css/normalize.css");
var _blueprintCss = require("@blueprintjs/core/lib/css/blueprint.css");
var _blueprintIconsCss = require("@blueprintjs/icons/lib/css/blueprint-icons.css");
var _blueprintDatetimeCss = require("@blueprintjs/datetime/lib/css/blueprint-datetime.css");
var _tableCss = require("@blueprintjs/table/lib/css/table.css");
var _indexScss = require("./index.scss");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _client = require("react-dom/client");
var _app = require("./App");
const root = _client.createRoot(document.getElementById('root'));
root.render(/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_app.App, {}, void 0, false, {
    fileName: "src/index.tsx",
    lineNumber: 13,
    columnNumber: 13
}, undefined));

  $parcel$ReactRefreshHelpers$2a8f.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","normalize.css/normalize.css":"eLmrl","@blueprintjs/core/lib/css/blueprint.css":"87gaD","@blueprintjs/icons/lib/css/blueprint-icons.css":"2SgQR","@blueprintjs/datetime/lib/css/blueprint-datetime.css":"dDY29","@blueprintjs/table/lib/css/table.css":"5Vfyq","./index.scss":"lJZlQ","react":"21dqq","react-dom/client":"lOjBx","./App":"7F5Te","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"iTorj":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-jsx-dev-runtime.development.js');

},{"./cjs/react-jsx-dev-runtime.development.js":"48uCM"}],"48uCM":[function(require,module,exports) {
/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    var React = require('react');
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    // ATTENTION
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function error(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function warnIfStringRefCannotBeAutoConverted(config, self) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * https://github.com/reactjs/rfcs/pull/107
 * @param {*} type
 * @param {object} props
 * @param {string} key
 */ function jsxDEV(type, config, maybeKey, source, self) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.
        if (maybeKey !== undefined) {
            checkKeyStringCoercion(maybeKey);
            key = '' + maybeKey;
        }
        if (hasValidKey(config)) {
            checkKeyStringCoercion(config.key);
            key = '' + config.key;
        }
        if (hasValidRef(config)) {
            ref = config.ref;
            warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object
        for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
         // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendum(source);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) {
            var children = props.children;
            if (children !== undefined) {
                if (isStaticChildren) {
                    if (isArray(children)) {
                        for(var i = 0; i < children.length; i++)validateChildKeys(children[i], type);
                        if (Object.freeze) Object.freeze(children);
                    } else error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                } else validateChildKeys(children, type);
            }
        }
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    } // These two functions exist to still get child warnings in dev
    var jsxDEV$1 = jsxWithValidation;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = jsxDEV$1;
})();

},{"react":"21dqq"}],"21dqq":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react.development.js');

},{"./cjs/react.development.js":"6YvXz"}],"6YvXz":[function(require,module,exports) {
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var ReactVersion = '18.1.0';
    // -----------------------------------------------------------------------------
    var enableScopeAPI = false; // Experimental Create Event Handle API.
    var enableCacheElement = false;
    var enableTransitionTracing = false; // No known bugs, but needs performance testing
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    // stuff. Intended to enable React core members to more easily debug scheduling
    // issues in DEV builds.
    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.
    // ATTENTION
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    /**
 * Keeps track of the current dispatcher.
 */ var ReactCurrentDispatcher = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    /**
 * Keeps track of the current batch's configuration such as how long an update
 * should suspend for if it needs to.
 */ var ReactCurrentBatchConfig = {
        transition: null
    };
    var ReactCurrentActQueue = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: false,
        didScheduleLegacyUpdate: false
    };
    /**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */ var ReactCurrentOwner = {
        /**
   * @internal
   * @type {ReactComponent}
   */ current: null
    };
    var ReactDebugCurrentFrame1 = {};
    var currentExtraStackFrame = null;
    function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
    }
    ReactDebugCurrentFrame1.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
    }; // Stack implementation injected by the current renderer.
    ReactDebugCurrentFrame1.getCurrentStack = null;
    ReactDebugCurrentFrame1.getStackAddendum = function() {
        var stack = ''; // Add an extra top frame while an element is being validated
        if (currentExtraStackFrame) stack += currentExtraStackFrame;
         // Delegate to the injected renderer-specific implementation
        var impl = ReactDebugCurrentFrame1.getCurrentStack;
        if (impl) stack += impl() || '';
        return stack;
    };
    var ReactSharedInternals = {
        ReactCurrentDispatcher: ReactCurrentDispatcher,
        ReactCurrentBatchConfig: ReactCurrentBatchConfig,
        ReactCurrentOwner: ReactCurrentOwner
    };
    ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame1;
    ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        printWarning('warn', format, args);
    }
    function error1(format) {
        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
        printWarning('error', format, args);
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var didWarnStateUpdateForUnmountedComponent = {};
    function warnNoop(publicInstance, callerName) {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + "." + callerName;
        if (didWarnStateUpdateForUnmountedComponent[warningKey]) return;
        error1("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
    }
    /**
 * This is the abstract API for an update queue.
 */ var ReactNoopUpdateQueue = {
        /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */ isMounted: function(publicInstance) {
            return false;
        },
        /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
        },
        /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, 'replaceState');
        },
        /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, 'setState');
        }
    };
    var assign = Object.assign;
    var emptyObject = {};
    Object.freeze(emptyObject);
    /**
 * Base class helpers for the updating state of a component.
 */ function Component1(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
        // renderer.
        this.updater = updater || ReactNoopUpdateQueue;
    }
    Component1.prototype.isReactComponent = {};
    /**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */ Component1.prototype.setState = function(partialState, callback) {
        if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */ Component1.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    var deprecatedAPIs = {
        isMounted: [
            'isMounted',
            "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
        ],
        replaceState: [
            'replaceState',
            "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
        ]
    };
    var defineDeprecationWarning = function(methodName, info) {
        Object.defineProperty(Component1.prototype, methodName, {
            get: function() {
                warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
                return undefined;
            }
        });
    };
    for(var fnName in deprecatedAPIs)if (deprecatedAPIs.hasOwnProperty(fnName)) defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    function ComponentDummy() {}
    ComponentDummy.prototype = Component1.prototype;
    /**
 * Convenience component with default shallow equality check for sCU.
 */ function PureComponent(props, context, updater) {
        this.props = props;
        this.context = context; // If a component has string refs, we will assign a different object later.
        this.refs = emptyObject;
        this.updater = updater || ReactNoopUpdateQueue;
    }
    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.
    assign(pureComponentPrototype, Component1.prototype);
    pureComponentPrototype.isPureReactComponent = true;
    // an immutable object with a single mutable value
    function createRef() {
        var refObject = {
            current: null
        };
        Object.seal(refObject);
        return refObject;
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error1("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error1("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
        key: true,
        ref: true,
        __self: true,
        __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    didWarnAboutStringRefs = {};
    function hasValidRef(config) {
        if (hasOwnProperty.call(config, 'ref')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.ref !== undefined;
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, 'key')) {
            var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
            if (getter && getter.isReactWarning) return false;
        }
        return config.key !== undefined;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
            if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error1("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
        });
    }
    function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
            if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error1("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
            }
        };
        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
        });
    }
    function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
            var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (!didWarnAboutStringRefs[componentName]) {
                error1('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
            }
        }
    }
    /**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, instanceof check
 * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} props
 * @param {*} key
 * @param {string|object} ref
 * @param {*} owner
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @internal
 */ var ReactElement = function(type, key, ref, self, source, owner, props) {
        var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,
            // Record the component responsible for creating this element.
            _owner: owner
        };
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.
        Object.defineProperty(element._store, 'validated', {
            configurable: false,
            enumerable: false,
            writable: true,
            value: false
        }); // self and source are DEV only properties.
        Object.defineProperty(element, '_self', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.
        Object.defineProperty(element, '_source', {
            configurable: false,
            enumerable: false,
            writable: false,
            value: source
        });
        if (Object.freeze) {
            Object.freeze(element.props);
            Object.freeze(element);
        }
        return element;
    };
    /**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */ function createElement(type, config, children) {
        var propName; // Reserved names are extracted
        var props = {};
        var key = null;
        var ref = null;
        var self = null;
        var source = null;
        if (config != null) {
            if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config);
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = '' + config.key;
            }
            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) props[propName] = config[propName];
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            if (Object.freeze) Object.freeze(childArray);
            props.children = childArray;
        } // Resolve default props
        if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for(propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
        }
        if (key || ref) {
            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
            if (key) defineKeyPropWarningGetter(props, displayName);
            if (ref) defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
    }
    /**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */ function cloneElement(element, config, children) {
        if (element === null || element === undefined) throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName; // Original props are copied
        var props = assign({}, element.props); // Reserved names are extracted
        var key = element.key;
        var ref = element.ref; // Self is preserved since the owner is preserved.
        var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
        // transpiler, and the original source is probably a better indicator of the
        // true owner.
        var source = element._source; // Owner will be preserved, unless ref is overridden
        var owner = element._owner;
        if (config != null) {
            if (hasValidRef(config)) {
                // Silently steal the ref from the parent.
                ref = config.ref;
                owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
                checkKeyStringCoercion(config.key);
                key = '' + config.key;
            } // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) defaultProps = element.type.defaultProps;
            for(propName in config)if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) // Resolve default props
                props[propName] = defaultProps[propName];
                else props[propName] = config[propName];
            }
        } // Children can be more than one argument, and those are transferred onto
        // the newly allocated props object.
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1) props.children = children;
        else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for(var i = 0; i < childrenLength; i++)childArray[i] = arguments[i + 2];
            props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */ function isValidElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */ function escape(key) {
        var escapeRegex = /[=:]/g;
        var escaperLookup = {
            '=': '=0',
            ':': '=2'
        };
        var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
        });
        return '$' + escapedString;
    }
    /**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */ var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;
    function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, '$&/');
    }
    /**
 * Generate a key string that identifies a element within a set.
 *
 * @param {*} element A element that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */ function getElementKey(element, index) {
        // Do some typechecking here since we call this blindly. We want to ensure
        // that we don't block potential future ES APIs.
        if (typeof element === 'object' && element !== null && element.key != null) {
            checkKeyStringCoercion(element.key);
            return escape('' + element.key);
        } // Implicit key determined by the index in the set
        return index.toString(36);
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        if (type === 'undefined' || type === 'boolean') // All of the above are perceived as null.
        children = null;
        var invokeCallback = false;
        if (children === null) invokeCallback = true;
        else switch(type){
            case 'string':
            case 'number':
                invokeCallback = true;
                break;
            case 'object':
                switch(children.$$typeof){
                    case REACT_ELEMENT_TYPE:
                    case REACT_PORTAL_TYPE:
                        invokeCallback = true;
                }
        }
        if (invokeCallback) {
            var _child = children;
            var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows:
            var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
                var escapedChildKey = '';
                if (childKey != null) escapedChildKey = escapeUserProvidedKey(childKey) + '/';
                mapIntoArray(mappedChild, array, escapedChildKey, '', function(c) {
                    return c;
                });
            } else if (mappedChild != null) {
                if (isValidElement(mappedChild)) {
                    // The `if` statement here prevents auto-disabling of the safe
                    // coercion ESLint rule, so we must manually disable it below.
                    // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                    if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) checkKeyStringCoercion(mappedChild.key);
                    mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children
                    escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
                }
                array.push(mappedChild);
            }
            return 1;
        }
        var child;
        var nextName;
        var subtreeCount = 0; // Count of children found in the current subtree.
        var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (isArray(children)) for(var i = 0; i < children.length; i++){
            child = children[i];
            nextName = nextNamePrefix + getElementKey(child, i);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
        else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === 'function') {
                var iterableChildren = children;
                // Warn about using Maps as children
                if (iteratorFn === iterableChildren.entries) {
                    if (!didWarnAboutMaps) warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                    didWarnAboutMaps = true;
                }
                var iterator = iteratorFn.call(iterableChildren);
                var step;
                var ii = 0;
                while(!(step = iterator.next()).done){
                    child = step.value;
                    nextName = nextNamePrefix + getElementKey(child, ii++);
                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                }
            } else if (type === 'object') {
                // eslint-disable-next-line react-internal/safe-string-coercion
                var childrenString = String(children);
                throw new Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
            }
        }
        return subtreeCount;
    }
    /**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */ function mapChildren(children, func, context) {
        if (children == null) return children;
        var result = [];
        var count = 0;
        mapIntoArray(children, result, '', '', function(child) {
            return func.call(context, child, count++);
        });
        return result;
    }
    /**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */ function countChildren(children) {
        var n = 0;
        mapChildren(children, function() {
            n++; // Don't return anything
        });
        return n;
    }
    /**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */ function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
            forEachFunc.apply(this, arguments); // Don't return anything.
        }, forEachContext);
    }
    /**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */ function toArray(children) {
        return mapChildren(children, function(child) {
            return child;
        }) || [];
    }
    /**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */ function onlyChild(children) {
        if (!isValidElement(children)) throw new Error('React.Children.only expected to receive a single React element child.');
        return children;
    }
    function createContext(defaultValue) {
        // TODO: Second argument used to be an optional `calculateChangedBits`
        // function. Warn to reserve for future use?
        var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
        };
        context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = false;
        var hasWarnedAboutUsingConsumerProvider = false;
        var hasWarnedAboutDisplayNameOnConsumer = false;
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here
        Object.defineProperties(Consumer, {
            Provider: {
                get: function() {
                    if (!hasWarnedAboutUsingConsumerProvider) {
                        hasWarnedAboutUsingConsumerProvider = true;
                        error1("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                    }
                    return context.Provider;
                },
                set: function(_Provider) {
                    context.Provider = _Provider;
                }
            },
            _currentValue: {
                get: function() {
                    return context._currentValue;
                },
                set: function(_currentValue) {
                    context._currentValue = _currentValue;
                }
            },
            _currentValue2: {
                get: function() {
                    return context._currentValue2;
                },
                set: function(_currentValue2) {
                    context._currentValue2 = _currentValue2;
                }
            },
            _threadCount: {
                get: function() {
                    return context._threadCount;
                },
                set: function(_threadCount) {
                    context._threadCount = _threadCount;
                }
            },
            Consumer: {
                get: function() {
                    if (!hasWarnedAboutUsingNestedContextConsumers) {
                        hasWarnedAboutUsingNestedContextConsumers = true;
                        error1("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                    }
                    return context.Consumer;
                }
            },
            displayName: {
                get: function() {
                    return context.displayName;
                },
                set: function(displayName) {
                    if (!hasWarnedAboutDisplayNameOnConsumer) {
                        warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                        hasWarnedAboutDisplayNameOnConsumer = true;
                    }
                }
            }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
        context.Consumer = Consumer;
        context._currentRenderer = null;
        context._currentRenderer2 = null;
        return context;
    }
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;
    function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor(); // Transition to the next state.
            // This might throw either because it's missing or throws. If so, we treat it
            // as still uninitialized and try again next time. Which is the same as what
            // happens if the ctor or any wrappers processing the ctor throws. This might
            // end up fixing it if the resolution was a concurrency bug.
            thenable.then(function(moduleObject) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var resolved = payload;
                    resolved._status = Resolved;
                    resolved._result = moduleObject;
                }
            }, function(error) {
                if (payload._status === Pending || payload._status === Uninitialized) {
                    // Transition to the next state.
                    var rejected = payload;
                    rejected._status = Rejected;
                    rejected._result = error;
                }
            });
            if (payload._status === Uninitialized) {
                // In case, we're still uninitialized, then we're waiting for the thenable
                // to resolve. Set it as pending in the meantime.
                var pending = payload;
                pending._status = Pending;
                pending._result = thenable;
            }
        }
        if (payload._status === Resolved) {
            var moduleObject1 = payload._result;
            if (moduleObject1 === undefined) error1("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject1);
            if (!('default' in moduleObject1)) error1("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject1);
            return moduleObject1.default;
        } else throw payload._result;
    }
    function lazy(ctor) {
        var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
        };
        var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
        };
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe
        Object.defineProperties(lazyType, {
            defaultProps: {
                configurable: true,
                get: function() {
                    return defaultProps;
                },
                set: function(newDefaultProps) {
                    error1("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    defaultProps = newDefaultProps; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'defaultProps', {
                        enumerable: true
                    });
                }
            },
            propTypes: {
                configurable: true,
                get: function() {
                    return propTypes;
                },
                set: function(newPropTypes) {
                    error1("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                    propTypes = newPropTypes; // Match production behavior more closely:
                    // $FlowFixMe
                    Object.defineProperty(lazyType, 'propTypes', {
                        enumerable: true
                    });
                }
            }
        });
        return lazyType;
    }
    function forwardRef(render) {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) error1("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
        else if (typeof render !== 'function') error1('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        else if (render.length !== 0 && render.length !== 2) error1('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
        if (render != null) {
            if (render.defaultProps != null || render.propTypes != null) error1("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        }
        var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.forwardRef((props, ref) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!render.name && !render.displayName) render.displayName = name;
            }
        });
        return elementType;
    }
    var REACT_MODULE_REFERENCE;
    REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');
    function isValidElementType(type) {
        if (typeof type === 'string' || typeof type === 'function') return true;
         // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).
        if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) return true;
        if (typeof type === 'object' && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) return true;
        }
        return false;
    }
    function memo(type, compare) {
        if (!isValidElementType(type)) error1("memo: The first argument must be a component. Instead received: %s", type === null ? 'null' : typeof type);
        var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type: type,
            compare: compare === undefined ? null : compare
        };
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
            enumerable: false,
            configurable: true,
            get: function() {
                return ownName;
            },
            set: function(name) {
                ownName = name; // The inner component shouldn't inherit this display name in most cases,
                // because the component may be used elsewhere.
                // But it's nice for anonymous functions to inherit the name,
                // so that our component-stack generation logic will display their frames.
                // An anonymous function generally suggests a pattern like:
                //   React.memo((props) => {...});
                // This kind of inner function is not used elsewhere so the side effect is okay.
                if (!type.name && !type.displayName) type.displayName = name;
            }
        });
        return elementType;
    }
    function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        if (dispatcher === null) error1("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        // intentionally don't throw our own error because this is in a hot path.
        // Also helps ensure this is inlined.
        return dispatcher;
    }
    function useContext(Context) {
        var dispatcher = resolveDispatcher();
        // TODO: add a more generic warning for invalid values.
        if (Context._context !== undefined) {
            var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
            // and nobody should be using this in existing code.
            if (realContext.Consumer === Context) error1("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
            else if (realContext.Provider === Context) error1("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context);
    }
    function useState(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
    }
    function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
    }
    function useRef(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
    }
    function useEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
    }
    function useInsertionEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useInsertionEffect(create, deps);
    }
    function useLayoutEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
    }
    function useCallback(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
    }
    function useMemo(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
    }
    function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
    }
    function useDebugValue(value, formatterFn) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
    }
    function useTransition() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useTransition();
    }
    function useDeferredValue(value) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDeferredValue(value);
    }
    function useId() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useId();
    }
    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
    }
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error1("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher$1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher$1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error1("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error1('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    function setCurrentlyValidatingElement$1(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            setExtraStackFrame(stack);
        } else setExtraStackFrame(null);
    }
    var propTypesMisspellWarningShown;
    propTypesMisspellWarningShown = false;
    function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) return '\n\nCheck the render method of `' + name + '`.';
        }
        return '';
    }
    function getSourceInfoErrorAddendum(source) {
        if (source !== undefined) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }
        return '';
    }
    function getSourceInfoErrorAddendumForProps(elementProps) {
        if (elementProps !== null && elementProps !== undefined) return getSourceInfoErrorAddendum(elementProps.__source);
        return '';
    }
    /**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */ var ownerHasKeyUseWarning = {};
    function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
        return info;
    }
    /**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */ function validateExplicitKey(element, parentType) {
        if (!element._store || element._store.validated || element.key != null) return;
        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) return;
        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.
        var childOwner = '';
        if (element && element._owner && element._owner !== ReactCurrentOwner.current) // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
        setCurrentlyValidatingElement$1(element);
        error1('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
    }
    /**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */ function validateChildKeys(node, parentType) {
        if (typeof node !== 'object') return;
        if (isArray(node)) for(var i = 0; i < node.length; i++){
            var child = node[i];
            if (isValidElement(child)) validateExplicitKey(child, parentType);
        }
        else if (isValidElement(node)) // This element was passed in a valid location.
        {
            if (node._store) node._store.validated = true;
        } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === 'function') // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            {
                if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while(!(step = iterator.next()).done)if (isValidElement(step.value)) validateExplicitKey(step.value, parentType);
                }
            }
        }
    }
    /**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */ function validatePropTypes(element) {
        var type = element.type;
        if (type === null || type === undefined || typeof type === 'string') return;
        var propTypes;
        if (typeof type === 'function') propTypes = type.propTypes;
        else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) propTypes = type.propTypes;
        else return;
        if (propTypes) {
            // Intentionally inside to avoid triggering lazy initializers:
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:
            var _name = getComponentNameFromType(type);
            error1('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }
        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) error1("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
    }
    /**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */ function validateFragmentProps(fragment) {
        var keys = Object.keys(fragment.props);
        for(var i = 0; i < keys.length; i++){
            var key = keys[i];
            if (key !== 'children' && key !== 'key') {
                setCurrentlyValidatingElement$1(fragment);
                error1("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
            }
        }
        if (fragment.ref !== null) {
            setCurrentlyValidatingElement$1(fragment);
            error1('Invalid attribute `ref` supplied to `React.Fragment`.');
            setCurrentlyValidatingElement$1(null);
        }
    }
    function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.
        if (!validType) {
            var info = '';
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) info += sourceInfo;
            else info += getDeclarationErrorAddendum();
            var typeString;
            if (type === null) typeString = 'null';
            else if (isArray(type)) typeString = 'array';
            else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || 'Unknown') + " />";
                info = ' Did you accidentally export a JSX literal instead of a component?';
            } else typeString = typeof type;
            error1("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.
        if (element == null) return element;
         // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)
        if (validType) for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], type);
        if (type === REACT_FRAGMENT_TYPE) validateFragmentProps(element);
        else validatePropTypes(element);
        return element;
    }
    var didWarnAboutDeprecatedCreateFactory = false;
    function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        validatedFactory.type = type;
        if (!didWarnAboutDeprecatedCreateFactory) {
            didWarnAboutDeprecatedCreateFactory = true;
            warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
        } // Legacy hook: remove it
        Object.defineProperty(validatedFactory, 'type', {
            enumerable: false,
            get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, 'type', {
                    value: type
                });
                return type;
            }
        });
        return validatedFactory;
    }
    function cloneElementWithValidation(element, props, children) {
        var newElement = cloneElement.apply(this, arguments);
        for(var i = 2; i < arguments.length; i++)validateChildKeys(arguments[i], newElement.type);
        validatePropTypes(newElement);
        return newElement;
    }
    function startTransition(scope, options) {
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = {};
        var currentTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition._updatedFibers = new Set();
        try {
            scope();
        } finally{
            ReactCurrentBatchConfig.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    var didWarnAboutMessageChannel = false;
    var enqueueTaskImpl = null;
    function enqueueTask(task) {
        if (enqueueTaskImpl === null) try {
            // read require off the module object to get around the bundlers.
            // we don't want them to detect a require and bundle a Node polyfill.
            var requireString = ('require' + Math.random()).slice(0, 7);
            var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's
            // version of setImmediate, bypassing fake timers if any.
            enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;
        } catch (_err) {
            // we're in a browser
            // we can't use regular timers because they may still be faked
            // so we try MessageChannel+postMessage instead
            enqueueTaskImpl = function(callback) {
                if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === 'undefined') error1("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(undefined);
            };
        }
        return enqueueTaskImpl(task);
    }
    var actScopeDepth = 0;
    var didWarnNoAwaitAct = false;
    function act(callback) {
        // `act` calls can be nested, so we track the depth. This represents the
        // number of `act` scopes on the stack.
        var prevActScopeDepth = actScopeDepth;
        actScopeDepth++;
        if (ReactCurrentActQueue.current === null) // This is the outermost `act` scope. Initialize the queue. The reconciler
        // will detect the queue and use it instead of Scheduler.
        ReactCurrentActQueue.current = [];
        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
        var result;
        try {
            // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only
            // set to `true` while the given callback is executed, not for updates
            // triggered during an async event, because this is how the legacy
            // implementation of `act` behaved.
            ReactCurrentActQueue.isBatchingLegacy = true;
            result = callback(); // Replicate behavior of original `act` implementation in legacy mode,
            // which flushed updates immediately after the scope function exits, even
            // if it's an async function.
            if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                    ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                    flushActQueue(queue);
                }
            }
        } catch (error2) {
            popActScope(prevActScopeDepth);
            throw error2;
        } finally{
            ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
        }
        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {
            var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait
            // for it to resolve before exiting the current scope.
            var wasAwaited = false;
            var thenable = {
                then: function(resolve, reject) {
                    wasAwaited = true;
                    thenableResult.then(function(returnValue) {
                        popActScope(prevActScopeDepth);
                        if (actScopeDepth === 0) // We've exited the outermost act scope. Recursively flush the
                        // queue until there's no remaining work.
                        recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                        else resolve(returnValue);
                    }, function(error) {
                        // The callback threw an error.
                        popActScope(prevActScopeDepth);
                        reject(error);
                    });
                }
            };
            if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') // eslint-disable-next-line no-undef
            Promise.resolve().then(function() {}).then(function() {
                if (!wasAwaited) {
                    didWarnNoAwaitAct = true;
                    error1("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                }
            });
            return thenable;
        } else {
            var returnValue1 = result; // The callback is not an async function. Exit the current scope
            // immediately, without awaiting.
            popActScope(prevActScopeDepth);
            if (actScopeDepth === 0) {
                // Exiting the outermost act scope. Flush the queue.
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                    flushActQueue(_queue);
                    ReactCurrentActQueue.current = null;
                } // Return a thenable. If the user awaits it, we'll flush again in
                // case additional work was scheduled by a microtask.
                var _thenable = {
                    then: function(resolve, reject) {
                        // Confirm we haven't re-entered another `act` scope, in case
                        // the user does something weird like await the thenable
                        // multiple times.
                        if (ReactCurrentActQueue.current === null) {
                            // Recursively flush the queue until there's no remaining work.
                            ReactCurrentActQueue.current = [];
                            recursivelyFlushAsyncActWork(returnValue1, resolve, reject);
                        } else resolve(returnValue1);
                    }
                };
                return _thenable;
            } else {
                // Since we're inside a nested `act` scope, the returned thenable
                // immediately resolves. The outer scope will flush the queue.
                var _thenable2 = {
                    then: function(resolve, reject) {
                        resolve(returnValue1);
                    }
                };
                return _thenable2;
            }
        }
    }
    function popActScope(prevActScopeDepth) {
        if (prevActScopeDepth !== actScopeDepth - 1) error1("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
        actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        var queue = ReactCurrentActQueue.current;
        if (queue !== null) try {
            flushActQueue(queue);
            enqueueTask(function() {
                if (queue.length === 0) {
                    // No additional work was scheduled. Finish.
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                } else // Keep flushing work until there's none left.
                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            });
        } catch (error) {
            reject(error);
        }
        else resolve(returnValue);
    }
    var isFlushing = false;
    function flushActQueue(queue) {
        if (!isFlushing) {
            // Prevent re-entrance.
            isFlushing = true;
            var i = 0;
            try {
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(true);
                    while (callback !== null)
                }
                queue.length = 0;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                queue = queue.slice(i + 1);
                throw error;
            } finally{
                isFlushing = false;
            }
        }
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component1;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.startTransition = startTransition;
    exports.unstable_act = act;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useDeferredValue = useDeferredValue;
    exports.useEffect = useEffect;
    exports.useId = useId;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useInsertionEffect = useInsertionEffect;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.useSyncExternalStore = useSyncExternalStore;
    exports.useTransition = useTransition;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"eLmrl":[function() {},{}],"87gaD":[function() {},{}],"2SgQR":[function() {},{}],"dDY29":[function() {},{}],"5Vfyq":[function() {},{}],"lJZlQ":[function() {},{}],"lOjBx":[function(require,module,exports) {
'use strict';
var m = require('react-dom');
var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
exports.createRoot = function(c, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.createRoot(c, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};
exports.hydrateRoot = function(c, h, o) {
    i.usingClientEntryPoint = true;
    try {
        return m.hydrateRoot(c, h, o);
    } finally{
        i.usingClientEntryPoint = false;
    }
};

},{"react-dom":"j6uA9"}],"j6uA9":[function(require,module,exports) {
'use strict';
function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    var err;
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
}
module.exports = require('./cjs/react-dom.development.js');

},{"./cjs/react-dom.development.js":"3iA9v"}],"3iA9v":[function(require,module,exports) {
/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var React = require('react');
    var Scheduler = require('scheduler');
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    var suppressWarning = false;
    function setSuppressWarning(newSuppressWarning) {
        suppressWarning = newSuppressWarning;
    } // In DEV, calls to console.warn and console.error get replaced
    // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.
    function warn(format) {
        if (!suppressWarning) {
            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
            printWarning('warn', format, args);
        }
    }
    function error1(format) {
        if (!suppressWarning) {
            for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
            printWarning('error', format, args);
        }
    }
    function printWarning(level, format, args) {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();
        if (stack !== '') {
            format += '%s';
            args = args.concat([
                stack
            ]);
        } // eslint-disable-next-line react-internal/safe-string-coercion
        var argsWithFormat = args.map(function(item) {
            return String(item);
        }); // Careful: RN currently depends on this prefix
        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging
        Function.prototype.apply.call(console[level], console, argsWithFormat);
    }
    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class
    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var ScopeComponent = 21;
    var OffscreenComponent = 22;
    var LegacyHiddenComponent = 23;
    var CacheComponent = 24;
    var TracingMarkerComponent = 25;
    // -----------------------------------------------------------------------------
    var enableClientRenderFallbackOnTextMismatch = true; // TODO: Need to review this code one more time before landing
    // the react-reconciler package.
    var enableNewReconciler = false; // Support legacy Primer support on internal FB www
    var enableLazyContextPropagation = false; // FB-only usage. The new API has different semantics.
    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber
    var enableSuspenseAvoidThisFallback = false; // Enables unstable_avoidThisFallback feature in Fizz
    // React DOM Chopping Block
    //
    // Similar to main Chopping Block but only flags related to React DOM. These are
    // grouped because we will likely batch all of them into a single major release.
    // -----------------------------------------------------------------------------
    // Disable support for comment nodes as React DOM containers. Already disabled
    // in open source, but www codebase still relies on it. Need to remove.
    var disableCommentsAsDOMContainers = true; // Disable javascript: URL strings in href for XSS protection.
    // and client rendering, mostly to allow JSX attributes to apply to the custom
    // element's object properties instead of only HTML attributes.
    // https://github.com/facebook/react/issues/11347
    var enableCustomElementPropertySupport = false; // Disables children for <textarea> elements
    var warnAboutStringRefs = false; // -----------------------------------------------------------------------------
    // Debugging and DevTools
    // -----------------------------------------------------------------------------
    // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
    // for an experimental timeline tool.
    var enableSchedulingProfiler = true; // Helps identify side effects in render-phase lifecycle hooks and setState
    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.
    var enableProfilerCommitHooks = true; // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".
    var allNativeEvents = new Set();
    /**
 * Mapping from registration name to event name
 */ var registrationNameDependencies1 = {};
    /**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */ var possibleRegistrationNames1 = {}; // Trust the developer to only use possibleRegistrationNames in true
    function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies);
        registerDirectEvent(registrationName + 'Capture', dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
        if (registrationNameDependencies1[registrationName]) error1("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
        registrationNameDependencies1[registrationName] = dependencies;
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames1[lowerCasedName] = registrationName;
        if (registrationName === 'onDoubleClick') possibleRegistrationNames1.ondblclick = registrationName;
        for(var i = 0; i < dependencies.length; i++)allNativeEvents.add(dependencies[i]);
    }
    var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    /*
 * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol
 * and Temporal.* types. See https://github.com/facebook/react/pull/22064.
 *
 * The functions in this module will throw an easier-to-understand,
 * easier-to-debug exception with a clear errors message message explaining the
 * problem. (Instead of a confusing exception thrown inside the implementation
 * of the `value` object).
 */ // $FlowFixMe only called in DEV, so void return is not possible.
    function typeName(value) {
        // toStringTag is needed for namespaced types like Temporal.Instant
        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;
        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';
        return type;
    } // $FlowFixMe only called in DEV, so void return is not possible.
    function willCoercionThrow(value) {
        try {
            testStringCoercion(value);
            return false;
        } catch (e) {
            return true;
        }
    }
    function testStringCoercion(value) {
        // If you ended up here by following an exception call stack, here's what's
        // happened: you supplied an object or symbol value to React (as a prop, key,
        // DOM attribute, CSS property, string ref, etc.) and when React tried to
        // coerce it to a string using `'' + value`, an exception was thrown.
        //
        // The most common types that will cause this exception are `Symbol` instances
        // and Temporal objects like `Temporal.Instant`. But any object that has a
        // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this
        // exception. (Library authors do this to prevent users from using built-in
        // numeric operators like `+` or comparison operators like `>=` because custom
        // methods are needed to perform accurate arithmetic or comparison.)
        //
        // To fix the problem, coerce this object or symbol value to a string before
        // passing it to React. The most reliable way is usually `String(value)`.
        //
        // To find which value is throwing, check the browser or debugger console.
        // Before this exception was thrown, there should be `console.error` output
        // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the
        // problem and how that type was used: key, atrribute, input value prop, etc.
        // In most cases, this console output also shows the component and its
        // ancestor components where the exception happened.
        //
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value)) {
            error1("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error1("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkPropStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error1("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value)) {
            error1("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error1("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value)) {
            error1("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
            return testStringCoercion(value); // throw (to help callers find troubleshooting comments)
        }
    }
    // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.
    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.
    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.
    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.
    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.
    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.
    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */ var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */ var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};
    function isAttributeNameSafe(attributeName) {
        if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) return true;
        if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) return false;
        if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
        }
        illegalAttributeNameCache[attributeName] = true;
        error1('Invalid attribute name: `%s`', attributeName);
        return false;
    }
    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null) return propertyInfo.type === RESERVED;
        if (isCustomComponentTag) return false;
        if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) return true;
        return false;
    }
    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED) return false;
        switch(typeof value){
            case 'function':
            case 'symbol':
                // eslint-disable-line
                return true;
            case 'boolean':
                if (isCustomComponentTag) return false;
                if (propertyInfo !== null) return !propertyInfo.acceptsBooleans;
                else {
                    var prefix = name.toLowerCase().slice(0, 5);
                    return prefix !== 'data-' && prefix !== 'aria-';
                }
            default:
                return false;
        }
    }
    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value === 'undefined') return true;
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) return true;
        if (isCustomComponentTag) return false;
        if (propertyInfo !== null) switch(propertyInfo.type){
            case BOOLEAN:
                return !value;
            case OVERLOADED_BOOLEAN:
                return value === false;
            case NUMERIC:
                return isNaN(value);
            case POSITIVE_NUMERIC:
                return isNaN(value) || value < 1;
        }
        return false;
    }
    function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
    }
    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
        this.attributeName = attributeName;
        this.attributeNamespace = attributeNamespace;
        this.mustUseProperty = mustUseProperty;
        this.propertyName = name;
        this.type = type;
        this.sanitizeURL = sanitizeURL;
        this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.
    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.
    var reservedProps = [
        'children',
        'dangerouslySetInnerHTML',
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        'defaultValue',
        'defaultChecked',
        'innerHTML',
        'suppressContentEditableWarning',
        'suppressHydrationWarning',
        'style'
    ];
    reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, RESERVED, false, name, null, false, false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.
    [
        [
            'acceptCharset',
            'accept-charset'
        ],
        [
            'className',
            'class'
        ],
        [
            'htmlFor',
            'for'
        ],
        [
            'httpEquiv',
            'http-equiv'
        ]
    ].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    [
        'contentEditable',
        'draggable',
        'spellCheck',
        'value'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name.toLowerCase(), null, false, false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.
    [
        'autoReverse',
        'externalResourcesRequired',
        'focusable',
        'preserveAlpha'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, name, null, false, false);
    }); // These are HTML boolean attributes.
    [
        'allowFullScreen',
        'async',
        // on the client side because the browsers are inconsistent. Instead we call focus().
        'autoFocus',
        'autoPlay',
        'controls',
        'default',
        'defer',
        'disabled',
        'disablePictureInPicture',
        'disableRemotePlayback',
        'formNoValidate',
        'hidden',
        'loop',
        'noModule',
        'noValidate',
        'open',
        'playsInline',
        'readOnly',
        'required',
        'reversed',
        'scoped',
        'seamless',
        'itemScope'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, name.toLowerCase(), null, false, false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.
    [
        'checked',
        // disabled with `removeAttribute`. We have special logic for handling this.
        'multiple',
        'muted',
        'selected' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, name, null, false, false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.
    [
        'capture',
        'download' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, name, null, false, false);
    }); // These are HTML attributes that must be positive numbers.
    [
        'cols',
        'rows',
        'size',
        'span' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, name, null, false, false);
    }); // These are HTML attributes that must be numbers.
    [
        'rowSpan',
        'start'
    ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(name, NUMERIC, false, name.toLowerCase(), null, false, false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;
    var capitalize = function(token) {
        return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.
    [
        'accent-height',
        'alignment-baseline',
        'arabic-form',
        'baseline-shift',
        'cap-height',
        'clip-path',
        'clip-rule',
        'color-interpolation',
        'color-interpolation-filters',
        'color-profile',
        'color-rendering',
        'dominant-baseline',
        'enable-background',
        'fill-opacity',
        'fill-rule',
        'flood-color',
        'flood-opacity',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-stretch',
        'font-style',
        'font-variant',
        'font-weight',
        'glyph-name',
        'glyph-orientation-horizontal',
        'glyph-orientation-vertical',
        'horiz-adv-x',
        'horiz-origin-x',
        'image-rendering',
        'letter-spacing',
        'lighting-color',
        'marker-end',
        'marker-mid',
        'marker-start',
        'overline-position',
        'overline-thickness',
        'paint-order',
        'panose-1',
        'pointer-events',
        'rendering-intent',
        'shape-rendering',
        'stop-color',
        'stop-opacity',
        'strikethrough-position',
        'strikethrough-thickness',
        'stroke-dasharray',
        'stroke-dashoffset',
        'stroke-linecap',
        'stroke-linejoin',
        'stroke-miterlimit',
        'stroke-opacity',
        'stroke-width',
        'text-anchor',
        'text-decoration',
        'text-rendering',
        'underline-position',
        'underline-thickness',
        'unicode-bidi',
        'unicode-range',
        'units-per-em',
        'v-alphabetic',
        'v-hanging',
        'v-ideographic',
        'v-mathematical',
        'vector-effect',
        'vert-adv-y',
        'vert-origin-x',
        'vert-origin-y',
        'word-spacing',
        'writing-mode',
        'xmlns:xlink',
        'x-height' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, null, false, false);
    }); // String SVG attributes with the xlink namespace.
    [
        'xlink:actuate',
        'xlink:arcrole',
        'xlink:role',
        'xlink:show',
        'xlink:title',
        'xlink:type' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/1999/xlink', false, false);
    }); // String SVG attributes with the xml namespace.
    [
        'xml:base',
        'xml:lang',
        'xml:space' // NOTE: if you add a camelCased prop to this list,
    ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(name, STRING, false, attributeName, 'http://www.w3.org/XML/1998/namespace', false, false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.
    [
        'tabIndex',
        'crossOrigin'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, false, false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.
    var xlinkHref = 'xlinkHref';
    properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, 'xlink:href', 'http://www.w3.org/1999/xlink', true, false);
    [
        'src',
        'href',
        'action',
        'formAction'
    ].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, attributeName.toLowerCase(), null, true, true);
    });
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space
    /* eslint-disable max-len */ var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;
    function sanitizeURL1(url) {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
            didWarn = true;
            error1("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
        }
    }
    /**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */ function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            return node[propertyName];
        } else {
            checkAttributeStringCoercion(expected, name);
            if (propertyInfo.sanitizeURL) // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            // eslint-disable-next-line react-internal/safe-string-coercion
            sanitizeURL1('' + expected);
            var attributeName = propertyInfo.attributeName;
            var stringValue = null;
            if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node.hasAttribute(attributeName)) {
                    var value = node.getAttribute(attributeName);
                    if (value === '') return true;
                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return value;
                     // eslint-disable-next-line react-internal/safe-string-coercion
                    if (value === '' + expected) return expected;
                    return value;
                }
            } else if (node.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name, expected, propertyInfo, false)) // We had an attribute but shouldn't have had one, so read it
                // for the error message.
                return node.getAttribute(attributeName);
                if (propertyInfo.type === BOOLEAN) // If this was a boolean, it doesn't matter what the value is
                // the fact that we have it is the same as the expected.
                return expected;
                 // Even if this property uses a namespace we use getAttribute
                // because we assume its namespaced name is the same as our config.
                // To use getAttributeNS we need the local name which we don't have
                // in our config atm.
                stringValue = node.getAttribute(attributeName);
            }
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) return stringValue === null ? expected : stringValue; // eslint-disable-next-line react-internal/safe-string-coercion
            else if (stringValue === '' + expected) return expected;
            else return stringValue;
        }
    }
    /**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */ function getValueForAttribute(node, name, expected) {
        if (!isAttributeNameSafe(name)) return;
        if (!node.hasAttribute(name)) return expected === undefined ? undefined : null;
        var value = node.getAttribute(name);
        checkAttributeStringCoercion(expected, name);
        if (value === '' + expected) return expected;
        return value;
    }
    /**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */ function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) return;
        if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) value = null;
         // If the prop isn't in the special list, treat it as a simple attribute.
        if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
                var _attributeName = name;
                if (value === null) node.removeAttribute(_attributeName);
                else {
                    checkAttributeStringCoercion(value, name);
                    node.setAttribute(_attributeName, '' + value);
                }
            }
            return;
        }
        var mustUseProperty = propertyInfo.mustUseProperty;
        if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
                var type = propertyInfo.type;
                node[propertyName] = type === BOOLEAN ? false : '';
            } else // Contrary to `setAttribute`, object properties are properly
            // `toString`ed by IE8/9.
            node[propertyName] = value;
            return;
        } // The rest are treated as attributes with special cases.
        var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
        if (value === null) node.removeAttribute(attributeName);
        else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) // If attribute type is boolean, we know for sure it won't be an execution sink
            // and we won't require Trusted Type here.
            attributeValue = '';
            else {
                checkAttributeStringCoercion(value, attributeName);
                attributeValue = '' + value;
                if (propertyInfo.sanitizeURL) sanitizeURL1(attributeValue.toString());
            }
            if (attributeNamespace) node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            else node.setAttribute(attributeName, attributeValue);
        }
    }
    // ATTENTION
    var REACT_ELEMENT_TYPE = Symbol.for('react.element');
    var REACT_PORTAL_TYPE = Symbol.for('react.portal');
    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');
    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');
    var REACT_CONTEXT_TYPE = Symbol.for('react.context');
    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
    var REACT_MEMO_TYPE = Symbol.for('react.memo');
    var REACT_LAZY_TYPE = Symbol.for('react.lazy');
    var REACT_SCOPE_TYPE = Symbol.for('react.scope');
    var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for('react.debug_trace_mode');
    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');
    var REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');
    var REACT_CACHE_TYPE = Symbol.for('react.cache');
    var REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';
    function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable !== 'object') return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        if (typeof maybeIterator === 'function') return maybeIterator;
        return null;
    }
    var assign = Object.assign;
    // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.
    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;
    function disabledLog() {}
    disabledLog.__reactDisabledLog = true;
    function disableLogs() {
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;
            prevInfo = console.info;
            prevWarn = console.warn;
            prevError = console.error;
            prevGroup = console.group;
            prevGroupCollapsed = console.groupCollapsed;
            prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099
            var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
            });
        /* eslint-enable react-internal/no-production-logging */ }
        disabledDepth++;
    }
    function reenableLogs() {
        disabledDepth--;
        if (disabledDepth === 0) {
            /* eslint-disable react-internal/no-production-logging */ var props = {
                configurable: true,
                enumerable: true,
                writable: true
            }; // $FlowFixMe Flow thinks console is immutable.
            Object.defineProperties(console, {
                log: assign({}, props, {
                    value: prevLog
                }),
                info: assign({}, props, {
                    value: prevInfo
                }),
                warn: assign({}, props, {
                    value: prevWarn
                }),
                error: assign({}, props, {
                    value: prevError
                }),
                group: assign({}, props, {
                    value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                    value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                    value: prevGroupEnd
                })
            });
        /* eslint-enable react-internal/no-production-logging */ }
        if (disabledDepth < 0) error1("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
    }
    var ReactCurrentDispatcher1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix1;
    function describeBuiltInComponentFrame(name, source, ownerFn) {
        if (prefix1 === undefined) // Extract the VM specific prefix used by each line.
        try {
            throw Error();
        } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix1 = match && match[1] || '';
        }
         // We use the prefix to ensure our stacks line up with native stack frames.
        return '\n' + prefix1 + name;
    }
    var reentry = false;
    var componentFrameCache;
    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    componentFrameCache = new PossiblyWeakMap();
    function describeNativeComponentFrame(fn, construct) {
        // If something asked for a stack inside a fake render, it should get ignored.
        if (!fn || reentry) return '';
        var frame = componentFrameCache.get(fn);
        if (frame !== undefined) return frame;
        var control;
        reentry = true;
        var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.
        Error.prepareStackTrace = undefined;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.
        ReactCurrentDispatcher1.current = null;
        disableLogs();
        try {
            // This should throw.
            if (construct) {
                // Something should be setting the props in the constructor.
                var Fake = function() {
                    throw Error();
                }; // $FlowFixMe
                Object.defineProperty(Fake.prototype, 'props', {
                    set: function() {
                        // We use a throwing setter instead of frozen or non-writable props
                        // because that won't throw in a non-strict mode function.
                        throw Error();
                    }
                });
                if (typeof Reflect === 'object' && Reflect.construct) {
                    // We construct a different control for this case to include any extra
                    // frames added by the construct call.
                    try {
                        Reflect.construct(Fake, []);
                    } catch (x) {
                        control = x;
                    }
                    Reflect.construct(fn, [], Fake);
                } else {
                    try {
                        Fake.call();
                    } catch (x) {
                        control = x;
                    }
                    fn.call(Fake.prototype);
                }
            } else {
                try {
                    throw Error();
                } catch (x) {
                    control = x;
                }
                fn();
            }
        } catch (sample) {
            // This is inlined manually because closure doesn't do it for us.
            if (sample && control && typeof sample.stack === 'string') {
                // This extracts the first frame from the sample that isn't also in the control.
                // Skipping one frame that we assume is the frame that calls the two.
                var sampleLines = sample.stack.split('\n');
                var controlLines = control.stack.split('\n');
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c])// We expect at least one stack frame to be shared.
                // Typically this will be the root most one. However, stack frames may be
                // cut off due to maximum stack limits. In this case, one maybe cut off
                // earlier than the other. We assume that the sample is longer or the same
                // and there for cut off earlier. So we should find the root most frame in
                // the sample somewhere in the control.
                c--;
                for(; s >= 1 && c >= 0; s--, c--)// Next we find the first one that isn't the same which should be the
                // frame that called our sample function and the control.
                if (sampleLines[s] !== controlLines[c]) {
                    // In V8, the first line is describing the message but other VMs don't.
                    // If we're about to return the first line, and the control is also on the same
                    // line, that's a pretty good indicator that our sample threw at same line as
                    // the control. I.e. before we entered the sample frame. So we ignore this result.
                    // This can happen if you passed a class to function component, or non-function.
                    if (s !== 1 || c !== 1) do {
                        s--;
                        c--; // We may still have similar intermediate frames from the construct call.
                        // The next one that isn't the same should be our match though.
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                            // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                            var _frame = '\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled "<anonymous>"
                            // but we have a user-provided "displayName"
                            // splice it in to make the stack more readable.
                            if (fn.displayName && _frame.includes('<anonymous>')) _frame = _frame.replace('<anonymous>', fn.displayName);
                            if (typeof fn === 'function') componentFrameCache.set(fn, _frame);
                            return _frame;
                        }
                    }while (s >= 1 && c >= 0)
                    break;
                }
            }
        } finally{
            reentry = false;
            ReactCurrentDispatcher1.current = previousDispatcher;
            reenableLogs();
            Error.prepareStackTrace = previousPrepareStackTrace;
        } // Fallback to just using the name if we couldn't make it throw.
        var name = fn ? fn.displayName || fn.name : '';
        var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
        if (typeof fn === 'function') componentFrameCache.set(fn, syntheticFrame);
        return syntheticFrame;
    }
    function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, true);
    }
    function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, false);
    }
    function shouldConstruct(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null) return '';
        if (typeof type === 'function') return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type === 'string') return describeBuiltInComponentFrame(type);
        switch(type){
            case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame('Suspense');
            case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame('SuspenseList');
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
                // Memo may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    // Lazy may contain any component type so we recursively resolve it.
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {}
        }
        return '';
    }
    function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
        var source = fiber._debugSource;
        switch(fiber.tag){
            case HostComponent:
                return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
                return describeBuiltInComponentFrame('Lazy');
            case SuspenseComponent:
                return describeBuiltInComponentFrame('Suspense');
            case SuspenseListComponent:
                return describeBuiltInComponentFrame('SuspenseList');
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
                return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
                return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
                return describeClassComponentFrame(fiber.type);
            default:
                return '';
        }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
        try {
            var info = '';
            var node = workInProgress;
            do {
                info += describeFiber(node);
                node = node.return;
            }while (node)
            return info;
        } catch (x) {
            return '\nError generating stack: ' + x.message + '\n' + x.stack;
        }
    }
    function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName) return displayName;
        var functionName = innerType.displayName || innerType.name || '';
        return functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName;
    } // Keep in sync with react-reconciler/getComponentNameFromFiber
    function getContextName(type) {
        return type.displayName || 'Context';
    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.
    function getComponentNameFromType(type) {
        if (type == null) // Host root, text node or just invalid type.
        return null;
        if (typeof type.tag === 'number') error1("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
        if (typeof type === 'function') return type.displayName || type.name || null;
        if (typeof type === 'string') return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return 'Fragment';
            case REACT_PORTAL_TYPE:
                return 'Portal';
            case REACT_PROFILER_TYPE:
                return 'Profiler';
            case REACT_STRICT_MODE_TYPE:
                return 'StrictMode';
            case REACT_SUSPENSE_TYPE:
                return 'Suspense';
            case REACT_SUSPENSE_LIST_TYPE:
                return 'SuspenseList';
        }
        if (typeof type === 'object') switch(type.$$typeof){
            case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + '.Consumer';
            case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + '.Provider';
            case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, 'ForwardRef');
            case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) return outerName;
                return getComponentNameFromType(type.type) || 'Memo';
            case REACT_LAZY_TYPE:
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    return getComponentNameFromType(init(payload));
                } catch (x) {
                    return null;
                }
        }
        return null;
    }
    function getWrappedName$1(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || '';
        return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    } // Keep in sync with shared/getComponentNameFromType
    function getContextName$1(type) {
        return type.displayName || 'Context';
    }
    function getComponentNameFromFiber(fiber) {
        var tag = fiber.tag, type = fiber.type;
        switch(tag){
            case CacheComponent:
                return 'Cache';
            case ContextConsumer:
                var context = type;
                return getContextName$1(context) + '.Consumer';
            case ContextProvider:
                var provider = type;
                return getContextName$1(provider._context) + '.Provider';
            case DehydratedFragment:
                return 'DehydratedFragment';
            case ForwardRef:
                return getWrappedName$1(type, type.render, 'ForwardRef');
            case Fragment:
                return 'Fragment';
            case HostComponent:
                // Host component type is the display name (e.g. "div", "View")
                return type;
            case HostPortal:
                return 'Portal';
            case HostRoot:
                return 'Root';
            case HostText:
                return 'Text';
            case LazyComponent:
                // Name comes from the type in this case; we don't have a tag.
                return getComponentNameFromType(type);
            case Mode:
                if (type === REACT_STRICT_MODE_TYPE) // Don't be less specific than shared/getComponentNameFromType
                return 'StrictMode';
                return 'Mode';
            case OffscreenComponent:
                return 'Offscreen';
            case Profiler:
                return 'Profiler';
            case ScopeComponent:
                return 'Scope';
            case SuspenseComponent:
                return 'Suspense';
            case SuspenseListComponent:
                return 'SuspenseList';
            case TracingMarkerComponent:
                return 'TracingMarker';
            // The display name for this tags come from the user-provided type:
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
                if (typeof type === 'function') return type.displayName || type.name || null;
                if (typeof type === 'string') return type;
                break;
        }
        return null;
    }
    var ReactDebugCurrentFrame1 = ReactSharedInternals.ReactDebugCurrentFrame;
    var current1 = null;
    var isRendering = false;
    function getCurrentFiberOwnerNameInDevOrNull() {
        if (current1 === null) return null;
        var owner = current1._debugOwner;
        if (owner !== null && typeof owner !== 'undefined') return getComponentNameFromFiber(owner);
        return null;
    }
    function getCurrentFiberStackInDev() {
        if (current1 === null) return '';
         // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.
        return getStackByFiberInDevAndProd(current1);
    }
    function resetCurrentFiber() {
        ReactDebugCurrentFrame1.getCurrentStack = null;
        current1 = null;
        isRendering = false;
    }
    function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame1.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
        current1 = fiber;
        isRendering = false;
    }
    function getCurrentFiber() {
        return current1;
    }
    function setIsRendering(rendering) {
        isRendering = rendering;
    }
    // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.
    function toString(value) {
        // The coercion safety check is performed in getToStringValue().
        // eslint-disable-next-line react-internal/safe-string-coercion
        return '' + value;
    }
    function getToStringValue(value) {
        switch(typeof value){
            case 'boolean':
            case 'number':
            case 'string':
            case 'undefined':
                return value;
            case 'object':
                checkFormFieldValueStringCoercion(value);
                return value;
            default:
                // function, symbol are assigned as empty strings
                return '';
        }
    }
    var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
    };
    function checkControlledValueProps(tagName, props) {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) error1("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) error1("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
    }
    function isCheckable(elem) {
        var type = elem.type;
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }
    function getTracker(node) {
        return node._valueTracker;
    }
    function detachTracker(node) {
        node._valueTracker = null;
    }
    function getValueFromNode(node) {
        var value = '';
        if (!node) return value;
        if (isCheckable(node)) value = node.checked ? 'true' : 'false';
        else value = node.value;
        return value;
    }
    function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? 'checked' : 'value';
        var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
        // and don't track value will cause over reporting of changes,
        // but it's better then a hard failure
        // (needed for certain tests that spyOn input values and Safari)
        if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') return;
        var get = descriptor.get, set = descriptor.set;
        Object.defineProperty(node, valueField, {
            configurable: true,
            get: function() {
                return get.call(this);
            },
            set: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = '' + value;
                set.call(this, value);
            }
        }); // We could've passed this the first time
        // but it triggers a bug in IE11 and Edge 14/15.
        // Calling defineProperty() again should be equivalent.
        // https://github.com/facebook/react/issues/11768
        Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
        });
        var tracker = {
            getValue: function() {
                return currentValue;
            },
            setValue: function(value) {
                checkFormFieldValueStringCoercion(value);
                currentValue = '' + value;
            },
            stopTracking: function() {
                detachTracker(node);
                delete node[valueField];
            }
        };
        return tracker;
    }
    function track(node) {
        if (getTracker(node)) return;
         // TODO: Once it's just Fiber we can move this to node._wrapperState
        node._valueTracker = trackValueOnNode(node);
    }
    function updateValueIfChanged(node) {
        if (!node) return false;
        var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
        // that trying again will succeed
        if (!tracker) return true;
        var lastValue = tracker.getValue();
        var nextValue = getValueFromNode(node);
        if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
        }
        return false;
    }
    function getActiveElement(doc) {
        doc = doc || (typeof document !== 'undefined' ? document : undefined);
        if (typeof doc === 'undefined') return null;
        try {
            return doc.activeElement || doc.body;
        } catch (e) {
            return doc.body;
        }
    }
    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;
    function isControlled(props) {
        var usesChecked = props.type === 'checkbox' || props.type === 'radio';
        return usesChecked ? props.checked != null : props.value != null;
    }
    /**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */ function getHostProps(element, props) {
        var node = element;
        var checked = props.checked;
        var hostProps = assign({}, props, {
            defaultChecked: undefined,
            defaultValue: undefined,
            value: undefined,
            checked: checked != null ? checked : node._wrapperState.initialChecked
        });
        return hostProps;
    }
    function initWrapperState(element, props) {
        checkControlledValueProps('input', props);
        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
            error1("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnCheckedDefaultChecked = true;
        }
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
            error1("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
            didWarnValueDefaultValue = true;
        }
        var node = element;
        var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
        node._wrapperState = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
            controlled: isControlled(props)
        };
    }
    function updateChecked(element, props) {
        var node = element;
        var checked = props.checked;
        if (checked != null) setValueForProperty(node, 'checked', checked, false);
    }
    function updateWrapper(element, props) {
        var node = element;
        var controlled = isControlled(props);
        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
            error1("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnUncontrolledToControlled = true;
        }
        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
            error1("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
            didWarnControlledToUncontrolled = true;
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value);
        var type = props.type;
        if (value != null) {
            if (type === 'number') {
                if (value === 0 && node.value === '' || // eslint-disable-next-line
                node.value != value) node.value = toString(value);
            } else if (node.value !== toString(value)) node.value = toString(value);
        } else if (type === 'submit' || type === 'reset') {
            // Submit/reset inputs need the attribute removed completely to avoid
            // blank-text buttons.
            node.removeAttribute('value');
            return;
        }
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) setDefaultValue(node, props.type, value);
        else if (props.hasOwnProperty('defaultValue')) setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) node.defaultChecked = !!props.defaultChecked;
    }
    function postMountWrapper(element, props, isHydrating) {
        var node = element; // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.
        if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
            var type = props.type;
            var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
            // default value provided by the browser. See: #12872
            if (isButton && (props.value === undefined || props.value === null)) return;
            var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
            // from being lost during SSR hydration.
            if (!isHydrating) // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            {
                if (initialValue !== node.value) node.value = initialValue;
            }
            // Otherwise, the value attribute is synchronized to the property,
            // so we assign defaultValue to the same thing as the value property
            // assignment step above.
            node.defaultValue = initialValue;
        } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
        // this is needed to work around a chrome bug where setting defaultChecked
        // will sometimes influence the value of checked (even after detachment).
        // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
        // We need to temporarily unset name to avoid disrupting radio button groups.
        var name = node.name;
        if (name !== '') node.name = '';
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
        if (name !== '') node.name = name;
    }
    function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props);
        updateNamedCousins(node, props);
    }
    function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === 'radio' && name != null) {
            var queryRoot = rootNode;
            while(queryRoot.parentNode)queryRoot = queryRoot.parentNode;
             // If `rootNode.form` was non-null, then we could try `form.elements`,
            checkAttributeStringCoercion(name, 'name');
            var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
            for(var i = 0; i < group.length; i++){
                var otherNode = group[i];
                if (otherNode === rootNode || otherNode.form !== rootNode.form) continue;
                 // This will throw if radio buttons rendered by different copies of React
                // and the same name are rendered into the same form (same as #1939).
                // That's probably okay; we don't support it just as we don't support
                // mixing React radio buttons with non-React ones.
                var otherProps = getFiberCurrentPropsFromNode(otherNode);
                if (!otherProps) throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                 // We need update the tracked value on the named cousin since the value
                // was changed but the input saw no event or value set
                updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
                // was previously checked to update will cause it to be come re-checked
                // as appropriate.
                updateWrapper(otherNode, otherProps);
            }
        }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253
    function setDefaultValue(node, type, value) {
        if (type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
            if (value == null) node.defaultValue = toString(node._wrapperState.initialValue);
            else if (node.defaultValue !== toString(value)) node.defaultValue = toString(value);
        }
    }
    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;
    var didWarnInvalidInnerHTML = false;
    /**
 * Implements an <option> host component that warns when `selected` is set.
 */ function validateProps(element, props) {
        // If a value is not provided, then the children must be simple.
        if (props.value == null) {
            if (typeof props.children === 'object' && props.children !== null) React.Children.forEach(props.children, function(child) {
                if (child == null) return;
                if (typeof child === 'string' || typeof child === 'number') return;
                if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error1("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                }
            });
            else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                    didWarnInvalidInnerHTML = true;
                    error1("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
            }
        } // TODO: Remove support for `selected` in <option>.
        if (props.selected != null && !didWarnSelectedSetOnOption) {
            error1("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
            didWarnSelectedSetOnOption = true;
        }
    }
    function postMountWrapper$1(element, props) {
        // value="" should make a value attribute (#6219)
        if (props.value != null) element.setAttribute('value', toString(getToStringValue(props.value)));
    }
    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare
    function isArray(a) {
        return isArrayImpl(a);
    }
    var didWarnValueDefaultValue$1;
    didWarnValueDefaultValue$1 = false;
    function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        if (ownerName) return '\n\nCheck the render method of `' + ownerName + '`.';
        return '';
    }
    var valuePropNames = [
        'value',
        'defaultValue'
    ];
    /**
 * Validation function for `value` and `defaultValue`.
 */ function checkSelectPropTypes(props) {
        checkControlledValueProps('select', props);
        for(var i = 0; i < valuePropNames.length; i++){
            var propName = valuePropNames[i];
            if (props[propName] == null) continue;
            var propNameIsArray = isArray(props[propName]);
            if (props.multiple && !propNameIsArray) error1("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
            else if (!props.multiple && propNameIsArray) error1("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
        }
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options = node.options;
        if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for(var i = 0; i < selectedValues.length; i++)// Prefix to avoid chaos with special keys.
            selectedValue['$' + selectedValues[i]] = true;
            for(var _i = 0; _i < options.length; _i++){
                var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
                if (options[_i].selected !== selected) options[_i].selected = selected;
                if (selected && setDefaultSelected) options[_i].defaultSelected = true;
            }
        } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = toString(getToStringValue(propValue));
            var defaultSelected = null;
            for(var _i2 = 0; _i2 < options.length; _i2++){
                if (options[_i2].value === _selectedValue) {
                    options[_i2].selected = true;
                    if (setDefaultSelected) options[_i2].defaultSelected = true;
                    return;
                }
                if (defaultSelected === null && !options[_i2].disabled) defaultSelected = options[_i2];
            }
            if (defaultSelected !== null) defaultSelected.selected = true;
        }
    }
    /**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */ function getHostProps$1(element, props) {
        return assign({}, props, {
            value: undefined
        });
    }
    function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props);
        node._wrapperState = {
            wasMultiple: !!props.multiple
        };
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
            error1("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
            didWarnValueDefaultValue$1 = true;
        }
    }
    function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
    }
    function postUpdateWrapper(element, props) {
        var node = element;
        var wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
        else if (wasMultiple !== !!props.multiple) {
            // For simplicity, reapply `defaultValue` if `multiple` is toggled.
            if (props.defaultValue != null) updateOptions(node, !!props.multiple, props.defaultValue, true);
            else // Revert the select back to its default unselected state.
            updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
    }
    function restoreControlledState$1(element, props) {
        var node = element;
        var value = props.value;
        if (value != null) updateOptions(node, !!props.multiple, value, false);
    }
    var didWarnValDefaultVal = false;
    /**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */ function getHostProps$2(element, props) {
        var node = element;
        if (props.dangerouslySetInnerHTML != null) throw new Error('`dangerouslySetInnerHTML` does not make sense on <textarea>.');
         // Always set children to the same thing. In IE9, the selection range will
        // get reset if `textContent` is mutated.  We could add a check in setTextContent
        // to only set the value if/when the value differs from the node value (which would
        // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
        // solution. The value can be a boolean or object so that's why it's forced
        // to be a string.
        var hostProps = assign({}, props, {
            value: undefined,
            defaultValue: undefined,
            children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
    }
    function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps('textarea', props);
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
            error1("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || 'A component');
            didWarnValDefaultVal = true;
        }
        var initialValue = props.value; // Only bother fetching default value if we're going to use it
        if (initialValue == null) {
            var children = props.children, defaultValue = props.defaultValue;
            if (children != null) {
                error1("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                if (defaultValue != null) throw new Error('If you supply `defaultValue` on a <textarea>, do not pass children.');
                if (isArray(children)) {
                    if (children.length > 1) throw new Error('<textarea> can only have at most one child.');
                    children = children[0];
                }
                defaultValue = children;
            }
            if (defaultValue == null) defaultValue = '';
            initialValue = defaultValue;
        }
        node._wrapperState = {
            initialValue: getToStringValue(initialValue)
        };
    }
    function updateWrapper$1(element, props) {
        var node = element;
        var value = getToStringValue(props.value);
        var defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
            // Cast `value` to a string to ensure the value is set correctly. While
            // browsers typically do this as necessary, jsdom doesn't.
            var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed
            if (newValue !== node.value) node.value = newValue;
            if (props.defaultValue == null && node.defaultValue !== newValue) node.defaultValue = newValue;
        }
        if (defaultValue != null) node.defaultValue = toString(defaultValue);
    }
    function postMountWrapper$3(element, props) {
        var node = element; // This is in postMount because we need access to the DOM node, which is not
        // available until after the component has mounted.
        var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
        // initial value. In IE10/IE11 there is a bug where the placeholder attribute
        // will populate textContent as well.
        // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
        if (textContent === node._wrapperState.initialValue) {
            if (textContent !== '' && textContent !== null) node.value = textContent;
        }
    }
    function restoreControlledState$2(element, props) {
        // DOM component is still mounted; update
        updateWrapper$1(element, props);
    }
    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg'; // Assumes there is no parent namespace.
    function getIntrinsicNamespace(type) {
        switch(type){
            case 'svg':
                return SVG_NAMESPACE;
            case 'math':
                return MATH_NAMESPACE;
            default:
                return HTML_NAMESPACE;
        }
    }
    function getChildNamespace(parentNamespace, type) {
        if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
        if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') // We're leaving SVG.
        return HTML_NAMESPACE;
         // By default, pass namespace below.
        return parentNamespace;
    }
    /* globals MSApp */ /**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */ var createMicrosoftUnsafeLocalFunction = function(func) {
        if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) return function(arg0, arg1, arg2, arg3) {
            MSApp.execUnsafeLocalFunction(function() {
                return func(arg0, arg1, arg2, arg3);
            });
        };
        else return func;
    };
    var reusableSVGContainer;
    /**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */ var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === SVG_NAMESPACE) {
            if (!('innerHTML' in node)) {
                // IE does not have innerHTML for SVG nodes, so instead we inject the
                // new markup in a temp node and then move the child nodes across into
                // the target node
                reusableSVGContainer = reusableSVGContainer || document.createElement('div');
                reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
                var svgNode = reusableSVGContainer.firstChild;
                while(node.firstChild)node.removeChild(node.firstChild);
                while(svgNode.firstChild)node.appendChild(svgNode.firstChild);
                return;
            }
        }
        node.innerHTML = html;
    });
    /**
 * HTML nodeType values that represent the type of the node
 */ var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */ var setTextContent = function(node, text) {
        if (text) {
            var firstChild = node.firstChild;
            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                firstChild.nodeValue = text;
                return;
            }
        }
        node.textContent = text;
    };
    // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
    var shorthandToLonghand = {
        animation: [
            'animationDelay',
            'animationDirection',
            'animationDuration',
            'animationFillMode',
            'animationIterationCount',
            'animationName',
            'animationPlayState',
            'animationTimingFunction'
        ],
        background: [
            'backgroundAttachment',
            'backgroundClip',
            'backgroundColor',
            'backgroundImage',
            'backgroundOrigin',
            'backgroundPositionX',
            'backgroundPositionY',
            'backgroundRepeat',
            'backgroundSize'
        ],
        backgroundPosition: [
            'backgroundPositionX',
            'backgroundPositionY'
        ],
        border: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth',
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth',
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth',
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth',
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderBlockEnd: [
            'borderBlockEndColor',
            'borderBlockEndStyle',
            'borderBlockEndWidth'
        ],
        borderBlockStart: [
            'borderBlockStartColor',
            'borderBlockStartStyle',
            'borderBlockStartWidth'
        ],
        borderBottom: [
            'borderBottomColor',
            'borderBottomStyle',
            'borderBottomWidth'
        ],
        borderColor: [
            'borderBottomColor',
            'borderLeftColor',
            'borderRightColor',
            'borderTopColor'
        ],
        borderImage: [
            'borderImageOutset',
            'borderImageRepeat',
            'borderImageSlice',
            'borderImageSource',
            'borderImageWidth'
        ],
        borderInlineEnd: [
            'borderInlineEndColor',
            'borderInlineEndStyle',
            'borderInlineEndWidth'
        ],
        borderInlineStart: [
            'borderInlineStartColor',
            'borderInlineStartStyle',
            'borderInlineStartWidth'
        ],
        borderLeft: [
            'borderLeftColor',
            'borderLeftStyle',
            'borderLeftWidth'
        ],
        borderRadius: [
            'borderBottomLeftRadius',
            'borderBottomRightRadius',
            'borderTopLeftRadius',
            'borderTopRightRadius'
        ],
        borderRight: [
            'borderRightColor',
            'borderRightStyle',
            'borderRightWidth'
        ],
        borderStyle: [
            'borderBottomStyle',
            'borderLeftStyle',
            'borderRightStyle',
            'borderTopStyle'
        ],
        borderTop: [
            'borderTopColor',
            'borderTopStyle',
            'borderTopWidth'
        ],
        borderWidth: [
            'borderBottomWidth',
            'borderLeftWidth',
            'borderRightWidth',
            'borderTopWidth'
        ],
        columnRule: [
            'columnRuleColor',
            'columnRuleStyle',
            'columnRuleWidth'
        ],
        columns: [
            'columnCount',
            'columnWidth'
        ],
        flex: [
            'flexBasis',
            'flexGrow',
            'flexShrink'
        ],
        flexFlow: [
            'flexDirection',
            'flexWrap'
        ],
        font: [
            'fontFamily',
            'fontFeatureSettings',
            'fontKerning',
            'fontLanguageOverride',
            'fontSize',
            'fontSizeAdjust',
            'fontStretch',
            'fontStyle',
            'fontVariant',
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition',
            'fontWeight',
            'lineHeight'
        ],
        fontVariant: [
            'fontVariantAlternates',
            'fontVariantCaps',
            'fontVariantEastAsian',
            'fontVariantLigatures',
            'fontVariantNumeric',
            'fontVariantPosition'
        ],
        gap: [
            'columnGap',
            'rowGap'
        ],
        grid: [
            'gridAutoColumns',
            'gridAutoFlow',
            'gridAutoRows',
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        gridArea: [
            'gridColumnEnd',
            'gridColumnStart',
            'gridRowEnd',
            'gridRowStart'
        ],
        gridColumn: [
            'gridColumnEnd',
            'gridColumnStart'
        ],
        gridColumnGap: [
            'columnGap'
        ],
        gridGap: [
            'columnGap',
            'rowGap'
        ],
        gridRow: [
            'gridRowEnd',
            'gridRowStart'
        ],
        gridRowGap: [
            'rowGap'
        ],
        gridTemplate: [
            'gridTemplateAreas',
            'gridTemplateColumns',
            'gridTemplateRows'
        ],
        listStyle: [
            'listStyleImage',
            'listStylePosition',
            'listStyleType'
        ],
        margin: [
            'marginBottom',
            'marginLeft',
            'marginRight',
            'marginTop'
        ],
        marker: [
            'markerEnd',
            'markerMid',
            'markerStart'
        ],
        mask: [
            'maskClip',
            'maskComposite',
            'maskImage',
            'maskMode',
            'maskOrigin',
            'maskPositionX',
            'maskPositionY',
            'maskRepeat',
            'maskSize'
        ],
        maskPosition: [
            'maskPositionX',
            'maskPositionY'
        ],
        outline: [
            'outlineColor',
            'outlineStyle',
            'outlineWidth'
        ],
        overflow: [
            'overflowX',
            'overflowY'
        ],
        padding: [
            'paddingBottom',
            'paddingLeft',
            'paddingRight',
            'paddingTop'
        ],
        placeContent: [
            'alignContent',
            'justifyContent'
        ],
        placeItems: [
            'alignItems',
            'justifyItems'
        ],
        placeSelf: [
            'alignSelf',
            'justifySelf'
        ],
        textDecoration: [
            'textDecorationColor',
            'textDecorationLine',
            'textDecorationStyle'
        ],
        textEmphasis: [
            'textEmphasisColor',
            'textEmphasisStyle'
        ],
        transition: [
            'transitionDelay',
            'transitionDuration',
            'transitionProperty',
            'transitionTimingFunction'
        ],
        wordWrap: [
            'overflowWrap'
        ]
    };
    /**
 * CSS properties which accept numbers but are not in units of "px".
 */ var isUnitlessNumber = {
        animationIterationCount: true,
        aspectRatio: true,
        borderImageOutset: true,
        borderImageSlice: true,
        borderImageWidth: true,
        boxFlex: true,
        boxFlexGroup: true,
        boxOrdinalGroup: true,
        columnCount: true,
        columns: true,
        flex: true,
        flexGrow: true,
        flexPositive: true,
        flexShrink: true,
        flexNegative: true,
        flexOrder: true,
        gridArea: true,
        gridRow: true,
        gridRowEnd: true,
        gridRowSpan: true,
        gridRowStart: true,
        gridColumn: true,
        gridColumnEnd: true,
        gridColumnSpan: true,
        gridColumnStart: true,
        fontWeight: true,
        lineClamp: true,
        lineHeight: true,
        opacity: true,
        order: true,
        orphans: true,
        tabSize: true,
        widows: true,
        zIndex: true,
        zoom: true,
        // SVG-related properties
        fillOpacity: true,
        floodOpacity: true,
        stopOpacity: true,
        strokeDasharray: true,
        strokeDashoffset: true,
        strokeMiterlimit: true,
        strokeOpacity: true,
        strokeWidth: true
    };
    /**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */ function prefixKey(prefix, key) {
        return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */ var prefixes1 = [
        'Webkit',
        'ms',
        'Moz',
        'O'
    ]; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.
    Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes1.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
        });
    });
    /**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */ function dangerousStyleValue(name, value, isCustomProperty) {
        // Note that we've removed escapeTextForBrowser() calls here since the
        // whole string will be escaped when the attribute is injected into
        // the markup. If you provide unsafe user data here they can inject
        // arbitrary CSS which may be problematic (I couldn't repro this):
        // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
        // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
        // This is not an XSS hole but instead a potential CSS injection issue
        // which has lead to a greater discussion about how we're going to
        // trust URLs moving forward. See #2115901
        var isEmpty = value == null || typeof value === 'boolean' || value === '';
        if (isEmpty) return '';
        if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
        checkCSSPropertyStringCoercion(value, name);
        return ('' + value).trim();
    }
    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */ function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }
    var warnValidStyle = function() {};
    // 'msTransform' is correct, but the other prefixes should be capitalized
    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
    var msPattern$1 = /^-ms-/;
    var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon
    var badStyleValueWithSemicolonPattern = /;\s*$/;
    var warnedStyleNames = {};
    var warnedStyleValues = {};
    var warnedForNaNValue = false;
    var warnedForInfinityValue = false;
    var camelize = function(string) {
        return string.replace(hyphenPattern, function(_, character) {
            return character.toUpperCase();
        });
    };
    var warnHyphenatedStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error1('Unsupported style property %s. Did you mean %s?', name, // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
    };
    var warnBadVendoredStyleName = function(name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) return;
        warnedStyleNames[name] = true;
        error1('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
    };
    var warnStyleValueWithSemicolon = function(name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) return;
        warnedStyleValues[value] = true;
        error1('Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
    };
    var warnStyleValueIsNaN = function(name, value) {
        if (warnedForNaNValue) return;
        warnedForNaNValue = true;
        error1('`NaN` is an invalid value for the `%s` css style property.', name);
    };
    var warnStyleValueIsInfinity = function(name, value) {
        if (warnedForInfinityValue) return;
        warnedForInfinityValue = true;
        error1('`Infinity` is an invalid value for the `%s` css style property.', name);
    };
    warnValidStyle = function(name, value) {
        if (name.indexOf('-') > -1) warnHyphenatedStyleName(name);
        else if (badVendoredStyleNamePattern.test(name)) warnBadVendoredStyleName(name);
        else if (badStyleValueWithSemicolonPattern.test(value)) warnStyleValueWithSemicolon(name, value);
        if (typeof value === 'number') {
            if (isNaN(value)) warnStyleValueIsNaN(name, value);
            else if (!isFinite(value)) warnStyleValueIsInfinity(name, value);
        }
    };
    var warnValidStyle$1 = warnValidStyle;
    /**
 * Operations for dealing with CSS properties.
 */ /**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */ function createDangerousStringForStyles(styles) {
        var serialized = '';
        var delimiter = '';
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var styleValue = styles[styleName];
            if (styleValue != null) {
                var isCustomProperty = styleName.indexOf('--') === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ';';
            }
        }
        return serialized || null;
    }
    /**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */ function setValueForStyles(node, styles) {
        var style = node.style;
        for(var styleName in styles){
            if (!styles.hasOwnProperty(styleName)) continue;
            var isCustomProperty = styleName.indexOf('--') === 0;
            if (!isCustomProperty) warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            if (styleName === 'float') styleName = 'cssFloat';
            if (isCustomProperty) style.setProperty(styleName, styleValue);
            else style[styleName] = styleValue;
        }
    }
    function isValueEmpty(value) {
        return value == null || typeof value === 'boolean' || value === '';
    }
    /**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */ function expandShorthandMap(styles) {
        var expanded = {};
        for(var key in styles){
            var longhands = shorthandToLonghand[key] || [
                key
            ];
            for(var i = 0; i < longhands.length; i++)expanded[longhands[i]] = key;
        }
        return expanded;
    }
    /**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */ function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        if (!nextStyles) return;
        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {};
        for(var key in expandedUpdates){
            var originalKey = expandedUpdates[key];
            var correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + ',' + correctOriginalKey;
                if (warnedAbout[warningKey]) continue;
                warnedAbout[warningKey] = true;
                error1("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
            }
        }
    }
    // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.
    var omittedCloseTags = {
        area: true,
        base: true,
        br: true,
        col: true,
        embed: true,
        hr: true,
        img: true,
        input: true,
        keygen: true,
        link: true,
        meta: true,
        param: true,
        source: true,
        track: true,
        wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.
    };
    // `omittedCloseTags` except that `menuitem` should still have its closing tag.
    var voidElementTags = assign({
        menuitem: true
    }, omittedCloseTags);
    var HTML = '__html';
    function assertValidProps(tag, props) {
        if (!props) return;
         // Note the use of `==` which checks for null or undefined.
        if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) throw new Error(tag + " is a void element tag and must neither have `children` nor " + 'use `dangerouslySetInnerHTML`.');
        }
        if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) throw new Error('Can only set one of `children` or `props.dangerouslySetInnerHTML`.');
            if (typeof props.dangerouslySetInnerHTML !== 'object' || !(HTML in props.dangerouslySetInnerHTML)) throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
        }
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) error1("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
        if (props.style != null && typeof props.style !== 'object') throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
    }
    function isCustomComponent(tagName, props) {
        if (tagName.indexOf('-') === -1) return typeof props.is === 'string';
        switch(tagName){
            // These are reserved SVG and MathML elements.
            // We don't mind this list too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
                return false;
            default:
                return true;
        }
    }
    // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.
    var possibleStandardNames = {
        // HTML
        accept: 'accept',
        acceptcharset: 'acceptCharset',
        'accept-charset': 'acceptCharset',
        accesskey: 'accessKey',
        action: 'action',
        allowfullscreen: 'allowFullScreen',
        alt: 'alt',
        as: 'as',
        async: 'async',
        autocapitalize: 'autoCapitalize',
        autocomplete: 'autoComplete',
        autocorrect: 'autoCorrect',
        autofocus: 'autoFocus',
        autoplay: 'autoPlay',
        autosave: 'autoSave',
        capture: 'capture',
        cellpadding: 'cellPadding',
        cellspacing: 'cellSpacing',
        challenge: 'challenge',
        charset: 'charSet',
        checked: 'checked',
        children: 'children',
        cite: 'cite',
        class: 'className',
        classid: 'classID',
        classname: 'className',
        cols: 'cols',
        colspan: 'colSpan',
        content: 'content',
        contenteditable: 'contentEditable',
        contextmenu: 'contextMenu',
        controls: 'controls',
        controlslist: 'controlsList',
        coords: 'coords',
        crossorigin: 'crossOrigin',
        dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
        data: 'data',
        datetime: 'dateTime',
        default: 'default',
        defaultchecked: 'defaultChecked',
        defaultvalue: 'defaultValue',
        defer: 'defer',
        dir: 'dir',
        disabled: 'disabled',
        disablepictureinpicture: 'disablePictureInPicture',
        disableremoteplayback: 'disableRemotePlayback',
        download: 'download',
        draggable: 'draggable',
        enctype: 'encType',
        enterkeyhint: 'enterKeyHint',
        for: 'htmlFor',
        form: 'form',
        formmethod: 'formMethod',
        formaction: 'formAction',
        formenctype: 'formEncType',
        formnovalidate: 'formNoValidate',
        formtarget: 'formTarget',
        frameborder: 'frameBorder',
        headers: 'headers',
        height: 'height',
        hidden: 'hidden',
        high: 'high',
        href: 'href',
        hreflang: 'hrefLang',
        htmlfor: 'htmlFor',
        httpequiv: 'httpEquiv',
        'http-equiv': 'httpEquiv',
        icon: 'icon',
        id: 'id',
        imagesizes: 'imageSizes',
        imagesrcset: 'imageSrcSet',
        innerhtml: 'innerHTML',
        inputmode: 'inputMode',
        integrity: 'integrity',
        is: 'is',
        itemid: 'itemID',
        itemprop: 'itemProp',
        itemref: 'itemRef',
        itemscope: 'itemScope',
        itemtype: 'itemType',
        keyparams: 'keyParams',
        keytype: 'keyType',
        kind: 'kind',
        label: 'label',
        lang: 'lang',
        list: 'list',
        loop: 'loop',
        low: 'low',
        manifest: 'manifest',
        marginwidth: 'marginWidth',
        marginheight: 'marginHeight',
        max: 'max',
        maxlength: 'maxLength',
        media: 'media',
        mediagroup: 'mediaGroup',
        method: 'method',
        min: 'min',
        minlength: 'minLength',
        multiple: 'multiple',
        muted: 'muted',
        name: 'name',
        nomodule: 'noModule',
        nonce: 'nonce',
        novalidate: 'noValidate',
        open: 'open',
        optimum: 'optimum',
        pattern: 'pattern',
        placeholder: 'placeholder',
        playsinline: 'playsInline',
        poster: 'poster',
        preload: 'preload',
        profile: 'profile',
        radiogroup: 'radioGroup',
        readonly: 'readOnly',
        referrerpolicy: 'referrerPolicy',
        rel: 'rel',
        required: 'required',
        reversed: 'reversed',
        role: 'role',
        rows: 'rows',
        rowspan: 'rowSpan',
        sandbox: 'sandbox',
        scope: 'scope',
        scoped: 'scoped',
        scrolling: 'scrolling',
        seamless: 'seamless',
        selected: 'selected',
        shape: 'shape',
        size: 'size',
        sizes: 'sizes',
        span: 'span',
        spellcheck: 'spellCheck',
        src: 'src',
        srcdoc: 'srcDoc',
        srclang: 'srcLang',
        srcset: 'srcSet',
        start: 'start',
        step: 'step',
        style: 'style',
        summary: 'summary',
        tabindex: 'tabIndex',
        target: 'target',
        title: 'title',
        type: 'type',
        usemap: 'useMap',
        value: 'value',
        width: 'width',
        wmode: 'wmode',
        wrap: 'wrap',
        // SVG
        about: 'about',
        accentheight: 'accentHeight',
        'accent-height': 'accentHeight',
        accumulate: 'accumulate',
        additive: 'additive',
        alignmentbaseline: 'alignmentBaseline',
        'alignment-baseline': 'alignmentBaseline',
        allowreorder: 'allowReorder',
        alphabetic: 'alphabetic',
        amplitude: 'amplitude',
        arabicform: 'arabicForm',
        'arabic-form': 'arabicForm',
        ascent: 'ascent',
        attributename: 'attributeName',
        attributetype: 'attributeType',
        autoreverse: 'autoReverse',
        azimuth: 'azimuth',
        basefrequency: 'baseFrequency',
        baselineshift: 'baselineShift',
        'baseline-shift': 'baselineShift',
        baseprofile: 'baseProfile',
        bbox: 'bbox',
        begin: 'begin',
        bias: 'bias',
        by: 'by',
        calcmode: 'calcMode',
        capheight: 'capHeight',
        'cap-height': 'capHeight',
        clip: 'clip',
        clippath: 'clipPath',
        'clip-path': 'clipPath',
        clippathunits: 'clipPathUnits',
        cliprule: 'clipRule',
        'clip-rule': 'clipRule',
        color: 'color',
        colorinterpolation: 'colorInterpolation',
        'color-interpolation': 'colorInterpolation',
        colorinterpolationfilters: 'colorInterpolationFilters',
        'color-interpolation-filters': 'colorInterpolationFilters',
        colorprofile: 'colorProfile',
        'color-profile': 'colorProfile',
        colorrendering: 'colorRendering',
        'color-rendering': 'colorRendering',
        contentscripttype: 'contentScriptType',
        contentstyletype: 'contentStyleType',
        cursor: 'cursor',
        cx: 'cx',
        cy: 'cy',
        d: 'd',
        datatype: 'datatype',
        decelerate: 'decelerate',
        descent: 'descent',
        diffuseconstant: 'diffuseConstant',
        direction: 'direction',
        display: 'display',
        divisor: 'divisor',
        dominantbaseline: 'dominantBaseline',
        'dominant-baseline': 'dominantBaseline',
        dur: 'dur',
        dx: 'dx',
        dy: 'dy',
        edgemode: 'edgeMode',
        elevation: 'elevation',
        enablebackground: 'enableBackground',
        'enable-background': 'enableBackground',
        end: 'end',
        exponent: 'exponent',
        externalresourcesrequired: 'externalResourcesRequired',
        fill: 'fill',
        fillopacity: 'fillOpacity',
        'fill-opacity': 'fillOpacity',
        fillrule: 'fillRule',
        'fill-rule': 'fillRule',
        filter: 'filter',
        filterres: 'filterRes',
        filterunits: 'filterUnits',
        floodopacity: 'floodOpacity',
        'flood-opacity': 'floodOpacity',
        floodcolor: 'floodColor',
        'flood-color': 'floodColor',
        focusable: 'focusable',
        fontfamily: 'fontFamily',
        'font-family': 'fontFamily',
        fontsize: 'fontSize',
        'font-size': 'fontSize',
        fontsizeadjust: 'fontSizeAdjust',
        'font-size-adjust': 'fontSizeAdjust',
        fontstretch: 'fontStretch',
        'font-stretch': 'fontStretch',
        fontstyle: 'fontStyle',
        'font-style': 'fontStyle',
        fontvariant: 'fontVariant',
        'font-variant': 'fontVariant',
        fontweight: 'fontWeight',
        'font-weight': 'fontWeight',
        format: 'format',
        from: 'from',
        fx: 'fx',
        fy: 'fy',
        g1: 'g1',
        g2: 'g2',
        glyphname: 'glyphName',
        'glyph-name': 'glyphName',
        glyphorientationhorizontal: 'glyphOrientationHorizontal',
        'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
        glyphorientationvertical: 'glyphOrientationVertical',
        'glyph-orientation-vertical': 'glyphOrientationVertical',
        glyphref: 'glyphRef',
        gradienttransform: 'gradientTransform',
        gradientunits: 'gradientUnits',
        hanging: 'hanging',
        horizadvx: 'horizAdvX',
        'horiz-adv-x': 'horizAdvX',
        horizoriginx: 'horizOriginX',
        'horiz-origin-x': 'horizOriginX',
        ideographic: 'ideographic',
        imagerendering: 'imageRendering',
        'image-rendering': 'imageRendering',
        in2: 'in2',
        in: 'in',
        inlist: 'inlist',
        intercept: 'intercept',
        k1: 'k1',
        k2: 'k2',
        k3: 'k3',
        k4: 'k4',
        k: 'k',
        kernelmatrix: 'kernelMatrix',
        kernelunitlength: 'kernelUnitLength',
        kerning: 'kerning',
        keypoints: 'keyPoints',
        keysplines: 'keySplines',
        keytimes: 'keyTimes',
        lengthadjust: 'lengthAdjust',
        letterspacing: 'letterSpacing',
        'letter-spacing': 'letterSpacing',
        lightingcolor: 'lightingColor',
        'lighting-color': 'lightingColor',
        limitingconeangle: 'limitingConeAngle',
        local: 'local',
        markerend: 'markerEnd',
        'marker-end': 'markerEnd',
        markerheight: 'markerHeight',
        markermid: 'markerMid',
        'marker-mid': 'markerMid',
        markerstart: 'markerStart',
        'marker-start': 'markerStart',
        markerunits: 'markerUnits',
        markerwidth: 'markerWidth',
        mask: 'mask',
        maskcontentunits: 'maskContentUnits',
        maskunits: 'maskUnits',
        mathematical: 'mathematical',
        mode: 'mode',
        numoctaves: 'numOctaves',
        offset: 'offset',
        opacity: 'opacity',
        operator: 'operator',
        order: 'order',
        orient: 'orient',
        orientation: 'orientation',
        origin: 'origin',
        overflow: 'overflow',
        overlineposition: 'overlinePosition',
        'overline-position': 'overlinePosition',
        overlinethickness: 'overlineThickness',
        'overline-thickness': 'overlineThickness',
        paintorder: 'paintOrder',
        'paint-order': 'paintOrder',
        panose1: 'panose1',
        'panose-1': 'panose1',
        pathlength: 'pathLength',
        patterncontentunits: 'patternContentUnits',
        patterntransform: 'patternTransform',
        patternunits: 'patternUnits',
        pointerevents: 'pointerEvents',
        'pointer-events': 'pointerEvents',
        points: 'points',
        pointsatx: 'pointsAtX',
        pointsaty: 'pointsAtY',
        pointsatz: 'pointsAtZ',
        prefix: 'prefix',
        preservealpha: 'preserveAlpha',
        preserveaspectratio: 'preserveAspectRatio',
        primitiveunits: 'primitiveUnits',
        property: 'property',
        r: 'r',
        radius: 'radius',
        refx: 'refX',
        refy: 'refY',
        renderingintent: 'renderingIntent',
        'rendering-intent': 'renderingIntent',
        repeatcount: 'repeatCount',
        repeatdur: 'repeatDur',
        requiredextensions: 'requiredExtensions',
        requiredfeatures: 'requiredFeatures',
        resource: 'resource',
        restart: 'restart',
        result: 'result',
        results: 'results',
        rotate: 'rotate',
        rx: 'rx',
        ry: 'ry',
        scale: 'scale',
        security: 'security',
        seed: 'seed',
        shaperendering: 'shapeRendering',
        'shape-rendering': 'shapeRendering',
        slope: 'slope',
        spacing: 'spacing',
        specularconstant: 'specularConstant',
        specularexponent: 'specularExponent',
        speed: 'speed',
        spreadmethod: 'spreadMethod',
        startoffset: 'startOffset',
        stddeviation: 'stdDeviation',
        stemh: 'stemh',
        stemv: 'stemv',
        stitchtiles: 'stitchTiles',
        stopcolor: 'stopColor',
        'stop-color': 'stopColor',
        stopopacity: 'stopOpacity',
        'stop-opacity': 'stopOpacity',
        strikethroughposition: 'strikethroughPosition',
        'strikethrough-position': 'strikethroughPosition',
        strikethroughthickness: 'strikethroughThickness',
        'strikethrough-thickness': 'strikethroughThickness',
        string: 'string',
        stroke: 'stroke',
        strokedasharray: 'strokeDasharray',
        'stroke-dasharray': 'strokeDasharray',
        strokedashoffset: 'strokeDashoffset',
        'stroke-dashoffset': 'strokeDashoffset',
        strokelinecap: 'strokeLinecap',
        'stroke-linecap': 'strokeLinecap',
        strokelinejoin: 'strokeLinejoin',
        'stroke-linejoin': 'strokeLinejoin',
        strokemiterlimit: 'strokeMiterlimit',
        'stroke-miterlimit': 'strokeMiterlimit',
        strokewidth: 'strokeWidth',
        'stroke-width': 'strokeWidth',
        strokeopacity: 'strokeOpacity',
        'stroke-opacity': 'strokeOpacity',
        suppresscontenteditablewarning: 'suppressContentEditableWarning',
        suppresshydrationwarning: 'suppressHydrationWarning',
        surfacescale: 'surfaceScale',
        systemlanguage: 'systemLanguage',
        tablevalues: 'tableValues',
        targetx: 'targetX',
        targety: 'targetY',
        textanchor: 'textAnchor',
        'text-anchor': 'textAnchor',
        textdecoration: 'textDecoration',
        'text-decoration': 'textDecoration',
        textlength: 'textLength',
        textrendering: 'textRendering',
        'text-rendering': 'textRendering',
        to: 'to',
        transform: 'transform',
        typeof: 'typeof',
        u1: 'u1',
        u2: 'u2',
        underlineposition: 'underlinePosition',
        'underline-position': 'underlinePosition',
        underlinethickness: 'underlineThickness',
        'underline-thickness': 'underlineThickness',
        unicode: 'unicode',
        unicodebidi: 'unicodeBidi',
        'unicode-bidi': 'unicodeBidi',
        unicoderange: 'unicodeRange',
        'unicode-range': 'unicodeRange',
        unitsperem: 'unitsPerEm',
        'units-per-em': 'unitsPerEm',
        unselectable: 'unselectable',
        valphabetic: 'vAlphabetic',
        'v-alphabetic': 'vAlphabetic',
        values: 'values',
        vectoreffect: 'vectorEffect',
        'vector-effect': 'vectorEffect',
        version: 'version',
        vertadvy: 'vertAdvY',
        'vert-adv-y': 'vertAdvY',
        vertoriginx: 'vertOriginX',
        'vert-origin-x': 'vertOriginX',
        vertoriginy: 'vertOriginY',
        'vert-origin-y': 'vertOriginY',
        vhanging: 'vHanging',
        'v-hanging': 'vHanging',
        videographic: 'vIdeographic',
        'v-ideographic': 'vIdeographic',
        viewbox: 'viewBox',
        viewtarget: 'viewTarget',
        visibility: 'visibility',
        vmathematical: 'vMathematical',
        'v-mathematical': 'vMathematical',
        vocab: 'vocab',
        widths: 'widths',
        wordspacing: 'wordSpacing',
        'word-spacing': 'wordSpacing',
        writingmode: 'writingMode',
        'writing-mode': 'writingMode',
        x1: 'x1',
        x2: 'x2',
        x: 'x',
        xchannelselector: 'xChannelSelector',
        xheight: 'xHeight',
        'x-height': 'xHeight',
        xlinkactuate: 'xlinkActuate',
        'xlink:actuate': 'xlinkActuate',
        xlinkarcrole: 'xlinkArcrole',
        'xlink:arcrole': 'xlinkArcrole',
        xlinkhref: 'xlinkHref',
        'xlink:href': 'xlinkHref',
        xlinkrole: 'xlinkRole',
        'xlink:role': 'xlinkRole',
        xlinkshow: 'xlinkShow',
        'xlink:show': 'xlinkShow',
        xlinktitle: 'xlinkTitle',
        'xlink:title': 'xlinkTitle',
        xlinktype: 'xlinkType',
        'xlink:type': 'xlinkType',
        xmlbase: 'xmlBase',
        'xml:base': 'xmlBase',
        xmllang: 'xmlLang',
        'xml:lang': 'xmlLang',
        xmlns: 'xmlns',
        'xml:space': 'xmlSpace',
        xmlnsxlink: 'xmlnsXlink',
        'xmlns:xlink': 'xmlnsXlink',
        xmlspace: 'xmlSpace',
        y1: 'y1',
        y2: 'y2',
        y: 'y',
        ychannelselector: 'yChannelSelector',
        z: 'z',
        zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
        'aria-current': 0,
        // state
        'aria-description': 0,
        'aria-details': 0,
        'aria-disabled': 0,
        // state
        'aria-hidden': 0,
        // state
        'aria-invalid': 0,
        // state
        'aria-keyshortcuts': 0,
        'aria-label': 0,
        'aria-roledescription': 0,
        // Widget Attributes
        'aria-autocomplete': 0,
        'aria-checked': 0,
        'aria-expanded': 0,
        'aria-haspopup': 0,
        'aria-level': 0,
        'aria-modal': 0,
        'aria-multiline': 0,
        'aria-multiselectable': 0,
        'aria-orientation': 0,
        'aria-placeholder': 0,
        'aria-pressed': 0,
        'aria-readonly': 0,
        'aria-required': 0,
        'aria-selected': 0,
        'aria-sort': 0,
        'aria-valuemax': 0,
        'aria-valuemin': 0,
        'aria-valuenow': 0,
        'aria-valuetext': 0,
        // Live Region Attributes
        'aria-atomic': 0,
        'aria-busy': 0,
        'aria-live': 0,
        'aria-relevant': 0,
        // Drag-and-Drop Attributes
        'aria-dropeffect': 0,
        'aria-grabbed': 0,
        // Relationship Attributes
        'aria-activedescendant': 0,
        'aria-colcount': 0,
        'aria-colindex': 0,
        'aria-colspan': 0,
        'aria-controls': 0,
        'aria-describedby': 0,
        'aria-errormessage': 0,
        'aria-flowto': 0,
        'aria-labelledby': 0,
        'aria-owns': 0,
        'aria-posinset': 0,
        'aria-rowcount': 0,
        'aria-rowindex': 0,
        'aria-rowspan': 0,
        'aria-setsize': 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    function validateProperty(tagName, name) {
        if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) return true;
        if (rARIACamel.test(name)) {
            var ariaName = 'aria-' + name.slice(4).toLowerCase();
            var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
                error1('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
                warnedProperties[name] = true;
                return true;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
                error1('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
                warnedProperties[name] = true;
                return true;
            }
        }
        if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
                warnedProperties[name] = true;
                return false;
            } // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
                error1('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties[name] = true;
                return true;
            }
        }
        return true;
    }
    function warnInvalidARIAProps(type, props) {
        var invalidProps = [];
        for(var key in props){
            var isValid = validateProperty(type, key);
            if (!isValid) invalidProps.push(key);
        }
        var unknownPropString = invalidProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (invalidProps.length === 1) error1("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        else if (invalidProps.length > 1) error1("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
    }
    function validateProperties(type, props) {
        if (isCustomComponent(type, props)) return;
        warnInvalidARIAProps(type, props);
    }
    var didWarnValueNull = false;
    function validateProperties$1(type, props) {
        if (type !== 'input' && type !== 'textarea' && type !== 'select') return;
        if (props != null && props.value === null && !didWarnValueNull) {
            didWarnValueNull = true;
            if (type === 'select' && props.multiple) error1("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
            else error1("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
        }
    }
    var validateProperty$1 = function() {};
    var warnedProperties$1 = {};
    var EVENT_NAME_REGEX = /^on./;
    var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
    var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    validateProperty$1 = function(tagName, name, value, eventRegistry) {
        if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) return true;
        var lowerCasedName = name.toLowerCase();
        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
            error1("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
            warnedProperties$1[name] = true;
            return true;
        } // We can't rely on the event system being injected on the server.
        if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name)) return true;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null) {
                error1('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
                warnedProperties$1[name] = true;
                return true;
            }
            if (EVENT_NAME_REGEX.test(name)) {
                error1('Unknown event handler property `%s`. It will be ignored.', name);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (EVENT_NAME_REGEX.test(name)) {
            // If no event plugins have been injected, we are in a server environment.
            // So we can't tell if the event name is correct for sure, but we can filter
            // out known bad ones like `onclick`. We can't suggest a specific replacement though.
            if (INVALID_EVENT_NAME_REGEX.test(name)) error1("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
            warnedProperties$1[name] = true;
            return true;
        } // Let the ARIA attribute hook validate ARIA attributes
        if (rARIA$1.test(name) || rARIACamel$1.test(name)) return true;
        if (lowerCasedName === 'innerhtml') {
            error1("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'aria') {
            error1("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
            warnedProperties$1[name] = true;
            return true;
        }
        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
            error1("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'number' && isNaN(value)) {
            error1("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
            warnedProperties$1[name] = true;
            return true;
        }
        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.
        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name) {
                error1('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
                warnedProperties$1[name] = true;
                return true;
            }
        } else if (!isReserved && name !== lowerCasedName) {
            // Unknown attributes should have lowercase casing since that's how they
            // will be cased anyway with server rendering.
            error1("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
            warnedProperties$1[name] = true;
            return true;
        }
        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            if (value) error1('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
            else error1('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
            warnedProperties$1[name] = true;
            return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props
        if (isReserved) return true;
         // Warn when a known attribute is a bad type
        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
            warnedProperties$1[name] = true;
            return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop
        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
            error1("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
            warnedProperties$1[name] = true;
            return true;
        }
        return true;
    };
    var warnUnknownProperties = function(type, props, eventRegistry) {
        var unknownProps = [];
        for(var key in props){
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            if (!isValid) unknownProps.push(key);
        }
        var unknownPropString = unknownProps.map(function(prop) {
            return '`' + prop + '`';
        }).join(', ');
        if (unknownProps.length === 1) error1("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        else if (unknownProps.length > 1) error1("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
    };
    function validateProperties$2(type, props, eventRegistry) {
        if (isCustomComponent(type, props)) return;
        warnUnknownProperties(type, props, eventRegistry);
    }
    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 2;
    var IS_CAPTURE_PHASE = 4;
    // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.
    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    // This exists to avoid circular dependency between ReactDOMEventReplaying
    // and DOMPluginEventSystem.
    var currentReplayingEvent = null;
    function setReplayingEvent(event) {
        if (currentReplayingEvent !== null) error1("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = event;
    }
    function resetReplayingEvent() {
        if (currentReplayingEvent === null) error1("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
        currentReplayingEvent = null;
    }
    function isReplayingEvent(event) {
        return event === currentReplayingEvent;
    }
    /**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */ function getEventTarget(nativeEvent) {
        // Fallback to nativeEvent.srcElement for IE9
        // https://github.com/facebook/react/issues/12506
        var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963
        if (target.correspondingUseElement) target = target.correspondingUseElement;
         // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
        // @see http://www.quirksmode.org/js/events_properties.html
        return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;
    function restoreStateOfTarget(target) {
        // We perform this translation at the end of the event loop so that we
        // always receive the correct fiber here
        var internalInstance = getInstanceFromNode(target);
        if (!internalInstance) // Unmounted
        return;
        if (typeof restoreImpl !== 'function') throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.
        if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
        }
    }
    function setRestoreImplementation(impl) {
        restoreImpl = impl;
    }
    function enqueueStateRestore(target) {
        if (restoreTarget) {
            if (restoreQueue) restoreQueue.push(target);
            else restoreQueue = [
                target
            ];
        } else restoreTarget = target;
    }
    function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
    }
    function restoreStateIfNeeded() {
        if (!restoreTarget) return;
        var target = restoreTarget;
        var queuedTargets = restoreQueue;
        restoreTarget = null;
        restoreQueue = null;
        restoreStateOfTarget(target);
        if (queuedTargets) for(var i = 0; i < queuedTargets.length; i++)restoreStateOfTarget(queuedTargets[i]);
    }
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults
    var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
    };
    var flushSyncImpl = function() {};
    var isInsideEventHandler = false;
    function finishEventHandler() {
        // Here we wait until all updates have propagated, which is important
        // when using controlled components within layers:
        // https://github.com/facebook/react/issues/1698
        // Then we restore state of any controlled component.
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        if (controlledComponentsHavePendingUpdates) {
            // If a controlled event was fired, we may need to restore the state of
            // the DOM node back to the controlled value. This is necessary when React
            // bails out of the update without touching the DOM.
            // TODO: Restore state in the microtask, after the discrete updates flush,
            // instead of early flushing them here.
            flushSyncImpl();
            restoreStateIfNeeded();
        }
    }
    function batchedUpdates(fn, a, b) {
        if (isInsideEventHandler) // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
        isInsideEventHandler = true;
        try {
            return batchedUpdatesImpl(fn, a, b);
        } finally{
            isInsideEventHandler = false;
            finishEventHandler();
        }
    } // TODO: Replace with flushSync
    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl;
        flushSyncImpl = _flushSyncImpl;
    }
    function isInteractive(tag) {
        return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }
    function shouldPreventMouseEvent(name, type, props) {
        switch(name){
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
            case 'onMouseEnter':
                return !!(props.disabled && isInteractive(type));
            default:
                return false;
        }
    }
    /**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */ function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null) // Work in progress (ex: onload events in incremental mode).
        return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null) // Work in progress.
        return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props)) return null;
        if (listener && typeof listener !== 'function') throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
    }
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
    if (canUseDOM) try {
        var options1 = {}; // $FlowFixMe: Ignore Flow complaining about needing a value
        Object.defineProperty(options1, 'passive', {
            get: function() {
                passiveBrowserEventsSupported = true;
            }
        });
        window.addEventListener('test', options1, options1);
        window.removeEventListener('test', options1, options1);
    } catch (e1) {
        passiveBrowserEventsSupported = false;
    }
    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
            func.apply(context, funcArgs);
        } catch (error) {
            this.onError(error);
        }
    }
    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    // In DEV mode, we swap out invokeGuardedCallback for a special version
    // that plays more nicely with the browser's DevTools. The idea is to preserve
    // "Pause on exceptions" behavior. Because React wraps all user-provided
    // functions in invokeGuardedCallback, and the production version of
    // invokeGuardedCallback uses a try-catch, all user exceptions are treated
    // like caught exceptions, and the DevTools won't pause unless the developer
    // takes the extra step of enabling pause on caught exceptions. This is
    // unintuitive, though, because even though React has caught the error, from
    // the developer's perspective, the error is uncaught.
    //
    // To preserve the expected "Pause on exceptions" behavior, we don't use a
    // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
    // DOM node, and call the user-provided callback from inside an event handler
    // for that fake event. If the callback throws, the error is "captured" using
    // a global event handler. But because the error happens in a different
    // event loop context, it does not interrupt the normal program flow.
    // Effectively, this gives us try-catch behavior without actually using
    // try-catch. Neat!
    // Check that the browser supports the APIs we need to implement our special
    // DEV version of invokeGuardedCallback
    if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');
        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
            // If document doesn't exist we know for sure we will crash in this method
            // when we call document.createEvent(). However this can cause confusing
            // errors: https://github.com/facebook/create-react-app/issues/3482
            // So we preemptively throw with a better message instead.
            if (typeof document === 'undefined' || document === null) throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            var evt = document.createEvent('Event');
            var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
            // set this to true at the beginning, then set it to false right after
            // calling the function. If the function errors, `didError` will never be
            // set to false. This strategy works even if the browser is flaky and
            // fails to call our global error handler, because it doesn't rely on
            // the error event at all.
            var didError = true; // Keeps track of the value of window.event so that we can reset it
            // during the callback to let user code access window.event in the
            // browsers that support it.
            var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
            // dispatching: https://github.com/facebook/react/issues/13688
            var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');
            function restoreAfterDispatch() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
                // window.event assignment in both IE <= 10 as they throw an error
                // "Member not found" in strict mode, and in Firefox which does not
                // support window.event.
                if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) window.event = windowEvent;
            } // Create an event handler for our fake event. We will synchronously
            // dispatch our fake event using `dispatchEvent`. Inside the handler, we
            // call the user-provided callback.
            var funcArgs = Array.prototype.slice.call(arguments, 3);
            function callCallback() {
                didCall = true;
                restoreAfterDispatch();
                func.apply(context, funcArgs);
                didError = false;
            } // Create a global error event handler. We use this to capture the value
            // that was thrown. It's possible that this error handler will fire more
            // than once; for example, if non-React code also calls `dispatchEvent`
            // and a handler for that event throws. We should be resilient to most of
            // those cases. Even if our error event handler fires more than once, the
            // last error event is always used. If the callback actually does error,
            // we know that the last error event is the correct one, because it's not
            // possible for anything else to have happened in between our callback
            // erroring and the code that follows the `dispatchEvent` call below. If
            // the callback doesn't error, but the error event was fired, we know to
            // ignore it because `didError` will be false, as described above.
            var error; // Use this to track whether the error event is ever called.
            var didSetError = false;
            var isCrossOriginError = false;
            function handleWindowError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) isCrossOriginError = true;
                if (event.defaultPrevented) {
                    // Some other error handler has prevented default.
                    // Browsers silence the error report if this happens.
                    // We'll remember this to later decide whether to log it or not.
                    if (error != null && typeof error === 'object') try {
                        error._suppressLogging = true;
                    } catch (inner) {}
                }
            } // Create a fake event type.
            var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers
            window.addEventListener('error', handleWindowError);
            fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
            // errors, it will trigger our global error handler.
            evt.initEvent(evtType, false, false);
            fakeNode.dispatchEvent(evt);
            if (windowEventDescriptor) Object.defineProperty(window, 'event', windowEventDescriptor);
            if (didCall && didError) {
                if (!didSetError) // The callback errored, but the error event never fired.
                // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the \"Pause on exceptions\" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.");
                else if (isCrossOriginError) // eslint-disable-next-line react-internal/prod-error-codes
                error = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                this.onError(error);
            } // Remove our event listeners
            window.removeEventListener('error', handleWindowError);
            if (!didCall) {
                // Something went really wrong, and our event was not dispatched.
                // https://github.com/facebook/react/issues/16734
                // https://github.com/facebook/react/issues/16585
                // Fall back to the production implementation.
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
            }
        };
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.
    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
        onError: function(error) {
            hasError = true;
            caughtError = error;
        }
    };
    /**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
        hasError = false;
        caughtError = null;
        invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */ function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
        invokeGuardedCallback.apply(this, arguments);
        if (hasError) {
            var error = clearCaughtError();
            if (!hasRethrowError) {
                hasRethrowError = true;
                rethrowError = error;
            }
        }
    }
    /**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */ function rethrowCaughtError() {
        if (hasRethrowError) {
            var error = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error;
        }
    }
    function hasCaughtError() {
        return hasError;
    }
    function clearCaughtError() {
        if (hasError) {
            var error = caughtError;
            hasError = false;
            caughtError = null;
            return error;
        } else throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
    }
    /**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */ function get1(key) {
        return key._reactInternals;
    }
    function has1(key) {
        return key._reactInternals !== undefined;
    }
    function set1(key, value) {
        key._reactInternals = value;
    }
    // Don't change these two values. They're used by React Dev Tools.
    var NoFlags = /*                      */ 0;
    var PerformedWork = /*                */ 1; // You can change the rest (and add more).
    var Placement = /*                    */ 2;
    var Update = /*                       */ 4;
    var ChildDeletion = /*                */ 16;
    var ContentReset = /*                 */ 32;
    var Callback = /*                     */ 64;
    var DidCapture = /*                   */ 128;
    var ForceClientRender = /*            */ 256;
    var Ref = /*                          */ 512;
    var Snapshot = /*                     */ 1024;
    var Passive = /*                      */ 2048;
    var Hydrating = /*                    */ 4096;
    var Visibility = /*                   */ 8192;
    var StoreConsistency = /*             */ 16384;
    var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency; // Union of all commit flags (flags with the lifetime of a particular commit)
    var HostEffectMask = /*               */ 32767; // These are not really side effects, but we still reuse this field.
    var Incomplete = /*                   */ 32768;
    var ShouldCapture = /*                */ 65536;
    var ForceUpdateForLegacySuspense = /* */ 131072;
    var Forked = /*                       */ 1048576; // Static tags describe aspects of a fiber that are not specific to a render,
    // e.g. a fiber uses a passive effect (even if there are no updates on this particular render).
    // This enables us to defer more work in the unmount case,
    // since we can defer traversing the tree during layout to look for Passive effects,
    // and instead rely on the static flag as a signal that there may be cleanup work.
    var RefStatic = /*                    */ 2097152;
    var LayoutStatic = /*                 */ 4194304;
    var PassiveStatic = /*                */ 8388608; // These flags allow us to traverse to fibers that have effects on mount
    // without traversing the entire tree after every commit for
    // double invoking
    var MountLayoutDev = /*               */ 16777216;
    var MountPassiveDev = /*              */ 33554432; // Groups of flags that are used in the commit phase to skip over trees that
    // don't contain effects, by checking subtreeFlags.
    var BeforeMutationMask = // flag logic (see #20043)
    Update | Snapshot | 0;
    var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
    var LayoutMask = Update | Callback | Ref | Visibility; // TODO: Split into PassiveMountMask and PassiveUnmountMask
    var PassiveMask = Passive | ChildDeletion; // Union of tags that don't get reset on clones.
    // This allows certain concepts to persist without recalculating them,
    // e.g. whether a subtree contains passive effects or portals.
    var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    function getNearestMountedFiber(fiber) {
        var node = fiber;
        var nearestMounted = fiber;
        if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            var nextNode = node;
            do {
                node = nextNode;
                if ((node.flags & (Placement | Hydrating)) !== NoFlags) // This is an insertion or in-progress hydration. The nearest possible
                // mounted fiber is the parent but we need to continue to figure out
                // if that one is still mounted.
                nearestMounted = node.return;
                nextNode = node.return;
            }while (nextNode)
        } else while(node.return)node = node.return;
        if (node.tag === HostRoot) // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
         // If we didn't hit the root, that means that we're in an disconnected tree
        // that has been unmounted.
        return null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
                var current = fiber.alternate;
                if (current !== null) suspenseState = current.memoizedState;
            }
            if (suspenseState !== null) return suspenseState.dehydrated;
        }
        return null;
    }
    function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }
    function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
    }
    function isMounted(component) {
        var owner = ReactCurrentOwner.current;
        if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner;
            var instance = ownerFiber.stateNode;
            if (!instance._warnedAboutRefsInRender) error1("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || 'A component');
            instance._warnedAboutRefsInRender = true;
        }
        var fiber = get1(component);
        if (!fiber) return false;
        return getNearestMountedFiber(fiber) === fiber;
    }
    function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber) throw new Error('Unable to find node on an unmounted component.');
    }
    function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) throw new Error('Unable to find node on an unmounted component.');
            if (nearestMounted !== fiber) return null;
            return fiber;
        } // If we have two possible branches, we'll walk backwards up to the root
        // to see what path the root points to. On the way we may hit one of the
        // special cases and we'll deal with them.
        var a = fiber;
        var b = alternate;
        while(true){
            var parentA = a.return;
            if (parentA === null) break;
            var parentB = parentA.alternate;
            if (parentB === null) {
                // There is no alternate. This is an unusual case. Currently, it only
                // happens when a Suspense component is hidden. An extra fragment fiber
                // is inserted in between the Suspense fiber and its children. Skip
                // over this extra fragment fiber and proceed to the next parent.
                var nextParent = parentA.return;
                if (nextParent !== null) {
                    a = b = nextParent;
                    continue;
                } // If there's no parent, we're at the root.
                break;
            } // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
                var child = parentA.child;
                while(child){
                    if (child === a) {
                        // We've determined that A is the current branch.
                        assertIsMounted(parentA);
                        return fiber;
                    }
                    if (child === b) {
                        // We've determined that B is the current branch.
                        assertIsMounted(parentA);
                        return alternate;
                    }
                    child = child.sibling;
                } // We should never have an alternate for any mounting node. So the only
                // way this could possibly happen is if this was unmounted, if at all.
                throw new Error('Unable to find node on an unmounted component.');
            }
            if (a.return !== b.return) {
                // The return pointer of A and the return pointer of B point to different
                // fibers. We assume that return pointers never criss-cross, so A must
                // belong to the child set of A.return, and B must belong to the child
                // set of B.return.
                a = parentA;
                b = parentB;
            } else {
                // The return pointers point to the same fiber. We'll have to use the
                // default, slow path: scan the child sets of each parent alternate to see
                // which child belongs to which set.
                //
                // Search parent A's child set
                var didFindChild = false;
                var _child = parentA.child;
                while(_child){
                    if (_child === a) {
                        didFindChild = true;
                        a = parentA;
                        b = parentB;
                        break;
                    }
                    if (_child === b) {
                        didFindChild = true;
                        b = parentA;
                        a = parentB;
                        break;
                    }
                    _child = _child.sibling;
                }
                if (!didFindChild) {
                    // Search parent B's child set
                    _child = parentB.child;
                    while(_child){
                        if (_child === a) {
                            didFindChild = true;
                            a = parentB;
                            b = parentA;
                            break;
                        }
                        if (_child === b) {
                            didFindChild = true;
                            b = parentB;
                            a = parentA;
                            break;
                        }
                        _child = _child.sibling;
                    }
                    if (!didFindChild) throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
            }
            if (a.alternate !== b) throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        } // If the root is not a host container, we're in a disconnected tree. I.e.
        // unmounted.
        if (a.tag !== HostRoot) throw new Error('Unable to find node on an unmounted component.');
        if (a.stateNode.current === a) // We've determined that A is the current branch.
        return fiber;
         // Otherwise B has to be current branch.
        return alternate;
    }
    function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
    }
    function findCurrentHostFiberImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            var match = findCurrentHostFiberImpl(child);
            if (match !== null) return match;
            child = child.sibling;
        }
        return null;
    }
    function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
    }
    function findCurrentHostFiberWithNoPortalsImpl(node) {
        // Next we'll drill down this component to find the first HostComponent/Text.
        if (node.tag === HostComponent || node.tag === HostText) return node;
        var child = node.child;
        while(child !== null){
            if (child.tag !== HostPortal) {
                var match = findCurrentHostFiberWithNoPortalsImpl(child);
                if (match !== null) return match;
            }
            child = child.sibling;
        }
        return null;
    }
    // This module only exists as an ESM wrapper around the external CommonJS
    var scheduleCallback = Scheduler.unstable_scheduleCallback;
    var cancelCallback = Scheduler.unstable_cancelCallback;
    var shouldYield = Scheduler.unstable_shouldYield;
    var requestPaint = Scheduler.unstable_requestPaint;
    var now = Scheduler.unstable_now;
    var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
    var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var NormalPriority = Scheduler.unstable_NormalPriority;
    var LowPriority = Scheduler.unstable_LowPriority;
    var IdlePriority = Scheduler.unstable_IdlePriority;
    // this doesn't actually exist on the scheduler, but it *does*
    // on scheduler/unstable_mock, which we'll need for internal testing
    var unstable_yieldValue = Scheduler.unstable_yieldValue;
    var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
    var rendererID = null;
    var injectedHook = null;
    var injectedProfilingHooks = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';
    function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') // No DevTools
        return false;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled) // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
        if (!hook.supportsFiber) {
            error1("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            return true;
        }
        try {
            if (enableSchedulingProfiler) // Conditionally inject these hooks only if Timeline profiler is supported by this build.
            // This gives DevTools a way to feature detect that isn't tied to version number
            // (since profiling and timeline are controlled by different feature flags).
            internals = assign({}, internals, {
                getLaneLabelMap: getLaneLabelMap,
                injectProfilingHooks: injectProfilingHooks
            });
            rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.
            injectedHook = hook;
        } catch (err) {
            error1('React instrumentation encountered an error: %s.', err);
        }
        if (hook.checkDCE) // This is the real DevTools.
        return true;
        else // This is likely a hook installed by Fast Refresh runtime.
        return false;
    }
    function onScheduleRoot(root, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitRoot(root, eventPriority) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') try {
            var didError = (root.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) {
                var schedulerPriority;
                switch(eventPriority){
                    case DiscreteEventPriority:
                        schedulerPriority = ImmediatePriority;
                        break;
                    case ContinuousEventPriority:
                        schedulerPriority = UserBlockingPriority;
                        break;
                    case DefaultEventPriority:
                        schedulerPriority = NormalPriority;
                        break;
                    case IdleEventPriority:
                        schedulerPriority = IdlePriority;
                        break;
                    default:
                        schedulerPriority = NormalPriority;
                        break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root, schedulerPriority, didError);
            } else injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onPostCommitRoot(root) {
        if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === 'function') try {
            injectedHook.onPostCommitFiberRoot(rendererID, root);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
        if (typeof unstable_yieldValue === 'function') {
            // We're in a test because Scheduler.unstable_yieldValue only exists
            // in SchedulerMock. To reduce the noise in strict mode tests,
            // suppress warnings and disable scheduler yielding during the double render
            unstable_setDisableYieldValue(newIsStrictMode);
            setSuppressWarning(newIsStrictMode);
        }
        if (injectedHook && typeof injectedHook.setStrictMode === 'function') try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
            if (!hasLoggedError) {
                hasLoggedError = true;
                error1('React instrumentation encountered an error: %s', err);
            }
        }
    } // Profiler API hooks
    function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
    }
    function getLaneLabelMap() {
        var map = new Map();
        var lane = 1;
        for(var index = 0; index < TotalLanes; index++){
            var label = getLabelForLane(lane);
            map.set(lane, label);
            lane *= 2;
        }
        return map;
    }
    function markCommitStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === 'function') injectedProfilingHooks.markCommitStarted(lanes);
    }
    function markCommitStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === 'function') injectedProfilingHooks.markCommitStopped();
    }
    function markComponentRenderStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === 'function') injectedProfilingHooks.markComponentRenderStarted(fiber);
    }
    function markComponentRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === 'function') injectedProfilingHooks.markComponentRenderStopped();
    }
    function markComponentPassiveEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === 'function') injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
    }
    function markComponentPassiveEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === 'function') injectedProfilingHooks.markComponentPassiveEffectMountStopped();
    }
    function markComponentPassiveEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === 'function') injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
    }
    function markComponentPassiveEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === 'function') injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
    }
    function markComponentLayoutEffectMountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === 'function') injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
    }
    function markComponentLayoutEffectMountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === 'function') injectedProfilingHooks.markComponentLayoutEffectMountStopped();
    }
    function markComponentLayoutEffectUnmountStarted(fiber) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === 'function') injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
    }
    function markComponentLayoutEffectUnmountStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === 'function') injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
    }
    function markComponentErrored(fiber, thrownValue, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === 'function') injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
    }
    function markComponentSuspended(fiber, wakeable, lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === 'function') injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
    }
    function markLayoutEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === 'function') injectedProfilingHooks.markLayoutEffectsStarted(lanes);
    }
    function markLayoutEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === 'function') injectedProfilingHooks.markLayoutEffectsStopped();
    }
    function markPassiveEffectsStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === 'function') injectedProfilingHooks.markPassiveEffectsStarted(lanes);
    }
    function markPassiveEffectsStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === 'function') injectedProfilingHooks.markPassiveEffectsStopped();
    }
    function markRenderStarted(lanes) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === 'function') injectedProfilingHooks.markRenderStarted(lanes);
    }
    function markRenderYielded() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === 'function') injectedProfilingHooks.markRenderYielded();
    }
    function markRenderStopped() {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === 'function') injectedProfilingHooks.markRenderStopped();
    }
    function markRenderScheduled(lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === 'function') injectedProfilingHooks.markRenderScheduled(lane);
    }
    function markForceUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === 'function') injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
    }
    function markStateUpdateScheduled(fiber, lane) {
        if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === 'function') injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
    }
    var NoMode = /*                         */ 0; // TODO: Remove ConcurrentMode by reading from the root tag instead
    var ConcurrentMode = /*                 */ 1;
    var ProfileMode = /*                    */ 2;
    var StrictLegacyMode = /*               */ 8;
    var StrictEffectsMode = /*              */ 16;
    // TODO: This is pretty well supported by browsers. Maybe we can drop it.
    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32
    var log = Math.log;
    var LN2 = Math.LN2;
    function clz32Fallback(x) {
        var asUint = x >>> 0;
        if (asUint === 0) return 32;
        return 31 - (log(asUint) / LN2 | 0) | 0;
    }
    // If those values are changed that package should be rebuilt and redeployed.
    var TotalLanes = 31;
    var NoLanes = /*                        */ 0;
    var NoLane = /*                          */ 0;
    var SyncLane = /*                        */ 1;
    var InputContinuousHydrationLane = /*    */ 2;
    var InputContinuousLane = /*             */ 4;
    var DefaultHydrationLane = /*            */ 8;
    var DefaultLane = /*                     */ 16;
    var TransitionHydrationLane = /*                */ 32;
    var TransitionLanes = /*                       */ 4194240;
    var TransitionLane1 = /*                        */ 64;
    var TransitionLane2 = /*                        */ 128;
    var TransitionLane3 = /*                        */ 256;
    var TransitionLane4 = /*                        */ 512;
    var TransitionLane5 = /*                        */ 1024;
    var TransitionLane6 = /*                        */ 2048;
    var TransitionLane7 = /*                        */ 4096;
    var TransitionLane8 = /*                        */ 8192;
    var TransitionLane9 = /*                        */ 16384;
    var TransitionLane10 = /*                       */ 32768;
    var TransitionLane11 = /*                       */ 65536;
    var TransitionLane12 = /*                       */ 131072;
    var TransitionLane13 = /*                       */ 262144;
    var TransitionLane14 = /*                       */ 524288;
    var TransitionLane15 = /*                       */ 1048576;
    var TransitionLane16 = /*                       */ 2097152;
    var RetryLanes = /*                            */ 130023424;
    var RetryLane1 = /*                             */ 4194304;
    var RetryLane2 = /*                             */ 8388608;
    var RetryLane3 = /*                             */ 16777216;
    var RetryLane4 = /*                             */ 33554432;
    var RetryLane5 = /*                             */ 67108864;
    var SomeRetryLane = RetryLane1;
    var SelectiveHydrationLane = /*          */ 134217728;
    var NonIdleLanes = /*                          */ 268435455;
    var IdleHydrationLane = /*               */ 268435456;
    var IdleLane = /*                        */ 536870912;
    var OffscreenLane = /*                   */ 1073741824; // This function is used for the experimental timeline (react-devtools-timeline)
    // It should be kept in sync with the Lanes values above.
    function getLabelForLane(lane) {
        if (lane & SyncLane) return 'Sync';
        if (lane & InputContinuousHydrationLane) return 'InputContinuousHydration';
        if (lane & InputContinuousLane) return 'InputContinuous';
        if (lane & DefaultHydrationLane) return 'DefaultHydration';
        if (lane & DefaultLane) return 'Default';
        if (lane & TransitionHydrationLane) return 'TransitionHydration';
        if (lane & TransitionLanes) return 'Transition';
        if (lane & RetryLanes) return 'Retry';
        if (lane & SelectiveHydrationLane) return 'SelectiveHydration';
        if (lane & IdleHydrationLane) return 'IdleHydration';
        if (lane & IdleLane) return 'Idle';
        if (lane & OffscreenLane) return 'Offscreen';
    }
    var NoTimestamp = -1;
    var nextTransitionLane = TransitionLane1;
    var nextRetryLane = RetryLane1;
    function getHighestPriorityLanes(lanes) {
        switch(getHighestPriorityLane(lanes)){
            case SyncLane:
                return SyncLane;
            case InputContinuousHydrationLane:
                return InputContinuousHydrationLane;
            case InputContinuousLane:
                return InputContinuousLane;
            case DefaultHydrationLane:
                return DefaultHydrationLane;
            case DefaultLane:
                return DefaultLane;
            case TransitionHydrationLane:
                return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                return lanes & RetryLanes;
            case SelectiveHydrationLane:
                return SelectiveHydrationLane;
            case IdleHydrationLane:
                return IdleHydrationLane;
            case IdleLane:
                return IdleLane;
            case OffscreenLane:
                return OffscreenLane;
            default:
                error1('Should have found matching lanes. This is a bug in React.');
                return lanes;
        }
    }
    function getNextLanes(root, wipLanes) {
        // Early bailout if there's no pending work left.
        var pendingLanes = root.pendingLanes;
        if (pendingLanes === NoLanes) return NoLanes;
        var nextLanes = NoLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes; // Do not work on any idle work until all the non-idle work has finished,
        // even if the work is suspended.
        var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
        if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            else {
                var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                if (nonIdlePingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
            }
        } else {
            // The only remaining work is Idle.
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(unblockedLanes);
            else if (pingedLanes !== NoLanes) nextLanes = getHighestPriorityLanes(pingedLanes);
        }
        if (nextLanes === NoLanes) // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
         // If we're already in the middle of a render, switching lanes will interrupt
        // it and we'll lose our progress. We should only do this if the new lanes are
        // higher priority.
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (// one. This works because the bits decrease in priority as you go left.
            nextLane >= wipLane || // only difference between default updates and transition updates is that
            // default updates do not support refresh transitions.
            nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes) // Keep working on the existing in-progress tree. Do not interrupt.
            return wipLanes;
        }
        if ((nextLanes & InputContinuousLane) !== NoLanes) // When updates are sync by default, we entangle continuous priority updates
        // and default updates, so they render in the same batch. The only reason
        // they use separate lanes is because continuous updates should interrupt
        // transitions, but default updates should not.
        nextLanes |= pendingLanes & DefaultLane;
         // Check for entangled lanes and add them to the batch.
        //
        // A lane is said to be entangled with another when it's not allowed to render
        // in a batch that does not also include the other lane. Typically we do this
        // when multiple updates have the same source, and we only want to respond to
        // the most recent event from that source.
        //
        // Note that we apply entanglements *after* checking for partial work above.
        // This means that if a lane is entangled during an interleaved event while
        // it's already rendering, we won't interrupt it. This is intentional, since
        // entanglement is usually "best effort": we'll try our best to render the
        // lanes in the same batch, but it's not worth throwing out partially
        // completed work in order to do it.
        // TODO: Reconsider this. The counter-argument is that the partial work
        // represents an intermediate state, which we don't want to show to the user.
        // And by spending extra time finishing it, we're increasing the amount of
        // time it takes to show the final state, which is what they are actually
        // waiting for.
        //
        // For those exceptions where entanglement is semantically important, like
        // useMutableSource, we should ensure that there is no partial work at the
        // time we apply the entanglement.
        var entangledLanes = root.entangledLanes;
        if (entangledLanes !== NoLanes) {
            var entanglements = root.entanglements;
            var lanes = nextLanes & entangledLanes;
            while(lanes > 0){
                var index = pickArbitraryLaneIndex(lanes);
                var lane = 1 << index;
                nextLanes |= entanglements[index];
                lanes &= ~lane;
            }
        }
        return nextLanes;
    }
    function getMostRecentEventTime(root, lanes) {
        var eventTimes = root.eventTimes;
        var mostRecentEventTime = NoTimestamp;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var eventTime = eventTimes[index];
            if (eventTime > mostRecentEventTime) mostRecentEventTime = eventTime;
            lanes &= ~lane;
        }
        return mostRecentEventTime;
    }
    function computeExpirationTime(lane, currentTime) {
        switch(lane){
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
                // User interactions should expire slightly more quickly.
                //
                // NOTE: This is set to the corresponding constant as in Scheduler.js.
                // When we made it larger, a product metric in www regressed, suggesting
                // there's a user interaction that's being starved by a series of
                // synchronous updates. If that theory is correct, the proper solution is
                // to fix the starvation. However, this scenario supports the idea that
                // expiration times are an important safeguard when starvation
                // does happen.
                return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
                return currentTime + 5000;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                // TODO: Retries should be allowed to expire if they are CPU bound for
                // too long, but when I made this change it caused a spike in browser
                // crashes. There must be some other underlying bug; not super urgent but
                // ideally should figure out why and fix it. Unfortunately we don't have
                // a repro for the crashes, only detected via production metrics.
                return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
                // Anything idle priority or lower should never expire.
                return NoTimestamp;
            default:
                error1('Should have found matching lanes. This is a bug in React.');
                return NoTimestamp;
        }
    }
    function markStarvedLanesAsExpired(root, currentTime) {
        // TODO: This gets called every time we yield. We can optimize by storing
        // the earliest expiration time on the root. Then use that to quickly bail out
        // of this function.
        var pendingLanes = root.pendingLanes;
        var suspendedLanes = root.suspendedLanes;
        var pingedLanes = root.pingedLanes;
        var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
        // expiration time. If so, we'll assume the update is being starved and mark
        // it as expired to force it to finish.
        var lanes = pendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            var expirationTime = expirationTimes[index];
            if (expirationTime === NoTimestamp) // Found a pending lane with no expiration time. If it's not suspended, or
            // if it's pinged, assume it's CPU-bound. Compute a new expiration time
            // using the current time.
            {
                if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) // Assumes timestamps are monotonically increasing.
                expirationTimes[index] = computeExpirationTime(lane, currentTime);
            } else if (expirationTime <= currentTime) // This lane expired
            root.expiredLanes |= lane;
            lanes &= ~lane;
        }
    } // This returns the highest priority pending lanes regardless of whether they
    // are suspended.
    function getHighestPriorityPendingLanes(root) {
        return getHighestPriorityLanes(root.pendingLanes);
    }
    function getLanesToRetrySynchronouslyOnError(root) {
        var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;
        if (everythingButOffscreen !== NoLanes) return everythingButOffscreen;
        if (everythingButOffscreen & OffscreenLane) return OffscreenLane;
        return NoLanes;
    }
    function includesSyncLane(lanes) {
        return (lanes & SyncLane) !== NoLanes;
    }
    function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
    }
    function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
    }
    function includesOnlyNonUrgentLanes(lanes) {
        var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
        return (lanes & UrgentLanes) === NoLanes;
    }
    function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
    }
    function includesBlockingLane(root, lanes) {
        var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
        return (lanes & SyncDefaultLanes) !== NoLanes;
    }
    function includesExpiredLane(root, lanes) {
        // This is a separate check from includesBlockingLane because a lane can
        // expire after a render has already started.
        return (lanes & root.expiredLanes) !== NoLanes;
    }
    function isTransitionLane(lane) {
        return (lane & TransitionLanes) !== NoLanes;
    }
    function claimNextTransitionLane() {
        // Cycle through the lanes, assigning each new transition to the next lane.
        // In most cases, this means every transition gets its own lane, until we
        // run out of lanes and cycle back to the beginning.
        var lane = nextTransitionLane;
        nextTransitionLane <<= 1;
        if ((nextTransitionLane & TransitionLanes) === NoLanes) nextTransitionLane = TransitionLane1;
        return lane;
    }
    function claimNextRetryLane() {
        var lane = nextRetryLane;
        nextRetryLane <<= 1;
        if ((nextRetryLane & RetryLanes) === NoLanes) nextRetryLane = RetryLane1;
        return lane;
    }
    function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
    }
    function pickArbitraryLane(lanes) {
        // This wrapper function gets inlined. Only exists so to communicate that it
        // doesn't matter which bit is selected; you can pick any bit without
        // affecting the algorithms where its used. Here I'm using
        // getHighestPriorityLane because it requires the fewest operations.
        return getHighestPriorityLane(lanes);
    }
    function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
    }
    function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
    }
    function includesSomeLane(a, b) {
        return (a & b) !== NoLanes;
    }
    function isSubsetOfLanes(set, subset) {
        return (set & subset) === subset;
    }
    function mergeLanes(a, b) {
        return a | b;
    }
    function removeLanes(set, subset) {
        return set & ~subset;
    }
    function intersectLanes(a, b) {
        return a & b;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).
    function laneToLanes(lane) {
        return lane;
    }
    function higherPriorityLane(a, b) {
        // This works because the bit ranges decrease in priority as you go left.
        return a !== NoLane && a < b ? a : b;
    }
    function createLaneMap(initial) {
        // Intentionally pushing one by one.
        // https://v8.dev/blog/elements-kinds#avoid-creating-holes
        var laneMap = [];
        for(var i = 0; i < TotalLanes; i++)laneMap.push(initial);
        return laneMap;
    }
    function markRootUpdated(root, updateLane, eventTime) {
        root.pendingLanes |= updateLane; // If there are any suspended transitions, it's possible this new update
        // could unblock them. Clear the suspended lanes so that we can try rendering
        // them again.
        //
        // TODO: We really only need to unsuspend only lanes that are in the
        // `subtreeLanes` of the updated fiber, or the update lanes of the return
        // path. This would exclude suspended updates in an unrelated sibling tree,
        // since there's no way for this update to unblock it.
        //
        // We don't do this if the incoming update is idle, because we never process
        // idle updates until after all the regular updates have finished; there's no
        // way it could unblock a transition.
        if (updateLane !== IdleLane) {
            root.suspendedLanes = NoLanes;
            root.pingedLanes = NoLanes;
        }
        var eventTimes = root.eventTimes;
        var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
        // recent event, and we assume time is monotonically increasing.
        eventTimes[index] = eventTime;
    }
    function markRootSuspended(root, suspendedLanes) {
        root.suspendedLanes |= suspendedLanes;
        root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.
        var expirationTimes = root.expirationTimes;
        var lanes = suspendedLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootPinged(root, pingedLanes, eventTime) {
        root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }
    function markRootFinished(root, remainingLanes) {
        var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
        root.pendingLanes = remainingLanes; // Let's try everything again
        root.suspendedLanes = NoLanes;
        root.pingedLanes = NoLanes;
        root.expiredLanes &= remainingLanes;
        root.mutableReadLanes &= remainingLanes;
        root.entangledLanes &= remainingLanes;
        var entanglements = root.entanglements;
        var eventTimes = root.eventTimes;
        var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work
        var lanes = noLongerPendingLanes;
        while(lanes > 0){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            entanglements[index] = NoLanes;
            eventTimes[index] = NoTimestamp;
            expirationTimes[index] = NoTimestamp;
            lanes &= ~lane;
        }
    }
    function markRootEntangled(root, entangledLanes) {
        // In addition to entangling each of the given lanes with each other, we also
        // have to consider _transitive_ entanglements. For each lane that is already
        // entangled with *any* of the given lanes, that lane is now transitively
        // entangled with *all* the given lanes.
        //
        // Translated: If C is entangled with A, then entangling A with B also
        // entangles C with B.
        //
        // If this is hard to grasp, it might help to intentionally break this
        // function and look at the tests that fail in ReactTransition-test.js. Try
        // commenting out one of the conditions below.
        var rootEntangledLanes = root.entangledLanes |= entangledLanes;
        var entanglements = root.entanglements;
        var lanes = rootEntangledLanes;
        while(lanes){
            var index = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index;
            if (lane & entangledLanes | entanglements[index] & entangledLanes) entanglements[index] |= entangledLanes;
            lanes &= ~lane;
        }
    }
    function getBumpedLaneForHydration(root, renderLanes) {
        var renderLane = getHighestPriorityLane(renderLanes);
        var lane;
        switch(renderLane){
            case InputContinuousLane:
                lane = InputContinuousHydrationLane;
                break;
            case DefaultLane:
                lane = DefaultHydrationLane;
                break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
                lane = TransitionHydrationLane;
                break;
            case IdleLane:
                lane = IdleHydrationLane;
                break;
            default:
                // Everything else is already either a hydration lane, or shouldn't
                // be retried at a hydration lane.
                lane = NoLane;
                break;
        } // Check if the lane we chose is suspended. If so, that indicates that we
        // already attempted and failed to hydrate at that level. Also check if we're
        // already rendering that lane, which is rare but could happen.
        if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) // Give up trying to hydrate and fall back to client render.
        return NoLane;
        return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            updaters.add(fiber);
            lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
        if (!isDevToolsPresent) return;
        var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;
        var memoizedUpdaters = root.memoizedUpdaters;
        while(lanes > 0){
            var index = laneToIndex(lanes);
            var lane = 1 << index;
            var updaters = pendingUpdatersLaneMap[index];
            if (updaters.size > 0) {
                updaters.forEach(function(fiber) {
                    var alternate = fiber.alternate;
                    if (alternate === null || !memoizedUpdaters.has(alternate)) memoizedUpdaters.add(fiber);
                });
                updaters.clear();
            }
            lanes &= ~lane;
        }
    }
    function getTransitionsForLanes(root, lanes) {
        return null;
    }
    var DiscreteEventPriority = SyncLane;
    var ContinuousEventPriority = InputContinuousLane;
    var DefaultEventPriority = DefaultLane;
    var IdleEventPriority = IdleLane;
    var currentUpdatePriority = NoLane;
    function getCurrentUpdatePriority() {
        return currentUpdatePriority;
    }
    function setCurrentUpdatePriority(newPriority) {
        currentUpdatePriority = newPriority;
    }
    function runWithPriority(priority, fn) {
        var previousPriority = currentUpdatePriority;
        try {
            currentUpdatePriority = priority;
            return fn();
        } finally{
            currentUpdatePriority = previousPriority;
        }
    }
    function higherEventPriority(a, b) {
        return a !== 0 && a < b ? a : b;
    }
    function lowerEventPriority(a, b) {
        return a === 0 || a > b ? a : b;
    }
    function isHigherEventPriority(a, b) {
        return a !== 0 && a < b;
    }
    function lanesToEventPriority(lanes) {
        var lane = getHighestPriorityLane(lanes);
        if (!isHigherEventPriority(DiscreteEventPriority, lane)) return DiscreteEventPriority;
        if (!isHigherEventPriority(ContinuousEventPriority, lane)) return ContinuousEventPriority;
        if (includesNonIdleWork(lane)) return DefaultEventPriority;
        return IdleEventPriority;
    }
    // This is imported by the event replaying implementation in React DOM. It's
    // in a separate file to break a circular dependency between the renderer and
    // the reconciler.
    function isRootDehydrated(root) {
        var currentState = root.current.memoizedState;
        return currentState.isDehydrated;
    }
    var _attemptSynchronousHydration;
    function setAttemptSynchronousHydration(fn) {
        _attemptSynchronousHydration = fn;
    }
    function attemptSynchronousHydration(fiber) {
        _attemptSynchronousHydration(fiber);
    }
    var attemptContinuousHydration;
    function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
    }
    var attemptHydrationAtCurrentPriority;
    function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
    }
    var getCurrentUpdatePriority$1;
    function setGetCurrentUpdatePriority(fn) {
        getCurrentUpdatePriority$1 = fn;
    }
    var attemptHydrationAtPriority;
    function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    // has this definition built-in.
    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.
    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.
    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.
    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.
    var queuedExplicitHydrationTargets = [];
    var discreteReplayableEvents = [
        'mousedown',
        'mouseup',
        'touchcancel',
        'touchend',
        'touchstart',
        'auxclick',
        'dblclick',
        'pointercancel',
        'pointerdown',
        'pointerup',
        'dragend',
        'dragstart',
        'drop',
        'compositionend',
        'compositionstart',
        'keydown',
        'keypress',
        'keyup',
        'input',
        'textInput',
        'copy',
        'cut',
        'paste',
        'click',
        'change',
        'contextmenu',
        'reset',
        'submit'
    ];
    function isDiscreteEventThatRequiresHydration(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
    }
    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [
                targetContainer
            ]
        };
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch(domEventName){
            case 'focusin':
            case 'focusout':
                queuedFocus = null;
                break;
            case 'dragenter':
            case 'dragleave':
                queuedDrag = null;
                break;
            case 'mouseover':
            case 'mouseout':
                queuedMouse = null;
                break;
            case 'pointerover':
            case 'pointerout':
                var pointerId = nativeEvent.pointerId;
                queuedPointers.delete(pointerId);
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
                var _pointerId = nativeEvent.pointerId;
                queuedPointerCaptures.delete(_pointerId);
                break;
        }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
                var _fiber2 = getInstanceFromNode(blockedOn);
                if (_fiber2 !== null) // Attempt to increase the priority of this target.
                attemptContinuousHydration(_fiber2);
            }
            return queuedEvent;
        } // If we have already queued this exact event, then it's because
        // the different event systems have different DOM event listeners.
        // We can accumulate the flags, and the targetContainers, and
        // store a single event to be replayed.
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) targetContainers.push(targetContainer);
        return existingQueuedEvent;
    }
    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // These set relatedTarget to null because the replayed event will be treated as if we
        // moved from outside the window (no target) onto the target once it hydrates.
        // Instead of mutating we could clone the event.
        switch(domEventName){
            case 'focusin':
                var focusEvent = nativeEvent;
                queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                return true;
            case 'dragenter':
                var dragEvent = nativeEvent;
                queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                return true;
            case 'mouseover':
                var mouseEvent = nativeEvent;
                queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                return true;
            case 'pointerover':
                var pointerEvent = nativeEvent;
                var pointerId = pointerEvent.pointerId;
                queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                return true;
            case 'gotpointercapture':
                var _pointerEvent = nativeEvent;
                var _pointerId2 = _pointerEvent.pointerId;
                queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                return true;
        }
        return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.
    function attemptExplicitHydrationTarget(queuedTarget) {
        // TODO: This function shares a lot of logic with findInstanceBlockingEvent.
        // Try to unify them. It's a bit tricky since it would require two return
        // values.
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) {
                        // We're blocked on hydrating this boundary.
                        // Increase its priority.
                        queuedTarget.blockedOn = instance;
                        attemptHydrationAtPriority(queuedTarget.priority, function() {
                            attemptHydrationAtCurrentPriority(nearestMounted);
                        });
                        return;
                    }
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) {
                        queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
                        // a root other than sync.
                        return;
                    }
                }
            }
        }
        queuedTarget.blockedOn = null;
    }
    function queueExplicitHydrationTarget(target) {
        // TODO: This will read the priority if it's dispatched by the React
        // event system but not native events. Should read window.event.type, like
        // we do for updates (getCurrentEventPriority).
        var updatePriority = getCurrentUpdatePriority$1();
        var queuedTarget = {
            blockedOn: null,
            target: target,
            priority: updatePriority
        };
        var i = 0;
        for(; i < queuedExplicitHydrationTargets.length; i++){
            // Stop once we hit the first target with lower priority than
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) break;
        }
        queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
        if (i === 0) attemptExplicitHydrationTarget(queuedTarget);
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null) return false;
        var targetContainers = queuedEvent.targetContainers;
        while(targetContainers.length > 0){
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
            } else {
                // We're still blocked. Try again later.
                var _fiber3 = getInstanceFromNode(nextBlockedOn);
                if (_fiber3 !== null) attemptContinuousHydration(_fiber3);
                queuedEvent.blockedOn = nextBlockedOn;
                return false;
            } // This target container was successfully dispatched. Try the next.
            targetContainers.shift();
        }
        return true;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        if (attemptReplayContinuousQueuedEvent(queuedEvent)) map.delete(key);
    }
    function replayUnblockedEvents() {
        hasScheduledReplayAttempt = false;
        if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) queuedFocus = null;
        if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) queuedDrag = null;
        if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) queuedMouse = null;
        queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
        queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
                hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
                // now unblocked. This first might not actually be unblocked yet.
                // We could check it early to avoid scheduling an unnecessary callback.
                Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
            }
        }
    }
    function retryIfBlockedOn(unblocked) {
        // Mark anything that was blocked on this as no longer blocked
        // and eligible for a replay.
        if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
            // worth it because we expect very few discrete events to queue up and once
            // we are actually fully unblocked it will be fast to replay them.
            for(var i = 1; i < queuedDiscreteEvents.length; i++){
                var queuedEvent = queuedDiscreteEvents[i];
                if (queuedEvent.blockedOn === unblocked) queuedEvent.blockedOn = null;
            }
        }
        if (queuedFocus !== null) scheduleCallbackIfUnblocked(queuedFocus, unblocked);
        if (queuedDrag !== null) scheduleCallbackIfUnblocked(queuedDrag, unblocked);
        if (queuedMouse !== null) scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent) {
            return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
        };
        queuedPointers.forEach(unblock);
        queuedPointerCaptures.forEach(unblock);
        for(var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++){
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) queuedTarget.blockedOn = null;
        }
        while(queuedExplicitHydrationTargets.length > 0){
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) break;
            else {
                attemptExplicitHydrationTarget(nextExplicitTarget);
                if (nextExplicitTarget.blockedOn === null) // We're unblocked.
                queuedExplicitHydrationTargets.shift();
            }
        }
    }
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig; // TODO: can we stop exporting these?
    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.
    function setEnabled(enabled) {
        _enabled = !!enabled;
    }
    function isEnabled() {
        return _enabled;
    }
    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriority(domEventName);
        var listenerWrapper;
        switch(eventPriority){
            case DiscreteEventPriority:
                listenerWrapper = dispatchDiscreteEvent;
                break;
            case ContinuousEventPriority:
                listenerWrapper = dispatchContinuousEvent;
                break;
            case DefaultEventPriority:
            default:
                listenerWrapper = dispatchEvent;
                break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }
    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
        }
    }
    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (!_enabled) return;
        dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
    }
    function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
        }
        if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
        } // We need to clear only if we didn't queue because
        // queueing is accumulative.
        clearIfContinuousEvent(domEventName, nativeEvent);
        if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while(blockedOn !== null){
                var fiber = getInstanceFromNode(blockedOn);
                if (fiber !== null) attemptSynchronousHydration(fiber);
                var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                if (nextBlockedOn === null) dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                if (nextBlockedOn === blockedOn) break;
                blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) nativeEvent.stopPropagation();
            return;
        } // This is not replayable so we'll invoke it but without a target,
        // in case the event system needs to trace it.
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    }
    var return_targetInst = null; // Returns a SuspenseInstance or Container if it's blocked.
    // The return_targetInst field above is conceptually part of the return value.
    function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        // TODO: Warn if _enabled is false.
        return_targetInst = null;
        var nativeEventTarget = getEventTarget(nativeEvent);
        var targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) // This tree has been unmounted already. Dispatch without a target.
            targetInst = null;
            else {
                var tag = nearestMounted.tag;
                if (tag === SuspenseComponent) {
                    var instance = getSuspenseInstanceFromFiber(nearestMounted);
                    if (instance !== null) // Queue the event to be replayed later. Abort dispatching since we
                    // don't want this event dispatched twice through the event system.
                    // TODO: If this is the first discrete event in the queue. Schedule an increased
                    // priority for this boundary.
                    return instance;
                     // This shouldn't happen, something went wrong but to avoid blocking
                    // the whole system, dispatch the event without a target.
                    // TODO: Warn.
                    targetInst = null;
                } else if (tag === HostRoot) {
                    var root = nearestMounted.stateNode;
                    if (isRootDehydrated(root)) // If this happens during a replay something went wrong and it might block
                    // the whole system.
                    return getContainerFromFiber(nearestMounted);
                    targetInst = null;
                } else if (nearestMounted !== targetInst) // If we get an event (ex: img onload) before committing that
                // component's mount, ignore it for now (that is, treat it as if it was an
                // event on a non-React tree). We might also consider queueing events and
                // dispatching them after the mount.
                targetInst = null;
            }
        }
        return_targetInst = targetInst; // We're not blocked on anything.
        return null;
    }
    function getEventPriority(domEventName) {
        switch(domEventName){
            // Used by SimpleEventPlugin:
            case 'cancel':
            case 'click':
            case 'close':
            case 'contextmenu':
            case 'copy':
            case 'cut':
            case 'auxclick':
            case 'dblclick':
            case 'dragend':
            case 'dragstart':
            case 'drop':
            case 'focusin':
            case 'focusout':
            case 'input':
            case 'invalid':
            case 'keydown':
            case 'keypress':
            case 'keyup':
            case 'mousedown':
            case 'mouseup':
            case 'paste':
            case 'pause':
            case 'play':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointerup':
            case 'ratechange':
            case 'reset':
            case 'resize':
            case 'seeked':
            case 'submit':
            case 'touchcancel':
            case 'touchend':
            case 'touchstart':
            case 'volumechange':
            // eslint-disable-next-line no-fallthrough
            case 'change':
            case 'selectionchange':
            case 'textInput':
            case 'compositionstart':
            case 'compositionend':
            case 'compositionupdate':
            // eslint-disable-next-line no-fallthrough
            case 'beforeblur':
            case 'afterblur':
            // eslint-disable-next-line no-fallthrough
            case 'beforeinput':
            case 'blur':
            case 'fullscreenchange':
            case 'focus':
            case 'hashchange':
            case 'popstate':
            case 'select':
            case 'selectstart':
                return DiscreteEventPriority;
            case 'drag':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'mousemove':
            case 'mouseout':
            case 'mouseover':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'scroll':
            case 'toggle':
            case 'touchmove':
            case 'wheel':
            // eslint-disable-next-line no-fallthrough
            case 'mouseenter':
            case 'mouseleave':
            case 'pointerenter':
            case 'pointerleave':
                return ContinuousEventPriority;
            case 'message':
                // We might be in the Scheduler callback.
                // Eventually this mechanism will be replaced by a check
                // of the current priority on the native scheduler.
                var schedulerPriority = getCurrentPriorityLevel();
                switch(schedulerPriority){
                    case ImmediatePriority:
                        return DiscreteEventPriority;
                    case UserBlockingPriority:
                        return ContinuousEventPriority;
                    case NormalPriority:
                    case LowPriority:
                        // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
                        return DefaultEventPriority;
                    case IdlePriority:
                        return IdleEventPriority;
                    default:
                        return DefaultEventPriority;
                }
            default:
                return DefaultEventPriority;
        }
    }
    function addEventBubbleListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, false);
        return listener;
    }
    function addEventCaptureListener(target, eventType, listener) {
        target.addEventListener(eventType, listener, true);
        return listener;
    }
    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            capture: true,
            passive: passive
        });
        return listener;
    }
    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        target.addEventListener(eventType, listener, {
            passive: passive
        });
        return listener;
    }
    /**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */ var root1 = null;
    var startText = null;
    var fallbackText = null;
    function initialize(nativeEventTarget) {
        root1 = nativeEventTarget;
        startText = getText();
        return true;
    }
    function reset() {
        root1 = null;
        startText = null;
        fallbackText = null;
    }
    function getData() {
        if (fallbackText) return fallbackText;
        var start;
        var startValue = startText;
        var startLength = startValue.length;
        var end;
        var endValue = getText();
        var endLength = endValue.length;
        for(start = 0; start < startLength; start++){
            if (startValue[start] !== endValue[start]) break;
        }
        var minEnd = startLength - start;
        for(end = 1; end <= minEnd; end++){
            if (startValue[startLength - end] !== endValue[endLength - end]) break;
        }
        var sliceTail = end > 1 ? 1 - end : undefined;
        fallbackText = endValue.slice(start, sliceTail);
        return fallbackText;
    }
    function getText() {
        if ('value' in root1) return root1.value;
        return root1.textContent;
    }
    /**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */ function getEventCharCode(nativeEvent) {
        var charCode;
        var keyCode = nativeEvent.keyCode;
        if ('charCode' in nativeEvent) {
            charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) charCode = 13;
        } else // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
         // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
        // report Enter as charCode 10 when ctrl is pressed.
        if (charCode === 10) charCode = 13;
         // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
        // Must not discard the (non-)printable Enter-key.
        if (charCode >= 32 || charCode === 13) return charCode;
        return 0;
    }
    function functionThatReturnsTrue() {
        return true;
    }
    function functionThatReturnsFalse() {
        return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.
    function createSyntheticEvent(Interface) {
        /**
   * Synthetic events are dispatched by event plugins, typically in response to a
   * top-level event delegation handler.
   *
   * These systems should generally use pooling to reduce the frequency of garbage
   * collection. The system should check `isPersistent` to determine whether the
   * event should be released into the pool after being dispatched. Users that
   * need a persisted event should invoke `persist`.
   *
   * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
   * normalizing browser quirks. Subclasses do not necessarily have to implement a
   * DOM interface; custom application-specific events can also subclass this.
   */ function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this._reactName = reactName;
            this._targetInst = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for(var _propName in Interface){
                if (!Interface.hasOwnProperty(_propName)) continue;
                var normalize = Interface[_propName];
                if (normalize) this[_propName] = normalize(nativeEvent);
                else this[_propName] = nativeEvent[_propName];
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) this.isDefaultPrevented = functionThatReturnsTrue;
            else this.isDefaultPrevented = functionThatReturnsFalse;
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
        }
        assign(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
                this.defaultPrevented = true;
                var event = this.nativeEvent;
                if (!event) return;
                if (event.preventDefault) event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.returnValue !== 'unknown') event.returnValue = false;
                this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
                var event = this.nativeEvent;
                if (!event) return;
                if (event.stopPropagation) event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
                else if (typeof event.cancelBubble !== 'unknown') // The ChangeEventPlugin registers a "propertychange" event for
                // IE. This event does not support bubbling or cancelling, and
                // any references to cancelBubble throw "Member not found".  A
                // typeof check of "unknown" circumvents this issue (and is also
                // IE specific).
                event.cancelBubble = true;
                this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
     * We release all dispatched `SyntheticEvent`s after each event loop, adding
     * them back into the pool. This allows a way to hold onto a reference that
     * won't be added back into the pool.
     */ persist: function() {},
            /**
     * Checks if this event should be released back into the pool.
     *
     * @return {boolean} True if this should not be released, false otherwise.
     */ isPersistent: functionThatReturnsTrue
        });
        return SyntheticBaseEvent;
    }
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
            return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);
    var UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
    });
    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;
    function updateMouseMovementPolyfillState(event) {
        if (event !== lastMouseEvent) {
            if (lastMouseEvent && event.type === 'mousemove') {
                lastMovementX = event.screenX - lastMouseEvent.screenX;
                lastMovementY = event.screenY - lastMouseEvent.screenY;
            } else {
                lastMovementX = 0;
                lastMovementY = 0;
            }
            lastMouseEvent = event;
        }
    }
    /**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
            if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
            return event.relatedTarget;
        },
        movementX: function(event) {
            if ('movementX' in event) return event.movementX;
            updateMouseMovementPolyfillState(event);
            return lastMovementX;
        },
        movementY: function(event) {
            if ('movementY' in event) return event.movementY;
             // Don't need to call updateMouseMovementPolyfillState() here
            // because it's guaranteed to have already run when movementX
            // was copied.
            return lastMovementY;
        }
    });
    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
    });
    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
    });
    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */ var AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */ var ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
            return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
        }
    });
    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */ var CompositionEventInterface = assign({}, EventInterface, {
        data: 0
    });
    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */ // Happens to share the same list for now.
    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var normalizeKey = {
        Esc: 'Escape',
        Spacebar: ' ',
        Left: 'ArrowLeft',
        Up: 'ArrowUp',
        Right: 'ArrowRight',
        Down: 'ArrowDown',
        Del: 'Delete',
        Win: 'OS',
        Menu: 'ContextMenu',
        Apps: 'ContextMenu',
        Scroll: 'ScrollLock',
        MozPrintableKey: 'Unidentified'
    };
    /**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */ var translateToKey = {
        '8': 'Backspace',
        '9': 'Tab',
        '12': 'Clear',
        '13': 'Enter',
        '16': 'Shift',
        '17': 'Control',
        '18': 'Alt',
        '19': 'Pause',
        '20': 'CapsLock',
        '27': 'Escape',
        '32': ' ',
        '33': 'PageUp',
        '34': 'PageDown',
        '35': 'End',
        '36': 'Home',
        '37': 'ArrowLeft',
        '38': 'ArrowUp',
        '39': 'ArrowRight',
        '40': 'ArrowDown',
        '45': 'Insert',
        '46': 'Delete',
        '112': 'F1',
        '113': 'F2',
        '114': 'F3',
        '115': 'F4',
        '116': 'F5',
        '117': 'F6',
        '118': 'F7',
        '119': 'F8',
        '120': 'F9',
        '121': 'F10',
        '122': 'F11',
        '123': 'F12',
        '144': 'NumLock',
        '145': 'ScrollLock',
        '224': 'Meta'
    };
    /**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */ function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.
            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== 'Unidentified') return key;
        } // Browser does not implement `key`, polyfill as much of it as we can.
        if (nativeEvent.type === 'keypress') {
            var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
        }
        if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
        return '';
    }
    /**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */ var modifierKeyToProp = {
        Alt: 'altKey',
        Control: 'ctrlKey',
        Meta: 'metaKey',
        Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.
    function modifierStateGetter(keyArg) {
        var syntheticEvent = this;
        var nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState) return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : false;
    }
    function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
    }
    /**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var KeyboardEventInterface = assign({}, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.
            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === 'keypress') return getEventCharCode(event);
            return 0;
        },
        keyCode: function(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.
            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        },
        which: function(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === 'keypress') return getEventCharCode(event);
            if (event.type === 'keydown' || event.type === 'keyup') return event.keyCode;
            return 0;
        }
    });
    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */ var PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
    });
    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */ var TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
    });
    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */ var TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
    });
    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */ var WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
            return 'deltaX' in event ? event.deltaX : 'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
        },
        deltaY: function(event) {
            return 'deltaY' in event ? event.deltaY : 'wheelDeltaY' in event ? -event.wheelDeltaY : 'wheelDelta' in event ? -event.wheelDelta : 0;
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
    });
    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [
        9,
        13,
        27,
        32
    ]; // Tab, Return, Esc, Space
    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;
    if (canUseDOM && 'documentMode' in document) documentMode = document.documentMode;
     // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.
    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.
    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
    function registerEvents() {
        registerTwoPhaseEvent('onBeforeInput', [
            'compositionend',
            'keypress',
            'textInput',
            'paste'
        ]);
        registerTwoPhaseEvent('onCompositionEnd', [
            'compositionend',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionStart', [
            'compositionstart',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
        registerTwoPhaseEvent('onCompositionUpdate', [
            'compositionupdate',
            'focusout',
            'keydown',
            'keypress',
            'keyup',
            'mousedown'
        ]);
    } // Track whether we've ever handled a keypress on the space key.
    var hasSpaceKeypress = false;
    /**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */ function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
 * Translate native top level events into event types.
 */ function getCompositionEventType(domEventName) {
        switch(domEventName){
            case 'compositionstart':
                return 'onCompositionStart';
            case 'compositionend':
                return 'onCompositionEnd';
            case 'compositionupdate':
                return 'onCompositionUpdate';
        }
    }
    /**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 */ function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
 * Does our fallback mode think that this event is the end of composition?
 */ function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch(domEventName){
            case 'keyup':
                // Command keys insert or clear IME input.
                return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case 'keydown':
                // Expect IME keyCode on each keydown. If we get any other
                // code we must have exited earlier.
                return nativeEvent.keyCode !== START_KEYCODE;
            case 'keypress':
            case 'mousedown':
            case 'focusout':
                // Events are not possible without cancelling IME.
                return true;
            default:
                return false;
        }
    }
    /**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */ function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        if (typeof detail === 'object' && 'data' in detail) return detail.data;
        return null;
    }
    /**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */ function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.
    var isComposing = false;
    /**
 * @return {?object} A SyntheticCompositionEvent.
 */ function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType;
        var fallbackData;
        if (canUseCompositionEvent) eventType = getCompositionEventType(domEventName);
        else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) eventType = 'onCompositionStart';
        } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) eventType = 'onCompositionEnd';
        if (!eventType) return null;
        if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === 'onCompositionStart') isComposing = initialize(nativeEventTarget);
            else if (eventType === 'onCompositionEnd') {
                if (isComposing) fallbackData = getData();
            }
        }
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
            var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            if (fallbackData) // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
            else {
                var customData = getDataFromCustomEvent(nativeEvent);
                if (customData !== null) event.data = customData;
            }
        }
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch(domEventName){
            case 'compositionend':
                return getDataFromCustomEvent(nativeEvent);
            case 'keypress':
                /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */ var which = nativeEvent.which;
                if (which !== SPACEBAR_CODE) return null;
                hasSpaceKeypress = true;
                return SPACEBAR_CHAR;
            case 'textInput':
                // Record the characters to be added to the DOM.
                var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
                // it at the keypress level and bail immediately. Android Chrome
                // doesn't give us keycodes, so we need to ignore it.
                if (chars === SPACEBAR_CHAR && hasSpaceKeypress) return null;
                return chars;
            default:
                // For other native event types, do nothing.
                return null;
        }
    }
    /**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 */ function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        // If we are currently composing (IME) and using a fallback to do so,
        // try to extract the composed characters from the fallback object.
        // If composition event is available, we extract a string only at
        // compositionevent, otherwise extract it at fallback events.
        if (isComposing) {
            if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                var chars = getData();
                reset();
                isComposing = false;
                return chars;
            }
            return null;
        }
        switch(domEventName){
            case 'paste':
                // If a paste event occurs after a keypress, throw out the input
                // chars. Paste events should not lead to BeforeInput events.
                return null;
            case 'keypress':
                /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */ if (!isKeypressCommand(nativeEvent)) {
                    // IE fires the `keypress` event when a user types an emoji via
                    // Touch keyboard of Windows.  In such a case, the `char` property
                    // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                    // is 2, the property `which` does not represent an emoji correctly.
                    // In such a case, we directly return the `char` property instead of
                    // using `which`.
                    if (nativeEvent.char && nativeEvent.char.length > 1) return nativeEvent.char;
                    else if (nativeEvent.which) return String.fromCharCode(nativeEvent.which);
                }
                return null;
            case 'compositionend':
                return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
                return null;
        }
    }
    /**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */ function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent) chars = getNativeBeforeInputChars(domEventName, nativeEvent);
        else chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
         // If no characters are being inserted, no BeforeInput event should
        // be fired.
        if (!chars) return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');
        if (listeners.length > 0) {
            var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
            event.data = chars;
        }
    }
    /**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */ function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */ var supportedInputTypes = {
        color: true,
        date: true,
        datetime: true,
        'datetime-local': true,
        email: true,
        month: true,
        number: true,
        password: true,
        range: true,
        search: true,
        tel: true,
        text: true,
        time: true,
        url: true,
        week: true
    };
    function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        if (nodeName === 'input') return !!supportedInputTypes[elem.type];
        if (nodeName === 'textarea') return true;
        return false;
    }
    /**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */ function isEventSupported(eventNameSuffix) {
        if (!canUseDOM) return false;
        var eventName = 'on' + eventNameSuffix;
        var isSupported = eventName in document;
        if (!isSupported) {
            var element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
        }
        return isSupported;
    }
    function registerEvents$1() {
        registerTwoPhaseEvent('onChange', [
            'change',
            'click',
            'focusin',
            'focusout',
            'input',
            'keydown',
            'keyup',
            'selectionchange'
        ]);
    }
    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        // Flag this event loop as needing state restore.
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, 'onChange');
        if (listeners.length > 0) {
            var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
            dispatchQueue.push({
                event: event,
                listeners: listeners
            });
        }
    }
    /**
 * For IE shims
 */ var activeElement = null;
    var activeElementInst = null;
    /**
 * SECTION: handle `change` event
 */ function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }
    function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
        // other events and have it go through ReactBrowserEventEmitter. Since it
        // doesn't, we manually listen for the events and so we have to enqueue and
        // process the abstract event manually.
        //
        // Batching is necessary here in order to ensure that all event handlers run
        // before the next rerender (including event handlers attached to ancestor
        // elements instead of directly on the input). Without this, controlled
        // components don't work properly in conjunction with event bubbling because
        // the component is rerendered and the value reverted before all the event
        // handlers can run. See https://github.com/facebook/react/issues/708.
        batchedUpdates(runEventInBatch, dispatchQueue);
    }
    function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === 'change') return targetInst;
    }
    /**
 * SECTION: handle `input` event
 */ var isInputEventSupported = false;
    if (canUseDOM) // IE9 claims to support the input event but fails to trigger it when
    // deleting text, so we ignore its input events.
    isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    /**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */ function startWatchingForValueChange(target, targetInst) {
        activeElement = target;
        activeElementInst = targetInst;
        activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */ function stopWatchingForValueChange() {
        if (!activeElement) return;
        activeElement.detachEvent('onpropertychange', handlePropertyChange);
        activeElement = null;
        activeElementInst = null;
    }
    /**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */ function handlePropertyChange(nativeEvent) {
        if (nativeEvent.propertyName !== 'value') return;
        if (getInstIfValueChanged(activeElementInst)) manualDispatchChangeEvent(nativeEvent);
    }
    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        if (domEventName === 'focusin') {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
        } else if (domEventName === 'focusout') stopWatchingForValueChange();
    } // For IE8 and IE9.
    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
    }
    /**
 * SECTION: handle `click` event
 */ function shouldUseClickEvent(elem) {
        // Use the `click` event to detect changes to checkbox and radio inputs.
        // This approach works across all browsers, whereas `change` does not fire
        // until `blur` in IE8.
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === 'click') return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === 'input' || domEventName === 'change') return getInstIfValueChanged(targetInst);
    }
    function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        if (!state || !state.controlled || node.type !== 'number') return;
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
    }
    /**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */ function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode)) getTargetInstFunc = getTargetInstForChangeEvent;
        else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
            }
        } else if (shouldUseClickEvent(targetNode)) getTargetInstFunc = getTargetInstForClickEvent;
        if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
                createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                return;
            }
        }
        if (handleEventFunc) handleEventFunc(domEventName, targetNode, targetInst);
         // When blurring, set the value attribute for number inputs
        if (domEventName === 'focusout') handleControlledInputBlur(targetNode);
    }
    function registerEvents$2() {
        registerDirectEvent('onMouseEnter', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onMouseLeave', [
            'mouseout',
            'mouseover'
        ]);
        registerDirectEvent('onPointerEnter', [
            'pointerout',
            'pointerover'
        ]);
        registerDirectEvent('onPointerLeave', [
            'pointerout',
            'pointerover'
        ]);
    }
    /**
 * For almost every interaction we care about, there will be both a top-level
 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
 * we do not extract duplicate events. However, moving the mouse into the
 * browser from outside will not fire a `mouseout` event. In this case, we use
 * the `mouseover` top-level event.
 */ function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
        var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';
        if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            // If this is an over event with a target, we might have already dispatched
            // the event in the out event of the other target. If this is replayed,
            // then it's because we couldn't dispatch against this target previously
            // so we have to do it now instead.
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
                // If the related node is managed by React, we can assume that we have
                // already dispatched the corresponding events during its mouseout.
                if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) return;
            }
        }
        if (!isOutEvent && !isOverEvent) // Must not be a mouse or pointer in or out - ignoring.
        return;
        var win; // TODO: why is this nullable in the types but we read from it?
        if (nativeEventTarget.window === nativeEventTarget) // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
        else {
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            var doc = nativeEventTarget.ownerDocument;
            if (doc) win = doc.defaultView || doc.parentWindow;
            else win = window;
        }
        var from;
        var to;
        if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
                var nearestMounted = getNearestMountedFiber(to);
                if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) to = null;
            }
        } else {
            // Moving to a node from outside the window.
            from = null;
            to = targetInst;
        }
        if (from === to) // Nothing pertains to our managed components.
        return;
        var SyntheticEventCtor = SyntheticMouseEvent;
        var leaveEventType = 'onMouseLeave';
        var enterEventType = 'onMouseEnter';
        var eventTypePrefix = 'mouse';
        if (domEventName === 'pointerout' || domEventName === 'pointerover') {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = 'onPointerLeave';
            enterEventType = 'onPointerEnter';
            eventTypePrefix = 'pointer';
        }
        var fromNode = from == null ? win : getNodeFromInstance(from);
        var toNode = to == null ? win : getNodeFromInstance(to);
        var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = null; // We should only process this nativeEvent if we are processing
        // the first ancestor. Next time, we will ignore the event.
        var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
        }
        accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */ function is(x, y) {
        return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
        ;
    }
    var objectIs = typeof Object.is === 'function' ? Object.is : is;
    /**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */ function shallowEqual(objA, objB) {
        if (objectIs(objA, objB)) return true;
        if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) return false;
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA.length !== keysB.length) return false;
         // Test for A's keys different from B.
        for(var i = 0; i < keysA.length; i++){
            var currentKey = keysA[i];
            if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) return false;
        }
        return true;
    }
    /**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */ function getLeafNode(node) {
        while(node && node.firstChild)node = node.firstChild;
        return node;
    }
    /**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */ function getSiblingNode(node) {
        while(node){
            if (node.nextSibling) return node.nextSibling;
            node = node.parentNode;
        }
    }
    /**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */ function getNodeForCharacterOffset(root, offset) {
        var node = getLeafNode(root);
        var nodeStart = 0;
        var nodeEnd = 0;
        while(node){
            if (node.nodeType === TEXT_NODE) {
                nodeEnd = nodeStart + node.textContent.length;
                if (nodeStart <= offset && nodeEnd >= offset) return {
                    node: node,
                    offset: offset - nodeStart
                };
                nodeStart = nodeEnd;
            }
            node = getLeafNode(getSiblingNode(node));
        }
    }
    /**
 * @param {DOMElement} outerNode
 * @return {?object}
 */ function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument;
        var win = ownerDocument && ownerDocument.defaultView || window;
        var selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0) return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
        // up/down buttons on an <input type="number">. Anonymous divs do not seem to
        // expose properties, triggering a "Permission denied error" if any of its
        // properties are accessed. The only seemingly possible way to avoid erroring
        // is to access a property that typically works for non-anonymous divs and
        // catch any error that may otherwise arise. See
        // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
        try {
            /* eslint-disable no-unused-expressions */ anchorNode.nodeType;
            focusNode.nodeType;
        /* eslint-enable no-unused-expressions */ } catch (e) {
            return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */ function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length = 0;
        var start = -1;
        var end = -1;
        var indexWithinAnchor = 0;
        var indexWithinFocus = 0;
        var node = outerNode;
        var parentNode = null;
        outer: while(true){
            var next = null;
            while(true){
                if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) start = length + anchorOffset;
                if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) end = length + focusOffset;
                if (node.nodeType === TEXT_NODE) length += node.nodeValue.length;
                if ((next = node.firstChild) === null) break;
                 // Moving from `node` to its first child `next`.
                parentNode = node;
                node = next;
            }
            while(true){
                if (node === outerNode) break outer;
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) start = length;
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) end = length;
                if ((next = node.nextSibling) !== null) break;
                node = parentNode;
                parentNode = node.parentNode;
            } // Moving from `node` to its next sibling `next`.
            node = next;
        }
        if (start === -1 || end === -1) // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
        return {
            start: start,
            end: end
        };
    }
    /**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */ function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document;
        var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
        // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
        // fails when pasting 100+ items)
        if (!win.getSelection) return;
        var selection = win.getSelection();
        var length = node.textContent.length;
        var start = Math.min(offsets.start, length);
        var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
        // Flip backward selections, so we can set with a single range.
        if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
        }
        var startMarker = getNodeForCharacterOffset(node, start);
        var endMarker = getNodeForCharacterOffset(node, end);
        if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start > end) {
                selection.addRange(range);
                selection.extend(endMarker.node, endMarker.offset);
            } else {
                range.setEnd(endMarker.node, endMarker.offset);
                selection.addRange(range);
            }
        }
    }
    function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
    }
    function containsNode(outerNode, innerNode) {
        if (!outerNode || !innerNode) return false;
        else if (outerNode === innerNode) return true;
        else if (isTextNode(outerNode)) return false;
        else if (isTextNode(innerNode)) return containsNode(outerNode, innerNode.parentNode);
        else if ('contains' in outerNode) return outerNode.contains(innerNode);
        else if (outerNode.compareDocumentPosition) return !!(outerNode.compareDocumentPosition(innerNode) & 16);
        else return false;
    }
    function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }
    function isSameOriginFrame(iframe) {
        try {
            // Accessing the contentDocument of a HTMLIframeElement can cause the browser
            // to throw, e.g. if it has a cross-origin src attribute.
            // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
            // iframe.contentDocument.defaultView;
            // A safety way is to access one of the cross origin properties: Window or Location
            // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
            // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
            return typeof iframe.contentWindow.location.href === 'string';
        } catch (err) {
            return false;
        }
    }
    function getActiveElementDeep() {
        var win = window;
        var element = getActiveElement();
        while(element instanceof win.HTMLIFrameElement){
            if (isSameOriginFrame(element)) win = element.contentWindow;
            else return element;
            element = getActiveElement(win.document);
        }
        return element;
    }
    /**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */ /**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */ function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }
    function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
            focusedElem: focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
    }
    /**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */ function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep();
        var priorFocusedElem = priorSelectionInformation.focusedElem;
        var priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) setSelection(priorFocusedElem, priorSelectionRange);
             // Focusing a node can change the scroll position, which is undesirable
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while(ancestor = ancestor.parentNode)if (ancestor.nodeType === ELEMENT_NODE) ancestors.push({
                element: ancestor,
                left: ancestor.scrollLeft,
                top: ancestor.scrollTop
            });
            if (typeof priorFocusedElem.focus === 'function') priorFocusedElem.focus();
            for(var i = 0; i < ancestors.length; i++){
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
            }
        }
    }
    /**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */ function getSelection(input) {
        var selection;
        if ('selectionStart' in input) // Modern browser with input or textarea.
        selection = {
            start: input.selectionStart,
            end: input.selectionEnd
        };
        else // Content editable or old IE textarea.
        selection = getOffsets(input);
        return selection || {
            start: 0,
            end: 0
        };
    }
    /**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */ function setSelection(input, offsets) {
        var start = offsets.start;
        var end = offsets.end;
        if (end === undefined) end = start;
        if ('selectionStart' in input) {
            input.selectionStart = start;
            input.selectionEnd = Math.min(end, input.value.length);
        } else setOffsets(input, offsets);
    }
    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
    function registerEvents$3() {
        registerTwoPhaseEvent('onSelect', [
            'focusout',
            'contextmenu',
            'dragend',
            'focusin',
            'keydown',
            'keyup',
            'mousedown',
            'mouseup',
            'selectionchange'
        ]);
    }
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 */ function getSelection$1(node) {
        if ('selectionStart' in node && hasSelectionCapabilities(node)) return {
            start: node.selectionStart,
            end: node.selectionEnd
        };
        else {
            var win = node.ownerDocument && node.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
                anchorNode: selection.anchorNode,
                anchorOffset: selection.anchorOffset,
                focusNode: selection.focusNode,
                focusOffset: selection.focusOffset
            };
        }
    }
    /**
 * Get document associated with the event target.
 */ function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */ function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        // Ensure we have the right element, and that the user is not dragging a
        // selection (this matches native `select` event behavior). In HTML5, select
        // fires only on input and textarea thus if there's no focused element we
        // won't dispatch.
        var doc = getEventTargetDocument(nativeEventTarget);
        if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) return;
         // Only fire when selection has actually changed.
        var currentSelection = getSelection$1(activeElement$1);
        if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');
            if (listeners.length > 0) {
                var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
                dispatchQueue.push({
                    event: event,
                    listeners: listeners
                });
                event.target = activeElement$1;
            }
        }
    }
    /**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */ function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch(domEventName){
            // Track the input node that has focus.
            case 'focusin':
                if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
                    activeElement$1 = targetNode;
                    activeElementInst$1 = targetInst;
                    lastSelection = null;
                }
                break;
            case 'focusout':
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
            // Don't fire the event while the user is dragging. This matches the
            // semantics of the native select event.
            case 'mousedown':
                mouseDown = true;
                break;
            case 'contextmenu':
            case 'mouseup':
            case 'dragend':
                mouseDown = false;
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                break;
            // Chrome and IE fire non-standard event when selection is changed (and
            // sometimes when it hasn't). IE's event fires out of order with respect
            // to key and input events on deletion, so we discard it.
            //
            // Firefox doesn't support selectionchange, so check selection status
            // after each key entry. The selection changes after keydown and before
            // keyup, but we check on keydown as well in the case of holding down a
            // key, when multiple keydown events are fired but only one keyup is.
            // This is also our approach for IE handling, for the reason above.
            case 'selectionchange':
                if (skipSelectionChangeEvent) break;
            // falls through
            case 'keydown':
            case 'keyup':
                constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
    }
    /**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */ function makePrefixMap(styleProp, eventName) {
        var prefixes = {};
        prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
        prefixes['Webkit' + styleProp] = 'webkit' + eventName;
        prefixes['Moz' + styleProp] = 'moz' + eventName;
        return prefixes;
    }
    /**
 * A list of event names to a configurable list of vendor prefixes.
 */ var vendorPrefixes = {
        animationend: makePrefixMap('Animation', 'AnimationEnd'),
        animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
        animationstart: makePrefixMap('Animation', 'AnimationStart'),
        transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
 * Event names that have already been detected and prefixed (if applicable).
 */ var prefixedEventNames = {};
    /**
 * Element to check for prefixes on.
 */ var style1 = {};
    /**
 * Bootstrap if a DOM exists.
 */ if (canUseDOM) {
        style1 = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
        // the un-prefixed "animation" and "transition" properties are defined on the
        // style object but the events that fire will still be prefixed, so we need
        // to check if the un-prefixed events are usable, and if not remove them from the map.
        if (!('AnimationEvent' in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
        } // Same as above
        if (!('TransitionEvent' in window)) delete vendorPrefixes.transitionend.transition;
    }
    /**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */ function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
        else if (!vendorPrefixes[eventName]) return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for(var styleProp in prefixMap){
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style1) return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
        return eventName;
    }
    var ANIMATION_END = getVendorPrefixedEventName('animationend');
    var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
    var ANIMATION_START = getVendorPrefixedEventName('animationstart');
    var TRANSITION_END = getVendorPrefixedEventName('transitionend');
    var topLevelEventsToReactNames = new Map(); // NOTE: Capitalization is important in this list!
    //
    // E.g. it needs "pointerDown", not "pointerdown".
    // This is because we derive both React name ("onPointerDown")
    // and DOM name ("pointerdown") from the same list.
    //
    // Exceptions that don't match this convention are listed separately.
    //
    // prettier-ignore
    var simpleEventPluginEvents = [
        'abort',
        'auxClick',
        'cancel',
        'canPlay',
        'canPlayThrough',
        'click',
        'close',
        'contextMenu',
        'copy',
        'cut',
        'drag',
        'dragEnd',
        'dragEnter',
        'dragExit',
        'dragLeave',
        'dragOver',
        'dragStart',
        'drop',
        'durationChange',
        'emptied',
        'encrypted',
        'ended',
        'error',
        'gotPointerCapture',
        'input',
        'invalid',
        'keyDown',
        'keyPress',
        'keyUp',
        'load',
        'loadedData',
        'loadedMetadata',
        'loadStart',
        'lostPointerCapture',
        'mouseDown',
        'mouseMove',
        'mouseOut',
        'mouseOver',
        'mouseUp',
        'paste',
        'pause',
        'play',
        'playing',
        'pointerCancel',
        'pointerDown',
        'pointerMove',
        'pointerOut',
        'pointerOver',
        'pointerUp',
        'progress',
        'rateChange',
        'reset',
        'resize',
        'seeked',
        'seeking',
        'stalled',
        'submit',
        'suspend',
        'timeUpdate',
        'touchCancel',
        'touchEnd',
        'touchStart',
        'volumeChange',
        'scroll',
        'toggle',
        'touchMove',
        'waiting',
        'wheel'
    ];
    function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName);
        registerTwoPhaseEvent(reactName, [
            domEventName
        ]);
    }
    function registerSimpleEvents() {
        for(var i = 0; i < simpleEventPluginEvents.length; i++){
            var eventName = simpleEventPluginEvents[i];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, 'on' + capitalizedEvent);
        } // Special cases where event names don't match.
        registerSimpleEvent(ANIMATION_END, 'onAnimationEnd');
        registerSimpleEvent(ANIMATION_ITERATION, 'onAnimationIteration');
        registerSimpleEvent(ANIMATION_START, 'onAnimationStart');
        registerSimpleEvent('dblclick', 'onDoubleClick');
        registerSimpleEvent('focusin', 'onFocus');
        registerSimpleEvent('focusout', 'onBlur');
        registerSimpleEvent(TRANSITION_END, 'onTransitionEnd');
    }
    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName === undefined) return;
        var SyntheticEventCtor = SyntheticEvent;
        var reactEventType = domEventName;
        switch(domEventName){
            case 'keypress':
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode(nativeEvent) === 0) return;
            /* falls through */ case 'keydown':
            case 'keyup':
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
            case 'focusin':
                reactEventType = 'focus';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'focusout':
                reactEventType = 'blur';
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'beforeblur':
            case 'afterblur':
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
            case 'click':
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) return;
            /* falls through */ case 'auxclick':
            case 'dblclick':
            case 'mousedown':
            case 'mousemove':
            case 'mouseup':
            /* falls through */ case 'mouseout':
            case 'mouseover':
            case 'contextmenu':
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
            case 'drag':
            case 'dragend':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'dragstart':
            case 'drop':
                SyntheticEventCtor = SyntheticDragEvent;
                break;
            case 'touchcancel':
            case 'touchend':
            case 'touchmove':
            case 'touchstart':
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
            case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
            case 'scroll':
                SyntheticEventCtor = SyntheticUIEvent;
                break;
            case 'wheel':
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
            case 'copy':
            case 'cut':
            case 'paste':
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'pointerup':
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
        }
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === 'scroll';
        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
        if (_listeners.length > 0) {
            // Intentionally create event lazily.
            var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
                event: _event,
                listeners: _listeners
            });
        }
    }
    // TODO: remove top-level side effect.
    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();
    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        // TODO: we should remove the concept of a "SimpleEventPlugin".
        // This is the basic functionality of the event system. All
        // the other plugins are essentially polyfills. So the plugin
        // should probably be inlined somewhere and have its logic
        // be core the to event system. This would potentially allow
        // us to ship builds of React without the polyfilled plugins below.
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
        // event's native "bubble" phase, which means that we're
        // not in the capture phase. That's because we emulate
        // the capture phase here still. This is a trade-off,
        // because in an ideal world we would not emulate and use
        // the phases properly, like we do with the SimpleEvent
        // plugin. However, the plugins below either expect
        // emulation (EnterLeave) or use state localized to that
        // plugin (BeforeInput, Change, Select). The state in
        // these modules complicates things, as you'll essentially
        // get the case where the capture phase event might change
        // state, only for the following bubble event to come in
        // later and not trigger anything as the state now
        // invalidates the heuristics of the event plugin. We
        // could alter all these plugins to work in such ways, but
        // that might cause other unknown side-effects that we
        // can't foresee right now.
        if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
    } // List of events that need to be individually attached to media elements.
    var mediaEventTypes = [
        'abort',
        'canplay',
        'canplaythrough',
        'durationchange',
        'emptied',
        'encrypted',
        'ended',
        'error',
        'loadeddata',
        'loadedmetadata',
        'loadstart',
        'pause',
        'play',
        'playing',
        'progress',
        'ratechange',
        'resize',
        'seeked',
        'seeking',
        'stalled',
        'suspend',
        'timeupdate',
        'volumechange',
        'waiting'
    ]; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.
    var nonDelegatedEvents = new Set([
        'cancel',
        'close',
        'invalid',
        'load',
        'scroll',
        'toggle'
    ].concat(mediaEventTypes));
    function executeDispatch(event, listener, currentTarget) {
        var type = event.type || 'unknown-event';
        event.currentTarget = currentTarget;
        invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
        event.currentTarget = null;
    }
    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase) for(var i = dispatchListeners.length - 1; i >= 0; i--){
            var _dispatchListeners$i = dispatchListeners[i], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, listener, currentTarget);
            previousInstance = instance;
        }
        else for(var _i = 0; _i < dispatchListeners.length; _i++){
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped()) return;
            executeDispatch(event, _listener, _currentTarget);
            previousInstance = _instance;
        }
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
        for(var i = 0; i < dispatchQueue.length; i++){
            var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
        } // This would be a good time to rethrow if any of the event handlers threw.
        rethrowCaughtError();
    }
    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget(nativeEvent);
        var dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        processDispatchQueue(dispatchQueue, eventSystemFlags);
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
        if (!nonDelegatedEvents.has(domEventName)) error1('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var isCapturePhaseListener = false;
        var listenerSet = getEventListenerSet(targetElement);
        var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
        }
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) error1('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        if (isCapturePhaseListener) eventSystemFlags |= IS_CAPTURE_PHASE;
        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
    } // This is only used by createEventHandle when the
    var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);
    function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
                // We handle selectionchange separately because it
                // doesn't bubble and needs to be on the document.
                if (domEventName !== 'selectionchange') {
                    if (!nonDelegatedEvents.has(domEventName)) listenToNativeEvent(domEventName, false, rootContainerElement);
                    listenToNativeEvent(domEventName, true, rootContainerElement);
                }
            });
            var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument !== null) // The selectionchange event also needs deduplication
            // but it is attached to the document.
            {
                if (!ownerDocument[listeningMarker]) {
                    ownerDocument[listeningMarker] = true;
                    listenToNativeEvent('selectionchange', false, ownerDocument);
                }
            }
        }
    }
    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
        // active and not passive.
        var isPassiveListener = undefined;
        if (passiveBrowserEventsSupported) // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        {
            if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') isPassiveListener = true;
        }
        var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we
        if (isCapturePhaseListener) {
            if (isPassiveListener !== undefined) unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            else unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        } else if (isPassiveListener !== undefined) unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        else unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
    }
    function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }
    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we
            if (targetInst !== null) {
                // The below logic attempts to work out if we need to change
                // the target fiber to a different ancestor. We had similar logic
                // in the legacy event system, except the big difference between
                // systems is that the modern event system now has an event listener
                // attached to each React Root and React Portal Root. Together,
                // the DOM nodes representing these roots are the "rootContainer".
                // To figure out which ancestor instance we should use, we traverse
                // up the fiber tree from the target instance and attempt to find
                // root boundaries that match that of our current "rootContainer".
                // If we find that "rootContainer", we find the parent fiber
                // sub-tree for that root and make that our ancestor instance.
                var node = targetInst;
                mainLoop: while(true){
                    if (node === null) return;
                    var nodeTag = node.tag;
                    if (nodeTag === HostRoot || nodeTag === HostPortal) {
                        var container = node.stateNode.containerInfo;
                        if (isMatchingRootContainer(container, targetContainerNode)) break;
                        if (nodeTag === HostPortal) {
                            // The target is a portal, but it's not the rootContainer we're looking for.
                            // Normally portals handle their own events all the way down to the root.
                            // So we should be able to stop now. However, we don't know if this portal
                            // was part of *our* root.
                            var grandNode = node.return;
                            while(grandNode !== null){
                                var grandTag = grandNode.tag;
                                if (grandTag === HostRoot || grandTag === HostPortal) {
                                    var grandContainer = grandNode.stateNode.containerInfo;
                                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) // This is the rootContainer we're looking for and we found it as
                                    // a parent of the Portal. That means we can ignore it because the
                                    // Portal will bubble through to us.
                                    return;
                                }
                                grandNode = grandNode.return;
                            }
                        } // Now we need to find it's corresponding host fiber in the other
                        // tree. To do this we can use getClosestInstanceFromNode, but we
                        // need to validate that the fiber is a host instance, otherwise
                        // we need to traverse up through the DOM till we find the correct
                        // node that is from the other tree.
                        while(container !== null){
                            var parentNode = getClosestInstanceFromNode(container);
                            if (parentNode === null) return;
                            var parentTag = parentNode.tag;
                            if (parentTag === HostComponent || parentTag === HostText) {
                                node = ancestorInst = parentNode;
                                continue mainLoop;
                            }
                            container = container.parentNode;
                        }
                    }
                    node = node.return;
                }
            }
        }
        batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
    }
    function createDispatchListener(instance, listener, currentTarget) {
        return {
            instance: instance,
            listener: listener,
            currentTarget: currentTarget
        };
    }
    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
        var captureName = reactName !== null ? reactName + 'Capture' : null;
        var reactEventName = inCapturePhase ? captureName : reactName;
        var listeners = [];
        var instance = targetFiber;
        var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                lastHostComponent = stateNode; // createEventHandle listeners
                if (reactEventName !== null) {
                    var listener = getListener(instance, reactEventName);
                    if (listener != null) listeners.push(createDispatchListener(instance, listener, lastHostComponent));
                }
            } // If we are only accumulating events for the target, then we don't
            // continue to propagate through the React fiber tree to find other
            // listeners.
            if (accumulateTargetOnly) break;
             // If we are processing the onBeforeBlur event, then we need to take
            instance = instance.return;
        }
        return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
        var captureName = reactName + 'Capture';
        var listeners = [];
        var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.
        while(instance !== null){
            var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                var captureListener = getListener(instance, captureName);
                if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                var bubbleListener = getListener(instance, reactName);
                if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
            instance = instance.return;
        }
        return listeners;
    }
    function getParent(inst) {
        if (inst === null) return null;
        do inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        while (inst && inst.tag !== HostComponent)
        if (inst) return inst;
        return null;
    }
    /**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */ function getLowestCommonAncestor(instA, instB) {
        var nodeA = instA;
        var nodeB = instB;
        var depthA = 0;
        for(var tempA = nodeA; tempA; tempA = getParent(tempA))depthA++;
        var depthB = 0;
        for(var tempB = nodeB; tempB; tempB = getParent(tempB))depthB++;
         // If A is deeper, crawl up.
        while(depthA - depthB > 0){
            nodeA = getParent(nodeA);
            depthA--;
        } // If B is deeper, crawl up.
        while(depthB - depthA > 0){
            nodeB = getParent(nodeB);
            depthB--;
        } // Walk in lockstep until we find a match.
        var depth = depthA;
        while(depth--){
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) return nodeA;
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
        }
        return null;
    }
    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        var registrationName = event._reactName;
        var listeners = [];
        var instance = target;
        while(instance !== null){
            if (instance === common) break;
            var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) break;
            if (tag === HostComponent && stateNode !== null) {
                var currentTarget = stateNode;
                if (inCapturePhase) {
                    var captureListener = getListener(instance, registrationName);
                    if (captureListener != null) listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
                } else if (!inCapturePhase) {
                    var bubbleListener = getListener(instance, registrationName);
                    if (bubbleListener != null) listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
                }
            }
            instance = instance.return;
        }
        if (listeners.length !== 0) dispatchQueue.push({
            event: event,
            listeners: listeners
        });
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.
    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        if (from !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
        if (to !== null && enterEvent !== null) accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
    }
    function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? 'capture' : 'bubble');
    }
    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE = 'style';
    var HTML$1 = '__html';
    var warnedUnknownTags;
    var validatePropertiesInDevelopment;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeHTML;
    warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
    };
    validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
            registrationNameDependencies: registrationNameDependencies1,
            possibleRegistrationNames: possibleRegistrationNames1
        });
    }; // IE 11 parses & normalizes the style attribute as opposed to other
    // browsers. It adds spaces and sorts the properties in some
    // non-alphabetical order. Handling that would require sorting CSS
    // properties in the client & server versions or applying
    // `expectedStyle` to a temporary DOM node to read its `style` attribute
    // normalized. Since it only affects IE, we're skipping style warnings
    // in that browser completely in favor of doing all that work.
    // See https://github.com/facebook/react/issues/11807
    canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
    warnForPropDifference = function(propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) return;
        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
        if (normalizedServerValue === normalizedClientValue) return;
        didWarnInvalidHydration = true;
        error1('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
    };
    warnForExtraAttributes = function(attributeNames) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function(name) {
            names.push(name);
        });
        error1('Extra attributes from the server: %s', names);
    };
    warnForInvalidEventListener = function(registrationName, listener) {
        if (listener === false) error1("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
        else error1('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }; // Parse the HTML and read it back to normalize the HTML string so that it
    // can be used for comparison.
    normalizeHTML = function(parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
    };
    // It also can turn \u0000 into \uFFFD inside attributes.
    // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
    // If we have a mismatch, it might be caused by that.
    // We will still patch up in this case but not fire the warning.
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
    var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
    function normalizeMarkupForTextOrAttribute(markup) {
        checkHtmlStringCoercion(markup);
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
    }
    function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText === normalizedClientText) return;
        if (shouldWarnDev) {
            if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error1('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
            }
        }
        if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) // In concurrent roots, we throw when there's a text mismatch and revert to
        // client rendering, up to the nearest Suspense boundary.
        throw new Error('Text content does not match server-rendered HTML.');
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }
    function noop() {}
    function trapClickOnNonInteractiveElement(node) {
        // Mobile Safari does not fire properly bubble click events on
        // non-interactive elements, which means delegated click listeners do not
        // fire. The workaround for this bug involves attaching an empty click
        // listener on the target node.
        // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
        // Just set it using the onclick property so that we don't have to manage any
        // bookkeeping for it. Not sure if we need to clear it when the listener is
        // removed.
        // TODO: Only do this for the relevant Safaris maybe?
        node.onclick = noop;
    }
    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for(var propKey in nextProps){
            if (!nextProps.hasOwnProperty(propKey)) continue;
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                if (nextHtml != null) setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string') {
                    // Avoid setting initial textContent when the text is empty. In IE11 setting
                    // textContent on a <textarea> will cause the placeholder to not
                    // show within the <textarea> until it has been focused and blurred again.
                    // https://github.com/facebook/react/issues/6731#issuecomment-254874553
                    var canSetTextContent = tag !== 'textarea' || nextProp !== '';
                    if (canSetTextContent) setTextContent(domElement, nextProp);
                } else if (typeof nextProp === 'number') setTextContent(domElement, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (nextProp != null) setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
    }
    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        // TODO: Handle wasCustomComponentTag
        for(var i = 0; i < updatePayload.length; i += 2){
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) setValueForStyles(domElement, propValue);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) setInnerHTML(domElement, propValue);
            else if (propKey === CHILDREN) setTextContent(domElement, propValue);
            else setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
    }
    function createElement(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
        // tags get no namespace.
        var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
        var domElement;
        var namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE) namespaceURI = getIntrinsicNamespace(type);
        if (namespaceURI === HTML_NAMESPACE) {
            isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
            // allow <SVG> or <mATH>.
            if (!isCustomComponentTag && type !== type.toLowerCase()) error1("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
            if (type === 'script') {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement('div');
                div.innerHTML = "<script></script>"; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
            } else if (typeof props.is === 'string') // $FlowIssue `createElement` should be updated for Web Components
            domElement = ownerDocument.createElement(type, {
                is: props.is
            });
            else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
                // attributes on `select`s needs to be added before `option`s are inserted.
                // This prevents:
                // - a bug where the `select` does not scroll to the correct option because singular
                //  `select` elements automatically pick the first item #13222
                // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
                // See https://github.com/facebook/react/issues/13222
                // and https://github.com/facebook/react/issues/14239
                if (type === 'select') {
                    var node = domElement;
                    if (props.multiple) node.multiple = true;
                    else if (props.size) // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
                    // it is possible that no option is selected.
                    //
                    // This is only necessary when a select in "single selection mode".
                    node.size = props.size;
                }
            }
        } else domElement = ownerDocument.createElementNS(namespaceURI, type);
        if (namespaceURI === HTML_NAMESPACE) {
            if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !hasOwnProperty.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error1("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
            }
        }
        return domElement;
    }
    function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }
    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                props = rawProps;
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                props = rawProps;
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                props = rawProps;
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                props = rawProps;
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                props = rawProps;
                break;
            case 'input':
                initWrapperState(domElement, rawProps);
                props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                props = rawProps;
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps);
                props = getHostProps$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps);
                props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            default:
                props = rawProps;
        }
        assertValidProps(tag, props);
        setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, false);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'option':
                postMountWrapper$1(domElement, rawProps);
                break;
            case 'select':
                postMountWrapper$2(domElement, rawProps);
                break;
            default:
                if (typeof props.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
    } // Calculate the diff between the two objects.
    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null;
        var lastProps;
        var nextProps;
        switch(tag){
            case 'input':
                lastProps = getHostProps(domElement, lastRawProps);
                nextProps = getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'select':
                lastProps = getHostProps$1(domElement, lastRawProps);
                nextProps = getHostProps$1(domElement, nextRawProps);
                updatePayload = [];
                break;
            case 'textarea':
                lastProps = getHostProps$2(domElement, lastRawProps);
                nextProps = getHostProps$2(domElement, nextRawProps);
                updatePayload = [];
                break;
            default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        assertValidProps(tag, nextProps);
        var propKey;
        var styleName;
        var styleUpdates = null;
        for(propKey in lastProps){
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) continue;
            if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for(styleName in lastStyle)if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) styleUpdates = {};
                    styleUpdates[styleName] = '';
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (propKey === AUTOFOCUS) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) // This is a special case. If any listener updates we need to ensure
            // that the "current" fiber pointer gets updated so we need a commit
            // to update this element.
            {
                if (!updatePayload) updatePayload = [];
            } else // For all other deleted properties we add it to the queue. We use
            // the allowed property list in the commit phase instead.
            (updatePayload = updatePayload || []).push(propKey, null);
        }
        for(propKey in nextProps){
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : undefined;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) continue;
            if (propKey === STYLE) {
                if (nextProp) // Freeze the next style object so that we can assume it won't be
                // mutated. We have already warned for this in the past.
                Object.freeze(nextProp);
                if (lastProp) {
                    // Unset styles on `lastProp` but not on `nextProp`.
                    for(styleName in lastProp)if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = '';
                    }
                     // Update styles that changed since `lastProp`.
                    for(styleName in nextProp)if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                        if (!styleUpdates) styleUpdates = {};
                        styleUpdates[styleName] = nextProp[styleName];
                    }
                } else {
                    // Relies on `updateStylesByID` not mutating `styleUpdates`.
                    if (!styleUpdates) {
                        if (!updatePayload) updatePayload = [];
                        updatePayload.push(propKey, styleUpdates);
                    }
                    styleUpdates = nextProp;
                }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                var lastHtml = lastProp ? lastProp[HTML$1] : undefined;
                if (nextHtml != null) {
                    if (lastHtml !== nextHtml) (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
            } else if (propKey === CHILDREN) {
                if (typeof nextProp === 'string' || typeof nextProp === 'number') (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;
            else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    // We eagerly listen to this even though we haven't committed yet.
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
                if (!updatePayload && lastProp !== nextProp) // This is a special case. If any listener updates we need to ensure
                // that the "current" props pointer gets updated so we need a commit
                // to update this element.
                updatePayload = [];
            } else // For any other property we always add it to the queue and then we
            // filter it out using the allowed property list during the commit.
            (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
        if (styleUpdates) {
            validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
        }
        return updatePayload;
    } // Apply the diff.
    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        // Update checked *before* name.
        // In the middle of an update, it is possible to have multiple checked.
        // When a checked radio tries to change name, browser makes another radio's checked false.
        if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
        var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.
        updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
        // changed.
        switch(tag){
            case 'input':
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                updateWrapper(domElement, nextRawProps);
                break;
            case 'textarea':
                updateWrapper$1(domElement, nextRawProps);
                break;
            case 'select':
                // <select> value update needs to occur after <option> children
                // reconciliation
                postUpdateWrapper(domElement, nextRawProps);
                break;
        }
    }
    function getPossibleStandardName(propName) {
        var lowerCasedName = propName.toLowerCase();
        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) return null;
        return possibleStandardNames[lowerCasedName] || null;
    }
    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
        var isCustomComponentTag;
        var extraAttributeNames;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        switch(tag){
            case 'dialog':
                listenToNonDelegatedEvent('cancel', domElement);
                listenToNonDelegatedEvent('close', domElement);
                break;
            case 'iframe':
            case 'object':
            case 'embed':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the load event.
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'video':
            case 'audio':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for all the media events.
                for(var i = 0; i < mediaEventTypes.length; i++)listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                break;
            case 'source':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the error event.
                listenToNonDelegatedEvent('error', domElement);
                break;
            case 'img':
            case 'image':
            case 'link':
                // We listen to these events in case to ensure emulated bubble
                // listeners still fire for error and load events.
                listenToNonDelegatedEvent('error', domElement);
                listenToNonDelegatedEvent('load', domElement);
                break;
            case 'details':
                // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the toggle event.
                listenToNonDelegatedEvent('toggle', domElement);
                break;
            case 'input':
                initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'option':
                validateProps(domElement, rawProps);
                break;
            case 'select':
                initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
            case 'textarea':
                initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
                // listeners still fire for the invalid event.
                listenToNonDelegatedEvent('invalid', domElement);
                break;
        }
        assertValidProps(tag, rawProps);
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;
        for(var _i = 0; _i < attributes.length; _i++){
            var name = attributes[_i].name.toLowerCase();
            switch(name){
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                case 'value':
                    break;
                case 'checked':
                    break;
                case 'selected':
                    break;
                default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[_i].name);
            }
        }
        var updatePayload = null;
        for(var propKey in rawProps){
            if (!rawProps.hasOwnProperty(propKey)) continue;
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === 'string') {
                    if (domElement.textContent !== nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            nextProp
                        ];
                    }
                } else if (typeof nextProp === 'number') {
                    if (domElement.textContent !== '' + nextProp) {
                        if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                        updatePayload = [
                            CHILDREN,
                            '' + nextProp
                        ];
                    }
                }
            } else if (registrationNameDependencies1.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                    if (typeof nextProp !== 'function') warnForInvalidEventListener(propKey, nextProp);
                    if (propKey === 'onScroll') listenToNonDelegatedEvent('scroll', domElement);
                }
            } else if (shouldWarnDev && true && typeof isCustomComponentTag === 'boolean') {
                // Validate that the properties correspond to their expected values.
                var serverValue = void 0;
                var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
                if (rawProps[SUPPRESS_HYDRATION_WARNING] === true) ;
                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // TODO: Only ignore them on controlled tags.
                propKey === 'value' || propKey === 'checked' || propKey === 'selected') ;
                else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML;
                    var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
                    if (nextHtml != null) {
                        var expectedHTML = normalizeHTML(domElement, nextHtml);
                        if (expectedHTML !== serverHTML) warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                } else if (propKey === STYLE) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey);
                    if (canDiffStyleForHydrationWarning) {
                        var expectedStyle = createDangerousStringForStyles(nextProp);
                        serverValue = domElement.getAttribute('style');
                        if (expectedStyle !== serverValue) warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames.delete(propKey.toLowerCase());
                    serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    if (nextProp !== serverValue) warnForPropDifference(propKey, serverValue, nextProp);
                } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = false;
                    if (propertyInfo !== null) {
                        // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propertyInfo.attributeName);
                        serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    } else {
                        var ownNamespace = parentNamespace;
                        if (ownNamespace === HTML_NAMESPACE) ownNamespace = getIntrinsicNamespace(tag);
                        if (ownNamespace === HTML_NAMESPACE) // $FlowFixMe - Should be inferred as not undefined.
                        extraAttributeNames.delete(propKey.toLowerCase());
                        else {
                            var standardName = getPossibleStandardName(propKey);
                            if (standardName !== null && standardName !== propKey) {
                                // If an SVG prop is supplied with bad casing, it will
                                // be successfully parsed from HTML, but will produce a mismatch
                                // (and would be incorrectly rendered on the client).
                                // However, we already warn about bad casing elsewhere.
                                // So we'll skip the misleading extra mismatch warning in this case.
                                isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.
                                extraAttributeNames.delete(standardName);
                            } // $FlowFixMe - Should be inferred as not undefined.
                            extraAttributeNames.delete(propKey);
                        }
                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    var dontWarnCustomElement = enableCustomElementPropertySupport;
                    if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) warnForPropDifference(propKey, serverValue, nextProp);
                }
            }
        }
        if (shouldWarnDev) {
            if (extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true) // $FlowFixMe - Should be inferred as not undefined.
            warnForExtraAttributes(extraAttributeNames);
        }
        switch(tag){
            case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper(domElement, rawProps, true);
                break;
            case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                track(domElement);
                postMountWrapper$3(domElement);
                break;
            case 'select':
            case 'option':
                break;
            default:
                if (typeof rawProps.onClick === 'function') // TODO: This cast may not be sound for SVG, MathML or custom elements.
                trapClickOnNonInteractiveElement(domElement);
                break;
        }
        return updatePayload;
    }
    function diffHydratedText(textNode, text, isConcurrentMode) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
    }
    function warnForDeletedHydratableElement(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
    }
    function warnForDeletedHydratableText(parentNode, child) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedElement(parentNode, tag, props) {
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
    }
    function warnForInsertedHydratedText(parentNode, text) {
        if (text === '') // We expect to insert empty text nodes since they're not represented in
        // the HTML.
        // TODO: Remove this special case if we can just avoid inserting empty
        // text nodes.
        return;
        if (didWarnInvalidHydration) return;
        didWarnInvalidHydration = true;
        error1('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
    }
    function restoreControlledState$3(domElement, tag, props) {
        switch(tag){
            case 'input':
                restoreControlledState(domElement, props);
                return;
            case 'textarea':
                restoreControlledState$2(domElement, props);
                return;
            case 'select':
                restoreControlledState$1(domElement, props);
                return;
        }
    }
    var validateDOMNesting = function() {};
    var updatedAncestorInfo = function() {};
    // This validation code was written based on the HTML5 parsing spec:
    // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    //
    // Note: this does not catch all invalid nesting, nor does it try to (as it's
    // not clear what practical benefit doing so provides); instead, we warn only
    // for cases where the parser will give a parse tree differing from what React
    // intended. For example, <b><div></div></b> is invalid but we don't warn
    // because it still parses correctly; we do warn for other cases like nested
    // <p> tags where the beginning of the second element implicitly closes the
    // first, causing a confusing mess.
    // https://html.spec.whatwg.org/multipage/syntax.html#special
    var specialTags = [
        'address',
        'applet',
        'area',
        'article',
        'aside',
        'base',
        'basefont',
        'bgsound',
        'blockquote',
        'body',
        'br',
        'button',
        'caption',
        'center',
        'col',
        'colgroup',
        'dd',
        'details',
        'dir',
        'div',
        'dl',
        'dt',
        'embed',
        'fieldset',
        'figcaption',
        'figure',
        'footer',
        'form',
        'frame',
        'frameset',
        'h1',
        'h2',
        'h3',
        'h4',
        'h5',
        'h6',
        'head',
        'header',
        'hgroup',
        'hr',
        'html',
        'iframe',
        'img',
        'input',
        'isindex',
        'li',
        'link',
        'listing',
        'main',
        'marquee',
        'menu',
        'menuitem',
        'meta',
        'nav',
        'noembed',
        'noframes',
        'noscript',
        'object',
        'ol',
        'p',
        'param',
        'plaintext',
        'pre',
        'script',
        'section',
        'select',
        'source',
        'style',
        'summary',
        'table',
        'tbody',
        'td',
        'template',
        'textarea',
        'tfoot',
        'th',
        'thead',
        'title',
        'tr',
        'track',
        'ul',
        'wbr',
        'xmp'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
    var inScopeTags = [
        'applet',
        'caption',
        'html',
        'table',
        'td',
        'th',
        'marquee',
        'object',
        'template',
        // TODO: Distinguish by namespace here -- for <title>, including it here
        // errs on the side of fewer warnings
        'foreignObject',
        'desc',
        'title'
    ]; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
    var buttonScopeTags = inScopeTags.concat([
        'button'
    ]); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
    var impliedEndTags = [
        'dd',
        'dt',
        'li',
        'option',
        'optgroup',
        'p',
        'rp',
        'rt'
    ];
    var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
    };
    updatedAncestorInfo = function(oldInfo, tag) {
        var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
        var info = {
            tag: tag
        };
        if (inScopeTags.indexOf(tag) !== -1) {
            ancestorInfo.aTagInScope = null;
            ancestorInfo.buttonTagInScope = null;
            ancestorInfo.nobrTagInScope = null;
        }
        if (buttonScopeTags.indexOf(tag) !== -1) ancestorInfo.pTagInButtonScope = null;
         // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
            ancestorInfo.listItemTagAutoclosing = null;
            ancestorInfo.dlItemTagAutoclosing = null;
        }
        ancestorInfo.current = info;
        if (tag === 'form') ancestorInfo.formTag = info;
        if (tag === 'a') ancestorInfo.aTagInScope = info;
        if (tag === 'button') ancestorInfo.buttonTagInScope = info;
        if (tag === 'nobr') ancestorInfo.nobrTagInScope = info;
        if (tag === 'p') ancestorInfo.pTagInButtonScope = info;
        if (tag === 'li') ancestorInfo.listItemTagAutoclosing = info;
        if (tag === 'dd' || tag === 'dt') ancestorInfo.dlItemTagAutoclosing = info;
        return ancestorInfo;
    };
    /**
   * Returns whether
   */ var isTagValidWithParent = function(tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch(parentTag){
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
            case 'select':
                return tag === 'option' || tag === 'optgroup' || tag === '#text';
            case 'optgroup':
                return tag === 'option' || tag === '#text';
            // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
            // but
            case 'option':
                return tag === '#text';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
            // No special behavior since these rules fall back to "in body" mode for
            // all except special table nodes which cause bad parsing behavior anyway.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
            case 'tr':
                return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
            case 'tbody':
            case 'thead':
            case 'tfoot':
                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
            case 'colgroup':
                return tag === 'col' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
            case 'table':
                return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
            case 'head':
                return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
            // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
            case 'html':
                return tag === 'head' || tag === 'body' || tag === 'frameset';
            case 'frameset':
                return tag === 'frame';
            case '#document':
                return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
        switch(tag){
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
            case 'rp':
            case 'rt':
                return impliedEndTags.indexOf(parentTag) === -1;
            case 'body':
            case 'caption':
            case 'col':
            case 'colgroup':
            case 'frameset':
            case 'frame':
            case 'head':
            case 'html':
            case 'tbody':
            case 'td':
            case 'tfoot':
            case 'th':
            case 'thead':
            case 'tr':
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
        }
        return true;
    };
    /**
   * Returns whether
   */ var findInvalidAncestorForTag = function(tag, ancestorInfo) {
        switch(tag){
            case 'address':
            case 'article':
            case 'aside':
            case 'blockquote':
            case 'center':
            case 'details':
            case 'dialog':
            case 'dir':
            case 'div':
            case 'dl':
            case 'fieldset':
            case 'figcaption':
            case 'figure':
            case 'footer':
            case 'header':
            case 'hgroup':
            case 'main':
            case 'menu':
            case 'nav':
            case 'ol':
            case 'p':
            case 'section':
            case 'summary':
            case 'ul':
            case 'pre':
            case 'listing':
            case 'table':
            case 'hr':
            case 'xmp':
            case 'h1':
            case 'h2':
            case 'h3':
            case 'h4':
            case 'h5':
            case 'h6':
                return ancestorInfo.pTagInButtonScope;
            case 'form':
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case 'li':
                return ancestorInfo.listItemTagAutoclosing;
            case 'dd':
            case 'dt':
                return ancestorInfo.dlItemTagAutoclosing;
            case 'button':
                return ancestorInfo.buttonTagInScope;
            case 'a':
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;
            case 'nobr':
                return ancestorInfo.nobrTagInScope;
        }
        return null;
    };
    var didWarn$1 = {};
    validateDOMNesting = function(childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;
        if (childText != null) {
            if (childTag != null) error1('validateDOMNesting: when childText is passed, childTag should be null');
            childTag = '#text';
        }
        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;
        if (!invalidParentOrAncestor) return;
        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;
        if (didWarn$1[warnKey]) return;
        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';
        if (childTag === '#text') {
            if (/\S/.test(childText)) tagDisplayName = 'Text nodes';
            else {
                tagDisplayName = 'Whitespace text nodes';
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
            }
        } else tagDisplayName = '<' + childTag + '>';
        if (invalidParent) {
            var info = '';
            if (ancestorTag === 'table' && childTag === 'tr') info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
            error1('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else error1("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
    };
    var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var SUSPENSE_PENDING_START_DATA = '$?';
    var SUSPENSE_FALLBACK_START_DATA = '$!';
    var STYLE$1 = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;
    function getRootHostContext(rootContainerInstance) {
        var type;
        var namespace;
        var nodeType = rootContainerInstance.nodeType;
        switch(nodeType){
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE:
                type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
                var root = rootContainerInstance.documentElement;
                namespace = root ? root.namespaceURI : getChildNamespace(null, '');
                break;
            default:
                var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                var ownNamespace = container.namespaceURI || null;
                type = container.tagName;
                namespace = getChildNamespace(ownNamespace, type);
                break;
        }
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
            namespace: namespace,
            ancestorInfo: ancestorInfo
        };
    }
    function getPublicInstance(instance) {
        return instance;
    }
    function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled();
        selectionInformation = getSelectionInformation();
        var activeInstance = null;
        setEnabled(false);
        return activeInstance;
    }
    function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation);
        setEnabled(eventsEnabled);
        eventsEnabled = null;
        selectionInformation = null;
    }
    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);
        if (typeof props.children === 'string' || typeof props.children === 'number') {
            var string = '' + props.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        parentNamespace = hostContextDev.namespace;
        var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
        precacheFiberNode(internalInstanceHandle, domElement);
        updateFiberProps(domElement, props);
        return domElement;
    }
    function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        setInitialProperties(domElement, type, props, rootContainerInstance);
        switch(type){
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
                return !!props.autoFocus;
            case 'img':
                return true;
            default:
                return false;
        }
    }
    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        var hostContextDev = hostContext;
        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
            var string = '' + newProps.children;
            var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
        }
        return diffProperties(domElement, type, oldProps, newProps);
    }
    function shouldSetTextContent(type, props) {
        return type === 'textarea' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }
    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        var textNode = createTextNode(text, rootContainerInstance);
        precacheFiberNode(internalInstanceHandle, textNode);
        return textNode;
    }
    function getCurrentEventPriority() {
        var currentEvent = window.event;
        if (currentEvent === undefined) return DefaultEventPriority;
        return getEventPriority(currentEvent.type);
    }
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.
    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1;
    var localPromise = typeof Promise === 'function' ? Promise : undefined; // -------------------
    var scheduleMicrotask = typeof queueMicrotask === 'function' ? queueMicrotask : typeof localPromise !== 'undefined' ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
    } : scheduleTimeout; // TODO: Determine the best fallback here.
    function handleErrorInNextTick(error) {
        setTimeout(function() {
            throw error;
        });
    } // -------------------
    function commitMount(domElement, type, newProps, internalInstanceHandle) {
        // Despite the naming that might imply otherwise, this method only
        // fires if there is an `Update` effect scheduled during mounting.
        // This happens if `finalizeInitialChildren` returns `true` (which it
        // does to implement the `autoFocus` attribute on the client). But
        // there are also other cases when this might happen (such as patching
        // up text content during hydration mismatch). So we'll check this again.
        switch(type){
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
                if (newProps.autoFocus) domElement.focus();
                return;
            case 'img':
                if (newProps.src) domElement.src = newProps.src;
                return;
        }
    }
    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        // Apply the diff to the DOM node.
        updateProperties(domElement, updatePayload, type, oldProps, newProps); // Update the props handle so that we know which props are the ones with
        // with current event handlers.
        updateFiberProps(domElement, newProps);
    }
    function resetTextContent(domElement) {
        setTextContent(domElement, '');
    }
    function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
    }
    function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
    }
    function appendChildToContainer(container, child) {
        var parentNode;
        if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
        } else {
            parentNode = container;
            parentNode.appendChild(child);
        } // This container might be used for a portal.
        // If something inside a portal is clicked, that click should bubble
        // through the React tree. However, on Mobile Safari the click would
        // never bubble through the *DOM* tree unless an ancestor with onclick
        // event exists. So we wouldn't see it and dispatch it.
        // This is why we ensure that non React root containers have inline onclick
        // defined.
        // https://github.com/facebook/react/issues/11918
        var reactRootContainer = container._reactRootContainer;
        if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
    }
    function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
    }
    function insertInContainerBefore(container, child, beforeChild) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.insertBefore(child, beforeChild);
        else container.insertBefore(child, beforeChild);
    }
    function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
        if (container.nodeType === COMMENT_NODE) container.parentNode.removeChild(child);
        else container.removeChild(child);
    }
    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance; // Delete all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        do {
            var nextNode = node.nextSibling;
            parentInstance.removeChild(node);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
                var data = nextNode.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) {
                        parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.
                        retryIfBlockedOn(suspenseInstance);
                        return;
                    } else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) depth++;
            }
            node = nextNode;
        }while (node) // TODO: Warn, we didn't find the end comment boundary.
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
        if (container.nodeType === COMMENT_NODE) clearSuspenseBoundary(container.parentNode, suspenseInstance);
        else if (container.nodeType === ELEMENT_NODE) clearSuspenseBoundary(container, suspenseInstance);
         // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function hideInstance(instance) {
        var style = instance.style;
        if (typeof style.setProperty === 'function') style.setProperty('display', 'none', 'important');
        else style.display = 'none';
    }
    function hideTextInstance(textInstance) {
        textInstance.nodeValue = '';
    }
    function unhideInstance(instance, props) {
        var styleProp = props[STYLE$1];
        var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
        instance.style.display = dangerousStyleValue('display', display);
    }
    function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
    }
    function clearContainer(container) {
        if (container.nodeType === ELEMENT_NODE) container.textContent = '';
        else if (container.nodeType === DOCUMENT_NODE) {
            var body = container.body;
            if (body != null) body.textContent = '';
        }
    } // -------------------
    function canHydrateInstance(instance, type, props) {
        if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) return null;
         // This has now been refined to an element node.
        return instance;
    }
    function canHydrateTextInstance(instance, text) {
        if (text === '' || instance.nodeType !== TEXT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a text node.
        return instance;
    }
    function canHydrateSuspenseInstance(instance) {
        if (instance.nodeType !== COMMENT_NODE) // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
         // This has now been refined to a suspense node.
        return instance;
    }
    function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
    }
    function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }
    function registerSuspenseInstanceRetry(instance, callback) {
        instance._reactRetry = callback;
    }
    function getNextHydratable(node) {
        // Skip non-hydratable nodes.
        for(; node != null; node = node.nextSibling){
            var nodeType = node.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) break;
            if (nodeType === COMMENT_NODE) {
                var nodeData = node.data;
                if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) break;
                if (nodeData === SUSPENSE_END_DATA) return null;
            }
        }
        return node;
    }
    function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
    }
    function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
    }
    function getFirstHydratableChildWithinContainer(parentContainer) {
        return getNextHydratable(parentContainer.firstChild);
    }
    function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
        return getNextHydratable(parentInstance.nextSibling);
    }
    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
        // get attached.
        updateFiberProps(instance, props);
        var parentNamespace;
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
    }
    function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, textInstance); // TODO: Temporary hack to check if we're in a concurrent root. We can delete
        // when the legacy root API is removed.
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedText(textInstance, text);
    }
    function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, suspenseInstance);
    }
    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_END_DATA) {
                    if (depth === 0) return getNextHydratableSibling(node);
                    else depth--;
                } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) depth++;
            }
            node = node.nextSibling;
        } // TODO: Warn, we didn't find the end comment boundary.
        return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.
    function getParentSuspenseInstance(targetInstance) {
        var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
        // There might be nested nodes so we need to keep track of how
        // deep we are and only break out when we're back on top.
        var depth = 0;
        while(node){
            if (node.nodeType === COMMENT_NODE) {
                var data = node.data;
                if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                    if (depth === 0) return node;
                    else depth--;
                } else if (data === SUSPENSE_END_DATA) depth++;
            }
            node = node.previousSibling;
        }
        return null;
    }
    function commitHydratedContainer(container) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(container);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
        // Retry if any event replaying was blocked on this.
        retryIfBlockedOn(suspenseInstance);
    }
    function shouldDeleteUnhydratedTailInstances(parentType) {
        return parentType !== 'head' && parentType !== 'body';
    }
    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
        var shouldWarnDev = true;
        checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
    }
    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
    }
    function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
        if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentContainer, instance);
        else if (instance.nodeType === COMMENT_NODE) ;
        else warnForDeletedHydratableText(parentContainer, instance);
    }
    function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentNode, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentNode, instance);
        }
    }
    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            if (instance.nodeType === ELEMENT_NODE) warnForDeletedHydratableElement(parentInstance, instance);
            else if (instance.nodeType === COMMENT_NODE) ;
            else warnForDeletedHydratableText(parentInstance, instance);
        }
    }
    function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
    }
    function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
    }
    function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedElement(parentNode, type);
    }
    function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
        // $FlowFixMe: Only Element or Document can be parent nodes.
        var parentNode = parentInstance.parentNode;
        if (parentNode !== null) warnForInsertedHydratedText(parentNode, text);
    }
    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedElement(parentInstance, type);
    }
    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
        if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) warnForInsertedHydratedText(parentInstance, text);
    }
    function errorHydratingContainer(parentContainer) {
        // TODO: This gets logged by onRecoverableError, too, so we should be
        // able to remove it.
        error1('An error occurred during hydration. The server HTML was replaced with client content in <%s>.', parentContainer.nodeName.toLowerCase());
    }
    function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
    }
    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactFiber$' + randomKey;
    var internalPropsKey = '__reactProps$' + randomKey;
    var internalContainerInstanceKey = '__reactContainer$' + randomKey;
    var internalEventHandlersKey = '__reactEvents$' + randomKey;
    var internalEventHandlerListenersKey = '__reactListeners$' + randomKey;
    var internalEventHandlesSetKey = '__reactHandles$' + randomKey;
    function detachDeletedInstance(node) {
        // TODO: This function is only called on host components. I don't think all of
        // these fields are relevant.
        delete node[internalInstanceKey];
        delete node[internalPropsKey];
        delete node[internalEventHandlersKey];
        delete node[internalEventHandlerListenersKey];
        delete node[internalEventHandlesSetKey];
    }
    function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
    }
    function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
    }
    function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
    }
    function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.
    function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst) // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
         // If the direct event target isn't a React owned DOM node, we need to look
        // to see if one of its parents is a React owned DOM node.
        var parentNode = targetNode.parentNode;
        while(parentNode){
            // We'll check if this is a container root that could include
            // React nodes in the future. We need to check this first because
            // if we're a child of a dehydrated container, we need to first
            // find that inner container before moving on to finding the parent
            // instance. Note that we don't check this field on  the targetNode
            // itself because the fibers are conceptually between the container
            // node and the first child. It isn't surrounding the container node.
            // If it's not a container, we check if it's an instance.
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
                // Since this wasn't the direct target of the event, we might have
                // stepped past dehydrated DOM nodes to get here. However they could
                // also have been non-React nodes. We need to answer which one.
                // If we the instance doesn't have any children, then there can't be
                // a nested suspense boundary within it. So we can use this as a fast
                // bailout. Most of the time, when people add non-React children to
                // the tree, it is using a ref to a child-less DOM node.
                // Normally we'd only need to check one of the fibers because if it
                // has ever gone from having children to deleting them or vice versa
                // it would have deleted the dehydrated boundary nested inside already.
                // However, since the HostRoot starts out with an alternate it might
                // have one on the alternate so we need to check in case this was a
                // root.
                var alternate = targetInst.alternate;
                if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                    // Next we need to figure out if the node that skipped past is
                    // nested within a dehydrated boundary and if so, which one.
                    var suspenseInstance = getParentSuspenseInstance(targetNode);
                    while(suspenseInstance !== null){
                        // We found a suspense instance. That means that we haven't
                        // hydrated it yet. Even though we leave the comments in the
                        // DOM after hydrating, and there are boundaries in the DOM
                        // that could already be hydrated, we wouldn't have found them
                        // through this pass since if the target is hydrated it would
                        // have had an internalInstanceKey on it.
                        // Let's get the fiber associated with the SuspenseComponent
                        // as the deepest instance.
                        var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                        if (targetSuspenseInst) return targetSuspenseInst;
                         // If we don't find a Fiber on the comment, it might be because
                        // we haven't gotten to hydrate it yet. There might still be a
                        // parent boundary that hasn't above this one so we need to find
                        // the outer most that is known.
                        suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
                    // host component also hasn't hydrated yet. We can return it
                    // below since it will bail out on the isMounted check later.
                    }
                }
                return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
        }
        return null;
    }
    /**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */ function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) return inst;
            else return null;
        }
        return null;
    }
    /**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */ function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText) // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
         // Without this first invariant, passing a non-DOM-component triggers the next
        // invariant for a missing parent, which is super confusing.
        throw new Error('getNodeFromInstance: Invalid argument.');
    }
    function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
    }
    function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
    }
    function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        if (elementListenerSet === undefined) elementListenerSet = node[internalEventHandlersKey] = new Set();
        return elementListenerSet;
    }
    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    function setCurrentlyValidatingElement(element) {
        if (element) {
            var owner = element._owner;
            var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
            ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else ReactDebugCurrentFrame$1.setExtraStackFrame(null);
    }
    function checkPropTypes(typeSpecs, values, location, componentName, element) {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(hasOwnProperty);
        for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
                // This is intentionally an invariant that gets caught. It's the same
                // behavior as without this statement except with a better message.
                if (typeof typeSpecs[typeSpecName] !== 'function') {
                    // eslint-disable-next-line react-internal/prod-error-codes
                    var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                    err.name = 'Invariant Violation';
                    throw err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
                error$1 = ex;
            }
            if (error$1 && !(error$1 instanceof Error)) {
                setCurrentlyValidatingElement(element);
                error1("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || 'React class', location, typeSpecName, typeof error$1);
                setCurrentlyValidatingElement(null);
            }
            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error$1.message] = true;
                setCurrentlyValidatingElement(element);
                error1('Failed %s type: %s', location, error$1.message);
                setCurrentlyValidatingElement(null);
            }
        }
    }
    var valueStack = [];
    var fiberStack;
    fiberStack = [];
    var index1 = -1;
    function createCursor(defaultValue) {
        return {
            current: defaultValue
        };
    }
    function pop(cursor, fiber) {
        if (index1 < 0) {
            error1('Unexpected pop.');
            return;
        }
        if (fiber !== fiberStack[index1]) error1('Unexpected Fiber popped.');
        cursor.current = valueStack[index1];
        valueStack[index1] = null;
        fiberStack[index1] = null;
        index1--;
    }
    function push(cursor, value, fiber) {
        index1++;
        valueStack[index1] = cursor.current;
        fiberStack[index1] = fiber;
        cursor.current = value;
    }
    var warnedAboutMissingGetChildContext;
    warnedAboutMissingGetChildContext = {};
    var emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.
    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.
    var previousContext = emptyContextObject;
    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) // If the fiber is a context provider itself, when we read its context
        // we may have already pushed its own child context on the stack. A context
        // provider should not "see" its own child context. Therefore we read the
        // previous (parent) context instead for a context provider.
        return previousContext;
        return contextStackCursor.current;
    }
    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
    }
    function getMaskedContext(workInProgress, unmaskedContext) {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;
        if (!contextTypes) return emptyContextObject;
         // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.
        var instance = workInProgress.stateNode;
        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
        var context = {};
        for(var key in contextTypes)context[key] = unmaskedContext[key];
        var name = getComponentNameFromFiber(workInProgress) || 'Unknown';
        checkPropTypes(contextTypes, context, 'context', name);
        // Context is created before the class component is instantiated so check for instance.
        if (instance) cacheContext(workInProgress, unmaskedContext, context);
        return context;
    }
    function hasContextChanged1() {
        return didPerformWorkStackCursor.current;
    }
    function isContextProvider(type) {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
    }
    function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
    }
    function pushTopLevelContextObject(fiber, context, didChange) {
        if (contextStackCursor.current !== emptyContextObject) throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
    }
    function processChildContext(fiber, type, parentContext) {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.
        if (typeof instance.getChildContext !== 'function') {
            var componentName = getComponentNameFromFiber(fiber) || 'Unknown';
            if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                error1("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
            }
            return parentContext;
        }
        var childContext = instance.getChildContext();
        for(var contextKey in childContext){
            if (!(contextKey in childContextTypes)) throw new Error((getComponentNameFromFiber(fiber) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
        }
        var name = getComponentNameFromFiber(fiber) || 'Unknown';
        checkPropTypes(childContextTypes, childContext, 'child context', name);
        return assign({}, parentContext, childContext);
    }
    function pushContextProvider(workInProgress) {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.
        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
    }
    function invalidateContextProvider(workInProgress, type, didChange) {
        var instance = workInProgress.stateNode;
        if (!instance) throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
        if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext(workInProgress, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
        }
    }
    function findCurrentUnmaskedContext(fiber) {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
        var node = fiber;
        do {
            switch(node.tag){
                case HostRoot:
                    return node.stateNode.context;
                case ClassComponent:
                    var Component = node.type;
                    if (isContextProvider(Component)) return node.stateNode.__reactInternalMemoizedMergedChildContext;
                    break;
            }
            node = node.return;
        }while (node !== null)
        throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    var LegacyRoot = 0;
    var ConcurrentRoot = 1;
    var syncQueue = null;
    var includesLegacySyncCallbacks = false;
    var isFlushingSyncQueue = false;
    function scheduleSyncCallback(callback) {
        // Push this callback into an internal queue. We'll flush these either in
        // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
        if (syncQueue === null) syncQueue = [
            callback
        ];
        else // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
    }
    function scheduleLegacySyncCallback(callback) {
        includesLegacySyncCallbacks = true;
        scheduleSyncCallback(callback);
    }
    function flushSyncCallbacksOnlyInLegacyMode() {
        // Only flushes the queue if there's a legacy sync callback scheduled.
        // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So
        // it might make more sense for the queue to be a list of roots instead of a
        // list of generic callbacks. Then we can have two: one for legacy roots, one
        // for concurrent roots. And this method would only flush the legacy ones.
        if (includesLegacySyncCallbacks) flushSyncCallbacks();
    }
    function flushSyncCallbacks() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
            // Prevent re-entrance.
            isFlushingSyncQueue = true;
            var i = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
                var isSync = true;
                var queue = syncQueue; // TODO: Is this necessary anymore? The only user code that runs in this
                // queue is in the render or commit phases.
                setCurrentUpdatePriority(DiscreteEventPriority);
                for(; i < queue.length; i++){
                    var callback = queue[i];
                    do callback = callback(isSync);
                    while (callback !== null)
                }
                syncQueue = null;
                includesLegacySyncCallbacks = false;
            } catch (error) {
                // If something throws, leave the remaining callbacks on the queue.
                if (syncQueue !== null) syncQueue = syncQueue.slice(i + 1);
                 // Resume flushing in the next tick
                scheduleCallback(ImmediatePriority, flushSyncCallbacks);
                throw error;
            } finally{
                setCurrentUpdatePriority(previousUpdatePriority);
                isFlushingSyncQueue = false;
            }
        }
        return null;
    }
    var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = null;
    function requestCurrentTransition() {
        return ReactCurrentBatchConfig$1.transition;
    }
    var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {},
        flushPendingUnsafeLifecycleWarnings: function() {},
        recordLegacyContextWarning: function(fiber, instance) {},
        flushLegacyContextWarning: function() {},
        discardPendingWarnings: function() {}
    };
    var findStrictRoot = function(fiber) {
        var maybeStrictRoot = null;
        var node = fiber;
        while(node !== null){
            if (node.mode & StrictLegacyMode) maybeStrictRoot = node;
            node = node.return;
        }
        return maybeStrictRoot;
    };
    var setToSortedString = function(set) {
        var array = [];
        set.forEach(function(value) {
            array.push(value);
        });
        return array.sort().join(', ');
    };
    var pendingComponentWillMountWarnings = [];
    var pendingUNSAFE_ComponentWillMountWarnings = [];
    var pendingComponentWillReceivePropsWarnings = [];
    var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
    var pendingComponentWillUpdateWarnings = [];
    var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.
    var didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
        // Dedupe strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) return;
        if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) pendingComponentWillMountWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount === 'function') pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) pendingComponentWillReceivePropsWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) pendingComponentWillUpdateWarnings.push(fiber);
        if (fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate === 'function') pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();
        if (pendingComponentWillMountWarnings.length > 0) {
            pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillMountWarnings = [];
        }
        var UNSAFE_componentWillMountUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
            pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillMountWarnings = [];
        }
        var componentWillReceivePropsUniqueNames = new Set();
        if (pendingComponentWillReceivePropsWarnings.length > 0) {
            pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillReceivePropsWarnings = [];
        }
        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
            pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }
        var componentWillUpdateUniqueNames = new Set();
        if (pendingComponentWillUpdateWarnings.length > 0) {
            pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingComponentWillUpdateWarnings = [];
        }
        var UNSAFE_componentWillUpdateUniqueNames = new Set();
        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
            pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutUnsafeLifecycles.add(fiber.type);
            });
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'
        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error1("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
        }
        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error1("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
        }
        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error1("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
        }
        if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
        }
        if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
        }
        if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
        }
    };
    var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.
    var didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
        var strictRoot = findStrictRoot(fiber);
        if (strictRoot === null) {
            error1("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
        } // Dedup strategy: Warn once per component.
        if (didWarnAboutLegacyContext.has(fiber.type)) return;
        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
            if (warningsForRoot === undefined) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
            }
            warningsForRoot.push(fiber);
        }
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function() {
        pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length === 0) return;
            var firstFiber = fiberArray[0];
            var uniqueNames = new Set();
            fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');
                didWarnAboutLegacyContext.add(fiber.type);
            });
            var sortedNames = setToSortedString(uniqueNames);
            try {
                setCurrentFiber(firstFiber);
                error1("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
            } finally{
                resetCurrentFiber();
            }
        });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function() {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
    };
    function resolveDefaultProps(Component, baseProps) {
        if (Component && Component.defaultProps) {
            // Resolve default props. Taken from ReactElement
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for(var propName in defaultProps)if (props[propName] === undefined) props[propName] = defaultProps[propName];
            return props;
        }
        return baseProps;
    }
    var valueCursor = createCursor(null);
    var rendererSigil;
    // Use this to detect multiple renderers using the same context
    rendererSigil = {};
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastFullyObservedContext = null;
    var isDisallowedContextReadInDEV = false;
    function resetContextDependencies() {
        // This is called right before React yields execution, to ensure `readContext`
        // cannot be called outside the render phase.
        currentlyRenderingFiber = null;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        isDisallowedContextReadInDEV = false;
    }
    function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = true;
    }
    function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = false;
    }
    function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) error1("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
        context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber);
        context._currentValue = currentValue;
    }
    function scheduleContextWorkOnParentPath(parent, renderLanes, propagationRoot) {
        // Update the child lanes of all the ancestors, including the alternates.
        var node = parent;
        while(node !== null){
            var alternate = node.alternate;
            if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
                node.childLanes = mergeLanes(node.childLanes, renderLanes);
                if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
            if (node === propagationRoot) break;
            node = node.return;
        }
        if (node !== propagationRoot) error1("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
    }
    function propagateContextChange(workInProgress, context, renderLanes) {
        propagateContextChange_eager(workInProgress, context, renderLanes);
    }
    function propagateContextChange_eager(workInProgress, context, renderLanes) {
        var fiber = workInProgress.child;
        if (fiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
        while(fiber !== null){
            var nextFiber = void 0; // Visit this fiber.
            var list = fiber.dependencies;
            if (list !== null) {
                nextFiber = fiber.child;
                var dependency = list.firstContext;
                while(dependency !== null){
                    // Check if the context matches.
                    if (dependency.context === context) {
                        // Match! Schedule an update on this fiber.
                        if (fiber.tag === ClassComponent) {
                            // Schedule a force update on the work-in-progress.
                            var lane = pickArbitraryLane(renderLanes);
                            var update = createUpdate(NoTimestamp, lane);
                            update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                            // update to the current fiber, too, which means it will persist even if
                            // this render is thrown away. Since it's a race condition, not sure it's
                            // worth fixing.
                            // Inlined `enqueueUpdate` to remove interleaved update check
                            var updateQueue = fiber.updateQueue;
                            if (updateQueue === null) ;
                            else {
                                var sharedQueue = updateQueue.shared;
                                var pending = sharedQueue.pending;
                                if (pending === null) // This is the first update. Create a circular list.
                                update.next = update;
                                else {
                                    update.next = pending.next;
                                    pending.next = update;
                                }
                                sharedQueue.pending = update;
                            }
                        }
                        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
                        var alternate = fiber.alternate;
                        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
                        scheduleContextWorkOnParentPath(fiber.return, renderLanes, workInProgress); // Mark the updated lanes on the list, too.
                        list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
                        break;
                    }
                    dependency = dependency.next;
                }
            } else if (fiber.tag === ContextProvider) // Don't scan deeper if this is a matching provider
            nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
            else if (fiber.tag === DehydratedFragment) {
                // If a dehydrated suspense boundary is in this subtree, we don't know
                // if it will have any context consumers in it. The best we can do is
                // mark it as having updates.
                var parentSuspense = fiber.return;
                if (parentSuspense === null) throw new Error('We just came from a parent so we must have had a parent. This is a bug in React.');
                parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);
                var _alternate = parentSuspense.alternate;
                if (_alternate !== null) _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes);
                 // This is intentionally passing this fiber as the parent
                // because we want to schedule this fiber as having work
                // on its children. We'll use the childLanes on
                // this fiber to indicate that a context has changed.
                scheduleContextWorkOnParentPath(parentSuspense, renderLanes, workInProgress);
                nextFiber = fiber.sibling;
            } else // Traverse down.
            nextFiber = fiber.child;
            if (nextFiber !== null) // Set the return pointer of the child to the work-in-progress fiber.
            nextFiber.return = fiber;
            else {
                // No child. Traverse to next sibling.
                nextFiber = fiber;
                while(nextFiber !== null){
                    if (nextFiber === workInProgress) {
                        // We're back to the root of this subtree. Exit.
                        nextFiber = null;
                        break;
                    }
                    var sibling = nextFiber.sibling;
                    if (sibling !== null) {
                        // Set the return pointer of the sibling to the work-in-progress fiber.
                        sibling.return = nextFiber.return;
                        nextFiber = sibling;
                        break;
                    } // No more siblings. Traverse up.
                    nextFiber = nextFiber.return;
                }
            }
            fiber = nextFiber;
        }
    }
    function prepareToReadContext(workInProgress, renderLanes) {
        currentlyRenderingFiber = workInProgress;
        lastContextDependency = null;
        lastFullyObservedContext = null;
        var dependencies = workInProgress.dependencies;
        if (dependencies !== null) {
            var firstContext = dependencies.firstContext;
            if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes)) // Context list has a pending update. Mark that this fiber performed work.
                markWorkInProgressReceivedUpdate();
                 // Reset the work-in-progress list
                dependencies.firstContext = null;
            }
        }
    }
    function readContext(context) {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) error1("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        var value = context._currentValue;
        if (lastFullyObservedContext === context) ;
        else {
            var contextItem = {
                context: context,
                memoizedValue: value,
                next: null
            };
            if (lastContextDependency === null) {
                if (currentlyRenderingFiber === null) throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                 // This is the first dependency for this component. Create a new list.
                lastContextDependency = contextItem;
                currentlyRenderingFiber.dependencies = {
                    lanes: NoLanes,
                    firstContext: contextItem
                };
            } else // Append a new context item.
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return value;
    }
    // An array of all update queues that received updates during the current
    // render. When this render exits, either because it finishes or because it is
    // interrupted, the interleaved updates will be transferred onto the main part
    // of the queue.
    var interleavedQueues = null;
    function pushInterleavedQueue(queue) {
        if (interleavedQueues === null) interleavedQueues = [
            queue
        ];
        else interleavedQueues.push(queue);
    }
    function hasInterleavedUpdates() {
        return interleavedQueues !== null;
    }
    function enqueueInterleavedUpdates() {
        // Transfer the interleaved updates onto the main queue. Each queue has a
        // `pending` field and an `interleaved` field. When they are not null, they
        // point to the last node in a circular linked list. We need to append the
        // interleaved list to the end of the pending list by joining them into a
        // single, circular list.
        if (interleavedQueues !== null) {
            for(var i = 0; i < interleavedQueues.length; i++){
                var queue = interleavedQueues[i];
                var lastInterleavedUpdate = queue.interleaved;
                if (lastInterleavedUpdate !== null) {
                    queue.interleaved = null;
                    var firstInterleavedUpdate = lastInterleavedUpdate.next;
                    var lastPendingUpdate = queue.pending;
                    if (lastPendingUpdate !== null) {
                        var firstPendingUpdate = lastPendingUpdate.next;
                        lastPendingUpdate.next = firstInterleavedUpdate;
                        lastInterleavedUpdate.next = firstPendingUpdate;
                    }
                    queue.pending = lastInterleavedUpdate;
                }
            }
            interleavedQueues = null;
        }
    }
    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.
    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    didWarnUpdateInsideUpdate = false;
    currentlyProcessingQueue = null;
    function initializeUpdateQueue(fiber) {
        var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
                pending: null,
                interleaved: null,
                lanes: NoLanes
            },
            effects: null
        };
        fiber.updateQueue = queue;
    }
    function cloneUpdateQueue(current, workInProgress) {
        // Clone the update queue from current. Unless it's already a clone.
        var queue = workInProgress.updateQueue;
        var currentQueue = current.updateQueue;
        if (queue === currentQueue) {
            var clone = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: currentQueue.firstBaseUpdate,
                lastBaseUpdate: currentQueue.lastBaseUpdate,
                shared: currentQueue.shared,
                effects: currentQueue.effects
            };
            workInProgress.updateQueue = clone;
        }
    }
    function createUpdate(eventTime, lane) {
        var update = {
            eventTime: eventTime,
            lane: lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
        };
        return update;
    }
    function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        if (isInterleavedUpdate(fiber)) {
            var interleaved = sharedQueue.interleaved;
            if (interleaved === null) {
                // This is the first update. Create a circular list.
                update.next = update; // At the end of the current render, this queue's interleaved updates will
                // be transferred to the pending queue.
                pushInterleavedQueue(sharedQueue);
            } else {
                update.next = interleaved.next;
                interleaved.next = update;
            }
            sharedQueue.interleaved = update;
        } else {
            var pending = sharedQueue.pending;
            if (pending === null) // This is the first update. Create a circular list.
            update.next = update;
            else {
                update.next = pending.next;
                pending.next = update;
            }
            sharedQueue.pending = update;
        }
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
            error1("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
            didWarnUpdateInsideUpdate = true;
        }
    }
    function entangleTransitions(root, fiber, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null) // Only occurs if the fiber has been unmounted.
        return;
        var sharedQueue = updateQueue.shared;
        if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes; // If any entangled lanes are no longer pending on the root, then they must
            // have finished. We can remove them from the shared queue, which represents
            // a superset of the actually pending lanes. In some cases we may entangle
            // more than we need to, but that's OK. In fact it's worse if we *don't*
            // entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
        // Captured updates are updates that are thrown by a child during the render
        // phase. They should be discarded if the render is aborted. Therefore,
        // we should only put them on the work-in-progress queue, not the current one.
        var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.
        var current = workInProgress.alternate;
        if (current !== null) {
            var currentQueue = current.updateQueue;
            if (queue === currentQueue) {
                // The work-in-progress queue is the same as current. This happens when
                // we bail out on a parent fiber that then captures an error thrown by
                // a child. Since we want to append the update only to the work-in
                // -progress queue, we need to clone the updates. We usually clone during
                // processUpdateQueue, but that didn't happen in this case because we
                // skipped over the parent when we bailed out.
                var newFirst = null;
                var newLast = null;
                var firstBaseUpdate = queue.firstBaseUpdate;
                if (firstBaseUpdate !== null) {
                    // Loop through the updates and clone them.
                    var update = firstBaseUpdate;
                    do {
                        var clone = {
                            eventTime: update.eventTime,
                            lane: update.lane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        if (newLast === null) newFirst = newLast = clone;
                        else {
                            newLast.next = clone;
                            newLast = clone;
                        }
                        update = update.next;
                    }while (update !== null) // Append the captured update the end of the cloned list.
                    if (newLast === null) newFirst = newLast = capturedUpdate;
                    else {
                        newLast.next = capturedUpdate;
                        newLast = capturedUpdate;
                    }
                } else // There are no base updates.
                newFirst = newLast = capturedUpdate;
                queue = {
                    baseState: currentQueue.baseState,
                    firstBaseUpdate: newFirst,
                    lastBaseUpdate: newLast,
                    shared: currentQueue.shared,
                    effects: currentQueue.effects
                };
                workInProgress.updateQueue = queue;
                return;
            }
        } // Append the update to the end of the list.
        var lastBaseUpdate = queue.lastBaseUpdate;
        if (lastBaseUpdate === null) queue.firstBaseUpdate = capturedUpdate;
        else lastBaseUpdate.next = capturedUpdate;
        queue.lastBaseUpdate = capturedUpdate;
    }
    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
        switch(update.tag){
            case ReplaceState:
                var payload = update.payload;
                if (typeof payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    var nextState = payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                    return nextState;
                } // State object
                return payload;
            case CaptureUpdate:
                workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
            // Intentional fallthrough
            case UpdateState:
                var _payload = update.payload;
                var partialState;
                if (typeof _payload === 'function') {
                    enterDisallowedContextReadInDEV();
                    partialState = _payload.call(instance, prevState, nextProps);
                    if (workInProgress.mode & StrictLegacyMode) {
                        setIsStrictModeForDevtools(true);
                        try {
                            _payload.call(instance, prevState, nextProps);
                        } finally{
                            setIsStrictModeForDevtools(false);
                        }
                    }
                    exitDisallowedContextReadInDEV();
                } else // Partial state object
                partialState = _payload;
                if (partialState === null || partialState === undefined) // Null and undefined are treated as no-ops.
                return prevState;
                 // Merge the partial state and the previous state.
                return assign({}, prevState, partialState);
            case ForceUpdate:
                hasForceUpdate = true;
                return prevState;
        }
        return prevState;
    }
    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
        // This is always non-null on a ClassComponent or HostRoot
        var queue = workInProgress.updateQueue;
        hasForceUpdate = false;
        currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate;
        var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.
        var pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
            queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
            // and last so that it's non-circular.
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null; // Append pending updates to base queue
            if (lastBaseUpdate === null) firstBaseUpdate = firstPendingUpdate;
            else lastBaseUpdate.next = firstPendingUpdate;
            lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
            // we need to transfer the updates to that queue, too. Because the base
            // queue is a singly-linked list with no cycles, we can append to both
            // lists and take advantage of structural sharing.
            // TODO: Pass `current` as argument
            var current = workInProgress.alternate;
            if (current !== null) {
                // This is always non-null on a ClassComponent or HostRoot
                var currentQueue = current.updateQueue;
                var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                if (currentLastBaseUpdate !== lastBaseUpdate) {
                    if (currentLastBaseUpdate === null) currentQueue.firstBaseUpdate = firstPendingUpdate;
                    else currentLastBaseUpdate.next = firstPendingUpdate;
                    currentQueue.lastBaseUpdate = lastPendingUpdate;
                }
            }
        } // These values may change as we process the queue.
        if (firstBaseUpdate !== null) {
            // Iterate through the list of updates to compute the result.
            var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
            // from the original lanes.
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update = firstBaseUpdate;
            do {
                var updateLane = update.lane;
                var updateEventTime = update.eventTime;
                if (!isSubsetOfLanes(renderLanes, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        eventTime: updateEventTime,
                        lane: updateLane,
                        tag: update.tag,
                        payload: update.payload,
                        callback: update.callback,
                        next: null
                    };
                    if (newLastBaseUpdate === null) {
                        newFirstBaseUpdate = newLastBaseUpdate = clone;
                        newBaseState = newState;
                    } else newLastBaseUpdate = newLastBaseUpdate.next = clone;
                     // Update the remaining priority in the queue.
                    newLanes = mergeLanes(newLanes, updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newLastBaseUpdate !== null) {
                        var _clone = {
                            eventTime: updateEventTime,
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            tag: update.tag,
                            payload: update.payload,
                            callback: update.callback,
                            next: null
                        };
                        newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                    } // Process this update.
                    newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
                    var callback = update.callback;
                    if (callback !== null && // callback again.
                    update.lane !== NoLane) {
                        workInProgress.flags |= Callback;
                        var effects = queue.effects;
                        if (effects === null) queue.effects = [
                            update
                        ];
                        else effects.push(update);
                    }
                }
                update = update.next;
                if (update === null) {
                    pendingQueue = queue.shared.pending;
                    if (pendingQueue === null) break;
                    else {
                        // An update was scheduled from inside a reducer. Add the new
                        // pending updates to the end of the list and keep processing.
                        var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
                        // unravel them when transferring them to the base queue.
                        var _firstPendingUpdate = _lastPendingUpdate.next;
                        _lastPendingUpdate.next = null;
                        update = _firstPendingUpdate;
                        queue.lastBaseUpdate = _lastPendingUpdate;
                        queue.shared.pending = null;
                    }
                }
            }while (true)
            if (newLastBaseUpdate === null) newBaseState = newState;
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate; // Interleaved updates are stored on a separate queue. We aren't going to
            // process them during this render, but we do need to track which lanes
            // are remaining.
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
                var interleaved = lastInterleaved;
                do {
                    newLanes = mergeLanes(newLanes, interleaved.lane);
                    interleaved = interleaved.next;
                }while (interleaved !== lastInterleaved)
            } else if (firstBaseUpdate === null) // `queue.lanes` is used for entangling transitions. We can set it back to
            // zero once the queue is empty.
            queue.shared.lanes = NoLanes;
             // Set the remaining expiration time to be whatever is remaining in the queue.
            // This should be fine because the only two other things that contribute to
            // expiration time are props and context. We're already in the middle of the
            // begin phase by the time we start processing the queue, so we've already
            // dealt with the props. Context in components that specify
            // shouldComponentUpdate is tricky; but we'll have to account for
            // that regardless.
            markSkippedUpdateLanes(newLanes);
            workInProgress.lanes = newLanes;
            workInProgress.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
    }
    function callCallback1(callback, context) {
        if (typeof callback !== 'function') throw new Error('Invalid argument passed as callback. Expected a function. Instead ' + ("received: " + callback));
        callback.call(context);
    }
    function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = false;
    }
    function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
    }
    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        // Commit the effects
        var effects = finishedQueue.effects;
        finishedQueue.effects = null;
        if (effects !== null) for(var i = 0; i < effects.length; i++){
            var effect = effects[i];
            var callback = effect.callback;
            if (callback !== null) {
                effect.callback = null;
                callCallback1(callback, instance);
            }
        }
    }
    var fakeInternalInstance = {}; // React.Component uses a shared frozen object by default.
    // We'll use it to determine whether we need to initialize legacy refs.
    var emptyRefsObject = new React.Component().refs;
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    didWarnAboutStateAssignmentForComponent = new Set();
    didWarnAboutUninitializedState = new Set();
    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    didWarnAboutDirectlyAssigningPropsToState = new Set();
    didWarnAboutUndefinedDerivedState = new Set();
    didWarnAboutContextTypeAndContextTypes = new Set();
    didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    warnOnInvalidCallback = function(callback, callerName) {
        if (callback === null || typeof callback === 'function') return;
        var key = callerName + '_' + callback;
        if (!didWarnOnInvalidCallback.has(key)) {
            didWarnOnInvalidCallback.add(key);
            error1("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
        }
    };
    warnOnUndefinedDerivedState = function(type, partialState) {
        if (partialState === undefined) {
            var componentName = getComponentNameFromType(type) || 'Component';
            if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error1("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
            }
        }
    }; // This is so gross but it's at least non-critical and can be removed if
    // it causes problems. This is meant to give a nicer error message for
    // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
    // ...)) which otherwise throws a "_processChildContext is not a function"
    // exception.
    Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function() {
            throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
        }
    });
    Object.freeze(fakeInternalInstance);
    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress.memoizedState;
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                // Invoke the function an extra time to help detect side-effects.
                partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        warnOnUndefinedDerivedState(ctor, partialState);
        var memoizedState = partialState === null || partialState === undefined ? prevState : assign({}, prevState, partialState);
        workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
        // base state.
        if (workInProgress.lanes === NoLanes) {
            // Queue is always non-null for classes
            var updateQueue = workInProgress.updateQueue;
            updateQueue.baseState = memoizedState;
        }
    }
    var classComponentUpdater = {
        isMounted: isMounted,
        enqueueSetState: function(inst, payload, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'setState');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            var root = scheduleUpdateOnFiber(fiber, lane, eventTime);
            if (root !== null) entangleTransitions(root, fiber, lane);
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ReplaceState;
            update.payload = payload;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'replaceState');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            var root = scheduleUpdateOnFiber(fiber, lane, eventTime);
            if (root !== null) entangleTransitions(root, fiber, lane);
            markStateUpdateScheduled(fiber, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
            var fiber = get1(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update = createUpdate(eventTime, lane);
            update.tag = ForceUpdate;
            if (callback !== undefined && callback !== null) {
                warnOnInvalidCallback(callback, 'forceUpdate');
                update.callback = callback;
            }
            enqueueUpdate(fiber, update);
            var root = scheduleUpdateOnFiber(fiber, lane, eventTime);
            if (root !== null) entangleTransitions(root, fiber, lane);
            markForceUpdateScheduled(fiber, lane);
        }
    };
    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress.stateNode;
        if (typeof instance.shouldComponentUpdate === 'function') {
            var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    // Invoke the function an extra time to help detect side-effects.
                    shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (shouldUpdate === undefined) error1("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || 'Component');
            return shouldUpdate;
        }
        if (ctor.prototype && ctor.prototype.isPureReactComponent) return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
        return true;
    }
    function checkClassInstance(workInProgress, ctor, newProps) {
        var instance = workInProgress.stateNode;
        var name = getComponentNameFromType(ctor) || 'Component';
        var renderPresent = instance.render;
        if (!renderPresent) {
            if (ctor.prototype && typeof ctor.prototype.render === 'function') error1("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
            else error1("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
        }
        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) error1("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) error1("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
        if (instance.propTypes) error1("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
        if (instance.contextType) error1("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
        if (instance.contextTypes) error1("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
        if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error1("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
        }
        if (typeof instance.componentShouldUpdate === 'function') error1("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') error1("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || 'A pure component');
        if (typeof instance.componentDidUnmount === 'function') error1("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
        if (typeof instance.componentDidReceiveProps === 'function') error1("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
        if (typeof instance.componentWillRecieveProps === 'function') error1("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
        if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') error1("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
        var hasMutatedProps = instance.props !== newProps;
        if (instance.props !== undefined && hasMutatedProps) error1("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
        if (instance.defaultProps) error1("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
            error1("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
        }
        if (typeof instance.getDerivedStateFromProps === 'function') error1("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof instance.getDerivedStateFromError === 'function') error1("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
        if (typeof ctor.getSnapshotBeforeUpdate === 'function') error1("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
        var _state = instance.state;
        if (_state && (typeof _state !== 'object' || isArray(_state))) error1('%s.state: must be set to an object or null', name);
        if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') error1("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
    }
    function adoptClassInstance(workInProgress, instance) {
        instance.updater = classComponentUpdater;
        workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates
        set1(instance, workInProgress);
        instance._reactInternalInstance = fakeInternalInstance;
    }
    function constructClassInstance(workInProgress, ctor, props) {
        var isLegacyContextConsumer = false;
        var unmaskedContext = emptyContextObject;
        var context = emptyContextObject;
        var contextType = ctor.contextType;
        if ('contextType' in ctor) {
            var isValid = contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>
            if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = '';
                if (contextType === undefined) addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                else if (typeof contextType !== 'object') addendum = ' However, it is set to a ' + typeof contextType + '.';
                else if (contextType.$$typeof === REACT_PROVIDER_TYPE) addendum = ' Did you accidentally pass the Context.Provider instead?';
                else if (contextType._context !== undefined) // <Context.Consumer>
                addendum = ' Did you accidentally pass the Context.Consumer instead?';
                else addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
                error1("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || 'Component', addendum);
            }
        }
        if (typeof contextType === 'object' && contextType !== null) context = readContext(contextType);
        else {
            unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
            context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
        }
        var instance = new ctor(props, context); // Instantiate twice to help detect side-effects.
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                instance = new ctor(props, context); // eslint-disable-line no-new
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
        adoptClassInstance(workInProgress, instance);
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
            var componentName = getComponentNameFromType(ctor) || 'Component';
            if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error1("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? 'null' : 'undefined', componentName);
            }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.
        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
            var foundWillMountName = null;
            var foundWillReceivePropsName = null;
            var foundWillUpdateName = null;
            if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) foundWillMountName = 'componentWillMount';
            else if (typeof instance.UNSAFE_componentWillMount === 'function') foundWillMountName = 'UNSAFE_componentWillMount';
            if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) foundWillReceivePropsName = 'componentWillReceiveProps';
            else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
            if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) foundWillUpdateName = 'componentWillUpdate';
            else if (typeof instance.UNSAFE_componentWillUpdate === 'function') foundWillUpdateName = 'UNSAFE_componentWillUpdate';
            if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || 'Component';
                var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                    didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                    error1("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
                }
            }
        }
        // ReactFiberContext usually updates this cache but can't for newly-created instances.
        if (isLegacyContextConsumer) cacheContext(workInProgress, unmaskedContext, context);
        return instance;
    }
    function callComponentWillMount(workInProgress, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
        if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
        if (oldState !== instance.state) {
            error1("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress) || 'Component');
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    }
    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps === 'function') instance.componentWillReceiveProps(newProps, nextContext);
        if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
        if (instance.state !== oldState) {
            var componentName = getComponentNameFromFiber(workInProgress) || 'Component';
            if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error1("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
    } // Invokes the mount life-cycles on a previously never rendered instance.
    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        checkClassInstance(workInProgress, ctor, newProps);
        var instance = workInProgress.stateNode;
        instance.props = newProps;
        instance.state = workInProgress.memoizedState;
        instance.refs = emptyRefsObject;
        initializeUpdateQueue(workInProgress);
        var contextType = ctor.contextType;
        if (typeof contextType === 'object' && contextType !== null) instance.context = readContext(contextType);
        else {
            var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            instance.context = getMaskedContext(workInProgress, unmaskedContext);
        }
        if (instance.state === newProps) {
            var componentName = getComponentNameFromType(ctor) || 'Component';
            if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error1("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        instance.state = workInProgress.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            instance.state = workInProgress.memoizedState;
        } // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
            callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
            // process them now.
            processUpdateQueue(workInProgress, newProps, instance, renderLanes);
            instance.state = workInProgress.memoizedState;
        }
        if (typeof instance.componentDidMount === 'function') {
            var fiberFlags = Update;
            fiberFlags |= LayoutStatic;
            if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
            workInProgress.flags |= fiberFlags;
        }
    }
    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        var oldProps = workInProgress.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (oldProps !== newProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (oldProps === newProps && oldState === newState && !hasContextChanged1() && !checkHasForceUpdateAfterProcessing()) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') {
                var fiberFlags = Update;
                fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
                workInProgress.flags |= fiberFlags;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
                if (typeof instance.componentWillMount === 'function') instance.componentWillMount();
                if (typeof instance.UNSAFE_componentWillMount === 'function') instance.UNSAFE_componentWillMount();
            }
            if (typeof instance.componentDidMount === 'function') {
                var _fiberFlags = Update;
                _fiberFlags |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags;
            }
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidMount === 'function') {
                var _fiberFlags2 = Update;
                _fiberFlags2 |= LayoutStatic;
                if ((workInProgress.mode & StrictEffectsMode) !== NoMode) _fiberFlags2 |= MountLayoutDev;
                workInProgress.flags |= _fiberFlags2;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.
    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
        var instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        var unresolvedOldProps = workInProgress.memoizedProps;
        var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress.pendingProps;
        var oldContext = instance.context;
        var contextType = ctor.contextType;
        var nextContext = emptyContextObject;
        if (typeof contextType === 'object' && contextType !== null) nextContext = readContext(contextType);
        else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
            nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
        // ever the previously attempted to render - not the "current". However,
        // during componentDidUpdate we pass the "current" props.
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
        resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress.memoizedState;
        var newState = instance.state = oldState;
        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        newState = workInProgress.memoizedState;
        if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged1() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            }
            return false;
        }
        if (typeof getDerivedStateFromProps === 'function') {
            applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress.memoizedState;
        }
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) || // both before and after `shouldComponentUpdate` has been called. Not ideal,
        // but I'm loath to refactor this function. This only happens for memoized
        // components so it's not that common.
        enableLazyContextPropagation;
        if (shouldUpdate) {
            // In order to support react-lifecycles-compat polyfilled components,
            // Unsafe lifecycles should not be invoked for components using the new APIs.
            if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
                if (typeof instance.componentWillUpdate === 'function') instance.componentWillUpdate(newProps, newState, nextContext);
                if (typeof instance.UNSAFE_componentWillUpdate === 'function') instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
            }
            if (typeof instance.componentDidUpdate === 'function') workInProgress.flags |= Update;
            if (typeof instance.getSnapshotBeforeUpdate === 'function') workInProgress.flags |= Snapshot;
        } else {
            // If an update was already in progress, we should schedule an Update
            // effect even though we're bailing out, so that cWU/cDU are called.
            if (typeof instance.componentDidUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Update;
            }
            if (typeof instance.getSnapshotBeforeUpdate === 'function') {
                if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) workInProgress.flags |= Snapshot;
            } // If shouldComponentUpdate returned false, we should still update the
            // memoized props/state to indicate that this work can be reused.
            workInProgress.memoizedProps = newProps;
            workInProgress.memoizedState = newState;
        } // Update the existing instance's state, props, and context pointers even
        // if shouldComponentUpdate returns false.
        instance.props = newProps;
        instance.state = newState;
        instance.context = nextContext;
        return shouldUpdate;
    }
    // TODO: Use the unified fiber stack module instead of this local one?
    // Intentionally not using it yet to derisk the initial implementation, because
    // the way we push/pop these values is a bit unusual. If there's a mistake, I'd
    // rather the ids be wrong than crash the whole reconciler.
    var forkStack = [];
    var forkStackIndex = 0;
    var treeForkProvider = null;
    var treeForkCount = 0;
    var idStack = [];
    var idStackIndex = 0;
    var treeContextProvider = null;
    var treeContextId = 1;
    var treeContextOverflow = '';
    function isForkedChild(workInProgress) {
        warnIfNotHydrating();
        return (workInProgress.flags & Forked) !== NoFlags;
    }
    function getForksAtLevel(workInProgress) {
        warnIfNotHydrating();
        return treeForkCount;
    }
    function getTreeId() {
        var overflow = treeContextOverflow;
        var idWithLeadingBit = treeContextId;
        var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
    }
    function pushTreeFork(workInProgress, totalChildren) {
        // This is called right after we reconcile an array (or iterator) of child
        // fibers, because that's the only place where we know how many children in
        // the whole set without doing extra work later, or storing addtional
        // information on the fiber.
        //
        // That's why this function is separate from pushTreeId — it's called during
        // the render phase of the fork parent, not the child, which is where we push
        // the other context values.
        //
        // In the Fizz implementation this is much simpler because the child is
        // rendered in the same callstack as the parent.
        //
        // It might be better to just add a `forks` field to the Fiber type. It would
        // make this module simpler.
        warnIfNotHydrating();
        forkStack[forkStackIndex++] = treeForkCount;
        forkStack[forkStackIndex++] = treeForkProvider;
        treeForkProvider = workInProgress;
        treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextProvider = workInProgress;
        var baseIdWithLeadingBit = treeContextId;
        var baseOverflow = treeContextOverflow; // The leftmost 1 marks the end of the sequence, non-inclusive. It's not part
        // of the id; we use it to account for leading 0s.
        var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
        var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
        var slot = index + 1;
        var length = getBitLength(totalChildren) + baseLength; // 30 is the max length we can store without overflowing, taking into
        // consideration the leading 1 we use to mark the end of the sequence.
        if (length > 30) {
            // We overflowed the bitwise-safe range. Fall back to slower algorithm.
            // This branch assumes the length of the base id is greater than 5; it won't
            // work for smaller ids, because you need 5 bits per character.
            //
            // We encode the id in multiple steps: first the base id, then the
            // remaining digits.
            //
            // Each 5 bit sequence corresponds to a single base 32 character. So for
            // example, if the current id is 23 bits long, we can convert 20 of those
            // bits into a string of 4 characters, with 3 bits left over.
            //
            // First calculate how many bits in the base id represent a complete
            // sequence of characters.
            var numberOfOverflowBits = baseLength - baseLength % 5; // Then create a bitmask that selects only those bits.
            var newOverflowBits = (1 << numberOfOverflowBits) - 1; // Select the bits, and convert them to a base 32 string.
            var newOverflow = (baseId & newOverflowBits).toString(32); // Now we can remove those bits from the base id.
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits; // Finally, encode the rest of the bits using the normal algorithm. Because
            // we made more room, this time it won't overflow.
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
        } else {
            // Normal path
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
        }
    }
    function pushMaterializedTreeId(workInProgress) {
        warnIfNotHydrating(); // This component materialized an id. This will affect any ids that appear
        // in its children.
        var returnFiber = workInProgress.return;
        if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress, numberOfForks);
            pushTreeId(workInProgress, numberOfForks, slotIndex);
        }
    }
    function getBitLength(number) {
        return 32 - clz32(number);
    }
    function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
    }
    function popTreeContext(workInProgress) {
        // Restore the previous values.
        // This is a bit more complicated than other context-like modules in Fiber
        // because the same Fiber may appear on the stack multiple times and for
        // different reasons. We have to keep popping until the work-in-progress is
        // no longer at the top of the stack.
        while(workInProgress === treeForkProvider){
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
        }
        while(workInProgress === treeContextProvider){
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
        }
    }
    function getSuspendedTreeContext() {
        warnIfNotHydrating();
        if (treeContextProvider !== null) return {
            id: treeContextId,
            overflow: treeContextOverflow
        };
        else return null;
    }
    function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
        warnIfNotHydrating();
        idStack[idStackIndex++] = treeContextId;
        idStack[idStackIndex++] = treeContextOverflow;
        idStack[idStackIndex++] = treeContextProvider;
        treeContextId = suspendedContext.id;
        treeContextOverflow = suspendedContext.overflow;
        treeContextProvider = workInProgress;
    }
    function warnIfNotHydrating() {
        if (!getIsHydrating()) error1("Expected to be hydrating. This is a bug in React. Please file an issue.");
    }
    // This may have been an insertion or a hydration.
    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating1 = false; // This flag allows for warning supression when we expect there to be mismatches
    // due to earlier mismatches or a suspended fiber.
    var didSuspendOrErrorDEV = false; // Hydration errors that were thrown inside this boundary
    var hydrationErrors = null;
    function warnIfHydrating() {
        if (isHydrating1) error1('We should not be hydrating here. This is a bug in React. Please file a bug.');
    }
    function markDidThrowWhileHydratingDEV() {
        didSuspendOrErrorDEV = true;
    }
    function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
        hydrationParentFiber = fiber;
        isHydrating1 = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        return true;
    }
    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
        nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
        hydrationParentFiber = fiber;
        isHydrating1 = true;
        hydrationErrors = null;
        didSuspendOrErrorDEV = false;
        if (treeContext !== null) restoreSuspendedTreeContext(fiber, treeContext);
        return true;
    }
    function warnUnhydratedInstance(returnFiber, instance) {
        switch(returnFiber.tag){
            case HostRoot:
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
                break;
            case HostComponent:
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance, isConcurrentMode);
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null) didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
                break;
        }
    }
    function deleteHydratableInstance(returnFiber, instance) {
        warnUnhydratedInstance(returnFiber, instance);
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance;
        childToDelete.return = returnFiber;
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                childToDelete
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(childToDelete);
    }
    function warnNonhydratedInstance(returnFiber, fiber) {
        if (didSuspendOrErrorDEV) // Inside a boundary that already suspended. We're currently rendering the
        // siblings of a suspended node. The mismatch may be due to the missing
        // data, so it's probably a false positive.
        return;
        switch(returnFiber.tag){
            case HostRoot:
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch(fiber.tag){
                    case HostComponent:
                        var type = fiber.type;
                        var props = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                        break;
                    case HostText:
                        var text = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                        break;
                }
                break;
            case HostComponent:
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch(fiber.tag){
                    case HostComponent:
                        var _type = fiber.type;
                        var _props = fiber.pendingProps;
                        var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props, isConcurrentMode);
                        break;
                    case HostText:
                        var _text = fiber.pendingProps;
                        var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                        didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text, _isConcurrentMode);
                        break;
                }
                break;
            case SuspenseComponent:
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null) switch(fiber.tag){
                    case HostComponent:
                        var _type2 = fiber.type;
                        var _props2 = fiber.pendingProps;
                        didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                        break;
                    case HostText:
                        var _text2 = fiber.pendingProps;
                        didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                        break;
                }
                break;
            default:
                return;
        }
    }
    function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement;
        warnNonhydratedInstance(returnFiber, fiber);
    }
    function tryHydrate(fiber, nextInstance) {
        switch(fiber.tag){
            case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                var instance = canHydrateInstance(nextInstance, type);
                if (instance !== null) {
                    fiber.stateNode = instance;
                    hydrationParentFiber = fiber;
                    nextHydratableInstance = getFirstHydratableChild(instance);
                    return true;
                }
                return false;
            case HostText:
                var text = fiber.pendingProps;
                var textInstance = canHydrateTextInstance(nextInstance, text);
                if (textInstance !== null) {
                    fiber.stateNode = textInstance;
                    hydrationParentFiber = fiber; // Text Instances don't have children so there's nothing to hydrate.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            case SuspenseComponent:
                var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                if (suspenseInstance !== null) {
                    var suspenseState = {
                        dehydrated: suspenseInstance,
                        treeContext: getSuspendedTreeContext(),
                        retryLane: OffscreenLane
                    };
                    fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
                    // This simplifies the code for getHostSibling and deleting nodes,
                    // since it doesn't have to consider all Suspense boundaries and
                    // check if they're dehydrated ones or not.
                    var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                    dehydratedFragment.return = fiber;
                    fiber.child = dehydratedFragment;
                    hydrationParentFiber = fiber; // While a Suspense Instance does have children, we won't step into
                    // it during the first pass. Instead, we'll reenter it later.
                    nextHydratableInstance = null;
                    return true;
                }
                return false;
            default:
                return false;
        }
    }
    function shouldClientRenderOnMismatch(fiber) {
        return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
    }
    function throwOnHydrationMismatch(fiber) {
        throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
    }
    function tryToClaimNextHydratableInstance(fiber) {
        if (!isHydrating1) return;
        var nextInstance = nextHydratableInstance;
        if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // Nothing to hydrate. Make it an insertion.
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating1 = false;
            hydrationParentFiber = fiber;
            return;
        }
        var firstAttemptedInstance = nextInstance;
        if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
                warnNonhydratedInstance(hydrationParentFiber, fiber);
                throwOnHydrationMismatch();
            } // If we can't hydrate this instance let's try the next one.
            // We use this as a heuristic. It's based on intuition and not data so it
            // might be flawed or unnecessary.
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating1 = false;
                hydrationParentFiber = fiber;
                return;
            } // We matched the next one, we'll now assume that the first one was
            // superfluous and we'll delete it. Since we can't eagerly delete it
            // we'll have to schedule a deletion. To do that, this node needs a dummy
            // fiber associated with it.
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
        }
    }
    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode;
        var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
        var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev); // TODO: Type this specific to this type of component.
        fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update.
        if (updatePayload !== null) return true;
        return false;
    }
    function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode;
        var textContent = fiber.memoizedProps;
        var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
            // We assume that prepareToHydrateHostTextInstance is called in a context where the
            // hydration parent is the parent host component of this host text.
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) switch(returnFiber.tag){
                case HostRoot:
                    var parentContainer = returnFiber.stateNode.containerInfo;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent, isConcurrentMode);
                    break;
                case HostComponent:
                    var parentType = returnFiber.type;
                    var parentProps = returnFiber.memoizedProps;
                    var parentInstance = returnFiber.stateNode;
                    var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent, _isConcurrentMode2);
                    break;
            }
        }
        return shouldUpdate;
    }
    function prepareToHydrateHostSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        hydrateSuspenseInstance(suspenseInstance, fiber);
    }
    function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState;
        var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance) throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }
    function popToNextHostParent(fiber) {
        var parent = fiber.return;
        while(parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent)parent = parent.return;
        hydrationParentFiber = parent;
    }
    function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber) // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
        if (!isHydrating1) {
            // If we're not currently hydrating but we're in a hydration context, then
            // we were an insertion and now need to pop up reenter hydration of our
            // siblings.
            popToNextHostParent(fiber);
            isHydrating1 = true;
            return false;
        } // If we have any remaining hydratable nodes, we need to delete them now.
        // We only do this deeper than head and body since they tend to have random
        // other nodes in them. We also ignore components with pure text content in
        // side of them. We also don't delete anything inside the root container.
        if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
                if (shouldClientRenderOnMismatch(fiber)) {
                    warnIfUnhydratedTailNodes(fiber);
                    throwOnHydrationMismatch();
                } else while(nextInstance){
                    deleteHydratableInstance(fiber, nextInstance);
                    nextInstance = getNextHydratableSibling(nextInstance);
                }
            }
        }
        popToNextHostParent(fiber);
        if (fiber.tag === SuspenseComponent) nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
        else nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
        return true;
    }
    function hasUnhydratedTailNodes() {
        return isHydrating1 && nextHydratableInstance !== null;
    }
    function warnIfUnhydratedTailNodes(fiber) {
        var nextInstance = nextHydratableInstance;
        while(nextInstance){
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
        }
    }
    function resetHydrationState() {
        hydrationParentFiber = null;
        nextHydratableInstance = null;
        isHydrating1 = false;
        didSuspendOrErrorDEV = false;
    }
    function upgradeHydrationErrorsToRecoverable() {
        if (hydrationErrors !== null) {
            // Successfully completed a forced client render. The errors that occurred
            // during the hydration attempt are now recovered. We will log them in
            // commit phase, once the entire tree has finished.
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
        }
    }
    function getIsHydrating() {
        return isHydrating1;
    }
    function queueHydrationError(error) {
        if (hydrationErrors === null) hydrationErrors = [
            error
        ];
        else hydrationErrors.push(error);
    }
    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;
    var warnForMissingKey = function(child, returnFiber) {};
    didWarnAboutMaps = false;
    didWarnAboutGenerators = false;
    didWarnAboutStringRefs = {};
    /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */ ownerHasKeyUseWarning = {};
    ownerHasFunctionTypeWarning = {};
    warnForMissingKey = function(child, returnFiber) {
        if (child === null || typeof child !== 'object') return;
        if (!child._store || child._store.validated || child.key != null) return;
        if (typeof child._store !== 'object') throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
        child._store.validated = true;
        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
        if (ownerHasKeyUseWarning[componentName]) return;
        ownerHasKeyUseWarning[componentName] = true;
        error1('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
    };
    function coerceRef(returnFiber, current, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
            // TODO: Clean this up once we turn on the string ref warning for
            // everyone, because the strict mode case will no longer be relevant
            if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // because these cannot be automatically converted to an arrow function
            // using a codemod. Therefore, we don't have to warn about string refs again.
            !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
                if (!didWarnAboutStringRefs[componentName]) {
                    error1('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                    didWarnAboutStringRefs[componentName] = true;
                }
            }
            if (element._owner) {
                var owner = element._owner;
                var inst;
                if (owner) {
                    var ownerFiber = owner;
                    if (ownerFiber.tag !== ClassComponent) throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                    inst = ownerFiber.stateNode;
                }
                if (!inst) throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a " + 'bug in React. Please file an issue.');
                 // Assigning this to a const so Flow knows it won't change in the closure
                var resolvedInst = inst;
                checkPropStringCoercion(mixedRef, 'ref');
                var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref
                if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) return current.ref;
                var ref = function(value) {
                    var refs = resolvedInst.refs;
                    if (refs === emptyRefsObject) // This is a lazy pooled frozen object, so we need to initialize.
                    refs = resolvedInst.refs = {};
                    if (value === null) delete refs[stringRef];
                    else refs[stringRef] = value;
                };
                ref._stringRef = stringRef;
                return ref;
            } else {
                if (typeof mixedRef !== 'string') throw new Error('Expected ref to be a function, a string, an object returned by React.createRef(), or null.');
                if (!element._owner) throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of" + ' the following reasons:\n' + '1. You may be adding a ref to a function component\n' + "2. You may be adding a ref to a component that was not created inside a component's render method\n" + '3. You have multiple copies of React loaded\n' + 'See https://reactjs.org/link/refs-must-have-owner for more information.');
            }
        }
        return mixedRef;
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
        var childString = Object.prototype.toString.call(newChild);
        throw new Error("Objects are not valid as a React child (found: " + (childString === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : childString) + "). " + 'If you meant to render a collection of children, use an array ' + 'instead.');
    }
    function warnOnFunctionType(returnFiber) {
        var componentName = getComponentNameFromFiber(returnFiber) || 'Component';
        if (ownerHasFunctionTypeWarning[componentName]) return;
        ownerHasFunctionTypeWarning[componentName] = true;
        error1("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
    }
    function resolveLazy(lazyType) {
        var payload = lazyType._payload;
        var init = lazyType._init;
        return init(payload);
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.
    function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) // Noop.
            return;
            var deletions = returnFiber.deletions;
            if (deletions === null) {
                returnFiber.deletions = [
                    childToDelete
                ];
                returnFiber.flags |= ChildDeletion;
            } else deletions.push(childToDelete);
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) // Noop.
            return null;
             // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while(childToDelete !== null){
                deleteChild(returnFiber, childToDelete);
                childToDelete = childToDelete.sibling;
            }
            return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            // instead.
            var existingChildren = new Map();
            var existingChild = currentFirstChild;
            while(existingChild !== null){
                if (existingChild.key !== null) existingChildren.set(existingChild.key, existingChild);
                else existingChildren.set(existingChild.index, existingChild);
                existingChild = existingChild.sibling;
            }
            return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            var clone = createWorkInProgress(fiber, pendingProps);
            clone.index = 0;
            clone.sibling = null;
            return clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
                // During hydration, the useId algorithm needs to know which fibers are
                // part of a list of children (arrays, iterators).
                newFiber.flags |= Forked;
                return lastPlacedIndex;
            }
            var current = newFiber.alternate;
            if (current !== null) {
                var oldIndex = current.index;
                if (oldIndex < lastPlacedIndex) {
                    // This is a move.
                    newFiber.flags |= Placement;
                    return lastPlacedIndex;
                } else // This item can stay in place.
                return oldIndex;
            } else {
                // This is an insertion.
                newFiber.flags |= Placement;
                return lastPlacedIndex;
            }
        }
        function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) newFiber.flags |= Placement;
            return newFiber;
        }
        function updateTextNode(returnFiber, current, textContent, lanes) {
            if (current === null || current.tag !== HostText) {
                // Insert
                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, textContent);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateElement(returnFiber, current, element, lanes) {
            var elementType = element.type;
            if (elementType === REACT_FRAGMENT_TYPE) return updateFragment(returnFiber, current, element.props.children, lanes, element.key);
            if (current !== null) {
                if (current.elementType === elementType || isCompatibleFamilyForHotReloading(current, element) || // We need to do this after the Hot Reloading check above,
                // because hot reloading has different semantics than prod because
                // it doesn't resuspend. So we can't let the call below suspend.
                typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current.type) {
                    // Move based on index
                    var existing = useFiber(current, element.props);
                    existing.ref = coerceRef(returnFiber, current, element);
                    existing.return = returnFiber;
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                    return existing;
                }
            } // Insert
            var created = createFiberFromElement(element, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current, element);
            created.return = returnFiber;
            return created;
        }
        function updatePortal(returnFiber, current, portal, lanes) {
            if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
                // Insert
                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, portal.children || []);
                existing.return = returnFiber;
                return existing;
            }
        }
        function updateFragment(returnFiber, current, fragment, lanes, key) {
            if (current === null || current.tag !== Fragment) {
                // Insert
                var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                created.return = returnFiber;
                return created;
            } else {
                // Update
                var existing = useFiber(current, fragment);
                existing.return = returnFiber;
                return existing;
            }
        }
        function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
                created.return = returnFiber;
                return created;
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                        _created.ref = coerceRef(returnFiber, null, newChild);
                        _created.return = returnFiber;
                        return _created;
                    case REACT_PORTAL_TYPE:
                        var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                        _created2.return = returnFiber;
                        return _created2;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return createChild(returnFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                    _created3.return = returnFiber;
                    return _created3;
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            // Update the fiber if the keys match, otherwise return null.
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys. If the previous node is implicitly keyed
                // we can continue to replace it without aborting even if it is not a text
                // node.
                if (key !== null) return null;
                return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        if (newChild.key === key) return updateElement(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_PORTAL_TYPE:
                        if (newChild.key === key) return updatePortal(returnFiber, oldFiber, newChild, lanes);
                        else return null;
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    if (key !== null) return null;
                    return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') {
                // Text nodes don't have keys, so we neither have to check the old nor
                // new node for the key. If both are text nodes, they match.
                var matchedFiber = existingChildren.get(newIdx) || null;
                return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
            }
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                    case REACT_PORTAL_TYPE:
                        var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                        return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init;
                        return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
                }
                if (isArray(newChild) || getIteratorFn(newChild)) {
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
                }
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return null;
        }
        /**
   * Warns if there is a duplicate or missing key
   */ function warnOnInvalidKey(child, knownKeys, returnFiber) {
            if (typeof child !== 'object' || child === null) return knownKeys;
            switch(child.$$typeof){
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                    warnForMissingKey(child, returnFiber);
                    var key = child.key;
                    if (typeof key !== 'string') break;
                    if (knownKeys === null) {
                        knownKeys = new Set();
                        knownKeys.add(key);
                        break;
                    }
                    if (!knownKeys.has(key)) {
                        knownKeys.add(key);
                        break;
                    }
                    error1("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                    break;
                case REACT_LAZY_TYPE:
                    var payload = child._payload;
                    var init = child._init;
                    warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                    break;
            }
            return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            // First, validate keys.
            var knownKeys = null;
            for(var i = 0; i < newChildren.length; i++){
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for(; oldFiber !== null && newIdx < newChildren.length; newIdx++){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; newIdx < newChildren.length; newIdx++){
                    var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                    if (_newFiber === null) continue;
                    lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber;
                    else previousNewFiber.sibling = _newFiber;
                    previousNewFiber = _newFiber;
                }
                if (getIsHydrating()) {
                    var _numberOfForks = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; newIdx < newChildren.length; newIdx++){
                var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                if (_newFiber2 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber2.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber2;
                    else previousNewFiber.sibling = _newFiber2;
                    previousNewFiber = _newFiber2;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks2 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== 'function') throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            // We don't support rendering Generators because it's a mutation.
            // See https://github.com/facebook/react/issues/12995
            if (typeof Symbol === 'function' && newChildrenIterable[Symbol.toStringTag] === 'Generator') {
                if (!didWarnAboutGenerators) error1("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                didWarnAboutGenerators = true;
            } // Warn about using Maps as children
            if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) error1("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                didWarnAboutMaps = true;
            } // First, validate keys.
            // We'll get a different iterator later for the main pass.
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for(; !_step.done; _step = _newChildren.next()){
                    var child = _step.value;
                    knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) throw new Error('An iterable object provided no iterator.');
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for(; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()){
                if (oldFiber.index > newIdx) {
                    nextOldFiber = oldFiber;
                    oldFiber = null;
                } else nextOldFiber = oldFiber.sibling;
                var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                if (newFiber === null) {
                    // TODO: This breaks on empty slots like null children. That's
                    // unfortunate because it triggers the slow path all the time. We need
                    // a better way to communicate whether this was a miss or null,
                    // boolean, undefined, etc.
                    if (oldFiber === null) oldFiber = nextOldFiber;
                    break;
                }
                if (shouldTrackSideEffects) {
                    if (oldFiber && newFiber.alternate === null) // We matched the slot, but we didn't reuse the existing fiber, so we
                    // need to delete the existing child.
                    deleteChild(returnFiber, oldFiber);
                }
                lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
                else // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
                previousNewFiber = newFiber;
                oldFiber = nextOldFiber;
            }
            if (step.done) {
                // We've reached the end of the new children. We can delete the rest.
                deleteRemainingChildren(returnFiber, oldFiber);
                if (getIsHydrating()) {
                    var numberOfForks = newIdx;
                    pushTreeFork(returnFiber, numberOfForks);
                }
                return resultingFirstChild;
            }
            if (oldFiber === null) {
                // If we don't have any more existing children we can choose a fast path
                // since the rest will all be insertions.
                for(; !step.done; newIdx++, step = newChildren.next()){
                    var _newFiber3 = createChild(returnFiber, step.value, lanes);
                    if (_newFiber3 === null) continue;
                    lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) // TODO: Move out of the loop. This only happens for the first run.
                    resultingFirstChild = _newFiber3;
                    else previousNewFiber.sibling = _newFiber3;
                    previousNewFiber = _newFiber3;
                }
                if (getIsHydrating()) {
                    var _numberOfForks3 = newIdx;
                    pushTreeFork(returnFiber, _numberOfForks3);
                }
                return resultingFirstChild;
            } // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.
            for(; !step.done; newIdx++, step = newChildren.next()){
                var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                if (_newFiber4 !== null) {
                    if (shouldTrackSideEffects) {
                        if (_newFiber4.alternate !== null) // The new fiber is a work in progress, but if there exists a
                        // current, that means that we reused the fiber. We need to delete
                        // it from the child list so that we don't add it to the deletion
                        // list.
                        existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                    }
                    lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                    if (previousNewFiber === null) resultingFirstChild = _newFiber4;
                    else previousNewFiber.sibling = _newFiber4;
                    previousNewFiber = _newFiber4;
                }
            }
            if (shouldTrackSideEffects) // Any existing children that weren't consumed above were deleted. We need
            // to add them to the deletion list.
            existingChildren.forEach(function(child) {
                return deleteChild(returnFiber, child);
            });
            if (getIsHydrating()) {
                var _numberOfForks4 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                // We already have an existing node so let's just update it and delete
                // the rest.
                deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                var existing = useFiber(currentFirstChild, textContent);
                existing.return = returnFiber;
                return existing;
            } // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
            var key = element.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    var elementType = element.type;
                    if (elementType === REACT_FRAGMENT_TYPE) {
                        if (child.tag === Fragment) {
                            deleteRemainingChildren(returnFiber, child.sibling);
                            var existing = useFiber(child, element.props.children);
                            existing.return = returnFiber;
                            existing._debugSource = element._source;
                            existing._debugOwner = element._owner;
                            return existing;
                        }
                    } else if (child.elementType === elementType || isCompatibleFamilyForHotReloading(child, element) || // We need to do this after the Hot Reloading check above,
                    // because hot reloading has different semantics than prod because
                    // it doesn't resuspend. So we can't let the call below suspend.
                    typeof elementType === 'object' && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var _existing = useFiber(child, element.props);
                        _existing.ref = coerceRef(returnFiber, child, element);
                        _existing.return = returnFiber;
                        _existing._debugSource = element._source;
                        _existing._debugOwner = element._owner;
                        return _existing;
                    }
                     // Didn't match.
                    deleteRemainingChildren(returnFiber, child);
                    break;
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            if (element.type === REACT_FRAGMENT_TYPE) {
                var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                created.return = returnFiber;
                return created;
            } else {
                var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                _created4.return = returnFiber;
                return _created4;
            }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while(child !== null){
                // TODO: If key === null and child.key === null, then this only applies to
                // the first item in the list.
                if (child.key === key) {
                    if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                        deleteRemainingChildren(returnFiber, child.sibling);
                        var existing = useFiber(child, portal.children || []);
                        existing.return = returnFiber;
                        return existing;
                    } else {
                        deleteRemainingChildren(returnFiber, child);
                        break;
                    }
                } else deleteChild(returnFiber, child);
                child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
        } // This API will tag the children with the side-effect of the reconciliation
        // itself. They will be added to the side-effect list as we pass through the
        // children and the parent.
        function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.
            // Handle top level unkeyed fragments as if they were arrays.
            // This leads to an ambiguity between <>{[...]}</> and <>...</>.
            // We treat the ambiguous cases above the same.
            var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) newChild = newChild.props.children;
             // Handle object types
            if (typeof newChild === 'object' && newChild !== null) {
                switch(newChild.$$typeof){
                    case REACT_ELEMENT_TYPE:
                        return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_PORTAL_TYPE:
                        return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                    case REACT_LAZY_TYPE:
                        var payload = newChild._payload;
                        var init = newChild._init; // TODO: This function is supposed to be non-recursive.
                        return reconcileChildFibers(returnFiber, currentFirstChild, init(payload), lanes);
                }
                if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
                if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
                throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === 'string' && newChild !== '' || typeof newChild === 'number') return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
            if (typeof newChild === 'function') warnOnFunctionType(returnFiber);
            return deleteRemainingChildren(returnFiber, currentFirstChild);
        }
        return reconcileChildFibers;
    }
    var reconcileChildFibers1 = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);
    function cloneChildFibers(current, workInProgress) {
        if (current !== null && workInProgress.child !== current.child) throw new Error('Resuming work not yet implemented.');
        if (workInProgress.child === null) return;
        var currentChild = workInProgress.child;
        var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
        workInProgress.child = newChild;
        newChild.return = workInProgress;
        while(currentChild.sibling !== null){
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress;
        }
        newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.
    function resetChildFibers(workInProgress, lanes) {
        var child = workInProgress.child;
        while(child !== null){
            resetWorkInProgress(child, lanes);
            child = child.sibling;
        }
    }
    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);
    function requiredContext(c) {
        if (c === NO_CONTEXT) throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c;
    }
    function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
    }
    function pushHostContainer(fiber, nextRootInstance) {
        // Push current root instance onto the stack;
        // This allows us to reset root when portals are popped.
        push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
        // However, we can't just call getRootHostContext() and push it because
        // we'd have a different number of entries on the stack depending on
        // whether getRootHostContext() throws somewhere in renderer code or not.
        // So we push an empty value first. This lets us safely unwind on errors.
        push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.
        pop(contextStackCursor$1, fiber);
        push(contextStackCursor$1, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
        pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
    }
    function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        var context = requiredContext(contextStackCursor$1.current);
        var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.
        if (context === nextContext) return;
         // Track the context and the Fiber that provided it.
        // This enables us to pop only Fibers that provide unique contexts.
        push(contextFiberStackCursor, fiber, fiber);
        push(contextStackCursor$1, nextContext, fiber);
    }
    function popHostContext(fiber) {
        // Do not pop unless this Fiber provided the current context.
        // pushHostContext() only pushes Fibers that provide unique contexts.
        if (contextFiberStackCursor.current !== fiber) return;
        pop(contextStackCursor$1, fiber);
        pop(contextFiberStackCursor, fiber);
    }
    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.
    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.
    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.
    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);
    function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
    }
    function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
    }
    function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }
    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
    }
    function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
    }
    function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
    }
    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
        // If it was the primary children that just suspended, capture and render the
        // fallback. Otherwise, don't capture and bubble to the next boundary.
        var nextState = workInProgress.memoizedState;
        if (nextState !== null) {
            if (nextState.dehydrated !== null) // A dehydrated boundary always captures.
            return true;
            return false;
        }
        var props = workInProgress.memoizedProps; // Regular boundaries always capture.
        return true;
    }
    function findFirstSuspended(row) {
        var node = row;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) {
                    var dehydrated = state.dehydrated;
                    if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) return node;
                }
            } else if (node.tag === SuspenseListComponent && // keep track of whether it suspended or not.
            node.memoizedProps.revealOrder !== undefined) {
                var didSuspend = (node.flags & DidCapture) !== NoFlags;
                if (didSuspend) return node;
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === row) return null;
            while(node.sibling === null){
                if (node.return === null || node.return === row) return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return null;
    }
    var NoFlags$1 = /*   */ 0; // Represents whether effect should fire.
    var HasEffect = /* */ 1; // Represents the phase in which the effect (not the clean-up) fires.
    var Insertion = /*  */ 2;
    var Layout = /*    */ 4;
    var Passive$1 = /*   */ 8;
    // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.
    var workInProgressSources = [];
    function resetWorkInProgressVersions() {
        for(var i = 0; i < workInProgressSources.length; i++){
            var mutableSource = workInProgressSources[i];
            mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
    }
    // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.
    function registerMutableSourceForHydration(root, mutableSource) {
        var getVersion = mutableSource._getVersion;
        var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
        // Retaining it forever may interfere with GC.
        if (root.mutableSourceEagerHydrationData == null) root.mutableSourceEagerHydrationData = [
            mutableSource,
            version
        ];
        else root.mutableSourceEagerHydrationData.push(mutableSource, version);
    }
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnUncachedGetSnapshot;
    didWarnAboutMismatchedHooksForComponent = new Set();
    // These are set right before calling the component.
    var renderLanes1 = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.
    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.
    var currentHook1 = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.
    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.
    var didScheduleRenderPhaseUpdateDuringThisPass = false; // Counts the number of useId hooks in this component.
    var localIdCounter = 0; // Used for ids that are generated completely client-side (i.e. not during
    // hydration). This counter is global, so client ids are not stable across
    // render attempts.
    var globalClientIdCounter = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook
    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.
    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.
    var ignorePreviousDependencies = false;
    function mountHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev === null) hookTypesDev = [
            hookName
        ];
        else hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
        var hookName = currentHookNameInDev;
        if (hookTypesDev !== null) {
            hookTypesUpdateIndexDev++;
            if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) warnOnHookMismatchInDev(hookName);
        }
    }
    function checkDepsAreArrayDev(deps) {
        if (deps !== undefined && deps !== null && !isArray(deps)) // Verify deps, but only on mount to avoid extra checks.
        // It's unlikely their type would change as usually you define them inline.
        error1("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
    }
    function warnOnHookMismatchInDev(currentHookName) {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
            didWarnAboutMismatchedHooksForComponent.add(componentName);
            if (hookTypesDev !== null) {
                var table = '';
                var secondColumnStart = 30;
                for(var i = 0; i <= hookTypesUpdateIndexDev; i++){
                    var oldHookName = hookTypesDev[i];
                    var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                    var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
                    // lol @ IE not supporting String#repeat
                    while(row.length < secondColumnStart)row += ' ';
                    row += newHookName + '\n';
                    table += row;
                }
                error1("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
            }
        }
    }
    function throwInvalidHookError() {
        throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies) // Only true when this component is being hot reloaded.
        return false;
        if (prevDeps === null) {
            error1("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            return false;
        }
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) error1("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
        for(var i = 0; i < prevDeps.length && i < nextDeps.length; i++){
            if (objectIs(nextDeps[i], prevDeps[i])) continue;
            return false;
        }
        return true;
    }
    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
        renderLanes1 = nextRenderLanes;
        currentlyRenderingFiber$1 = workInProgress;
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:
        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.lanes = NoLanes; // The following should have already been reset
        if (current !== null && current.memoizedState !== null) ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        else if (hookTypesDev !== null) // This dispatcher handles an edge case where a component is updating,
        // but no stateful hooks have been used.
        // We want to match the production code behavior (which will use HooksDispatcherOnMount),
        // but with the extra DEV validation to ensure hooks ordering hasn't changed.
        // This dispatcher does that.
        ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        else ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component(props, secondArg); // Check if there was a render phase update
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
            // Keep rendering in a loop for as long as render phase updates continue to
            // be scheduled. Use a counter to prevent infinite loops.
            var numberOfReRenders = 0;
            do {
                didScheduleRenderPhaseUpdateDuringThisPass = false;
                localIdCounter = 0;
                if (numberOfReRenders >= RE_RENDER_LIMIT) throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                numberOfReRenders += 1;
                // Even when hot reloading, allow dependencies to stabilize
                // after first render to prevent infinite render phase updates.
                ignorePreviousDependencies = false;
                currentHook1 = null;
                workInProgressHook = null;
                workInProgress.updateQueue = null;
                // Also validate hook order for cascading updates.
                hookTypesUpdateIndexDev = -1;
                ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                children = Component(props, secondArg);
            }while (didScheduleRenderPhaseUpdateDuringThisPass)
        } // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        workInProgress._debugHookTypes = hookTypesDev;
        // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
        var didRenderTooFewHooks = currentHook1 !== null && currentHook1.next !== null;
        renderLanes1 = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook1 = null;
        workInProgressHook = null;
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1; // Confirm that a static flag was not added or removed since the last
        // render. If this fires, it suggests that we incorrectly reset the static
        // flags in some other part of the codebase. This has happened before, for
        // example, in the SuspenseList implementation.
        if (current !== null && (current.flags & StaticMask) !== (workInProgress.flags & StaticMask) && // and creates false positives. To make this work in legacy mode, we'd
        // need to mark fibers that commit in an incomplete state, somehow. For
        // now I'll disable the warning that most of the bugs that would trigger
        // it are either exclusive to concurrent mode or exist in both.
        (current.mode & ConcurrentMode) !== NoMode) error1("Internal React error: Expected static flag was missing. Please notify the React team.");
        didScheduleRenderPhaseUpdate = false; // This is reset by checkDidRenderIdHook
        // localIdCounter = 0;
        if (didRenderTooFewHooks) throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
    }
    function checkDidRenderIdHook() {
        // This should be called immediately after every renderWithHooks call.
        // Conceptually, it's part of the return value of renderWithHooks; it's only a
        // separate function to avoid using an array tuple.
        var didRenderIdHook = localIdCounter !== 0;
        localIdCounter = 0;
        return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
        workInProgress.updateQueue = current.updateQueue; // TODO: Don't need to reset the flags here, because they're reset in the
        // complete phase (bubbleProperties).
        if ((workInProgress.mode & StrictEffectsMode) !== NoMode) workInProgress.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
        else workInProgress.flags &= ~(Passive | Update);
        current.lanes = removeLanes(current.lanes, lanes);
    }
    function resetHooksAfterThrow() {
        // We can assume the previous dispatcher is always this one, since we set it
        // at the beginning of the render phase and there's no re-entrance.
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
        if (didScheduleRenderPhaseUpdate) {
            // There were render phase updates. These are only valid for this render
            // phase, which we are now aborting. Remove the updates from the queues so
            // they do not persist to the next render. Do not remove updates from hooks
            // that weren't processed.
            //
            // Only reset the updates from the queue if it has a clone. If it does
            // not have a clone, that means it wasn't processed, and the updates were
            // scheduled before we entered the render phase.
            var hook = currentlyRenderingFiber$1.memoizedState;
            while(hook !== null){
                var queue = hook.queue;
                if (queue !== null) queue.pending = null;
                hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
        }
        renderLanes1 = NoLanes;
        currentlyRenderingFiber$1 = null;
        currentHook1 = null;
        workInProgressHook = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
        didScheduleRenderPhaseUpdateDuringThisPass = false;
        localIdCounter = 0;
    }
    function mountWorkInProgressHook() {
        var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
        };
        if (workInProgressHook === null) // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
        else // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
        return workInProgressHook;
    }
    function updateWorkInProgressHook() {
        // This function is used both for updates and for re-renders triggered by a
        // render phase update. It assumes there is either a current hook we can
        // clone, or a work-in-progress hook from a previous render pass that we can
        // use as a base. When we reach the end of the base list, we must switch to
        // the dispatcher used for mounts.
        var nextCurrentHook;
        if (currentHook1 === null) {
            var current = currentlyRenderingFiber$1.alternate;
            if (current !== null) nextCurrentHook = current.memoizedState;
            else nextCurrentHook = null;
        } else nextCurrentHook = currentHook1.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null) nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
        else nextWorkInProgressHook = workInProgressHook.next;
        if (nextWorkInProgressHook !== null) {
            // There's already a work-in-progress. Reuse it.
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook1 = nextCurrentHook;
        } else {
            // Clone from the current hook.
            if (nextCurrentHook === null) throw new Error('Rendered more hooks than during the previous render.');
            currentHook1 = nextCurrentHook;
            var newHook = {
                memoizedState: currentHook1.memoizedState,
                baseState: currentHook1.baseState,
                baseQueue: currentHook1.baseQueue,
                queue: currentHook1.queue,
                next: null
            };
            if (workInProgressHook === null) // This is the first hook in the list.
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            else // Append to the end of the list.
            workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
        return {
            lastEffect: null,
            stores: null
        };
    }
    function basicStateReducer(state, action) {
        // $FlowFixMe: Flow doesn't like mixed types
        return typeof action === 'function' ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook();
        var initialState;
        if (init !== undefined) initialState = init(initialArg);
        else initialState = initialArg;
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
        queue.lastRenderedReducer = reducer;
        var current = currentHook1; // The last rebase update that is NOT part of the base state.
        var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.
        var pendingQueue = queue.pending;
        if (pendingQueue !== null) {
            // We have new updates that haven't been processed yet.
            // We'll add them to the base queue.
            if (baseQueue !== null) {
                // Merge the pending queue and the base queue.
                var baseFirst = baseQueue.next;
                var pendingFirst = pendingQueue.next;
                baseQueue.next = pendingFirst;
                pendingQueue.next = baseFirst;
            }
            if (current.baseQueue !== baseQueue) // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error1("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
            current.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
        }
        if (baseQueue !== null) {
            // We have a queue to process.
            var first = baseQueue.next;
            var newState = current.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update = first;
            do {
                var updateLane = update.lane;
                if (!isSubsetOfLanes(renderLanes1, updateLane)) {
                    // Priority is insufficient. Skip this update. If this is the first
                    // skipped update, the previous update/state is the new base
                    // update/state.
                    var clone = {
                        lane: updateLane,
                        action: update.action,
                        hasEagerState: update.hasEagerState,
                        eagerState: update.eagerState,
                        next: null
                    };
                    if (newBaseQueueLast === null) {
                        newBaseQueueFirst = newBaseQueueLast = clone;
                        newBaseState = newState;
                    } else newBaseQueueLast = newBaseQueueLast.next = clone;
                     // Update the remaining priority in the queue.
                    // TODO: Don't need to accumulate this. Instead, we can remove
                    // renderLanes from the original lanes.
                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                    markSkippedUpdateLanes(updateLane);
                } else {
                    // This update does have sufficient priority.
                    if (newBaseQueueLast !== null) {
                        var _clone = {
                            // This update is going to be committed so we never want uncommit
                            // it. Using NoLane works because 0 is a subset of all bitmasks, so
                            // this will never be skipped by the check above.
                            lane: NoLane,
                            action: update.action,
                            hasEagerState: update.hasEagerState,
                            eagerState: update.eagerState,
                            next: null
                        };
                        newBaseQueueLast = newBaseQueueLast.next = _clone;
                    } // Process this update.
                    if (update.hasEagerState) // If this update is a state update (not a reducer) and was processed eagerly,
                    // we can use the eagerly computed state
                    newState = update.eagerState;
                    else {
                        var action = update.action;
                        newState = reducer(newState, action);
                    }
                }
                update = update.next;
            }while (update !== null && update !== first)
            if (newBaseQueueLast === null) newBaseState = newState;
            else newBaseQueueLast.next = newBaseQueueFirst;
             // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
        } // Interleaved updates are stored on a separate queue. We aren't going to
        // process them during this render, but we do need to track which lanes
        // are remaining.
        var lastInterleaved = queue.interleaved;
        if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
                var interleavedLane = interleaved.lane;
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
                markSkippedUpdateLanes(interleavedLane);
                interleaved = interleaved.next;
            }while (interleaved !== lastInterleaved)
        } else if (baseQueue === null) // `queue.lanes` is used for entangling transitions. We can set it back to
        // zero once the queue is empty.
        queue.lanes = NoLanes;
        var dispatch = queue.dispatch;
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook();
        var queue = hook.queue;
        if (queue === null) throw new Error('Should have a queue. This is likely a bug in React. Please file an issue.');
        queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var dispatch = queue.dispatch;
        var lastRenderPhaseUpdate = queue.pending;
        var newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
            // The queue doesn't persist past this render pass.
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update = firstRenderPhaseUpdate;
            do {
                // Process this render phase update. We don't have to check the
                // priority because it will always be the same as the current
                // render's.
                var action = update.action;
                newState = reducer(newState, action);
                update = update.next;
            }while (update !== firstRenderPhaseUpdate) // Mark that the fiber performed work, but only if the new state is
            // different from the current state.
            if (!objectIs(newState, hook.memoizedState)) markWorkInProgressReceivedUpdate();
            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.
            if (hook.baseQueue === null) hook.baseState = newState;
            queue.lastRenderedState = newState;
        }
        return [
            newState,
            dispatch
        ];
    }
    function mountMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function updateMutableSource(source, getSnapshot, subscribe) {
        return undefined;
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = mountWorkInProgressHook();
        var nextSnapshot;
        var isHydrating = getIsHydrating();
        if (isHydrating) {
            if (getServerSnapshot === undefined) throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            nextSnapshot = getServerSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                    error1('The result of getServerSnapshot should be cached to avoid an infinite loop');
                    didWarnUncachedGetSnapshot = true;
                }
            }
        } else {
            nextSnapshot = getSnapshot();
            if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                    error1('The result of getSnapshot should be cached to avoid an infinite loop');
                    didWarnUncachedGetSnapshot = true;
                }
            }
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            //
            // We won't do this if we're hydrating server-rendered content, because if
            // the content is stale, it's already visible anyway. Instead we'll patch
            // it up in a passive effect.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
            if (!includesBlockingLane(root, renderLanes1)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        } // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        hook.memoizedState = nextSnapshot;
        var inst = {
            value: nextSnapshot,
            getSnapshot: getSnapshot
        };
        hook.queue = inst; // Schedule an effect to subscribe to the store.
        mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Schedule an effect to update the mutable instance fields. We will update
        // this whenever subscribe, getSnapshot, or value changes. Because there's no
        // clean-up function, and we track the deps correctly, we can call pushEffect
        // directly, without storing any additional state. For the same reason, we
        // don't need to set a static flag, either.
        // TODO: We can move this to the passive phase once we add a pre-commit
        // consistency check. See the next comment.
        fiber.flags |= Passive;
        pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null);
        return nextSnapshot;
    }
    function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1;
        var hook = updateWorkInProgressHook(); // Read the current snapshot from the store on every render. This breaks the
        // normal rules of React, and only works because store updates are
        // always synchronous.
        var nextSnapshot = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error1('The result of getSnapshot should be cached to avoid an infinite loop');
                didWarnUncachedGetSnapshot = true;
            }
        }
        var prevSnapshot = hook.memoizedState;
        var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
        if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
        }
        var inst = hook.queue;
        updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [
            subscribe
        ]); // Whenever getSnapshot or subscribe changes, we need to check in the
        // commit phase if there was an interleaved mutation. In concurrent mode
        // this can happen all the time, but even in synchronous mode, an earlier
        // effect may have mutated the store.
        if (inst.getSnapshot !== getSnapshot || snapshotChanged || // checking whether we scheduled a subscription effect above.
        workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), undefined, null); // Unless we're rendering a blocking lane, schedule a consistency check.
            // Right before committing, we will walk the tree and check if any of the
            // stores were mutated.
            var root = getWorkInProgressRoot();
            if (root === null) throw new Error('Expected a work-in-progress root. This is a bug in React. Please file an issue.');
            if (!includesBlockingLane(root, renderLanes1)) pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        return nextSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= StoreConsistency;
        var check = {
            getSnapshot: getSnapshot,
            value: renderedSnapshot
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [
                check
            ];
        } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) componentUpdateQueue.stores = [
                check
            ];
            else stores.push(check);
        }
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        // These are updated in the passive phase
        inst.value = nextSnapshot;
        inst.getSnapshot = getSnapshot; // Something may have been mutated in between render and commit. This could
        // have been in an event that fired before the passive effects, or it could
        // have been in a layout effect. In that case, we would have used the old
        // snapsho and getSnapshot values to bail out. We need to check one more time.
        if (checkIfSnapshotChanged(inst)) // Force a re-render.
        forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
        var handleStoreChange = function() {
            // The store changed. Check if the snapshot changed since the last time we
            // read from the store.
            if (checkIfSnapshotChanged(inst)) // Force a re-render.
            forceStoreRerender(fiber);
        }; // Subscribe to the store and return a clean-up function.
        return subscribe(handleStoreChange);
    }
    function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot;
        var prevValue = inst.value;
        try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
        } catch (error) {
            return true;
        }
    }
    function forceStoreRerender(fiber) {
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    }
    function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        if (typeof initialState === 'function') // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
        hook.memoizedState = hook.baseState = initialState;
        var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
        return [
            hook.memoizedState,
            dispatch
        ];
    }
    function updateState(initialState) {
        return updateReducer(basicStateReducer);
    }
    function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
    }
    function pushEffect(tag, create, destroy, deps) {
        var effect = {
            tag: tag,
            create: create,
            destroy: destroy,
            deps: deps,
            // Circular
            next: null
        };
        var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) componentUpdateQueue.lastEffect = effect.next = effect;
            else {
                var firstEffect = lastEffect.next;
                lastEffect.next = effect;
                effect.next = firstEffect;
                componentUpdateQueue.lastEffect = effect;
            }
        }
        return effect;
    }
    function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        var _ref2 = {
            current: initialValue
        };
        hook.memoizedState = _ref2;
        return _ref2;
    }
    function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var destroy = undefined;
        if (currentHook1 !== null) {
            var prevEffect = currentHook1.memoizedState;
            destroy = prevEffect.destroy;
            if (nextDeps !== null) {
                var prevDeps = prevEffect.deps;
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                    hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                    return;
                }
            }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags;
        hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }
    function mountEffect(create, deps) {
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
        else return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
    }
    function updateEffect(create, deps) {
        return updateEffectImpl(Passive, Passive$1, create, deps);
    }
    function mountInsertionEffect(create, deps) {
        return mountEffectImpl(Update, Insertion, create, deps);
    }
    function updateInsertionEffect(create, deps) {
        return updateEffectImpl(Update, Insertion, create, deps);
    }
    function mountLayoutEffect(create, deps) {
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
        if (typeof ref === 'function') {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
                refCallback(null);
            };
        } else if (ref !== null && ref !== undefined) {
            var refObject = ref;
            if (!refObject.hasOwnProperty('current')) error1("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
                refObject.current = null;
            };
        }
    }
    function mountImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error1("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        var fiberFlags = Update;
        fiberFlags |= LayoutStatic;
        if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) fiberFlags |= MountLayoutDev;
        return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function updateImperativeHandle(ref, create, deps) {
        if (typeof create !== 'function') error1("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : 'null');
        var effectDeps = deps !== null && deps !== undefined ? deps.concat([
            ref
        ]) : null;
        return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }
    function mountDebugValue(value, formatterFn) {
    // The react-debug-hooks package injects its own implementation
    // so that e.g. DevTools can display custom hook values.
    }
    var updateDebugValue = mountDebugValue;
    function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        hook.memoizedState = [
            callback,
            nextDeps
        ];
        return callback;
    }
    function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook();
        var nextDeps = deps === undefined ? null : deps;
        var prevState = hook.memoizedState;
        if (prevState !== null) // Assume these are defined. If they're not, areHookInputsEqual will warn.
        {
            if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) return prevState[0];
            }
        }
        var nextValue = nextCreate();
        hook.memoizedState = [
            nextValue,
            nextDeps
        ];
        return nextValue;
    }
    function mountDeferredValue(value) {
        var hook = mountWorkInProgressHook();
        hook.memoizedState = value;
        return value;
    }
    function updateDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        var resolvedCurrentHook = currentHook1;
        var prevValue = resolvedCurrentHook.memoizedState;
        return updateDeferredValueImpl(hook, prevValue, value);
    }
    function rerenderDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        if (currentHook1 === null) {
            // This is a rerender during a mount.
            hook.memoizedState = value;
            return value;
        } else {
            // This is a rerender during an update.
            var prevValue = currentHook1.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value);
        }
    }
    function updateDeferredValueImpl(hook, prevValue, value) {
        var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes1);
        if (shouldDeferValue) {
            // This is an urgent update. If the value has changed, keep using the
            // previous value and spawn a deferred render to update it later.
            if (!objectIs(value, prevValue)) {
                // Schedule a deferred render
                var deferredLane = claimNextTransitionLane();
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
                markSkippedUpdateLanes(deferredLane); // Set this to true to indicate that the rendered value is inconsistent
                // from the latest value. The name "baseState" doesn't really match how we
                // use it because we're reusing a state hook field instead of creating a
                // new one.
                hook.baseState = true;
            } // Reuse the previous value
            return prevValue;
        } else {
            // This is not an urgent update, so we can use the latest value regardless
            // of what it is. No need to defer it.
            // However, if we're currently inside a spawned render, then we need to mark
            // this as an update to prevent the fiber from bailing out.
            //
            // `baseState` is true when the current value is different from the rendered
            // value. The name doesn't really match how we use it because we're reusing
            // a state hook field instead of creating a new one.
            if (hook.baseState) {
                // Flip this back to false.
                hook.baseState = false;
                markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value;
            return value;
        }
    }
    function startTransition(setPending, callback, options) {
        var previousPriority = getCurrentUpdatePriority();
        setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
        setPending(true);
        var prevTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition = {};
        var currentTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition._updatedFibers = new Set();
        try {
            setPending(false);
            callback();
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                currentTransition._updatedFibers.clear();
            }
        }
    }
    function mountTransition() {
        var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1]; // The `start` method never changes.
        var start = startTransition.bind(null, setPending);
        var hook = mountWorkInProgressHook();
        hook.memoizedState = start;
        return [
            isPending,
            start
        ];
    }
    function updateTransition() {
        var _updateState = updateState(), isPending = _updateState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    function rerenderTransition() {
        var _rerenderState = rerenderState(), isPending = _rerenderState[0];
        var hook = updateWorkInProgressHook();
        var start = hook.memoizedState;
        return [
            isPending,
            start
        ];
    }
    var isUpdatingOpaqueValueInRenderPhase = false;
    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
    }
    function mountId() {
        var hook = mountWorkInProgressHook();
        var root = getWorkInProgressRoot(); // TODO: In Fizz, id generation is specific to each server config. Maybe we
        // should do this in Fiber, too? Deferring this decision for now because
        // there's no other place to store the prefix except for an internal field on
        // the public createRoot object, which the fiber tree does not currently have
        // a reference to.
        var identifierPrefix = root.identifierPrefix;
        var id;
        if (getIsHydrating()) {
            var treeId = getTreeId(); // Use a captial R prefix for server-generated ids.
            id = ':' + identifierPrefix + 'R' + treeId; // Unless this is the first id at this level, append a number at the end
            // that represents the position of this useId hook among all the useId
            // hooks for this fiber.
            var localId = localIdCounter++;
            if (localId > 0) id += 'H' + localId.toString(32);
            id += ':';
        } else {
            // Use a lowercase r prefix for client-generated ids.
            var globalClientId = globalClientIdCounter++;
            id = ':' + identifierPrefix + 'r' + globalClientId.toString(32) + ':';
        }
        hook.memoizedState = id;
        return id;
    }
    function updateId() {
        var hook = updateWorkInProgressHook();
        var id = hook.memoizedState;
        return id;
    }
    function dispatchReducerAction(fiber, queue, action) {
        if (typeof arguments[3] === 'function') error1("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            enqueueUpdate$1(fiber, queue, update);
            var eventTime = requestEventTime();
            var root = scheduleUpdateOnFiber(fiber, lane, eventTime);
            if (root !== null) entangleTransitionUpdate(root, queue, lane);
        }
        markUpdateInDevTools(fiber, lane);
    }
    function dispatchSetState(fiber, queue, action) {
        if (typeof arguments[3] === 'function') error1("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber);
        var update = {
            lane: lane,
            action: action,
            hasEagerState: false,
            eagerState: null,
            next: null
        };
        if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
        else {
            enqueueUpdate$1(fiber, queue, update);
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                // The queue is currently empty, which means we can eagerly compute the
                // next state before entering the render phase. If the new state is the
                // same as the current state, we may be able to bail out entirely.
                var lastRenderedReducer = queue.lastRenderedReducer;
                if (lastRenderedReducer !== null) {
                    var prevDispatcher;
                    prevDispatcher = ReactCurrentDispatcher$1.current;
                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                    try {
                        var currentState = queue.lastRenderedState;
                        var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
                        // it, on the update object. If the reducer hasn't changed by the
                        // time we enter the render phase, then the eager state can be used
                        // without calling the reducer again.
                        update.hasEagerState = true;
                        update.eagerState = eagerState;
                        if (objectIs(eagerState, currentState)) // Fast path. We can bail out without scheduling React to re-render.
                        // It's still possible that we'll need to rebase this update later,
                        // if the component re-renders for a different reason and by that
                        // time the reducer has changed.
                        return;
                    } catch (error) {} finally{
                        ReactCurrentDispatcher$1.current = prevDispatcher;
                    }
                }
            }
            var eventTime = requestEventTime();
            var root = scheduleUpdateOnFiber(fiber, lane, eventTime);
            if (root !== null) entangleTransitionUpdate(root, queue, lane);
        }
        markUpdateInDevTools(fiber, lane);
    }
    function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
    }
    function enqueueRenderPhaseUpdate(queue, update) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
        var pending = queue.pending;
        if (pending === null) // This is the first update. Create a circular list.
        update.next = update;
        else {
            update.next = pending.next;
            pending.next = update;
        }
        queue.pending = update;
    }
    function enqueueUpdate$1(fiber, queue, update, lane) {
        if (isInterleavedUpdate(fiber)) {
            var interleaved = queue.interleaved;
            if (interleaved === null) {
                // This is the first update. Create a circular list.
                update.next = update; // At the end of the current render, this queue's interleaved updates will
                // be transferred to the pending queue.
                pushInterleavedQueue(queue);
            } else {
                update.next = interleaved.next;
                interleaved.next = update;
            }
            queue.interleaved = update;
        } else {
            var pending = queue.pending;
            if (pending === null) // This is the first update. Create a circular list.
            update.next = update;
            else {
                update.next = pending.next;
                pending.next = update;
            }
            queue.pending = update;
        }
    }
    function entangleTransitionUpdate(root, queue, lane) {
        if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes; // If any entangled lanes are no longer pending on the root, then they
            // must have finished. We can remove them from the shared queue, which
            // represents a superset of the actually pending lanes. In some cases we
            // may entangle more than we need to, but that's OK. In fact it's worse if
            // we *don't* entangle when we should.
            queueLanes = intersectLanes(queueLanes, root.pendingLanes); // Entangle the new transition lane with the other transition lanes.
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes; // Even if queue.lanes already include lane, we don't know for certain if
            // the lane finished since the last time we entangled it. So we need to
            // entangle it again, just to be sure.
            markRootEntangled(root, newQueueLanes);
        }
    }
    function markUpdateInDevTools(fiber, lane, action) {
        markStateUpdateScheduled(fiber, lane);
    }
    var ContextOnlyDispatcher = {
        readContext: readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    var warnInvalidContextAccess = function() {
        error1("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
    };
    var warnInvalidHookAccess = function() {
        error1("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
    };
    HooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            mountHookTypesDev();
            checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    HooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountRef(initialValue);
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
                return mountState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            mountHookTypesDev();
            return mountId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function(context) {
            warnInvalidContextAccess();
            return readContext(context);
        },
        useCallback: function(callback, deps) {
            currentHookNameInDev = 'useCallback';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateCallback(callback, deps);
        },
        useContext: function(context) {
            currentHookNameInDev = 'useContext';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return readContext(context);
        },
        useEffect: function(create, deps) {
            currentHookNameInDev = 'useEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateEffect(create, deps);
        },
        useImperativeHandle: function(ref, create, deps) {
            currentHookNameInDev = 'useImperativeHandle';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateImperativeHandle(ref, create, deps);
        },
        useInsertionEffect: function(create, deps) {
            currentHookNameInDev = 'useInsertionEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateInsertionEffect(create, deps);
        },
        useLayoutEffect: function(create, deps) {
            currentHookNameInDev = 'useLayoutEffect';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateLayoutEffect(create, deps);
        },
        useMemo: function(create, deps) {
            currentHookNameInDev = 'useMemo';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return updateMemo(create, deps);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = 'useReducer';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderReducer(reducer, initialArg, init);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useRef: function(initialValue) {
            currentHookNameInDev = 'useRef';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateRef();
        },
        useState: function(initialState) {
            currentHookNameInDev = 'useState';
            warnInvalidHookAccess();
            updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
                return rerenderState(initialState);
            } finally{
                ReactCurrentDispatcher$1.current = prevDispatcher;
            }
        },
        useDebugValue: function(value, formatterFn) {
            currentHookNameInDev = 'useDebugValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateDebugValue();
        },
        useDeferredValue: function(value) {
            currentHookNameInDev = 'useDeferredValue';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderDeferredValue(value);
        },
        useTransition: function() {
            currentHookNameInDev = 'useTransition';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return rerenderTransition();
        },
        useMutableSource: function(source, getSnapshot, subscribe) {
            currentHookNameInDev = 'useMutableSource';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateMutableSource();
        },
        useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            currentHookNameInDev = 'useSyncExternalStore';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateSyncExternalStore(subscribe, getSnapshot);
        },
        useId: function() {
            currentHookNameInDev = 'useId';
            warnInvalidHookAccess();
            updateHookTypesDev();
            return updateId();
        },
        unstable_isNewReconciler: enableNewReconciler
    };
    var now$1 = Scheduler.unstable_now;
    var commitTime1 = 0;
    var layoutEffectStartTime = -1;
    var profilerStartTime = -1;
    var passiveEffectStartTime = -1;
    /**
 * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).
 *
 * The overall sequence is:
 *   1. render
 *   2. commit (and call `onRender`, `onCommit`)
 *   3. check for nested updates
 *   4. flush passive effects (and call `onPostCommit`)
 *
 * Nested updates are identified in step 3 above,
 * but step 4 still applies to the work that was just committed.
 * We use two flags to track nested updates then:
 * one tracks whether the upcoming update is a nested update,
 * and the other tracks whether the current update was a nested update.
 * The first value gets synced to the second at the start of the render phase.
 */ var currentUpdateIsNested = false;
    var nestedUpdateScheduled = false;
    function isCurrentUpdateNested() {
        return currentUpdateIsNested;
    }
    function markNestedUpdateScheduled() {
        nestedUpdateScheduled = true;
    }
    function resetNestedUpdateFlag() {
        currentUpdateIsNested = false;
        nestedUpdateScheduled = false;
    }
    function syncNestedUpdateFlag() {
        currentUpdateIsNested = nestedUpdateScheduled;
        nestedUpdateScheduled = false;
    }
    function getCommitTime() {
        return commitTime1;
    }
    function recordCommitTime() {
        commitTime1 = now$1();
    }
    function startProfilerTimer(fiber) {
        profilerStartTime = now$1();
        if (fiber.actualStartTime < 0) fiber.actualStartTime = now$1();
    }
    function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
    }
    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) fiber.selfBaseDuration = elapsedTime;
            profilerStartTime = -1;
        }
    }
    function recordLayoutEffectDuration(fiber) {
        if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        root.effectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        parentStateNode.effectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function recordPassiveEffectDuration(fiber) {
        if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1; // Store duration on the next nearest Profiler ancestor
            // Or the root (for the DevTools Profiler to read)
            var parentFiber = fiber.return;
            while(parentFiber !== null){
                switch(parentFiber.tag){
                    case HostRoot:
                        var root = parentFiber.stateNode;
                        if (root !== null) root.passiveEffectDuration += elapsedTime;
                        return;
                    case Profiler:
                        var parentStateNode = parentFiber.stateNode;
                        if (parentStateNode !== null) // Detached fibers have their state node cleared out.
                        // In this case, the return pointer is also cleared out,
                        // so we won't be able to report the time spent in this Profiler's subtree.
                        parentStateNode.passiveEffectDuration += elapsedTime;
                        return;
                }
                parentFiber = parentFiber.return;
            }
        }
    }
    function startLayoutEffectTimer() {
        layoutEffectStartTime = now$1();
    }
    function startPassiveEffectTimer() {
        passiveEffectStartTime = now$1();
    }
    function transferActualDuration(fiber) {
        // Transfer time spent rendering these children so we don't lose it
        // after we rerender. This is used as a helper in special cases
        // where we should count the work of multiple passes.
        var child = fiber.child;
        while(child){
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
        }
    }
    function createCapturedValue(value, source) {
        // If the value is an error, call this function immediately after it is thrown
        // so the stack is accurate.
        return {
            value: value,
            source: source,
            stack: getStackByFiberInDevAndProd(source)
        };
    }
    // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.
    function showErrorDialog(boundary, errorInfo) {
        return true;
    }
    function logCapturedError(boundary, errorInfo) {
        try {
            var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
            // This enables renderers like ReactNative to better manage redbox behavior.
            if (logError === false) return;
            var error = errorInfo.value;
            var source = errorInfo.source;
            var stack = errorInfo.stack;
            var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
            // `preventDefault()` in window `error` handler.
            // We record this information as an expando on the error.
            if (error != null && error._suppressLogging) {
                if (boundary.tag === ClassComponent) // The error is recoverable and was silenced.
                // Ignore it and don't print the stack addendum.
                // This is handy for testing error boundaries without noise.
                return;
                 // The error is fatal. Since the silencing might have
                // been accidental, we'll surface it anyway.
                // However, the browser would have silenced the original error
                // so we'll print it first, and then print the stack addendum.
                console['error'](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
            }
            var componentName = source ? getComponentNameFromFiber(source) : null;
            var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
            var errorBoundaryMessage;
            if (boundary.tag === HostRoot) errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
            else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || 'Anonymous';
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
            }
            var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console['error'](combinedMessage); // Don't transform to our wrapper
        } catch (e) {
            // This method must not throw, or React internal state will get messed up.
            // If console.error is overridden, or logCapturedError() shows a dialog that throws,
            // we want to report this error outside of the normal stack as a last resort.
            // https://github.com/facebook/react/issues/13188
            setTimeout(function() {
                throw e;
            });
        }
    }
    var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;
    function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.
        update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: null
        };
        var error = errorInfo.value;
        update.callback = function() {
            onUncaughtError(error);
            logCapturedError(fiber, errorInfo);
        };
        return update;
    }
    function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError === 'function') {
            var error$1 = errorInfo.value;
            update.payload = function() {
                return getDerivedStateFromError(error$1);
            };
            update.callback = function() {
                markFailedErrorBoundaryForHotReloading(fiber);
                logCapturedError(fiber, errorInfo);
            };
        }
        var inst = fiber.stateNode;
        if (inst !== null && typeof inst.componentDidCatch === 'function') update.callback = function callback() {
            markFailedErrorBoundaryForHotReloading(fiber);
            logCapturedError(fiber, errorInfo);
            if (typeof getDerivedStateFromError !== 'function') // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this);
            var error$1 = errorInfo.value;
            var stack = errorInfo.stack;
            this.componentDidCatch(error$1, {
                componentStack: stack !== null ? stack : ''
            });
            if (typeof getDerivedStateFromError !== 'function') // If componentDidCatch is the only error boundary method defined,
            // then it needs to call setState to recover from errors.
            // If no state update is scheduled then the boundary will swallow the error.
            {
                if (!includesSomeLane(fiber.lanes, SyncLane)) error1("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || 'Unknown');
            }
        };
        return update;
    }
    function attachPingListener(root, wakeable, lanes) {
        // Attach a ping listener
        //
        // The data might resolve before we have a chance to commit the fallback. Or,
        // in the case of a refresh, we'll never commit a fallback. So we need to
        // attach a listener now. When it resolves ("pings"), we can decide whether to
        // try rendering the tree again.
        //
        // Only attach a listener if one does not already exist for the lanes
        // we're currently rendering (which acts like a "thread ID" here).
        //
        // We only need to do this in concurrent mode. Legacy Suspense always
        // commits fallbacks synchronously, so there are no pings.
        var pingCache = root.pingCache;
        var threadIDs;
        if (pingCache === null) {
            pingCache = root.pingCache = new PossiblyWeakMap$1();
            threadIDs = new Set();
            pingCache.set(wakeable, threadIDs);
        } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === undefined) {
                threadIDs = new Set();
                pingCache.set(wakeable, threadIDs);
            }
        }
        if (!threadIDs.has(lanes)) {
            // Memoize using the thread ID to prevent redundant listeners.
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
            if (isDevToolsPresent) // If we have pending work still, restore the original updaters
            restorePendingUpdaters(root, lanes);
            wakeable.then(ping, ping);
        }
    }
    function attachRetryListener(suspenseBoundary, root, wakeable, lanes) {
        // Retry listener
        //
        // If the fallback does commit, we need to attach a different type of
        // listener. This one schedules an update on the Suspense boundary to turn
        // the fallback state off.
        //
        // Stash the wakeable on the boundary fiber so we can access it in the
        // commit phase.
        //
        // When the wakeable resolves, we'll attempt to render the boundary
        // again ("retry").
        var wakeables = suspenseBoundary.updateQueue;
        if (wakeables === null) {
            var updateQueue = new Set();
            updateQueue.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue;
        } else wakeables.add(wakeable);
    }
    function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
        // A legacy mode Suspense quirk, only relevant to hook components.
        var tag = sourceFiber.tag;
        if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
                sourceFiber.updateQueue = currentSource.updateQueue;
                sourceFiber.memoizedState = currentSource.memoizedState;
                sourceFiber.lanes = currentSource.lanes;
            } else {
                sourceFiber.updateQueue = null;
                sourceFiber.memoizedState = null;
            }
        }
    }
    function getNearestSuspenseBoundaryToCapture(returnFiber) {
        var node = returnFiber;
        do {
            if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) return node;
             // This boundary already captured during this render. Continue to the next
            // boundary.
            node = node.return;
        }while (node !== null)
        return null;
    }
    function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes) {
        // This marks a Suspense boundary so that when we're unwinding the stack,
        // it captures the suspended "exception" and does a second (fallback) pass.
        if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            // Legacy Mode Suspense
            //
            // If the boundary is in legacy mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. When the Suspense boundary completes,
            // we'll do a second pass to render the fallback.
            if (suspenseBoundary === returnFiber) // Special case where we suspended while reconciling the children of
            // a Suspense boundary's inner Offscreen wrapper fiber. This happens
            // when a React.lazy component is a direct child of a
            // Suspense boundary.
            //
            // Suspense boundaries are implemented as multiple fibers, but they
            // are a single conceptual unit. The legacy mode behavior where we
            // pretend the suspended fiber committed as `null` won't work,
            // because in this case the "suspended" fiber is the inner
            // Offscreen wrapper.
            //
            // Because the contents of the boundary haven't started rendering
            // yet (i.e. nothing in the tree has partially rendered) we can
            // switch to the regular, concurrent mode behavior: mark the
            // boundary with ShouldCapture and enter the unwind phase.
            suspenseBoundary.flags |= ShouldCapture;
            else {
                suspenseBoundary.flags |= DidCapture;
                sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
                // But we shouldn't call any lifecycle methods or callbacks. Remove
                // all lifecycle effect tags.
                sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                if (sourceFiber.tag === ClassComponent) {
                    var currentSourceFiber = sourceFiber.alternate;
                    if (currentSourceFiber === null) // This is a new mount. Change the tag so it's not mistaken for a
                    // completed class component. For example, we should not call
                    // componentWillUnmount if it is deleted.
                    sourceFiber.tag = IncompleteClassComponent;
                    else {
                        // When we try rendering again, we should not reuse the current fiber,
                        // since it's known to be in an inconsistent state. Use a force update to
                        // prevent a bail out.
                        var update = createUpdate(NoTimestamp, SyncLane);
                        update.tag = ForceUpdate;
                        enqueueUpdate(sourceFiber, update);
                    }
                } // The source fiber did not complete. Mark it with Sync priority to
                // indicate that it still has pending work.
                sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
        } // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.
        //
        // After this we'll use a set of heuristics to determine whether this
        // render pass will run to completion or restart or "suspend" the commit.
        // The actual logic for this is spread out in different places.
        //
        // This first principle is that if we're going to suspend when we complete
        // a root, then we should also restart if we get an update or ping that
        // might unsuspend it, and vice versa. The only reason to suspend is
        // because you think you might want to restart before committing. However,
        // it doesn't make sense to restart only while in the period we're suspended.
        //
        // Restarting too aggressively is also not good because it starves out any
        // intermediate loading state. So we use heuristics to determine when.
        // Suspense Heuristics
        //
        // If nothing threw a Promise or all the same fallbacks are already showing,
        // then don't suspend/restart.
        //
        // If this is an initial render of a new tree of Suspense boundaries and
        // those trigger a fallback, then don't suspend/restart. We want to ensure
        // that we can show the initial loading state as quickly as possible.
        //
        // If we hit a "Delayed" case, such as when we'd switch from content back into
        // a fallback, then we should always suspend/restart. Transitions apply
        // to this case. If none is defined, JND is used instead.
        //
        // If we're already showing a fallback and it gets "retried", allowing us to show
        // another level, but there's still an inner boundary that would show a fallback,
        // then we suspend/restart for 500ms since the last time we showed a fallback
        // anywhere in the tree. This effectively throttles progressive loading into a
        // consistent train of commits. This also gives us an opportunity to restart to
        // get to the completed state slightly earlier.
        //
        // If there's ambiguity due to batching it's resolved in preference of:
        // 1) "delayed", 2) "initial render", 3) "retry".
        //
        // We want to ensure that a "busy" state doesn't get force committed. We want to
        // ensure that new initial loading states can commit as soon as possible.
        suspenseBoundary.flags |= ShouldCapture; // TODO: I think we can remove this, since we now use `DidCapture` in
        // the begin phase to prevent an early bailout.
        suspenseBoundary.lanes = rootRenderLanes;
        return suspenseBoundary;
    }
    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
        // The source fiber did not complete.
        sourceFiber.flags |= Incomplete;
        if (isDevToolsPresent) // If we have pending work still, restore the original updaters
        restorePendingUpdaters(root, rootRenderLanes);
        if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
            // This is a wakeable. The component suspended.
            var wakeable = value;
            resetSuspendedComponent(sourceFiber);
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) markDidThrowWhileHydratingDEV();
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
                suspenseBoundary.flags &= ~ForceClientRender;
                markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // We only attach ping listeners in concurrent mode. Legacy Suspense always
                // commits fallbacks synchronously, so there are no pings.
                if (suspenseBoundary.mode & ConcurrentMode) attachPingListener(root, wakeable, rootRenderLanes);
                attachRetryListener(suspenseBoundary, root, wakeable);
                return;
            } else {
                // No boundary was found. Unless this is a sync update, this is OK.
                // We can suspend and wait for more data to arrive.
                if (!includesSyncLane(rootRenderLanes)) {
                    // This is not a sync update. Suspend. Since we're not activating a
                    // Suspense boundary, this will unwind all the way to the root without
                    // performing a second pass to render a fallback. (This is arguably how
                    // refresh transitions should work, too, since we're not going to commit
                    // the fallbacks anyway.)
                    //
                    // This case also applies to initial hydration.
                    attachPingListener(root, wakeable, rootRenderLanes);
                    renderDidSuspendDelayIfPossible();
                    return;
                } // This is a sync/discrete update. We treat this case like an error
                // because discrete renders are expected to produce a complete tree
                // synchronously to maintain consistency with external state.
                var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition."); // If we're outside a transition, fall through to the regular error path.
                // The error will be caught by the nearest suspense boundary.
                value = uncaughtSuspenseError;
            }
        } else // This is a regular error, not a Suspense wakeable.
        if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
            markDidThrowWhileHydratingDEV();
            var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber); // If the error was thrown during hydration, we may be able to recover by
            // discarding the dehydrated content and switching to a client render.
            // Instead of surfacing the error, find the nearest Suspense boundary
            // and render it again without hydration.
            if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) // Set a flag to indicate that we should try rendering the normal
                // children again, not the fallback.
                _suspenseBoundary.flags |= ForceClientRender;
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root, rootRenderLanes); // Even though the user may not be affected by this error, we should
                // still log it so it can be fixed.
                queueHydrationError(value);
                return;
            }
        }
         // We didn't find a boundary that could handle this type of exception. Start
        // over and traverse parent path again, this time treating the exception
        // as an error.
        renderDidError(value);
        value = createCapturedValue(value, sourceFiber);
        var workInProgress = returnFiber;
        do {
            switch(workInProgress.tag){
                case HostRoot:
                    var _errorInfo = value;
                    workInProgress.flags |= ShouldCapture;
                    var lane = pickArbitraryLane(rootRenderLanes);
                    workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);
                    var update = createRootErrorUpdate(workInProgress, _errorInfo, lane);
                    enqueueCapturedUpdate(workInProgress, update);
                    return;
                case ClassComponent:
                    // Capture and retry
                    var errorInfo = value;
                    var ctor = workInProgress.type;
                    var instance = workInProgress.stateNode;
                    if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                        workInProgress.flags |= ShouldCapture;
                        var _lane = pickArbitraryLane(rootRenderLanes);
                        workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state
                        var _update = createClassErrorUpdate(workInProgress, errorInfo, _lane);
                        enqueueCapturedUpdate(workInProgress, _update);
                        return;
                    }
                    break;
            }
            workInProgress = workInProgress.return;
        }while (workInProgress !== null)
    }
    function getSuspendedCache() {
        return null;
    }
    function markUpdate(workInProgress) {
        // Tag the fiber with an update effect. This turns a Placement into
        // a PlacementAndUpdate.
        workInProgress.flags |= Update;
    }
    function markRef(workInProgress) {
        workInProgress.flags |= Ref;
        workInProgress.flags |= RefStatic;
    }
    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent;
    var updateHostText;
    // Mutation mode
    appendAllChildren = function(parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while(node !== null){
            if (node.tag === HostComponent || node.tag === HostText) appendInitialChild(parent, node.stateNode);
            else if (node.tag === HostPortal) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    };
    updateHostContainer = function(current, workInProgress) {};
    updateHostComponent = function(current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;
        if (oldProps === newProps) // In mutation mode, this is sufficient for a bailout because
        // we won't touch this node even if children changed.
        return;
         // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.
        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.
        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) markUpdate(workInProgress);
    };
    updateHostText = function(current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) markUpdate(workInProgress);
    };
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (getIsHydrating()) // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
        switch(renderState.tailMode){
            case 'hidden':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var tailNode = renderState.tail;
                var lastTailNode = null;
                while(tailNode !== null){
                    if (tailNode.alternate !== null) lastTailNode = tailNode;
                    tailNode = tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (lastTailNode === null) // All remaining items in the tail are insertions.
                renderState.tail = null;
                else // Detach the insertion after the last node that was already
                // inserted.
                lastTailNode.sibling = null;
                break;
            case 'collapsed':
                // Any insertions at the end of the tail list after this point
                // should be invisible. If there are already mounted boundaries
                // anything before them are not considered for collapsing.
                // Therefore we need to go through the whole tail to find if
                // there are any.
                var _tailNode = renderState.tail;
                var _lastTailNode = null;
                while(_tailNode !== null){
                    if (_tailNode.alternate !== null) _lastTailNode = _tailNode;
                    _tailNode = _tailNode.sibling;
                } // Next we're simply going to delete all insertions after the
                // last rendered item.
                if (_lastTailNode === null) {
                    // All remaining items in the tail are insertions.
                    if (!hasRenderedATailFallback && renderState.tail !== null) // We suspended during the head. We want to show at least one
                    // row at the tail. So we'll keep on and cut off the rest.
                    renderState.tail.sibling = null;
                    else renderState.tail = null;
                } else // Detach the insertion after the last node that was already
                // inserted.
                _lastTailNode.sibling = null;
                break;
        }
    }
    function bubbleProperties(completedWork) {
        var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
        var newChildLanes = NoLanes;
        var subtreeFlags = NoFlags;
        if (!didBailout) {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var actualDuration = completedWork.actualDuration;
                var treeBaseDuration = completedWork.selfBaseDuration;
                var child = completedWork.child;
                while(child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                    subtreeFlags |= child.subtreeFlags;
                    subtreeFlags |= child.flags; // When a fiber is cloned, its actualDuration is reset to 0. This value will
                    // only be updated if work is done on the fiber (i.e. it doesn't bailout).
                    // When work is done, it should bubble to the parent's actualDuration. If
                    // the fiber has not been cloned though, (meaning no work was done), then
                    // this value will reflect the amount of time spent working on a previous
                    // render. In that case it should not bubble. We determine whether it was
                    // cloned by comparing the child pointer.
                    actualDuration += child.actualDuration;
                    treeBaseDuration += child.treeBaseDuration;
                    child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
                completedWork.treeBaseDuration = treeBaseDuration;
            } else {
                var _child = completedWork.child;
                while(_child !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                    subtreeFlags |= _child.subtreeFlags;
                    subtreeFlags |= _child.flags; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child.return = completedWork;
                    _child = _child.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        } else {
            // Bubble up the earliest expiration time.
            if ((completedWork.mode & ProfileMode) !== NoMode) {
                // In profiling mode, resetChildExpirationTime is also used to reset
                // profiler durations.
                var _treeBaseDuration = completedWork.selfBaseDuration;
                var _child2 = completedWork.child;
                while(_child2 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child2.subtreeFlags & StaticMask;
                    subtreeFlags |= _child2.flags & StaticMask;
                    _treeBaseDuration += _child2.treeBaseDuration;
                    _child2 = _child2.sibling;
                }
                completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
                var _child3 = completedWork.child;
                while(_child3 !== null){
                    newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)); // "Static" flags share the lifetime of the fiber/hook they belong to,
                    // so we should bubble those up even during a bailout. All the other
                    // flags have a lifetime only of a single render + commit, so we should
                    // ignore them.
                    subtreeFlags |= _child3.subtreeFlags & StaticMask;
                    subtreeFlags |= _child3.flags & StaticMask; // Update the return pointer so the tree is consistent. This is a code
                    // smell because it assumes the commit phase is never concurrent with
                    // the render phase. Will address during refactor to alternate model.
                    _child3.return = completedWork;
                    _child3 = _child3.sibling;
                }
            }
            completedWork.subtreeFlags |= subtreeFlags;
        }
        completedWork.childLanes = newChildLanes;
        return didBailout;
    }
    function completeWork(current, workInProgress, renderLanes) {
        var newProps = workInProgress.pendingProps; // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
                bubbleProperties(workInProgress);
                return null;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostRoot:
                var fiberRoot = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                }
                if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) // If we hydrated, then we'll need to schedule an update for
                    // the commit side-effects on the root.
                    markUpdate(workInProgress);
                    else if (current !== null) {
                        var prevState = current.memoizedState;
                        if (!prevState.isDehydrated || (workInProgress.flags & ForceClientRender) !== NoFlags) {
                            // Schedule an effect to clear this container at the start of the
                            // next commit. This handles the case of React rendering into a
                            // container with previous children. It's also safe to do for
                            // updates too, because current.child would only be null if the
                            // previous render was null (so the container would already
                            // be empty).
                            workInProgress.flags |= Snapshot; // If this was a forced client render, there may have been
                            // recoverable errors during first hydration attempt. If so, add
                            // them to a queue so we can log them in the commit phase.
                            upgradeHydrationErrorsToRecoverable();
                        }
                    }
                }
                updateHostContainer(current, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case HostComponent:
                popHostContext(workInProgress);
                var rootContainerInstance = getRootHostContainer();
                var type = workInProgress.type;
                if (current !== null && workInProgress.stateNode != null) {
                    updateHostComponent(current, workInProgress, type, newProps, rootContainerInstance);
                    if (current.ref !== workInProgress.ref) markRef(workInProgress);
                } else {
                    if (!newProps) {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                        bubbleProperties(workInProgress);
                        return null;
                    }
                    var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on whether we want to add them top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) // TODO: Move this and createInstance step into the beginPhase
                    // to consolidate.
                    {
                        if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) // If changes to the hydrated node need to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                    } else {
                        var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                        appendAllChildren(instance, workInProgress, false, false);
                        workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                        // (eg DOM renderer supports auto-focus for certain elements).
                        // Make sure such renderers get scheduled for later work.
                        if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) markUpdate(workInProgress);
                    }
                    if (workInProgress.ref !== null) // If there is a ref on a host node we need to schedule a callback
                    markRef(workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case HostText:
                var newText = newProps;
                if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    updateHostText(current, workInProgress, oldText, newText);
                } else {
                    if (typeof newText !== 'string') {
                        if (workInProgress.stateNode === null) throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                         // This can happen when we abort work.
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext = getHostContext();
                    var _wasHydrated2 = popHydrationState(workInProgress);
                    if (_wasHydrated2) {
                        if (prepareToHydrateHostTextInstance(workInProgress)) markUpdate(workInProgress);
                    } else workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
                }
                bubbleProperties(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var nextState = workInProgress.memoizedState;
                if (hasUnhydratedTailNodes() && (workInProgress.mode & ConcurrentMode) !== NoMode && (workInProgress.flags & DidCapture) === NoFlags) {
                    warnIfUnhydratedTailNodes(workInProgress);
                    resetHydrationState();
                    workInProgress.flags |= ForceClientRender | Incomplete | ShouldCapture;
                    return workInProgress;
                }
                if (nextState !== null && nextState.dehydrated !== null) {
                    // We might be inside a hydration state the first time we're picking up this
                    // Suspense boundary, and also after we've reentered it for further hydration.
                    var _wasHydrated3 = popHydrationState(workInProgress);
                    if (current === null) {
                        if (!_wasHydrated3) throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                        prepareToHydrateHostSuspenseInstance(workInProgress);
                        bubbleProperties(workInProgress);
                        if ((workInProgress.mode & ProfileMode) !== NoMode) {
                            var isTimedOutSuspense = nextState !== null;
                            if (isTimedOutSuspense) {
                                // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                                var primaryChildFragment = workInProgress.child;
                                if (primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                                workInProgress.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                            }
                        }
                        return null;
                    } else {
                        // We might have reentered this boundary to hydrate it. If so, we need to reset the hydration
                        // state since we're now exiting out of it. popHydrationState doesn't do that for us.
                        resetHydrationState();
                        if ((workInProgress.flags & DidCapture) === NoFlags) // This boundary did not suspend so it's now hydrated and unsuspended.
                        workInProgress.memoizedState = null;
                         // If nothing suspended, we need to schedule an effect to mark this boundary
                        // as having hydrated so events know that they're free to be invoked.
                        // It's also a signal to replay events and the suspense callback.
                        // If something suspended, schedule an effect to attach retry listeners.
                        // So we might as well always mark this.
                        workInProgress.flags |= Update;
                        bubbleProperties(workInProgress);
                        if ((workInProgress.mode & ProfileMode) !== NoMode) {
                            var _isTimedOutSuspense = nextState !== null;
                            if (_isTimedOutSuspense) {
                                // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                                var _primaryChildFragment = workInProgress.child;
                                if (_primaryChildFragment !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                                workInProgress.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                            }
                        }
                        return null;
                    }
                } // Successfully completed this tree. If this was a forced client render,
                // there may have been recoverable errors during first hydration
                // attempt. If so, add them to a queue so we can log them in the
                // commit phase.
                upgradeHydrationErrorsToRecoverable();
                if ((workInProgress.flags & DidCapture) !== NoFlags) {
                    // Something suspended. Re-render with the fallback children.
                    workInProgress.lanes = renderLanes; // Do not reset the effect list.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                     // Don't bubble properties in this case.
                    return workInProgress;
                }
                var nextDidTimeout = nextState !== null;
                var prevDidTimeout = false;
                if (current === null) popHydrationState(workInProgress);
                else {
                    var _prevState = current.memoizedState;
                    prevDidTimeout = _prevState !== null;
                }
                // a passive effect, which is when we process the transitions
                if (nextDidTimeout !== prevDidTimeout) // an effect to toggle the subtree's visibility. When we switch from
                // fallback -> primary, the inner Offscreen fiber schedules this effect
                // as part of its normal complete phase. But when we switch from
                // primary -> fallback, the inner Offscreen fiber does not have a complete
                // phase. So we need to schedule its effect here.
                //
                // We also use this flag to connect/disconnect the effects, but the same
                // logic applies: when re-connecting, the Offscreen fiber's complete
                // phase will handle scheduling the effect. It's only when the fallback
                // is active that we have to do anything special.
                {
                    if (nextDidTimeout) {
                        var _offscreenFiber2 = workInProgress.child;
                        _offscreenFiber2.flags |= Visibility; // TODO: This will still suspend a synchronous tree if anything
                        // in the concurrent tree already suspended during this render.
                        // This is a known bug.
                        if ((workInProgress.mode & ConcurrentMode) !== NoMode) {
                            // TODO: Move this back to throwException because this is too late
                            // if this is a large tree which is common for initial loads. We
                            // don't know if we should restart a render or not until we get
                            // this marker, and this is too late.
                            // If this render already had a ping or lower pri updates,
                            // and this is the first time we know we're going to suspend we
                            // should be able to immediately restart from within throwException.
                            var hasInvisibleChildContext = current === null && (workInProgress.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                            if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) // If this was in an invisible tree or a new render, then showing
                            // this boundary is ok.
                            renderDidSuspend();
                            else // Otherwise, we're going to have to hide content so we should
                            // suspend for longer if possible.
                            renderDidSuspendDelayIfPossible();
                        }
                    }
                }
                var wakeables = workInProgress.updateQueue;
                if (wakeables !== null) // Schedule an effect to attach a retry listener to the promise.
                // TODO: Move to passive phase
                workInProgress.flags |= Update;
                bubbleProperties(workInProgress);
                if ((workInProgress.mode & ProfileMode) !== NoMode) {
                    if (nextDidTimeout) {
                        // Don't count time spent in a timed out Suspense subtree as part of the base duration.
                        var _primaryChildFragment2 = workInProgress.child;
                        if (_primaryChildFragment2 !== null) // $FlowFixMe Flow doesn't support type casting in combination with the -= operator
                        workInProgress.treeBaseDuration -= _primaryChildFragment2.treeBaseDuration;
                    }
                }
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                updateHostContainer(current, workInProgress);
                if (current === null) preparePortalMount(workInProgress.stateNode.containerInfo);
                bubbleProperties(workInProgress);
                return null;
            case ContextProvider:
                // Pop provider fiber
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case IncompleteClassComponent:
                // Same as class component case. I put it down here so that the tags are
                // sequential to ensure this switch is compiled to a jump table.
                var _Component = workInProgress.type;
                if (isContextProvider(_Component)) popContext(workInProgress);
                bubbleProperties(workInProgress);
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress);
                var renderState = workInProgress.memoizedState;
                if (renderState === null) {
                    // We're running in the default, "independent" mode.
                    // We don't do anything in this mode.
                    bubbleProperties(workInProgress);
                    return null;
                }
                var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
                var renderedTail = renderState.rendering;
                if (renderedTail === null) {
                    // We just rendered the head.
                    if (!didSuspendAlready) {
                        // This is the first pass. We need to figure out if anything is still
                        // suspended in the rendered set.
                        // If new content unsuspended, but there's still some content that
                        // didn't. Then we need to do a second pass that forces everything
                        // to keep showing their fallbacks.
                        // We might be suspended if something in this render pass suspended, or
                        // something in the previous committed pass suspended. Otherwise,
                        // there's no chance so we can skip the expensive call to
                        // findFirstSuspended.
                        var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);
                        if (!cannotBeSuspended) {
                            var row = workInProgress.child;
                            while(row !== null){
                                var suspended = findFirstSuspended(row);
                                if (suspended !== null) {
                                    didSuspendAlready = true;
                                    workInProgress.flags |= DidCapture;
                                    cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                                    // part of the second pass. In that case nothing will subscribe to
                                    // its thenables. Instead, we'll transfer its thenables to the
                                    // SuspenseList so that it can retry if they resolve.
                                    // There might be multiple of these in the list but since we're
                                    // going to wait for all of them anyway, it doesn't really matter
                                    // which ones gets to ping. In theory we could get clever and keep
                                    // track of how many dependencies remain but it gets tricky because
                                    // in the meantime, we can add/remove/change items and dependencies.
                                    // We might bail out of the loop before finding any but that
                                    // doesn't matter since that means that the other boundaries that
                                    // we did find already has their listeners attached.
                                    var newThenables = suspended.updateQueue;
                                    if (newThenables !== null) {
                                        workInProgress.updateQueue = newThenables;
                                        workInProgress.flags |= Update;
                                    } // Rerender the whole list, but this time, we'll force fallbacks
                                    // to stay in place.
                                    // Reset the effect flags before doing the second pass since that's now invalid.
                                    // Reset the child fibers to their original state.
                                    workInProgress.subtreeFlags = NoFlags;
                                    resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                                    // rerender the children.
                                    pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)); // Don't bubble properties in this case.
                                    return workInProgress.child;
                                }
                                row = row.sibling;
                            }
                        }
                        if (renderState.tail !== null && now() > getRenderTargetTime()) {
                            // We have already passed our CPU deadline but we still have rows
                            // left in the tail. We'll just give up further attempts to render
                            // the main content and only render fallbacks.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    } else cutOffTailIfNeeded(renderState, false);
                     // Next we're going to render the tail.
                } else {
                    // Append the rendered row to the child list.
                    if (!didSuspendAlready) {
                        var _suspended = findFirstSuspended(renderedTail);
                        if (_suspended !== null) {
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                            // get lost if this row ends up dropped during a second pass.
                            var _newThenables = _suspended.updateQueue;
                            if (_newThenables !== null) {
                                workInProgress.updateQueue = _newThenables;
                                workInProgress.flags |= Update;
                            }
                            cutOffTailIfNeeded(renderState, true); // This might have been modified.
                            if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                            ) {
                                // We're done.
                                bubbleProperties(workInProgress);
                                return null;
                            }
                        } else if (// time we have to render. So rendering one more row would likely
                        // exceed it.
                        now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                            // We have now passed our CPU deadline and we'll just give up further
                            // attempts to render the main content and only render fallbacks.
                            // The assumption is that this is usually faster.
                            workInProgress.flags |= DidCapture;
                            didSuspendAlready = true;
                            cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                            // to get it started back up to attempt the next item. While in terms
                            // of priority this work has the same priority as this current render,
                            // it's not part of the same transition once the transition has
                            // committed. If it's sync, we still want to yield so that it can be
                            // painted. Conceptually, this is really the same as pinging.
                            // We can use any RetryLane even if it's the one currently rendering
                            // since we're leaving it behind on this node.
                            workInProgress.lanes = SomeRetryLane;
                        }
                    }
                    if (renderState.isBackwards) {
                        // The effect list of the backwards tail will have been added
                        // to the end. This breaks the guarantee that life-cycles fire in
                        // sibling order but that isn't a strong guarantee promised by React.
                        // Especially since these might also just pop in during future commits.
                        // Append to the beginning of the list.
                        renderedTail.sibling = workInProgress.child;
                        workInProgress.child = renderedTail;
                    } else {
                        var previousSibling = renderState.last;
                        if (previousSibling !== null) previousSibling.sibling = renderedTail;
                        else workInProgress.child = renderedTail;
                        renderState.last = renderedTail;
                    }
                }
                if (renderState.tail !== null) {
                    // We still have tail rows to render.
                    // Pop a row.
                    var next = renderState.tail;
                    renderState.rendering = next;
                    renderState.tail = next.sibling;
                    renderState.renderingStartTime = now();
                    next.sibling = null; // Restore the context.
                    // TODO: We can probably just avoid popping it instead and only
                    // setting it the first time we go from not suspended to suspended.
                    var suspenseContext = suspenseStackCursor.current;
                    if (didSuspendAlready) suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                    else suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                    pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.
                    // Don't bubble properties in this case.
                    return next;
                }
                bubbleProperties(workInProgress);
                return null;
            case ScopeComponent:
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                var _nextState = workInProgress.memoizedState;
                var nextIsHidden = _nextState !== null;
                if (current !== null) {
                    var _prevState2 = current.memoizedState;
                    var prevIsHidden = _prevState2 !== null;
                    if (prevIsHidden !== nextIsHidden && !enableLegacyHidden) workInProgress.flags |= Visibility;
                }
                if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) bubbleProperties(workInProgress);
                else // Don't bubble properties for hidden children unless we're rendering
                // at offscreen priority.
                if (includesSomeLane(subtreeRenderLanes1, OffscreenLane)) {
                    bubbleProperties(workInProgress);
                    // Check if there was an insertion or update in the hidden subtree.
                    // If so, we need to hide those nodes in the commit phase, so
                    // schedule a visibility effect.
                    if (workInProgress.subtreeFlags & (Placement | Update)) workInProgress.flags |= Visibility;
                }
                return null;
            case CacheComponent:
                return null;
            case TracingMarkerComponent:
                return null;
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
    }
    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    didWarnAboutBadClass = {};
    didWarnAboutModulePatternComponent = {};
    didWarnAboutContextTypeOnFunctionComponent = {};
    didWarnAboutGetDerivedStateOnFunctionComponent = {};
    didWarnAboutFunctionRefs = {};
    didWarnAboutReassigningProps = false;
    didWarnAboutRevealOrder = {};
    didWarnAboutTailOptions = {};
    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
        if (current === null) // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        else // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers1(workInProgress, current.child, nextChildren, renderLanes);
    }
    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
        // This function is fork of reconcileChildren. It's used in cases where we
        // want to reconcile without matching against the existing set. This has the
        // effect of all current children being unmounted; even if the type and key
        // are the same, the old child is unmounted and a new child is created.
        //
        // To do this, we're going to go through the reconcile algorithm twice. In
        // the first pass, we schedule a deletion for all the current children by
        // passing null.
        workInProgress.child = reconcileChildFibers1(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
        // pass null in place of where we usually pass the current child set. This has
        // the effect of remounting all children regardless of whether their
        // identities match.
        workInProgress.child = reconcileChildFibers1(workInProgress, null, nextChildren, renderLanes);
    }
    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        var render = Component.render;
        var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (current === null) {
            var type = Component.type;
            if (isSimpleFunctionComponent(type) && Component.compare === null && Component.defaultProps === undefined) {
                var resolvedType = type;
                resolvedType = resolveFunctionForHotReloading(type);
                // and with only the default shallow comparison, we upgrade it
                // to a SimpleMemoComponent to allow fast path updates.
                workInProgress.tag = SimpleMemoComponent;
                workInProgress.type = resolvedType;
                validateFunctionComponentInDev(workInProgress, type);
                return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, renderLanes);
            }
            var innerPropTypes = type.propTypes;
            if (innerPropTypes) // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(type));
            var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
            child.ref = workInProgress.ref;
            child.return = workInProgress;
            workInProgress.child = child;
            return child;
        }
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;
        if (_innerPropTypes) // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(_innerPropTypes, nextProps, 'prop', getComponentNameFromType(_type));
        var currentChild = current.child; // This is always exactly one child
        var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
        if (!hasScheduledUpdateOrContext) {
            // This will be the props with resolved defaultProps,
            // unlike current.memoizedProps which will be the unresolved ones.
            var prevProps = currentChild.memoizedProps; // Default to shallow comparison
            var compare = Component.compare;
            compare = compare !== null ? compare : shallowEqual;
            if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        newChild.ref = workInProgress.ref;
        newChild.return = workInProgress;
        workInProgress.child = newChild;
        return newChild;
    }
    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var outerMemoType = workInProgress.elementType;
            if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                // We warn when you define propTypes on lazy()
                // so let's just skip over it to find memo() outer wrapper.
                // Inner props for memo are validated later.
                var lazyComponent = outerMemoType;
                var payload = lazyComponent._payload;
                var init = lazyComponent._init;
                try {
                    outerMemoType = init(payload);
                } catch (x) {
                    outerMemoType = null;
                } // Inner propTypes will be validated in the function component path.
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) checkPropTypes(outerPropTypes, nextProps, 'prop', getComponentNameFromType(outerMemoType));
            }
        }
        if (current !== null) {
            var prevProps = current.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && workInProgress.type === current.type) {
                didReceiveUpdate = false; // The props are shallowly equal. Reuse the previous props object, like we
                // would during a normal fiber bailout.
                //
                // We don't have strong guarantees that the props object is referentially
                // equal during updates where we can't bail out anyway — like if the props
                // are shallowly equal, but there's a local state or context update in the
                // same batch.
                //
                // However, as a principle, we should aim to make the behavior consistent
                // across different ways of memoizing a component. For example, React.memo
                // has a different internal Fiber layout if you pass a normal function
                // component (SimpleMemoComponent) versus if you pass a different type
                // like forwardRef (MemoComponent). But this is an implementation detail.
                // Wrapping a component in forwardRef (or React.lazy, etc) shouldn't
                // affect whether the props object is reused during a bailout.
                workInProgress.pendingProps = nextProps = prevProps;
                if (!checkScheduledUpdateOrContext(current, renderLanes)) {
                    // The pending lanes were cleared at the beginning of beginWork. We're
                    // about to bail out, but there might be other lanes that weren't
                    // included in the current render. Usually, the priority level of the
                    // remaining updates is accumulated during the evaluation of the
                    // component (i.e. when processing the update queue). But since since
                    // we're bailing out early *without* evaluating the component, we need
                    // to account for it here, too. Reset to the value of the current fiber.
                    // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
                    // because a MemoComponent fiber does not have hooks or an update queue;
                    // rather, it wraps around an inner component, which may or may not
                    // contains hooks.
                    // TODO: Move the reset at in beginWork out of the common path so that
                    // this is no longer necessary.
                    workInProgress.lanes = current.lanes;
                    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
            }
        }
        return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }
    function updateOffscreenComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var prevState = current !== null ? current.memoizedState : null;
        if (nextProps.mode === 'hidden' || enableLegacyHidden) {
            // Rendering a hidden tree.
            if ((workInProgress.mode & ConcurrentMode) === NoMode) {
                // In legacy sync mode, don't defer the subtree. Render it now.
                // TODO: Consider how Offscreen should work with transitions in the future
                var nextState = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = nextState;
                pushRenderLanes(workInProgress, renderLanes);
            } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
                var spawnedCachePool = null; // We're hidden, and we're not rendering at Offscreen. We will bail out
                // and resume this tree later.
                var nextBaseLanes;
                if (prevState !== null) {
                    var prevBaseLanes = prevState.baseLanes;
                    nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
                } else nextBaseLanes = renderLanes;
                 // Schedule this fiber to re-render at offscreen priority. Then bailout.
                workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
                var _nextState = {
                    baseLanes: nextBaseLanes,
                    cachePool: spawnedCachePool,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState;
                workInProgress.updateQueue = null;
                // to avoid a push/pop misalignment.
                pushRenderLanes(workInProgress, nextBaseLanes);
                return null;
            } else {
                // This is the second render. The surrounding visible content has already
                // committed. Now we resume rendering the hidden tree.
                // Rendering at offscreen, so we can clear the base lanes.
                var _nextState2 = {
                    baseLanes: NoLanes,
                    cachePool: null,
                    transitions: null
                };
                workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.
                var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
                pushRenderLanes(workInProgress, subtreeRenderLanes);
            }
        } else {
            // Rendering a visible tree.
            var _subtreeRenderLanes;
            if (prevState !== null) {
                // We're going from hidden -> visible.
                _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);
                workInProgress.memoizedState = null;
            } else // We weren't previously hidden, and we still aren't, so there's nothing
            // special to do. Need to push to the stack regardless, though, to avoid
            // a push/pop misalignment.
            _subtreeRenderLanes = renderLanes;
            pushRenderLanes(workInProgress, _subtreeRenderLanes);
        }
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateFragment1(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateMode(current, workInProgress, renderLanes) {
        var nextChildren = workInProgress.pendingProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateProfiler(current, workInProgress, renderLanes) {
        workInProgress.flags |= Update;
        // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,
        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function markRef$1(current, workInProgress) {
        var ref = workInProgress.ref;
        if (current === null && ref !== null || current !== null && current.ref !== ref) {
            // Schedule a Ref effect
            workInProgress.flags |= Ref;
            workInProgress.flags |= RefStatic;
        }
    }
    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
        var nextChildren;
        var hasId;
        prepareToReadContext(workInProgress, renderLanes);
        markComponentRenderStarted(workInProgress);
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
        hasId = checkDidRenderIdHook();
        if (workInProgress.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(true);
            try {
                nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
                hasId = checkDidRenderIdHook();
            } finally{
                setIsStrictModeForDevtools(false);
            }
        }
        setIsRendering(false);
        markComponentRenderStopped();
        if (current !== null && !didReceiveUpdate) {
            bailoutHooks(current, workInProgress, renderLanes);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
         // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
        // This is used by DevTools to force a boundary to error.
        switch(shouldError(workInProgress)){
            case false:
                var _instance = workInProgress.stateNode;
                var ctor = workInProgress.type; // TODO This way of resetting the error boundary state is a hack.
                // Is there a better way to do this?
                var tempInstance = new ctor(workInProgress.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
            case true:
                workInProgress.flags |= DidCapture;
                workInProgress.flags |= ShouldCapture; // eslint-disable-next-line react-internal/prod-error-codes
                var error$1 = new Error('Simulated error coming from DevTools');
                var lane = pickArbitraryLane(renderLanes);
                workInProgress.lanes = mergeLanes(workInProgress.lanes, lane); // Schedule the error boundary to re-render using updated state
                var update = createClassErrorUpdate(workInProgress, createCapturedValue(error$1, workInProgress), lane);
                enqueueCapturedUpdate(workInProgress, update);
                break;
        }
        if (workInProgress.type !== workInProgress.elementType) {
            // Lazy component props can't be validated in createElement
            // because they're only guaranteed to be resolved here.
            var innerPropTypes = Component.propTypes;
            if (innerPropTypes) checkPropTypes(innerPropTypes, nextProps, 'prop', getComponentNameFromType(Component));
        }
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        var instance = workInProgress.stateNode;
        var shouldUpdate;
        if (instance === null) {
            if (current !== null) {
                // A class component without an instance only mounts if it suspended
                // inside a non-concurrent tree, in an inconsistent state. We want to
                // treat it like a new mount, even though an empty version of it already
                // committed. Disconnect the alternate pointers.
                current.alternate = null;
                workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
                workInProgress.flags |= Placement;
            } // In the initial pass we might need to construct the instance.
            constructClassInstance(workInProgress, Component, nextProps);
            mountClassInstance(workInProgress, Component, nextProps, renderLanes);
            shouldUpdate = true;
        } else if (current === null) // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
        else shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
        var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
        var inst = workInProgress.stateNode;
        if (shouldUpdate && inst.props !== nextProps) {
            if (!didWarnAboutReassigningProps) error1("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress) || 'a component');
            didWarnAboutReassigningProps = true;
        }
        return nextUnitOfWork;
    }
    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
        // Refs should update even if shouldComponentUpdate returns false
        markRef$1(current, workInProgress);
        var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError) {
            // Context providers should defer to sCU for rendering
            if (hasContext) invalidateContextProvider(workInProgress, Component, false);
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
        var instance = workInProgress.stateNode; // Rerender
        ReactCurrentOwner$1.current = workInProgress;
        var nextChildren;
        if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
            // If we captured an error, but getDerivedStateFromError is not defined,
            // unmount all the children. componentDidCatch will schedule an update to
            // re-render a fallback. This is temporary until we migrate everyone to
            // the new API.
            // TODO: Warn in a future release.
            nextChildren = null;
            stopProfilerTimerIfRunning();
        } else {
            markComponentRenderStarted(workInProgress);
            setIsRendering(true);
            nextChildren = instance.render();
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    instance.render();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            setIsRendering(false);
            markComponentRenderStopped();
        } // React DevTools reads this flag.
        workInProgress.flags |= PerformedWork;
        if (current !== null && didCaptureError) // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
         // Memoize state using the values we just used to render.
        // TODO: Restructure so we never read values from the instance.
        workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.
        if (hasContext) invalidateContextProvider(workInProgress, Component, true);
        return workInProgress.child;
    }
    function pushHostRootContext(workInProgress) {
        var root = workInProgress.stateNode;
        if (root.pendingContext) pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
        else if (root.context) // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
        pushHostContainer(workInProgress, root.containerInfo);
    }
    function updateHostRoot(current, workInProgress, renderLanes) {
        pushHostRootContext(workInProgress);
        if (current === null) throw new Error('Should have a current fiber. This is a bug in React.');
        var nextProps = workInProgress.pendingProps;
        var prevState = workInProgress.memoizedState;
        var prevChildren = prevState.element;
        cloneUpdateQueue(current, workInProgress);
        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
        var nextState = workInProgress.memoizedState;
        var root = workInProgress.stateNode;
        // being called "element".
        var nextChildren = nextState.element;
        if (prevState.isDehydrated) {
            // This is a hydration root whose shell has not yet hydrated. We should
            // attempt to hydrate.
            // Flip isDehydrated to false to indicate that when this render
            // finishes, the root will no longer be dehydrated.
            var overrideState = {
                element: nextChildren,
                isDehydrated: false,
                cache: nextState.cache,
                pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
                transitions: nextState.transitions
            };
            var updateQueue = workInProgress.updateQueue; // `baseState` can always be the last state because the root doesn't
            // have reducer functions so it doesn't need rebasing.
            updateQueue.baseState = overrideState;
            workInProgress.memoizedState = overrideState;
            if (workInProgress.flags & ForceClientRender) {
                // Something errored during a previous attempt to hydrate the shell, so we
                // forced a client render.
                var recoverableError = new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering.");
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError);
            } else if (nextChildren !== prevChildren) {
                var _recoverableError = new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering.");
                return mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, _recoverableError);
            } else {
                // The outermost shell has not hydrated yet. Start hydrating.
                enterHydrationState(workInProgress);
                var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
                workInProgress.child = child;
                var node = child;
                while(node){
                    // Mark each child as hydrating. This is a fast path to know whether this
                    // tree is part of a hydrating tree. This is used to determine if a child
                    // node has fully mounted yet, and for scheduling event replaying.
                    // Conceptually this is similar to Placement in that a new subtree is
                    // inserted into the React tree here. It just happens to not need DOM
                    // mutations because it already exists.
                    node.flags = node.flags & ~Placement | Hydrating;
                    node = node.sibling;
                }
            }
        } else {
            // Root is not dehydrated. Either this is a client-only root, or it
            // already hydrated.
            resetHydrationState();
            if (nextChildren === prevChildren) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        }
        return workInProgress.child;
    }
    function mountHostRootWithoutHydrating(current, workInProgress, nextChildren, renderLanes, recoverableError) {
        // Revert to client rendering.
        resetHydrationState();
        queueHydrationError(recoverableError);
        workInProgress.flags |= ForceClientRender;
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostComponent$1(current, workInProgress, renderLanes) {
        pushHostContext(workInProgress);
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
        var type = workInProgress.type;
        var nextProps = workInProgress.pendingProps;
        var prevProps = current !== null ? current.memoizedProps : null;
        var nextChildren = nextProps.children;
        var isDirectTextChild = shouldSetTextContent(type, nextProps);
        if (isDirectTextChild) // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
        else if (prevProps !== null && shouldSetTextContent(type, prevProps)) // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
        markRef$1(current, workInProgress);
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    function updateHostText$1(current, workInProgress) {
        if (current === null) tryToClaimNextHydratableInstance(workInProgress);
         // Nothing to do here. This is terminal. We'll do the completion step
        // immediately after.
        return null;
    }
    function mountLazyComponent(_current, workInProgress, elementType, renderLanes) {
        if (_current !== null) {
            // A lazy component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        }
        var props = workInProgress.pendingProps;
        var lazyComponent = elementType;
        var payload = lazyComponent._payload;
        var init = lazyComponent._init;
        var Component = init(payload); // Store the unwrapped component in the type.
        workInProgress.type = Component;
        var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
        var resolvedProps = resolveDefaultProps(Component, props);
        var child;
        switch(resolvedTag){
            case FunctionComponent:
                validateFunctionComponentInDev(workInProgress, Component);
                workInProgress.type = Component = resolveFunctionForHotReloading(Component);
                child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ClassComponent:
                workInProgress.type = Component = resolveClassForHotReloading(Component);
                child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case ForwardRef:
                workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
                child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
                return child;
            case MemoComponent:
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = Component.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, resolvedProps, 'prop', getComponentNameFromType(Component));
                }
                child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), renderLanes);
                return child;
        }
        var hint = '';
        if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) hint = ' Did you wrap a component in React.lazy() more than once?';
        // because the fact that it's a separate type of work is an
        // implementation detail.
        throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
    }
    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
        if (_current !== null) {
            // An incomplete component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        } // Promote the fiber to a class and try rendering again.
        workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
        // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.
        var hasContext;
        if (isContextProvider(Component)) {
            hasContext = true;
            pushContextProvider(workInProgress);
        } else hasContext = false;
        prepareToReadContext(workInProgress, renderLanes);
        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }
    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
        if (_current !== null) {
            // An indeterminate component only mounts if it suspended inside a non-
            // concurrent tree, in an inconsistent state. We want to treat it like
            // a new mount, even though an empty version of it already committed.
            // Disconnect the alternate pointers.
            _current.alternate = null;
            workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect
            workInProgress.flags |= Placement;
        }
        var props = workInProgress.pendingProps;
        var context;
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
        prepareToReadContext(workInProgress, renderLanes);
        var value;
        var hasId;
        markComponentRenderStarted(workInProgress);
        if (Component.prototype && typeof Component.prototype.render === 'function') {
            var componentName = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutBadClass[componentName]) {
                error1("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
            }
        }
        if (workInProgress.mode & StrictLegacyMode) ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        hasId = checkDidRenderIdHook();
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName]) {
                error1("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
            }
        }
        if (// Eventually we'll delete this branch altogether.
        typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
            var _componentName2 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error1("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
            }
            workInProgress.tag = ClassComponent; // Throw out any hooks that were used.
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = false;
            if (isContextProvider(Component)) {
                hasContext = true;
                pushContextProvider(workInProgress);
            } else hasContext = false;
            workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
            initializeUpdateQueue(workInProgress);
            adoptClassInstance(workInProgress, value);
            mountClassInstance(workInProgress, Component, props, renderLanes);
            return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
        } else {
            // Proceed under the assumption that this is a function component
            workInProgress.tag = FunctionComponent;
            if (workInProgress.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                    value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
                    hasId = checkDidRenderIdHook();
                } finally{
                    setIsStrictModeForDevtools(false);
                }
            }
            if (getIsHydrating() && hasId) pushMaterializedTreeId(workInProgress);
            reconcileChildren(null, workInProgress, value, renderLanes);
            validateFunctionComponentInDev(workInProgress, Component);
            return workInProgress.child;
        }
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
        if (Component) {
            if (Component.childContextTypes) error1('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
        }
        if (workInProgress.ref !== null) {
            var info = '';
            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
            if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
            var warningKey = ownerName || '';
            var debugSource = workInProgress._debugSource;
            if (debugSource) warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
            if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error1("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
            }
        }
        if (typeof Component.getDerivedStateFromProps === 'function') {
            var _componentName3 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error1('%s: Function components do not support getDerivedStateFromProps.', _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
            }
        }
        if (typeof Component.contextType === 'object' && Component.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component) || 'Unknown';
            if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error1('%s: Function components do not support contextType.', _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
            }
        }
    }
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: NoLane
    };
    function mountSuspenseOffscreenState(renderLanes) {
        return {
            baseLanes: renderLanes,
            cachePool: getSuspendedCache(),
            transitions: null
        };
    }
    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
        var cachePool = null;
        return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),
            cachePool: cachePool,
            transitions: prevOffscreenState.transitions
        };
    } // TODO: Probably should inline this back
    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
        // If we're already showing a fallback, there are cases where we need to
        // remain on that fallback regardless of whether the content has resolved.
        // For example, SuspenseList coordinates when nested content appears.
        if (current !== null) {
            var suspenseState = current.memoizedState;
            if (suspenseState === null) // Currently showing content. Don't hide it, even if ForceSuspenseFallback
            // is true. More precise name might be "ForceRemainSuspenseFallback".
            // Note: This is a factoring smell. Can't remain on a fallback if there's
            // no fallback to remain on.
            return false;
        } // Not currently showing content. Consult the Suspense context.
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }
    function getRemainingWorkInPrimaryTree(current, renderLanes) {
        // TODO: Should not remove render lanes that were pinged during this render
        return removeLanes(current.childLanes, renderLanes);
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.
        if (shouldSuspend(workInProgress)) workInProgress.flags |= DidCapture;
        var suspenseContext = suspenseStackCursor.current;
        var showFallback = false;
        var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
            // Something in this boundary's subtree already suspended. Switch to
            // rendering the fallback children.
            showFallback = true;
            workInProgress.flags &= ~DidCapture;
        } else // Attempting the main content
        if (current === null || current.memoizedState !== null) suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
        // boundary's children. This involves some custom reconciliation logic. Two
        // main reasons this is so complicated.
        //
        // First, Legacy Mode has different semantics for backwards compatibility. The
        // primary tree will commit in an inconsistent state, so when we do the
        // second pass to render the fallback, we do some exceedingly, uh, clever
        // hacks to make that not totally break. Like transferring effects and
        // deletions from hidden tree. In Concurrent Mode, it's much simpler,
        // because we bailout on the primary tree completely and leave it in its old
        // state, no effects. Same as what we do for Offscreen (except that
        // Offscreen doesn't have the first render pass).
        //
        // Second is hydration. During hydration, the Suspense fiber has a slightly
        // different layout, where the child points to a dehydrated fragment, which
        // contains the DOM rendered by the server.
        //
        // Third, even if you set all that aside, Suspense is like error boundaries in
        // that we first we try to render one tree, and if that fails, we render again
        // and switch to a different tree. Like a try/catch block. So we have to track
        // which branch we're currently rendering. Ideally we would model this using
        // a stack.
        if (current === null) {
            // Initial mount
            // If we're currently hydrating, try to hydrate this boundary.
            tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
            var suspenseState = workInProgress.memoizedState;
            if (suspenseState !== null) {
                var dehydrated = suspenseState.dehydrated;
                if (dehydrated !== null) return mountDehydratedSuspenseComponent(workInProgress, dehydrated);
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
                var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
                var primaryChildFragment = workInProgress.child;
                primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return fallbackFragment;
            } else return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren);
        } else {
            // This is an update.
            // If the current fiber has a SuspenseState, that means it's already showing
            // a fallback.
            var prevState = current.memoizedState;
            if (prevState !== null) {
                // The current tree is already showing a fallback
                // Special path for hydration
                var _dehydrated = prevState.dehydrated;
                if (_dehydrated !== null) {
                    if (!didSuspend) return updateDehydratedSuspenseComponent(current, workInProgress, _dehydrated, prevState, renderLanes);
                    else if (workInProgress.flags & ForceClientRender) {
                        // Something errored during hydration. Try again without hydrating.
                        workInProgress.flags &= ~ForceClientRender;
                        return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                    } else if (workInProgress.memoizedState !== null) {
                        // Something suspended and we should still be in dehydrated mode.
                        // Leave the existing child in place.
                        workInProgress.child = current.child; // The dehydrated completion pass expects this flag to be there
                        // but the normal suspense pass doesn't.
                        workInProgress.flags |= DidCapture;
                        return null;
                    } else {
                        // Suspended but we should no longer be in dehydrated mode.
                        // Therefore we now have to render the fallback.
                        var _nextPrimaryChildren = nextProps.children;
                        var _nextFallbackChildren = nextProps.fallback;
                        var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, _nextPrimaryChildren, _nextFallbackChildren, renderLanes);
                        var _primaryChildFragment2 = workInProgress.child;
                        _primaryChildFragment2.memoizedState = mountSuspenseOffscreenState(renderLanes);
                        workInProgress.memoizedState = SUSPENDED_MARKER;
                        return fallbackChildFragment;
                    }
                }
                if (showFallback) {
                    var _nextFallbackChildren2 = nextProps.fallback;
                    var _nextPrimaryChildren2 = nextProps.children;
                    var _fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes);
                    var _primaryChildFragment3 = workInProgress.child;
                    var prevOffscreenState = current.child.memoizedState;
                    _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
                    _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                    workInProgress.memoizedState = SUSPENDED_MARKER;
                    return _fallbackChildFragment;
                } else {
                    var _nextPrimaryChildren3 = nextProps.children;
                    var _primaryChildFragment4 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren3, renderLanes);
                    workInProgress.memoizedState = null;
                    return _primaryChildFragment4;
                }
            } else // The current tree is not already showing a fallback.
            if (showFallback) {
                // Timed out.
                var _nextFallbackChildren3 = nextProps.fallback;
                var _nextPrimaryChildren4 = nextProps.children;
                var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes);
                var _primaryChildFragment5 = workInProgress.child;
                var _prevOffscreenState = current.child.memoizedState;
                _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes);
                _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
                // fallback children.
                workInProgress.memoizedState = SUSPENDED_MARKER;
                return _fallbackChildFragment2;
            } else {
                // Still haven't timed out. Continue rendering the children, like we
                // normally do.
                var _nextPrimaryChildren5 = nextProps.children;
                var _primaryChildFragment6 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren5, renderLanes);
                workInProgress.memoizedState = null;
                return _primaryChildFragment6;
            }
        }
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
        var mode = workInProgress.mode;
        var primaryChildProps = {
            mode: 'visible',
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
        primaryChildFragment.return = workInProgress;
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var progressedPrimaryFragment = workInProgress.child;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        var fallbackChildFragment;
        if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = 0;
                primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
        }
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes) {
        // The props argument to `createFiberFromOffscreen` is `any` typed, so we use
        // this wrapper function to constrain it.
        return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
    }
    function updateWorkInProgressOffscreenFiber(current, offscreenProps) {
        // The props argument to `createWorkInProgress` is `any` typed, so we use this
        // wrapper function to constrain it.
        return createWorkInProgress(current, offscreenProps);
    }
    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: 'visible',
            children: primaryChildren
        });
        if ((workInProgress.mode & ConcurrentMode) === NoMode) primaryChildFragment.lanes = renderLanes;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = null;
        if (currentFallbackChildFragment !== null) {
            // Delete the fallback child fragment
            var deletions = workInProgress.deletions;
            if (deletions === null) {
                workInProgress.deletions = [
                    currentFallbackChildFragment
                ];
                workInProgress.flags |= ChildDeletion;
            } else deletions.push(currentFallbackChildFragment);
        }
        workInProgress.child = primaryChildFragment;
        return primaryChildFragment;
    }
    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var mode = workInProgress.mode;
        var currentPrimaryChildFragment = current.child;
        var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
        var primaryChildProps = {
            mode: 'hidden',
            children: primaryChildren
        };
        var primaryChildFragment;
        if (// completed, even though it's in an inconsistent state.
        (mode & ConcurrentMode) === NoMode && // already cloned. In legacy mode, the only case where this isn't true is
        // when DevTools forces us to display a fallback; we skip the first render
        // pass entirely and go straight to rendering the fallback. (In Concurrent
        // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
        // only codepath.)
        workInProgress.child !== currentPrimaryChildFragment) {
            var progressedPrimaryFragment = workInProgress.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress.mode & ProfileMode) {
                // Reset the durations from the first pass so they aren't included in the
                // final amounts. This seems counterintuitive, since we're intentionally
                // not measuring part of the render phase, but this makes it match what we
                // do in Concurrent Mode.
                primaryChildFragment.actualDuration = 0;
                primaryChildFragment.actualStartTime = -1;
                primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            }
            // However, since we're going to remain on the fallback, we no longer want
            // to delete it.
            workInProgress.deletions = null;
        } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
            // (We don't do this in legacy mode, because in legacy mode we don't re-use
            // the current tree; see previous branch.)
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
        }
        var fallbackChildFragment;
        if (currentFallbackChildFragment !== null) fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
        else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
            // mounted but this is a new fiber.
            fallbackChildFragment.flags |= Placement;
        }
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        return fallbackChildFragment;
    }
    function retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, recoverableError) {
        // Falling back to client rendering. Because this has performance
        // implications, it's considered a recoverable error, even though the user
        // likely won't observe anything wrong with the UI.
        //
        // The error is passed in as an argument to enforce that every caller provide
        // a custom message, or explicitly opt out (currently the only path that opts
        // out is legacy mode; every concurrent path provides an error).
        if (recoverableError !== null) queueHydrationError(recoverableError);
         // This will add the old fiber to the deletion list
        reconcileChildFibers1(workInProgress, current.child, null, renderLanes); // We're now not suspended nor dehydrated.
        var nextProps = workInProgress.pendingProps;
        var primaryChildren = nextProps.children;
        var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Needs a placement effect because the parent (the Suspense boundary) already
        // mounted but this is a new fiber.
        primaryChildFragment.flags |= Placement;
        workInProgress.memoizedState = null;
        return primaryChildFragment;
    }
    function mountSuspenseFallbackAfterRetryWithoutHydrating(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
        var fiberMode = workInProgress.mode;
        var primaryChildProps = {
            mode: 'visible',
            children: primaryChildren
        };
        var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
        var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes, null); // Needs a placement effect because the parent (the Suspense
        // boundary) already mounted but this is a new fiber.
        fallbackChildFragment.flags |= Placement;
        primaryChildFragment.return = workInProgress;
        fallbackChildFragment.return = workInProgress;
        primaryChildFragment.sibling = fallbackChildFragment;
        workInProgress.child = primaryChildFragment;
        if ((workInProgress.mode & ConcurrentMode) !== NoMode) // We will have dropped the effect list which contains the
        // deletion. We need to reconcile to delete the current child.
        reconcileChildFibers1(workInProgress, current.child, null, renderLanes);
        return fallbackChildFragment;
    }
    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderLanes) {
        // During the first pass, we'll bail out and not drill into the children.
        // Instead, we'll leave the content in place and try to hydrate it later.
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
            error1("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            workInProgress.lanes = laneToLanes(SyncLane);
        } else if (isSuspenseInstanceFallback(suspenseInstance)) // This is a client-only boundary. Since we won't get any content from the server
        // for this, we need to schedule that at a higher priority based on when it would
        // have timed out. In theory we could render it in this pass but it would have the
        // wrong priority associated with it and will prevent hydration of parent path.
        // Instead, we'll leave work left on it to render it in a separate commit.
        // TODO This time should be the time at which the server rendered response that is
        // a parent to this boundary was displayed. However, since we currently don't have
        // a protocol to transfer that time, we'll just estimate it by using the current
        // time. This will mean that Suspense timeouts are slightly shifted to later than
        // they should be.
        // Schedule a normal pri update to render this content.
        workInProgress.lanes = laneToLanes(DefaultHydrationLane);
        else // We'll continue hydrating the rest at offscreen priority since we'll already
        // be showing the right content coming from the server, it is no rush.
        workInProgress.lanes = laneToLanes(OffscreenLane);
        return null;
    }
    function updateDehydratedSuspenseComponent(current, workInProgress, suspenseInstance, suspenseState, renderLanes) {
        // We should never be hydrating at this point because it is the first pass,
        // but after we've already committed once.
        warnIfHydrating();
        if ((workInProgress.mode & ConcurrentMode) === NoMode) return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // required — every concurrent mode path that causes hydration to
        // de-opt to client rendering should have an error message.
        null);
        if (isSuspenseInstanceFallback(suspenseInstance)) // This boundary is in a permanent fallback state. In this case, we'll never
        // get an update and we'll never be able to hydrate the final content. Let's just try the
        // client side render instead.
        return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, // here on the client. Or, in production, a hash/id that corresponds to
        // the error.
        new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."));
        // any context has changed, we need to treat is as if the input might have changed.
        var hasContextChanged = includesSomeLane(renderLanes, current.childLanes);
        if (didReceiveUpdate || hasContextChanged) {
            // This boundary has changed since the first render. This means that we are now unable to
            // hydrate it. We might still be able to hydrate it using a higher priority lane.
            var root = getWorkInProgressRoot();
            if (root !== null) {
                var attemptHydrationAtLane = getBumpedLaneForHydration(root, renderLanes);
                if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                    // Intentionally mutating since this render will get interrupted. This
                    // is one of the very rare times where we mutate the current tree
                    // during the render phase.
                    suspenseState.retryLane = attemptHydrationAtLane; // TODO: Ideally this would inherit the event time of the current render
                    var eventTime = NoTimestamp;
                    scheduleUpdateOnFiber(current, attemptHydrationAtLane, eventTime);
                }
            } // If we have scheduled higher pri work above, this will probably just abort the render
            // since we now have higher priority work, but in case it doesn't, we need to prepare to
            // render something, if we time out. Even if that requires us to delete everything and
            // skip hydration.
            // Delay having to do this as long as the suspense timeout allows us.
            renderDidSuspendDelayIfPossible();
            return retrySuspenseComponentWithoutHydrating(current, workInProgress, renderLanes, new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
        } else if (isSuspenseInstancePending(suspenseInstance)) {
            // This component is still pending more data from the server, so we can't hydrate its
            // content. We treat it as if this component suspended itself. It might seem as if
            // we could just try to render it client-side instead. However, this will perform a
            // lot of unnecessary work and is unlikely to complete since it often will suspend
            // on missing data anyway. Additionally, the server might be able to render more
            // than we can on the client yet. In that case we'd end up with more fallback states
            // on the client than if we just leave it alone. If the server times out or errors
            // these should update this boundary to the permanent Fallback state instead.
            // Mark it as having captured (i.e. suspended).
            workInProgress.flags |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.
            workInProgress.child = current.child; // Register a callback to retry this boundary once the server has sent the result.
            var retry = retryDehydratedSuspenseBoundary.bind(null, current);
            registerSuspenseInstanceRetry(suspenseInstance, retry);
            return null;
        } else {
            // This is the first attempt.
            reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance, suspenseState.treeContext);
            var nextProps = workInProgress.pendingProps;
            var primaryChildren = nextProps.children;
            var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress, primaryChildren); // Mark the children as hydrating. This is a fast path to know whether this
            // tree is part of a hydrating tree. This is used to determine if a child
            // node has fully mounted yet, and for scheduling event replaying.
            // Conceptually this is similar to Placement in that a new subtree is
            // inserted into the React tree here. It just happens to not need DOM
            // mutations because it already exists.
            primaryChildFragment.flags |= Hydrating;
            return primaryChildFragment;
        }
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
        scheduleContextWorkOnParentPath(fiber.return, renderLanes, propagationRoot);
    }
    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
        // Mark any Suspense boundaries with fallbacks as having work to do.
        // If they were previously forced into fallbacks, they may now be able
        // to unblock.
        var node = firstChild;
        while(node !== null){
            if (node.tag === SuspenseComponent) {
                var state = node.memoizedState;
                if (state !== null) scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            } else if (node.tag === SuspenseListComponent) // If the tail is hidden there might not be an Suspense boundaries
            // to schedule work on. In this case we have to schedule it on the
            // list itself.
            // We don't have to traverse to the children of the list since
            // the list will propagate the change when it rerenders.
            scheduleSuspenseWorkOnFiber(node, renderLanes, workInProgress);
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === workInProgress) return;
            while(node.sibling === null){
                if (node.return === null || node.return === workInProgress) return;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function findLastContentRow(firstChild) {
        // This is going to find the last row among these children that is already
        // showing content on the screen, as opposed to being in fallback state or
        // new. If a row has multiple Suspense boundaries, any of them being in the
        // fallback state, counts as the whole row being in a fallback state.
        // Note that the "rows" will be workInProgress, but any nested children
        // will still be current since we haven't rendered them yet. The mounted
        // order may not be the same as the new order. We use the new order.
        var row = firstChild;
        var lastContentRow = null;
        while(row !== null){
            var currentRow = row.alternate; // New rows can't be content rows.
            if (currentRow !== null && findFirstSuspended(currentRow) === null) lastContentRow = row;
            row = row.sibling;
        }
        return lastContentRow;
    }
    function validateRevealOrder(revealOrder) {
        if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
            didWarnAboutRevealOrder[revealOrder] = true;
            if (typeof revealOrder === 'string') switch(revealOrder.toLowerCase()){
                case 'together':
                case 'forwards':
                case 'backwards':
                    error1('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                case 'forward':
                case 'backward':
                    error1('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                default:
                    error1('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
            }
            else error1('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
        }
    }
    function validateTailOptions(tailMode, revealOrder) {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
            if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
                didWarnAboutTailOptions[tailMode] = true;
                error1('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
            } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
                didWarnAboutTailOptions[tailMode] = true;
                error1('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
            }
        }
    }
    function validateSuspenseListNestedChild(childSlot, index) {
        var isAnArray = isArray(childSlot);
        var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === 'function';
        if (isAnArray || isIterable) {
            var type = isAnArray ? 'array' : 'iterable';
            error1("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index, type);
            return false;
        }
        return true;
    }
    function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
            if (isArray(children)) for(var i = 0; i < children.length; i++){
                if (!validateSuspenseListNestedChild(children[i], i)) return;
            }
            else {
                var iteratorFn = getIteratorFn(children);
                if (typeof iteratorFn === 'function') {
                    var childrenIterator = iteratorFn.call(children);
                    if (childrenIterator) {
                        var step = childrenIterator.next();
                        var _i = 0;
                        for(; !step.done; step = childrenIterator.next()){
                            if (!validateSuspenseListNestedChild(step.value, _i)) return;
                            _i++;
                        }
                    }
                } else error1('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
            }
        }
    }
    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress.memoizedState;
        if (renderState === null) workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode
        };
        else {
            // We can reuse the existing object from previous renders.
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
        }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
        var nextProps = workInProgress.pendingProps;
        var revealOrder = nextProps.revealOrder;
        var tailMode = nextProps.tail;
        var newChildren = nextProps.children;
        validateRevealOrder(revealOrder);
        validateTailOptions(tailMode, revealOrder);
        validateSuspenseListChildren(newChildren, revealOrder);
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        var suspenseContext = suspenseStackCursor.current;
        var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress.flags |= DidCapture;
        } else {
            var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) // If we previously forced a fallback, we need to schedule work
            // on any nested boundaries to let them know to try to render
            // again. This is the same as context updating.
            propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        pushSuspenseContext(workInProgress, suspenseContext);
        if ((workInProgress.mode & ConcurrentMode) === NoMode) // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
        else switch(revealOrder){
            case 'forwards':
                var lastContentRow = findLastContentRow(workInProgress.child);
                var tail;
                if (lastContentRow === null) {
                    // The whole list is part of the tail.
                    // TODO: We could fast path by just rendering the tail now.
                    tail = workInProgress.child;
                    workInProgress.child = null;
                } else {
                    // Disconnect the tail rows after the content row.
                    // We're going to render them separately later.
                    tail = lastContentRow.sibling;
                    lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(workInProgress, false, tail, lastContentRow, tailMode);
                break;
            case 'backwards':
                // We're going to find the first row that has existing content.
                // At the same time we're going to reverse the list of everything
                // we pass in the meantime. That's going to be our tail in reverse
                // order.
                var _tail = null;
                var row = workInProgress.child;
                workInProgress.child = null;
                while(row !== null){
                    var currentRow = row.alternate; // New rows can't be content rows.
                    if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                        // This is the beginning of the main content.
                        workInProgress.child = row;
                        break;
                    }
                    var nextRow = row.sibling;
                    row.sibling = _tail;
                    _tail = row;
                    row = nextRow;
                } // TODO: If workInProgress.child is null, we can continue on the tail immediately.
                initSuspenseListRenderState(workInProgress, true, _tail, null, tailMode);
                break;
            case 'together':
                initSuspenseListRenderState(workInProgress, false, null, null, undefined);
                break;
            default:
                // The default reveal order is the same as not having
                // a boundary.
                workInProgress.memoizedState = null;
        }
        return workInProgress.child;
    }
    function updatePortalComponent(current, workInProgress, renderLanes) {
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        var nextChildren = workInProgress.pendingProps;
        if (current === null) // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers1(workInProgress, null, nextChildren, renderLanes);
        else reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
    function updateContextProvider(current, workInProgress, renderLanes) {
        var providerType = workInProgress.type;
        var context = providerType._context;
        var newProps = workInProgress.pendingProps;
        var oldProps = workInProgress.memoizedProps;
        var newValue = newProps.value;
        if (!('value' in newProps)) {
            if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error1('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
            }
        }
        var providerPropTypes = workInProgress.type.propTypes;
        if (providerPropTypes) checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
        pushProvider(workInProgress, context, newValue);
        if (oldProps !== null) {
            var oldValue = oldProps.value;
            if (objectIs(oldValue, newValue)) {
                // No change. Bailout early if children are the same.
                if (oldProps.children === newProps.children && !hasContextChanged1()) return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
            } else // The context value changed. Search for matching consumers and schedule
            // them to update.
            propagateContextChange(workInProgress, context, renderLanes);
        }
        var newChildren = newProps.children;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    var hasWarnedAboutUsingContextAsConsumer = false;
    function updateContextConsumer(current, workInProgress, renderLanes) {
        var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
        if (context._context === undefined) {
            // This may be because it's a Context (rather than a Consumer).
            // Or it may be because it's older React where they're the same thing.
            // We only want to warn if we're sure it's a new React.
            if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                    hasWarnedAboutUsingContextAsConsumer = true;
                    error1("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
            }
        } else context = context._context;
        var newProps = workInProgress.pendingProps;
        var render = newProps.children;
        if (typeof render !== 'function') error1("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        prepareToReadContext(workInProgress, renderLanes);
        var newValue = readContext(context);
        markComponentRenderStarted(workInProgress);
        var newChildren;
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
        markComponentRenderStopped();
        workInProgress.flags |= PerformedWork;
        reconcileChildren(current, workInProgress, newChildren, renderLanes);
        return workInProgress.child;
    }
    function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = true;
    }
    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
        if (current !== null) // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
        markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.
        if (!includesSomeLane(renderLanes, workInProgress.childLanes)) return null;
         // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current, workInProgress);
        return workInProgress.child;
    }
    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
        var returnFiber = oldWorkInProgress.return;
        if (returnFiber === null) // eslint-disable-next-line react-internal/prod-error-codes
        throw new Error('Cannot swap the root fiber.');
         // Disconnect from the old current.
        // It will get deleted.
        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.
        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.
        if (oldWorkInProgress === returnFiber.child) returnFiber.child = newWorkInProgress;
        else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
            throw new Error('Expected parent to have a child.');
            while(prevSibling.sibling !== oldWorkInProgress){
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) // eslint-disable-next-line react-internal/prod-error-codes
                throw new Error('Expected to find the previous sibling.');
            }
            prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.
        var deletions = returnFiber.deletions;
        if (deletions === null) {
            returnFiber.deletions = [
                current
            ];
            returnFiber.flags |= ChildDeletion;
        } else deletions.push(current);
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.
        return newWorkInProgress;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
        // Before performing an early bailout, we must check if there are pending
        // updates or context.
        var updateLanes = current.lanes;
        if (includesSomeLane(updateLanes, renderLanes)) return true;
         // No pending update, but because context is propagated lazily, we need
        return false;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes) {
        // This fiber does not have any pending work. Bailout without entering
        // the begin phase. There's still some bookkeeping we that needs to be done
        // in this optimized path, mostly pushing stuff onto the stack.
        switch(workInProgress.tag){
            case HostRoot:
                pushHostRootContext(workInProgress);
                var root = workInProgress.stateNode;
                resetHydrationState();
                break;
            case HostComponent:
                pushHostContext(workInProgress);
                break;
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) pushContextProvider(workInProgress);
                break;
            case HostPortal:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            case ContextProvider:
                var newValue = workInProgress.memoizedProps.value;
                var context = workInProgress.type._context;
                pushProvider(workInProgress, context, newValue);
                break;
            case Profiler:
                // Profiler should only call onRender when one of its descendants actually rendered.
                var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (hasChildWork) workInProgress.flags |= Update;
                // Reset effect durations for the next eventual effect phase.
                // These are reset during render to allow the DevTools commit hook a chance to read them,
                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = 0;
                stateNode.passiveEffectDuration = 0;
                break;
            case SuspenseComponent:
                var state = workInProgress.memoizedState;
                if (state !== null) {
                    if (state.dehydrated !== null) {
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                        // been unsuspended it has committed as a resolved Suspense component.
                        // If it needs to be retried, it should have work scheduled on it.
                        workInProgress.flags |= DidCapture; // We should never render the children of a dehydrated boundary until we
                        // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.
                        return null;
                    } // If this boundary is currently timed out, we need to decide
                    // whether to retry the primary children, or to skip over it and
                    // go straight to the fallback. Check the priority of the primary
                    // child fragment.
                    var primaryChildFragment = workInProgress.child;
                    var primaryChildLanes = primaryChildFragment.childLanes;
                    if (includesSomeLane(renderLanes, primaryChildLanes)) // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current, workInProgress, renderLanes);
                    else {
                        // The primary child fragment does not have pending work marked
                        // on it
                        pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                        // priority. Bailout.
                        var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
                        if (child !== null) // The fallback children have pending work. Skip over the
                        // primary children and work on the fallback.
                        return child.sibling;
                        else // Note: We can return `null` here because we already checked
                        // whether there were nested context consumers, via the call to
                        // `bailoutOnAlreadyFinishedWork` above.
                        return null;
                    }
                } else pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                break;
            case SuspenseListComponent:
                var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;
                var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);
                if (didSuspendBefore) {
                    if (_hasChildWork) // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current, workInProgress, renderLanes);
                     // If none of the children had any work, that means that none of
                    // them got retried so they'll still be blocked in the same way
                    // as before. We can fast bail out.
                    workInProgress.flags |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.
                var renderState = workInProgress.memoizedState;
                if (renderState !== null) {
                    // Reset to the "together" mode in case we've started a different
                    // update in the past but didn't complete it.
                    renderState.rendering = null;
                    renderState.tail = null;
                    renderState.lastEffect = null;
                }
                pushSuspenseContext(workInProgress, suspenseStackCursor.current);
                if (_hasChildWork) break;
                else // If none of the children had any work, that means that none of
                // them got retried so they'll still be blocked in the same way
                // as before. We can fast bail out.
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                // Need to check if the tree still needs to be deferred. This is
                // almost identical to the logic used in the normal update path,
                // so we'll just enter that. The only difference is we'll bail out
                // at the next level instead of this one, because the child props
                // have not changed. Which is fine.
                // TODO: Probably should refactor `beginWork` to split the bailout
                // path from the normal path. I'm tempted to do a labeled break here
                // but I won't :)
                workInProgress.lanes = NoLanes;
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
        if (workInProgress._debugNeedsRemount && current !== null) // This will restart the begin phase with a new fiber.
        return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        if (current !== null) {
            var oldProps = current.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (oldProps !== newProps || hasContextChanged1() || workInProgress.type !== current.type) // If props or context changed, mark the fiber as having performed work.
            // This may be unset if the props are determined to be equal later (memo).
            didReceiveUpdate = true;
            else {
                // Neither props nor legacy context changes. Check if there's a pending
                // update or context change.
                var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current, renderLanes);
                if (!hasScheduledUpdateOrContext && // may not be work scheduled on `current`, so we check for this flag.
                (workInProgress.flags & DidCapture) === NoFlags) {
                    // No pending updates or context. Bail out now.
                    didReceiveUpdate = false;
                    return attemptEarlyBailoutIfNoScheduledUpdate(current, workInProgress, renderLanes);
                }
                if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) // This is a special case that only exists for legacy mode.
                // See https://github.com/facebook/react/pull/19216.
                didReceiveUpdate = true;
                else // An update was scheduled on this fiber, but there are no new props
                // nor legacy context. Set this to false. If an update queue or context
                // consumer produces a changed value, it will set this to true. Otherwise,
                // the component will assume the children have not changed and bail out.
                didReceiveUpdate = false;
            }
        } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress)) {
                // Check if this child belongs to a list of muliple children in
                // its parent.
                //
                // In a true multi-threaded implementation, we would render children on
                // parallel threads. This would represent the beginning of a new render
                // thread for this subtree.
                //
                // We only use this for id generation during hydration, which is why the
                // logic is located in this special branch.
                var slotIndex = workInProgress.index;
                var numberOfForks = getForksAtLevel();
                pushTreeId(workInProgress, numberOfForks, slotIndex);
            }
        } // Before entering the begin phase, clear pending update priority.
        // TODO: This assumes that we're about to evaluate the component and process
        // the update queue. However, there's an exception: SimpleMemoComponent
        // sometimes bails out later in the begin phase. This indicates that we should
        // move this assignment out of the common path and into each branch.
        workInProgress.lanes = NoLanes;
        switch(workInProgress.tag){
            case IndeterminateComponent:
                return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
            case LazyComponent:
                var elementType = workInProgress.elementType;
                return mountLazyComponent(current, workInProgress, elementType, renderLanes);
            case FunctionComponent:
                var Component = workInProgress.type;
                var unresolvedProps = workInProgress.pendingProps;
                var resolvedProps = workInProgress.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
                return updateFunctionComponent(current, workInProgress, Component, resolvedProps, renderLanes);
            case ClassComponent:
                var _Component = workInProgress.type;
                var _unresolvedProps = workInProgress.pendingProps;
                var _resolvedProps = workInProgress.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
                return updateClassComponent(current, workInProgress, _Component, _resolvedProps, renderLanes);
            case HostRoot:
                return updateHostRoot(current, workInProgress, renderLanes);
            case HostComponent:
                return updateHostComponent$1(current, workInProgress, renderLanes);
            case HostText:
                return updateHostText$1(current, workInProgress);
            case SuspenseComponent:
                return updateSuspenseComponent(current, workInProgress, renderLanes);
            case HostPortal:
                return updatePortalComponent(current, workInProgress, renderLanes);
            case ForwardRef:
                var type = workInProgress.type;
                var _unresolvedProps2 = workInProgress.pendingProps;
                var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
            case Fragment:
                return updateFragment1(current, workInProgress, renderLanes);
            case Mode:
                return updateMode(current, workInProgress, renderLanes);
            case Profiler:
                return updateProfiler(current, workInProgress, renderLanes);
            case ContextProvider:
                return updateContextProvider(current, workInProgress, renderLanes);
            case ContextConsumer:
                return updateContextConsumer(current, workInProgress, renderLanes);
            case MemoComponent:
                var _type2 = workInProgress.type;
                var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.
                var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                if (workInProgress.type !== workInProgress.elementType) {
                    var outerPropTypes = _type2.propTypes;
                    if (outerPropTypes) checkPropTypes(outerPropTypes, _resolvedProps3, 'prop', getComponentNameFromType(_type2));
                }
                _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, renderLanes);
            case SimpleMemoComponent:
                return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, renderLanes);
            case IncompleteClassComponent:
                var _Component2 = workInProgress.type;
                var _unresolvedProps4 = workInProgress.pendingProps;
                var _resolvedProps4 = workInProgress.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
                return mountIncompleteClassComponent(current, workInProgress, _Component2, _resolvedProps4, renderLanes);
            case SuspenseListComponent:
                return updateSuspenseListComponent(current, workInProgress, renderLanes);
            case ScopeComponent:
                break;
            case OffscreenComponent:
                return updateOffscreenComponent(current, workInProgress, renderLanes);
        }
        throw new Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in " + 'React. Please file an issue.');
    }
    function unwindWork(current, workInProgress, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(workInProgress);
        switch(workInProgress.tag){
            case ClassComponent:
                var Component = workInProgress.type;
                if (isContextProvider(Component)) popContext(workInProgress);
                var flags = workInProgress.flags;
                if (flags & ShouldCapture) {
                    workInProgress.flags = flags & ~ShouldCapture | DidCapture;
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case HostRoot:
                var root = workInProgress.stateNode;
                popHostContainer(workInProgress);
                popTopLevelContextObject(workInProgress);
                resetWorkInProgressVersions();
                var _flags = workInProgress.flags;
                if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                    // There was an error during render that wasn't captured by a suspense
                    // boundary. Do a second pass on the root to unmount the children.
                    workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
                    return workInProgress;
                } // We unwound to the root without completing it. Exit.
                return null;
            case HostComponent:
                // TODO: popHydrationState
                popHostContext(workInProgress);
                return null;
            case SuspenseComponent:
                popSuspenseContext(workInProgress);
                var suspenseState = workInProgress.memoizedState;
                if (suspenseState !== null && suspenseState.dehydrated !== null) {
                    if (workInProgress.alternate === null) throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                    resetHydrationState();
                }
                var _flags2 = workInProgress.flags;
                if (_flags2 & ShouldCapture) {
                    workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.
                    if ((workInProgress.mode & ProfileMode) !== NoMode) transferActualDuration(workInProgress);
                    return workInProgress;
                }
                return null;
            case SuspenseListComponent:
                popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
                // caught by a nested boundary. If not, it should bubble through.
                return null;
            case HostPortal:
                popHostContainer(workInProgress);
                return null;
            case ContextProvider:
                var context = workInProgress.type._context;
                popProvider(context, workInProgress);
                return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(workInProgress);
                return null;
            case CacheComponent:
                return null;
            default:
                return null;
        }
    }
    function unwindInterruptedWork(current, interruptedWork, renderLanes) {
        // Note: This intentionally doesn't check if we're hydrating because comparing
        // to the current tree provider fiber is just as fast and less error-prone.
        // Ideally we would have a special version of the work loop only
        // for hydration.
        popTreeContext(interruptedWork);
        switch(interruptedWork.tag){
            case ClassComponent:
                var childContextTypes = interruptedWork.type.childContextTypes;
                if (childContextTypes !== null && childContextTypes !== undefined) popContext(interruptedWork);
                break;
            case HostRoot:
                var root = interruptedWork.stateNode;
                popHostContainer(interruptedWork);
                popTopLevelContextObject(interruptedWork);
                resetWorkInProgressVersions();
                break;
            case HostComponent:
                popHostContext(interruptedWork);
                break;
            case HostPortal:
                popHostContainer(interruptedWork);
                break;
            case SuspenseComponent:
                popSuspenseContext(interruptedWork);
                break;
            case SuspenseListComponent:
                popSuspenseContext(interruptedWork);
                break;
            case ContextProvider:
                var context = interruptedWork.type._context;
                popProvider(context, interruptedWork);
                break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
                popRenderLanes(interruptedWork);
                break;
        }
    }
    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    // Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.
    // Only used when enableSuspenseLayoutEffectSemantics is enabled.
    var offscreenSubtreeIsHidden = false;
    var offscreenSubtreeWasHidden = false;
    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
    var nextEffect = null; // Used for Profiling builds to track updaters.
    var inProgressLanes = null;
    var inProgressRoot = null;
    function reportUncaughtErrorInDEV(error) {
        invokeGuardedCallback(null, function() {
            throw error;
        });
        clearCaughtError();
    }
    var callComponentWillUnmountWithTimer = function(current, instance) {
        instance.props = current.memoizedProps;
        instance.state = current.memoizedState;
        if (current.mode & ProfileMode) try {
            startLayoutEffectTimer();
            instance.componentWillUnmount();
        } finally{
            recordLayoutEffectDuration(current);
        }
        else instance.componentWillUnmount();
    }; // Capture errors so they don't interrupt mounting.
    function safelyCallCommitHookLayoutEffectListMount(current, nearestMountedAncestor) {
        try {
            commitHookEffectListMount(Layout, current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt unmounting.
    function safelyCallComponentWillUnmount(current, nearestMountedAncestor, instance) {
        try {
            callComponentWillUnmountWithTimer(current, instance);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyCallComponentDidMount(current, nearestMountedAncestor, instance) {
        try {
            instance.componentDidMount();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    } // Capture errors so they don't interrupt mounting.
    function safelyAttachRef(current, nearestMountedAncestor) {
        try {
            commitAttachRef(current);
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
        var ref = current.ref;
        if (ref !== null) {
            if (typeof ref === 'function') {
                var retVal;
                try {
                    if (enableProfilerTimer && enableProfilerCommitHooks && current.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        retVal = ref(null);
                    } finally{
                        recordLayoutEffectDuration(current);
                    }
                    else retVal = ref(null);
                } catch (error) {
                    captureCommitPhaseError(current, nearestMountedAncestor, error);
                }
                if (typeof retVal === 'function') error1("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current));
            } else ref.current = null;
        }
    }
    function safelyCallDestroy(current, nearestMountedAncestor, destroy) {
        try {
            destroy();
        } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
        }
    }
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;
    function commitBeforeMutationEffects(root, firstChild) {
        focusedInstanceHandle = prepareForCommit(root.containerInfo);
        nextEffect = firstChild;
        commitBeforeMutationEffects_begin(); // We no longer need to track the active instance fiber
        var shouldFire = shouldFireAfterActiveInstanceBlur;
        shouldFireAfterActiveInstanceBlur = false;
        focusedInstanceHandle = null;
        return shouldFire;
    }
    function commitBeforeMutationEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect; // This phase is only used for beforeActiveInstanceBlur.
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitBeforeMutationEffects_complete();
        }
    }
    function commitBeforeMutationEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
                commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitBeforeMutationEffectsOnFiber(finishedWork) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags;
        if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch(finishedWork.tag){
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                    break;
                case ClassComponent:
                    if (current !== null) {
                        var prevProps = current.memoizedProps;
                        var prevState = current.memoizedState;
                        var instance = finishedWork.stateNode; // We could update instance props and state here,
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                            if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                        }
                        var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                        var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                        if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                            didWarnSet.add(finishedWork.type);
                            error1("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                        }
                        instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                    }
                    break;
                case HostRoot:
                    var root = finishedWork.stateNode;
                    clearContainer(root.containerInfo);
                    break;
                case HostComponent:
                case HostText:
                case HostPortal:
                case IncompleteClassComponent:
                    break;
                default:
                    throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
            resetCurrentFiber();
        }
    }
    function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    // Unmount
                    var destroy = effect.destroy;
                    effect.destroy = undefined;
                    if (destroy !== undefined) {
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStarted(finishedWork);
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStarted(finishedWork);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                        safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                        if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                        if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectUnmountStopped();
                        else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectUnmountStopped();
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect)
        }
    }
    function commitHookEffectListMount(flags, finishedWork) {
        var updateQueue = finishedWork.updateQueue;
        var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
                if ((effect.tag & flags) === flags) {
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStarted(finishedWork);
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStarted(finishedWork);
                    var create = effect.create;
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(true);
                    effect.destroy = create();
                    if ((flags & Insertion) !== NoFlags$1) setIsRunningInsertionEffect(false);
                    if ((flags & Passive$1) !== NoFlags$1) markComponentPassiveEffectMountStopped();
                    else if ((flags & Layout) !== NoFlags$1) markComponentLayoutEffectMountStopped();
                    var destroy = effect.destroy;
                    if (destroy !== undefined && typeof destroy !== 'function') {
                        var hookName = void 0;
                        if ((effect.tag & Layout) !== NoFlags) hookName = 'useLayoutEffect';
                        else if ((effect.tag & Insertion) !== NoFlags) hookName = 'useInsertionEffect';
                        else hookName = 'useEffect';
                        var addendum = void 0;
                        if (destroy === null) addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                        else if (typeof destroy.then === 'function') addendum = '\n\nIt looks like you wrote ' + hookName + '(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + hookName + '(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';
                        else addendum = ' You returned: ' + destroy;
                        error1("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                    }
                }
                effect = effect.next;
            }while (effect !== firstEffect)
        }
    }
    function commitPassiveEffectDurations(finishedRoot, finishedWork) {
        // Only Profilers with work in their subtree will have an Update effect scheduled.
        if ((finishedWork.flags & Update) !== NoFlags) switch(finishedWork.tag){
            case Profiler:
                var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit; // This value will still reflect the previous commit phase.
                // It does not get reset until the start of the next commit phase.
                var commitTime = getCommitTime();
                var phase = finishedWork.alternate === null ? 'mount' : 'update';
                if (isCurrentUpdateNested()) phase = 'nested-update';
                if (typeof onPostCommit === 'function') onPostCommit(id, phase, passiveEffectDuration, commitTime);
                 // Bubble times to the next nearest ancestor Profiler.
                // After we process that Profiler, we'll bubble further up.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.passiveEffectDuration += passiveEffectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
        }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork, committedLanes) {
        if ((finishedWork.flags & LayoutMask) !== NoFlags) switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    // At this point layout effects have already been destroyed (during mutation phase).
                    // This is done to prevent sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListMount(Layout | HasEffect, finishedWork);
                    } finally{
                        recordLayoutEffectDuration(finishedWork);
                    }
                    else commitHookEffectListMount(Layout | HasEffect, finishedWork);
                }
                break;
            case ClassComponent:
                var instance = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                    if (!offscreenSubtreeWasHidden) {
                        if (current === null) {
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                                if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidMount();
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidMount();
                        } else {
                            var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                            var prevState = current.memoizedState; // We could update instance props and state here,
                            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                                if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                            }
                            if (finishedWork.mode & ProfileMode) try {
                                startLayoutEffectTimer();
                                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                            } finally{
                                recordLayoutEffectDuration(finishedWork);
                            }
                            else instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                        }
                    }
                } // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                        if (instance.props !== finishedWork.memoizedProps) error1("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                        if (instance.state !== finishedWork.memoizedState) error1("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || 'instance');
                    }
                    // but instead we rely on them being set during last render.
                    // TODO: revisit this when we implement resuming.
                    commitUpdateQueue(finishedWork, updateQueue, instance);
                }
                break;
            case HostRoot:
                // TODO: I think this is now always non-null by the time it reaches the
                // commit phase. Consider removing the type check.
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                    var _instance = null;
                    if (finishedWork.child !== null) switch(finishedWork.child.tag){
                        case HostComponent:
                            _instance = getPublicInstance(finishedWork.child.stateNode);
                            break;
                        case ClassComponent:
                            _instance = finishedWork.child.stateNode;
                            break;
                    }
                    commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
            case HostComponent:
                var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
                // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                // These effects should only be committed when components are first mounted,
                // aka when there is no current/alternate.
                if (current === null && finishedWork.flags & Update) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props);
                }
                break;
            case HostText:
                break;
            case HostPortal:
                break;
            case Profiler:
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                var effectDuration = finishedWork.stateNode.effectDuration;
                var commitTime = getCommitTime();
                var phase = current === null ? 'mount' : 'update';
                if (isCurrentUpdateNested()) phase = 'nested-update';
                if (typeof onRender === 'function') onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime);
                if (typeof onCommit === 'function') onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime);
                 // Schedule a passive effect for this Profiler to call onPostCommit hooks.
                // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,
                // because the effect is also where times bubble to parent Profilers.
                enqueuePendingPassiveProfilerEffect(finishedWork); // Propagate layout effect durations to the next nearest Profiler ancestor.
                // Do not reset these values until the next render so DevTools has a chance to read them first.
                var parentFiber = finishedWork.return;
                outer: while(parentFiber !== null){
                    switch(parentFiber.tag){
                        case HostRoot:
                            var root = parentFiber.stateNode;
                            root.effectDuration += effectDuration;
                            break outer;
                        case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                    }
                    parentFiber = parentFiber.return;
                }
                break;
            case SuspenseComponent:
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
                break;
            default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (!offscreenSubtreeWasHidden) {
            if (finishedWork.flags & Ref) commitAttachRef(finishedWork);
        }
    }
    function reappearLayoutEffectsOnFiber(node) {
        // Turn on layout effects in a tree that previously disappeared.
        // TODO (Offscreen) Check: flags & LayoutStatic
        switch(node.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (node.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    safelyCallCommitHookLayoutEffectListMount(node, node.return);
                } finally{
                    recordLayoutEffectDuration(node);
                }
                else safelyCallCommitHookLayoutEffectListMount(node, node.return);
                break;
            case ClassComponent:
                var instance = node.stateNode;
                if (typeof instance.componentDidMount === 'function') safelyCallComponentDidMount(node, node.return, instance);
                safelyAttachRef(node, node.return);
                break;
            case HostComponent:
                safelyAttachRef(node, node.return);
                break;
        }
    }
    function hideOrUnhideAllChildren(finishedWork, isHidden) {
        // Only hide or unhide the top-most host nodes.
        var hostSubtreeRoot = null;
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;
        while(true){
            if (node.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                    hostSubtreeRoot = node;
                    try {
                        var instance = node.stateNode;
                        if (isHidden) hideInstance(instance);
                        else unhideInstance(node.stateNode, node.memoizedProps);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
            } else if (node.tag === HostText) {
                if (hostSubtreeRoot === null) try {
                    var _instance3 = node.stateNode;
                    if (isHidden) hideTextInstance(_instance3);
                    else unhideTextInstance(_instance3, node.memoizedProps);
                } catch (error) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error);
                }
            } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;
            else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === finishedWork) return;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return;
                if (hostSubtreeRoot === node) hostSubtreeRoot = null;
                node = node.return;
            }
            if (hostSubtreeRoot === node) hostSubtreeRoot = null;
            node.sibling.return = node.return;
            node = node.sibling;
        }
    }
    function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
            var instance = finishedWork.stateNode;
            var instanceToUse;
            switch(finishedWork.tag){
                case HostComponent:
                    instanceToUse = getPublicInstance(instance);
                    break;
                default:
                    instanceToUse = instance;
            } // Moved outside to ensure DCE works with this flag
            if (typeof ref === 'function') {
                var retVal;
                if (finishedWork.mode & ProfileMode) try {
                    startLayoutEffectTimer();
                    retVal = ref(instanceToUse);
                } finally{
                    recordLayoutEffectDuration(finishedWork);
                }
                else retVal = ref(instanceToUse);
                if (typeof retVal === 'function') error1("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
            } else {
                if (!ref.hasOwnProperty('current')) error1("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                ref.current = instanceToUse;
            }
        }
    }
    function detachFiberMutation(fiber) {
        // Cut off the return pointer to disconnect it from the tree.
        // This enables us to detect and warn against state updates on an unmounted component.
        // It also prevents events from bubbling from within disconnected components.
        //
        // Ideally, we should also clear the child pointer of the parent alternate to let this
        // get GC:ed but we don't know which for sure which parent is the current
        // one so we'll settle for GC:ing the subtree of this child.
        // This child itself will be GC:ed when the parent updates the next time.
        //
        // Note that we can't clear child or sibling pointers yet.
        // They're needed for passive effects and for findDOMNode.
        // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).
        //
        // Don't reset the alternate yet, either. We need that so we can detach the
        // alternate's fields in the passive phase. Clearing the return pointer is
        // sufficient for findDOMNode semantics.
        var alternate = fiber.alternate;
        if (alternate !== null) alternate.return = null;
        fiber.return = null;
    }
    function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
        } // Note: Defensively using negation instead of < in case
        // Clear cyclical Fiber fields. This level alone is designed to roughly
        // approximate the planned Fiber refactor. In that world, `setState` will be
        // bound to a special "instance" object instead of a Fiber. The Instance
        // object will not have any of these fields. It will only be connected to
        // the fiber tree via a single link at the root. So if this level alone is
        // sufficient to fix memory issues, that bodes well for our plans.
        fiber.child = null;
        fiber.deletions = null;
        fiber.sibling = null; // The `stateNode` is cyclical because on host nodes it points to the host
        // tree, which has its own pointers to children, parents, and siblings.
        // The other host nodes also point back to fibers, so we should detach that
        // one, too.
        if (fiber.tag === HostComponent) {
            var hostInstance = fiber.stateNode;
            if (hostInstance !== null) detachDeletedInstance(hostInstance);
        }
        fiber.stateNode = null; // I'm intentionally not clearing the `return` field in this level. We
        fiber._debugOwner = null;
        // Theoretically, nothing in here should be necessary, because we already
        // disconnected the fiber from the tree. So even if something leaks this
        // particular fiber, it won't leak anything else
        //
        // The purpose of this branch is to be super aggressive so we can measure
        // if there's any difference in memory impact. If there is, that could
        // indicate a React leak we don't know about.
        fiber.return = null;
        fiber.dependencies = null;
        fiber.memoizedProps = null;
        fiber.memoizedState = null;
        fiber.pendingProps = null;
        fiber.stateNode = null; // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.
        fiber.updateQueue = null;
    }
    function getHostParentFiber(fiber) {
        var parent = fiber.return;
        while(parent !== null){
            if (isHostParent(parent)) return parent;
            parent = parent.return;
        }
        throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
    }
    function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }
    function getHostSibling(fiber) {
        // We're going to search forward into the tree until we find a sibling host
        // node. Unfortunately, if multiple insertions are done in a row we have to
        // search past them. This leads to exponential search for the next sibling.
        // TODO: Find a more efficient way to do this.
        var node = fiber;
        siblings: while(true){
            // If we didn't find anything, let's try the next sibling.
            while(node.sibling === null){
                if (node.return === null || isHostParent(node.return)) // If we pop out of the root or hit the parent the fiber we are the
                // last sibling.
                return null;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
            while(node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment){
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.flags & Placement) continue siblings;
                 // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal) continue siblings;
                else {
                    node.child.return = node;
                    node = node.child;
                }
            } // Check if this host node is stable or about to be placed.
            if (!(node.flags & Placement)) // Found it!
            return node.stateNode;
        }
    }
    function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.
        switch(parentFiber.tag){
            case HostComponent:
                var parent = parentFiber.stateNode;
                if (parentFiber.flags & ContentReset) {
                    // Reset the text content of the parent before doing any insertions
                    resetTextContent(parent); // Clear ContentReset from the effect tag
                    parentFiber.flags &= ~ContentReset;
                }
                var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
                // children to find all the terminal nodes.
                insertOrAppendPlacementNode(finishedWork, before, parent);
                break;
            case HostRoot:
            case HostPortal:
                var _parent = parentFiber.stateNode.containerInfo;
                var _before = getHostSibling(finishedWork);
                insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
                break;
            // eslint-disable-next-line-no-fallthrough
            default:
                throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertInContainerBefore(parent, stateNode, before);
            else appendChildToContainer(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    }
    function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag;
        var isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
            var stateNode = node.stateNode;
            if (before) insertBefore(parent, stateNode, before);
            else appendChild(parent, stateNode);
        } else if (tag === HostPortal) ;
        else {
            var child = node.child;
            if (child !== null) {
                insertOrAppendPlacementNode(child, before, parent);
                var sibling = child.sibling;
                while(sibling !== null){
                    insertOrAppendPlacementNode(sibling, before, parent);
                    sibling = sibling.sibling;
                }
            }
        }
    } // These are tracked on the stack as we recursively traverse a
    // deleted subtree.
    // TODO: Update these during the whole mutation phase, not just during
    // a deletion.
    var hostParent = null;
    var hostParentIsContainer = false;
    function commitDeletionEffects(root, returnFiber, deletedFiber) {
        // We only have the top Fiber that was deleted but we need to recurse down its
        // children to find all the terminal nodes.
        // Recursively delete all host nodes from the parent, detach refs, clean
        // up mounted layout effects, and call componentWillUnmount.
        // We only need to remove the topmost host child in each branch. But then we
        // still need to keep traversing to unmount effects, refs, and cWU. TODO: We
        // could split this into two separate traversals functions, where the second
        // one doesn't include any removeChild logic. This is maybe the same
        // function as "disappearLayoutEffects" (or whatever that turns into after
        // the layout phase is refactored to use recursion).
        // Before starting, find the nearest host parent on the stack so we know
        // which instance/container to remove the children from.
        // TODO: Instead of searching up the fiber return path on every deletion, we
        // can track the nearest host component on the JS stack as we traverse the
        // tree during the commit phase. This would make insertions faster, too.
        var parent = returnFiber;
        findParent: while(parent !== null){
            switch(parent.tag){
                case HostComponent:
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                case HostRoot:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                case HostPortal:
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
            }
            parent = parent.return;
        }
        if (hostParent === null) throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
        hostParent = null;
        hostParentIsContainer = false;
        detachFiberMutation(deletedFiber);
    }
    function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        // TODO: Use a static flag to skip trees that don't have unmount effects
        var child = parent.child;
        while(child !== null){
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
        }
    }
    function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        onCommitUnmount(deletedFiber); // The cases in this outer switch modify the stack before they traverse
        // into their subtree. There are simpler cases in the inner switch
        // that don't modify the stack.
        switch(deletedFiber.tag){
            case HostComponent:
                if (!offscreenSubtreeWasHidden) safelyDetachRef(deletedFiber, nearestMountedAncestor);
                 // Intentional fallthrough to next branch
            // eslint-disable-next-line-no-fallthrough
            case HostText:
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                    // Now that all the child effects have unmounted, we can remove the
                    // node from the tree.
                    if (hostParentIsContainer) removeChildFromContainer(hostParent, deletedFiber.stateNode);
                    else removeChild(hostParent, deletedFiber.stateNode);
                }
                return;
            case DehydratedFragment:
                if (hostParent !== null) {
                    if (hostParentIsContainer) clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                    else clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                }
                return;
            case HostPortal:
                // When we go into a portal, it becomes the parent to remove from.
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
                return;
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                if (!offscreenSubtreeWasHidden) {
                    var updateQueue = deletedFiber.updateQueue;
                    if (updateQueue !== null) {
                        var lastEffect = updateQueue.lastEffect;
                        if (lastEffect !== null) {
                            var firstEffect = lastEffect.next;
                            var effect = firstEffect;
                            do {
                                var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                                if (destroy !== undefined) {
                                    if ((tag & Insertion) !== NoFlags$1) safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                    else if ((tag & Layout) !== NoFlags$1) {
                                        markComponentLayoutEffectUnmountStarted(deletedFiber);
                                        if (deletedFiber.mode & ProfileMode) {
                                            startLayoutEffectTimer();
                                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                            recordLayoutEffectDuration(deletedFiber);
                                        } else safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                        markComponentLayoutEffectUnmountStopped();
                                    }
                                }
                                effect = effect.next;
                            }while (effect !== firstEffect)
                        }
                    }
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ClassComponent:
                if (!offscreenSubtreeWasHidden) {
                    safelyDetachRef(deletedFiber, nearestMountedAncestor);
                    var instance = deletedFiber.stateNode;
                    if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
                }
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case ScopeComponent:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
            case OffscreenComponent:
                if (deletedFiber.mode & ConcurrentMode) {
                    // If this offscreen component is hidden, we already unmounted it. Before
                    // deleting the children, track that it's already unmounted so that we
                    // don't attempt to unmount the effects again.
                    // TODO: If the tree is hidden, in most cases we should be able to skip
                    // over the nested children entirely. An exception is we haven't yet found
                    // the topmost host node to delete, which we already track on the stack.
                    // But the other case is portals, which need to be detached no matter how
                    // deeply they are nested. We should use a subtree flag to track whether a
                    // subtree includes a nested portal.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                break;
            default:
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                return;
        }
    }
    function commitSuspenseCallback(finishedWork) {
        // TODO: Move this to passive phase
        var newState = finishedWork.memoizedState;
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
            var current = finishedWork.alternate;
            if (current !== null) {
                var prevState = current.memoizedState;
                if (prevState !== null) {
                    var suspenseInstance = prevState.dehydrated;
                    if (suspenseInstance !== null) commitHydratedSuspenseInstance(suspenseInstance);
                }
            }
        }
    }
    function attachSuspenseRetryListeners(finishedWork) {
        // If this boundary just timed out, then it will have a set of wakeables.
        // For each wakeable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            wakeables.forEach(function(wakeable) {
                // Memoize using the boundary fiber to prevent redundant listeners.
                var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                if (!retryCache.has(wakeable)) {
                    retryCache.add(wakeable);
                    if (isDevToolsPresent) {
                        if (inProgressLanes !== null && inProgressRoot !== null) // If we have pending work still, associate the original updaters with it.
                        restorePendingUpdaters(inProgressRoot, inProgressLanes);
                        else throw Error('Expected finished root and lanes to be set. This is a bug in React.');
                    }
                    wakeable.then(retry, retry);
                }
            });
        }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    function commitMutationEffects(root, finishedWork, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        setCurrentFiber(finishedWork);
        commitMutationEffectsOnFiber(finishedWork, root);
        setCurrentFiber(finishedWork);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function recursivelyTraverseMutationEffects(root, parentFiber, lanes) {
        // Deletions effects can be scheduled on any fiber type. They need to happen
        // before the children effects hae fired.
        var deletions = parentFiber.deletions;
        if (deletions !== null) for(var i = 0; i < deletions.length; i++){
            var childToDelete = deletions[i];
            try {
                commitDeletionEffects(root, parentFiber, childToDelete);
            } catch (error) {
                captureCommitPhaseError(childToDelete, parentFiber, error);
            }
        }
        var prevDebugFiber = getCurrentFiber();
        if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while(child !== null){
                setCurrentFiber(child);
                commitMutationEffectsOnFiber(child, root);
                child = child.sibling;
            }
        }
        setCurrentFiber(prevDebugFiber);
    }
    function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
        var current = finishedWork.alternate;
        var flags = finishedWork.flags; // The effect flag should be checked *after* we refine the type of fiber,
        // because the fiber tag is more specific. An exception is any flag related
        // to reconcilation, because those can be set on all fiber types.
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    try {
                        commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                        commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    } // Layout effects are destroyed during the mutation phase so that all
                    // destroy functions for all fibers are called before any create functions.
                    // This prevents sibling component effects from interfering with each other,
                    // e.g. a destroy function in one component should never override a ref set
                    // by a create function in another component during the same commit.
                    if (finishedWork.mode & ProfileMode) {
                        try {
                            startLayoutEffectTimer();
                            commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                        recordLayoutEffectDuration(finishedWork);
                    } else try {
                        commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                    } catch (error2) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                    }
                }
                return;
            case ClassComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                return;
            case HostComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Ref) {
                    if (current !== null) safelyDetachRef(current, current.return);
                }
                // TODO: ContentReset gets cleared by the children during the commit
                // phase. This is a refactor hazard because it means we must read
                // flags the flags after `commitReconciliationEffects` has already run;
                // the order matters. We should refactor so that ContentReset does not
                // rely on mutating the flag during commit. Like by setting a flag
                // during the render phase instead.
                if (finishedWork.flags & ContentReset) {
                    var instance = finishedWork.stateNode;
                    try {
                        resetTextContent(instance);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                if (flags & Update) {
                    var _instance4 = finishedWork.stateNode;
                    if (_instance4 != null) {
                        // Commit the work prepared earlier.
                        var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                        // as the newProps. The updatePayload will contain the real change in
                        // this case.
                        var oldProps = current !== null ? current.memoizedProps : newProps;
                        var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.
                        var updatePayload = finishedWork.updateQueue;
                        finishedWork.updateQueue = null;
                        if (updatePayload !== null) try {
                            commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostText:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (finishedWork.stateNode === null) throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                    var textInstance = finishedWork.stateNode;
                    var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldText = current !== null ? current.memoizedProps : newText;
                    try {
                        commitTextUpdate(textInstance, oldText, newText);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                }
                return;
            case HostRoot:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) {
                    if (current !== null) {
                        var prevRootState = current.memoizedState;
                        if (prevRootState.isDehydrated) try {
                            commitHydratedContainer(root.containerInfo);
                        } catch (error) {
                            captureCommitPhaseError(finishedWork, finishedWork.return, error);
                        }
                    }
                }
                return;
            case HostPortal:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
            case SuspenseComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                var offscreenFiber = finishedWork.child;
                if (offscreenFiber.flags & Visibility) {
                    var newState = offscreenFiber.memoizedState;
                    var isHidden = newState !== null;
                    if (isHidden) {
                        var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                        if (!wasHidden) // TODO: Move to passive phase
                        markCommitTimeOfFallback();
                    }
                }
                if (flags & Update) {
                    try {
                        commitSuspenseCallback(finishedWork);
                    } catch (error) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error);
                    }
                    attachSuspenseRetryListeners(finishedWork);
                }
                return;
            case OffscreenComponent:
                var _wasHidden = current !== null && current.memoizedState !== null;
                if (finishedWork.mode & ConcurrentMode) {
                    // Before committing the children, track on the stack whether this
                    // offscreen subtree was already hidden, so that we don't unmount the
                    // effects again.
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                    recursivelyTraverseMutationEffects(root, finishedWork);
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                } else recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Visibility) {
                    var _newState = finishedWork.memoizedState;
                    var _isHidden = _newState !== null;
                    var offscreenBoundary = finishedWork;
                    // TODO: This needs to run whenever there's an insertion or update
                    // inside a hidden Offscreen tree.
                    hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                    if (_isHidden) {
                        if (!_wasHidden) {
                            if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                                nextEffect = offscreenBoundary;
                                var offscreenChild = offscreenBoundary.child;
                                while(offscreenChild !== null){
                                    nextEffect = offscreenChild;
                                    disappearLayoutEffects_begin(offscreenChild);
                                    offscreenChild = offscreenChild.sibling;
                                }
                            }
                        }
                    }
                }
                return;
            case SuspenseListComponent:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                if (flags & Update) attachSuspenseRetryListeners(finishedWork);
                return;
            case ScopeComponent:
                return;
            default:
                recursivelyTraverseMutationEffects(root, finishedWork);
                commitReconciliationEffects(finishedWork);
                return;
        }
    }
    function commitReconciliationEffects(finishedWork) {
        // Placement effects (insertions, reorders) can be scheduled on any fiber
        // type. They needs to happen after the children effects have fired, but
        // before the effects on this fiber have fired.
        var flags = finishedWork.flags;
        if (flags & Placement) {
            try {
                commitPlacement(finishedWork);
            } catch (error) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error);
            } // Clear the "placement" from effect tag so that we know that this is
            // inserted, before any life-cycles like componentDidMount gets called.
            // TODO: findDOMNode doesn't rely on this any more but isMounted does
            // and isMounted is deprecated anyway so we should be able to kill this.
            finishedWork.flags &= ~Placement;
        }
        if (flags & Hydrating) finishedWork.flags &= ~Hydrating;
    }
    function commitLayoutEffects(finishedWork, root, committedLanes) {
        inProgressLanes = committedLanes;
        inProgressRoot = root;
        nextEffect = finishedWork;
        commitLayoutEffects_begin(finishedWork, root, committedLanes);
        inProgressLanes = null;
        inProgressRoot = null;
    }
    function commitLayoutEffects_begin(subtreeRoot, root, committedLanes) {
        // Suspense layout effects semantics don't change for legacy roots.
        var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
                // Keep track of the current Offscreen stack's state.
                var isHidden = fiber.memoizedState !== null;
                var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
                if (newOffscreenSubtreeIsHidden) {
                    // The Offscreen tree is hidden. Skip over its layout effects.
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                } else {
                    // TODO (Offscreen) Also check: subtreeFlags & LayoutMask
                    var current = fiber.alternate;
                    var wasHidden = current !== null && current.memoizedState !== null;
                    var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                    var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                    var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden; // Traverse the Offscreen subtree with the current Offscreen as the root.
                    offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                    if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                        // This is the root of a reappearing boundary. Turn its layout effects
                        // back on.
                        nextEffect = fiber;
                        reappearLayoutEffects_begin(fiber);
                    }
                    var child = firstChild;
                    while(child !== null){
                        nextEffect = child;
                        commitLayoutEffects_begin(child, root, committedLanes);
                        child = child.sibling;
                    } // Restore Offscreen state and resume in our-progress traversal.
                    nextEffect = fiber;
                    offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                    offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                    commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
                    continue;
                }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);
        }
    }
    function commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
                var current = fiber.alternate;
                setCurrentFiber(fiber);
                try {
                    commitLayoutEffectOnFiber(root, current, fiber, committedLanes);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function disappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child; // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
            switch(fiber.tag){
                case FunctionComponent:
                case ForwardRef:
                case MemoComponent:
                case SimpleMemoComponent:
                    if (fiber.mode & ProfileMode) try {
                        startLayoutEffectTimer();
                        commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    } finally{
                        recordLayoutEffectDuration(fiber);
                    }
                    else commitHookEffectListUnmount(Layout, fiber, fiber.return);
                    break;
                case ClassComponent:
                    // TODO (Offscreen) Check: flags & RefStatic
                    safelyDetachRef(fiber, fiber.return);
                    var instance = fiber.stateNode;
                    if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                    break;
                case HostComponent:
                    safelyDetachRef(fiber, fiber.return);
                    break;
                case OffscreenComponent:
                    // Check if this is a
                    var isHidden = fiber.memoizedState !== null;
                    if (isHidden) {
                        // Nested Offscreen tree is already hidden. Don't disappear
                        // its effects.
                        disappearLayoutEffects_complete(subtreeRoot);
                        continue;
                    }
                    break;
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else disappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function disappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function reappearLayoutEffects_begin(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                    // Nested Offscreen tree is still hidden. Don't re-appear its effects.
                    reappearLayoutEffects_complete(subtreeRoot);
                    continue;
                }
            } // TODO (Offscreen) Check: subtreeFlags & LayoutStatic
            if (firstChild !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else reappearLayoutEffects_complete(subtreeRoot);
        }
    }
    function reappearLayoutEffects_complete(subtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect; // TODO (Offscreen) Check: flags & LayoutStatic
            setCurrentFiber(fiber);
            try {
                reappearLayoutEffectsOnFiber(fiber);
            } catch (error) {
                captureCommitPhaseError(fiber, fiber.return, error);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                // This node may have been reused from a previous render, so we can't
                // assume its return pointer is correct.
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountEffects(root, finishedWork, committedLanes, committedTransitions) {
        nextEffect = finishedWork;
        commitPassiveMountEffects_begin(finishedWork, root, committedLanes, committedTransitions);
    }
    function commitPassiveMountEffects_begin(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
                firstChild.return = fiber;
                nextEffect = firstChild;
            } else commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions);
        }
    }
    function commitPassiveMountEffects_complete(subtreeRoot, root, committedLanes, committedTransitions) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                try {
                    commitPassiveMountOnFiber(root, fiber, committedLanes, committedTransitions);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
                nextEffect = null;
                return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    try {
                        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                    } finally{
                        recordPassiveEffectDuration(finishedWork);
                    }
                } else commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                break;
        }
    }
    function commitPassiveUnmountEffects(firstChild) {
        nextEffect = firstChild;
        commitPassiveUnmountEffects_begin();
    }
    function commitPassiveUnmountEffects_begin() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
                var deletions = fiber.deletions;
                if (deletions !== null) {
                    for(var i = 0; i < deletions.length; i++){
                        var fiberToDelete = deletions[i];
                        nextEffect = fiberToDelete;
                        commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                    }
                    // A fiber was deleted from this parent fiber, but it's still part of
                    // the previous (alternate) parent fiber's list of children. Because
                    // children are a linked list, an earlier sibling that's still alive
                    // will be connected to the deleted fiber via its `alternate`:
                    //
                    //   live fiber
                    //   --alternate--> previous live fiber
                    //   --sibling--> deleted fiber
                    //
                    // We can't disconnect `alternate` on nodes that haven't been deleted
                    // yet, but we can disconnect the `sibling` and `child` pointers.
                    var previousFiber = fiber.alternate;
                    if (previousFiber !== null) {
                        var detachedChild = previousFiber.child;
                        if (detachedChild !== null) {
                            previousFiber.child = null;
                            do {
                                var detachedSibling = detachedChild.sibling;
                                detachedChild.sibling = null;
                                detachedChild = detachedSibling;
                            }while (detachedChild !== null)
                        }
                    }
                    nextEffect = fiber;
                }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffects_complete();
        }
    }
    function commitPassiveUnmountEffects_complete() {
        while(nextEffect !== null){
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
                setCurrentFiber(fiber);
                commitPassiveUnmountOnFiber(fiber);
                resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
                sibling.return = fiber.return;
                nextEffect = sibling;
                return;
            }
            nextEffect = fiber.return;
        }
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
        switch(finishedWork.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (finishedWork.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                    recordPassiveEffectDuration(finishedWork);
                } else commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                break;
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        while(nextEffect !== null){
            var fiber = nextEffect; // Deletion effects fire in parent -> child order
            // TODO: Check if fiber has a PassiveStatic flag
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child; // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we
            // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)
            if (child !== null) {
                child.return = fiber;
                nextEffect = child;
            } else commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
        }
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
        while(nextEffect !== null){
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            // Recursively traverse the entire deleted tree and clean up fiber fields.
            // This is more aggressive than ideal, and the long term goal is to only
            // have to detach the deleted tree at the root.
            detachFiberAfterEffects(fiber);
            if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
            }
            if (sibling !== null) {
                sibling.return = returnFiber;
                nextEffect = sibling;
                return;
            }
            nextEffect = returnFiber;
        }
    }
    function commitPassiveUnmountInsideDeletedTreeOnFiber(current, nearestMountedAncestor) {
        switch(current.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                if (current.mode & ProfileMode) {
                    startPassiveEffectTimer();
                    commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                    recordPassiveEffectDuration(current);
                } else commitHookEffectListUnmount(Passive$1, current, nearestMountedAncestor);
                break;
        }
    } // TODO: Reuse reappearLayoutEffects traversal here?
    function invokeLayoutEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Layout | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                try {
                    instance.componentDidMount();
                } catch (error3) {
                    captureCommitPhaseError(fiber, fiber.return, error3);
                }
                break;
        }
    }
    function invokePassiveEffectMountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
        }
    }
    function invokeLayoutEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
                break;
            case ClassComponent:
                var instance = fiber.stateNode;
                if (typeof instance.componentWillUnmount === 'function') safelyCallComponentWillUnmount(fiber, fiber.return, instance);
                break;
        }
    }
    function invokePassiveEffectUnmountInDEV(fiber) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                try {
                    commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error) {
                    captureCommitPhaseError(fiber, fiber.return, error);
                }
        }
    }
    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;
    if (typeof Symbol === 'function' && Symbol.for) {
        var symbolFor = Symbol.for;
        COMPONENT_TYPE = symbolFor('selector.component');
        HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');
        ROLE_TYPE = symbolFor('selector.role');
        TEST_NAME_TYPE = symbolFor('selector.test_id');
        TEXT_TYPE = symbolFor('selector.text');
    }
    var commitHooks = [];
    function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
            return commitHook();
        });
    }
    var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
    function isLegacyActEnvironment(fiber) {
        // Legacy mode. We preserve the behavior of React 17's act. It assumes an
        // act environment whenever `jest` is defined, but you can still turn off
        // spurious warnings by setting IS_REACT_ACT_ENVIRONMENT explicitly
        // to false.
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined; // $FlowExpectedError - Flow doesn't know about jest
        var jestIsDefined = typeof jest !== 'undefined';
        return jestIsDefined && isReactActEnvironmentGlobal !== false;
    }
    function isConcurrentActEnvironment() {
        var isReactActEnvironmentGlobal = typeof IS_REACT_ACT_ENVIRONMENT !== 'undefined' ? IS_REACT_ACT_ENVIRONMENT : undefined;
        if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) // TODO: Include link to relevant documentation page.
        error1("The current testing environment is not configured to support act(...)");
        return isReactActEnvironmentGlobal;
    }
    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
    var NoContext = /*             */ 0;
    var BatchedContext = /*               */ 1;
    var RenderContext = /*                */ 2;
    var CommitContext = /*                */ 4;
    var RootInProgress = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5;
    var RootDidNotComplete = 6; // Describes where we are in the React execution stack
    var executionContext = NoContext; // The root we're working on
    var workInProgressRoot = null; // The fiber we're working on
    var workInProgress1 = null; // The lanes we're rendering
    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.
    var subtreeRenderLanes1 = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.
    var workInProgressRootExitStatus = RootInProgress; // A fatal error, if one is thrown
    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.
    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.
    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.
    var workInProgressRootInterleavedUpdatedLanes = NoLanes; // Lanes that were updated during the render phase (*not* an interleaved event).
    var workInProgressRootPingedLanes = NoLanes; // Errors that are thrown during the render phase.
    var workInProgressRootConcurrentErrors = null; // These are errors that we recovered from without surfacing them to the UI.
    // We will log them once the tree commits.
    var workInProgressRootRecoverableErrors = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.
    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.
    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.
    var RENDER_TIMEOUT_MS = 500;
    var workInProgressTransitions = null;
    function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }
    function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
    }
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null; // Only used when enableProfilerNestedUpdateScheduledHook is true;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveProfilerEffects = [];
    var pendingPassiveTransitions = null; // Use these to prevent an infinite loop of nested updates
    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var isFlushingPassiveEffects = false;
    var didScheduleUpdateDuringPassiveEffects = false;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0;
    var rootWithPassiveNestedUpdates = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.
    var currentEventTime = NoTimestamp;
    var currentEventTransitionLane = NoLanes;
    var isRunningInsertionEffect = false;
    function getWorkInProgressRoot() {
        return workInProgressRoot;
    }
    function requestEventTime() {
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) // We're inside React, so it's fine to read the actual time.
        return now();
         // We're not inside React, so we may be in the middle of a browser event.
        if (currentEventTime !== NoTimestamp) // Use the same start time for all updates until we enter React again.
        return currentEventTime;
         // This is the first update since React yielded. Compute a new start time.
        currentEventTime = now();
        return currentEventTime;
    }
    function requestUpdateLane(fiber) {
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) // This is a render phase update. These are not officially supported. The
        // old behavior is to give this the same "thread" (lanes) as
        // whatever is currently rendering. So if you call `setState` on a component
        // that happens later in the same render, it will flush. Ideally, we want to
        // remove the special case and treat them as if they came from an
        // interleaved event. Regardless, this pattern is not officially supported.
        // This behavior is only a fallback. The flag only exists until we can roll
        // out the setState warning, since existing code might accidentally rely on
        // the current behavior.
        return pickArbitraryLane(workInProgressRootRenderLanes);
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
                var transition = ReactCurrentBatchConfig$3.transition;
                if (!transition._updatedFibers) transition._updatedFibers = new Set();
                transition._updatedFibers.add(fiber);
            } // The algorithm for assigning an update to a lane should be stable for all
            // updates at the same priority within the same event. To do this, the
            // inputs to the algorithm must be the same.
            //
            // The trick we use is to cache the first of each of these inputs within an
            // event. Then reset the cached values once we can be sure the event is
            // over. Our heuristic for that is whenever we enter a concurrent work loop.
            if (currentEventTransitionLane === NoLane) // All transitions within the same event are assigned the same lane.
            currentEventTransitionLane = claimNextTransitionLane();
            return currentEventTransitionLane;
        } // Updates originating inside certain React methods, like flushSync, have
        // their priority set by tracking it with a context variable.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var updateLane = getCurrentUpdatePriority();
        if (updateLane !== NoLane) return updateLane;
         // This update originated outside React. Ask the host environment for an
        // appropriate priority, based on the type of event.
        //
        // The opaque type returned by the host config is internally a lane, so we can
        // use that directly.
        // TODO: Move this type conversion to the event priority module.
        var eventLane = getCurrentEventPriority();
        return eventLane;
    }
    function requestRetryLane(fiber) {
        // This is a fork of `requestUpdateLane` designed specifically for Suspense
        // "retries" — a special update that attempts to flip a Suspense boundary
        // from its placeholder state to its primary/resolved state.
        // Special cases
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode) return SyncLane;
        return claimNextRetryLane();
    }
    function scheduleUpdateOnFiber(fiber, lane, eventTime) {
        checkForNestedUpdates();
        if (isRunningInsertionEffect) error1('useInsertionEffect must not schedule updates.');
        var root = markUpdateLaneFromFiberToRoot(fiber, lane);
        if (root === null) return null;
        if (isFlushingPassiveEffects) didScheduleUpdateDuringPassiveEffects = true;
        markRootUpdated(root, lane, eventTime);
        if ((executionContext & RenderContext) !== NoLanes && root === workInProgressRoot) // This update was dispatched during the render phase. This is a mistake
        // if the update originates from user space (with the exception of local
        // hook updates, which are handled differently and don't reach this
        // function), but there are some internal React features that use this as
        // an implementation detail, like selective hydration.
        warnAboutRenderPhaseUpdatesInDEV(fiber); // Track lanes that were updated during the render phase
        else {
            if (isDevToolsPresent) addFiberToLanesMap(root, fiber, lane);
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root === workInProgressRoot) {
                // TODO: Consolidate with `isInterleavedUpdate` check
                // Received an update to a tree that's in the middle of rendering. Mark
                // that there was an interleaved update work on this root. Unless the
                // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
                // phase update. In that case, we don't treat render phase updates as if
                // they were interleaved, for backwards compat reasons.
                if ((executionContext & RenderContext) === NoContext) workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
                if (workInProgressRootExitStatus === RootSuspendedWithDelay) // The root already suspended with a delay, which means this render
                // definitely won't finish. Since we have a new update, let's mark it as
                // suspended now, right before marking the incoming update. This has the
                // effect of interrupting the current render and switching to the update.
                // TODO: Make sure this doesn't override pings that happen while we've
                // already started rendering.
                markRootSuspended$1(root, workInProgressRootRenderLanes);
            }
            ensureRootIsScheduled(root, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && !ReactCurrentActQueue$1.isBatchingLegacy) {
                // Flush the synchronous work now, unless we're already working or inside
                // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
                // scheduleCallbackForFiber to preserve the ability to schedule a callback
                // without immediately flushing it. We only do this for user-initiated
                // updates, to preserve historical behavior of legacy mode.
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
        return root;
    }
    function scheduleInitialHydrationOnRoot(root, lane, eventTime) {
        // This is a special fork of scheduleUpdateOnFiber that is only used to
        // schedule the initial hydration of a root that has just been created. Most
        // of the stuff in scheduleUpdateOnFiber can be skipped.
        //
        // The main reason for this separate path, though, is to distinguish the
        // initial children from subsequent updates. In fully client-rendered roots
        // (createRoot instead of hydrateRoot), all top-level renders are modeled as
        // updates, but hydration roots are special because the initial render must
        // match what was rendered on the server.
        var current = root.current;
        current.lanes = lane;
        markRootUpdated(root, lane, eventTime);
        ensureRootIsScheduled(root, eventTime);
    } // This is split into a separate function so we can mark a fiber with pending
    // work without treating it as a typical update that originates from an event;
    // e.g. retrying a Suspense boundary isn't an update, but it does schedule work
    // on a fiber.
    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        // Update the source fiber's lanes
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        if (alternate !== null) alternate.lanes = mergeLanes(alternate.lanes, lane);
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        var node = sourceFiber;
        var parent = sourceFiber.return;
        while(parent !== null){
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            else if ((parent.flags & (Placement | Hydrating)) !== NoFlags) warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            node = parent;
            parent = parent.return;
        }
        if (node.tag === HostRoot) {
            var root = node.stateNode;
            return root;
        } else return null;
    }
    function isInterleavedUpdate(fiber, lane) {
        return(// Requires some refactoring. Not a big deal though since it's rare for
        // concurrent apps to have more than a single root.
        (workInProgressRoot !== null || // we should treat this as an interleaved update, too. This is also a
        // defensive coding measure in case a new update comes in between when
        // rendering has finished and when the interleaved updates are transferred
        // to the main queue.
        hasInterleavedUpdates()) && (fiber.mode & ConcurrentMode) !== NoMode && // then don't treat this as an interleaved update. This pattern is
        // accompanied by a warning but we haven't fully deprecated it yet. We can
        // remove once the deferRenderPhaseUpdateToNextBatch flag is enabled.
        (executionContext & RenderContext) === NoContext);
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.
    function ensureRootIsScheduled(root, currentTime) {
        var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
        // expired so we know to work on those next.
        markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.
        var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (nextLanes === NoLanes) {
            // Special case: There's nothing to work on.
            if (existingCallbackNode !== null) cancelCallback$1(existingCallbackNode);
            root.callbackNode = null;
            root.callbackPriority = NoLane;
            return;
        } // We use the highest priority lane to represent the priority of the callback.
        var newCallbackPriority = getHighestPriorityLane(nextLanes); // Check if there's an existing task. We may be able to reuse it.
        var existingCallbackPriority = root.callbackPriority;
        if (existingCallbackPriority === newCallbackPriority && // Scheduler task, rather than an `act` task, cancel it and re-scheduled
        // on the `act` queue.
        !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            // If we're going to re-use an existing task, it needs to exist.
            // Assume that discrete update microtasks are non-cancellable and null.
            // TODO: Temporary until we confirm this warning is not fired.
            if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) error1('Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.');
            return;
        }
        if (existingCallbackNode != null) // Cancel the existing callback. We'll schedule a new one below.
        cancelCallback$1(existingCallbackNode);
         // Schedule a new callback.
        var newCallbackNode;
        if (newCallbackPriority === SyncLane) {
            // Special case: Sync React callbacks are scheduled on a special
            // internal queue
            if (root.tag === LegacyRoot) {
                if (ReactCurrentActQueue$1.isBatchingLegacy !== null) ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
                scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));
            } else scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
            // Flush the queue in a microtask.
            if (ReactCurrentActQueue$1.current !== null) // Inside `act`, use our internal `act` queue so that these get flushed
            // at the end of the current scope even when using the sync version
            // of `act`.
            ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
            else scheduleMicrotask(function() {
                // In Safari, appending an iframe forces microtasks to run.
                // https://github.com/facebook/react/issues/22459
                // We don't support running callbacks in the middle of render
                // or commit so we need to check against that.
                if (executionContext === NoContext) // It's only safe to do this conditionally because we always
                // check for pending work before we exit the task.
                flushSyncCallbacks();
            });
            newCallbackNode = null;
        } else {
            var schedulerPriorityLevel;
            switch(lanesToEventPriority(nextLanes)){
                case DiscreteEventPriority:
                    schedulerPriorityLevel = ImmediatePriority;
                    break;
                case ContinuousEventPriority:
                    schedulerPriorityLevel = UserBlockingPriority;
                    break;
                case DefaultEventPriority:
                    schedulerPriorityLevel = NormalPriority;
                    break;
                case IdleEventPriority:
                    schedulerPriorityLevel = IdlePriority;
                    break;
                default:
                    schedulerPriorityLevel = NormalPriority;
                    break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
        }
        root.callbackPriority = newCallbackPriority;
        root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.
    function performConcurrentWorkOnRoot(root, didTimeout) {
        resetNestedUpdateFlag();
        // event time. The next update will compute a new event time.
        currentEventTime = NoTimestamp;
        currentEventTransitionLane = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
         // Flush any pending passive effects before deciding which lanes to work on,
        // in case they schedule additional work.
        var originalCallbackNode = root.callbackNode;
        var didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects) {
            // Something in the passive effect phase may have canceled the current task.
            // Check if the task node for this root was changed.
            if (root.callbackNode !== originalCallbackNode) // The current task was canceled. Exit. We don't need to call
            // `ensureRootIsScheduled` because the check above implies either that
            // there's a new task, or that there's no remaining work on this root.
            return null;
        } // Determine the next lanes to work on, using the fields stored
        // on the root.
        var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes) // Defensive coding. This is never expected to happen.
        return null;
         // We disable time-slicing in some cases: if the work has been CPU-bound
        // for too long ("expired" work, to prevent starvation), or we're in
        // sync-updates-by-default mode.
        // TODO: We only check `didTimeout` defensively, to account for a Scheduler
        // bug we're still investigating. Once the bug in Scheduler is fixed,
        // we can remove this, since we track expiration ourselves.
        var shouldTimeSlice = !includesBlockingLane(root, lanes) && !includesExpiredLane(root, lanes) && !didTimeout;
        var exitStatus = shouldTimeSlice ? renderRootConcurrent(root, lanes) : renderRootSync(root, lanes);
        if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
                // If something threw an error, try rendering one more time. We'll
                // render synchronously to block concurrent data mutations, and we'll
                // includes all pending updates are included. If it still fails after
                // the second attempt, we'll give up and commit the resulting tree.
                var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                if (errorRetryLanes !== NoLanes) {
                    lanes = errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
                }
            }
            if (exitStatus === RootFatalErrored) {
                var fatalError = workInProgressRootFatalError;
                prepareFreshStack(root, NoLanes);
                markRootSuspended$1(root, lanes);
                ensureRootIsScheduled(root, now());
                throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) // The render unwound without completing the tree. This happens in special
            // cases where need to exit the current render without producing a
            // consistent tree or committing.
            //
            // This should only happen during a concurrent render, not a discrete or
            // synchronous update. We should have already checked for this when we
            // unwound the stack.
            markRootSuspended$1(root, lanes);
            else {
                // The render completed.
                // Check if this render may have yielded to a concurrent event, and if so,
                // confirm that any newly rendered stores are consistent.
                // TODO: It's possible that even a concurrent render may never have yielded
                // to the main thread, if it was fast enough, or if it expired. We could
                // skip the consistency check in that case, too.
                var renderWasConcurrent = !includesBlockingLane(root, lanes);
                var finishedWork = root.current.alternate;
                if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                    // A store was mutated in an interleaved event. Render again,
                    // synchronously, to block further mutations.
                    exitStatus = renderRootSync(root, lanes); // We need to check again if something threw
                    if (exitStatus === RootErrored) {
                        var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
                        if (_errorRetryLanes !== NoLanes) {
                            lanes = _errorRetryLanes;
                            exitStatus = recoverFromConcurrentError(root, _errorRetryLanes); // We assume the tree is now consistent because we didn't yield to any
                        // concurrent events.
                        }
                    }
                    if (exitStatus === RootFatalErrored) {
                        var _fatalError = workInProgressRootFatalError;
                        prepareFreshStack(root, NoLanes);
                        markRootSuspended$1(root, lanes);
                        ensureRootIsScheduled(root, now());
                        throw _fatalError;
                    }
                } // We now have a consistent tree. The next step is either to commit it,
                // or, if something suspended, wait to commit it after a timeout.
                root.finishedWork = finishedWork;
                root.finishedLanes = lanes;
                finishConcurrentRender(root, exitStatus, lanes);
            }
        }
        ensureRootIsScheduled(root, now());
        if (root.callbackNode === originalCallbackNode) // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
        return null;
    }
    function recoverFromConcurrentError(root, errorRetryLanes) {
        // If an error occurred during hydration, discard server response and fall
        // back to client side render.
        // Before rendering again, save the errors from the previous attempt.
        var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
        if (isRootDehydrated(root)) {
            // The shell failed to hydrate. Set a flag to force a client rendering
            // during the next attempt. To do this, we call prepareFreshStack now
            // to create the root work-in-progress fiber. This is a bit weird in terms
            // of factoring, because it relies on renderRootSync not calling
            // prepareFreshStack again in the call below, which happens because the
            // root and lanes haven't changed.
            //
            // TODO: I think what we should do is set ForceClientRender inside
            // throwException, like we do for nested Suspense boundaries. The reason
            // it's here instead is so we can switch to the synchronous work loop, too.
            // Something to consider for a future refactor.
            var rootWorkInProgress = prepareFreshStack(root, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            errorHydratingContainer(root.containerInfo);
        }
        var exitStatus = renderRootSync(root, errorRetryLanes);
        if (exitStatus !== RootErrored) {
            // Successfully finished rendering on retry
            // The errors from the failed first attempt have been recovered. Add
            // them to the collection of recoverable errors. We'll log them in the
            // commit phase.
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt; // The errors from the second attempt should be queued after the errors
            // from the first attempt, to preserve the causal sequence.
            if (errorsFromSecondAttempt !== null) queueRecoverableErrors(errorsFromSecondAttempt);
        }
        return exitStatus;
    }
    function queueRecoverableErrors(errors) {
        if (workInProgressRootRecoverableErrors === null) workInProgressRootRecoverableErrors = errors;
        else workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
    }
    function finishConcurrentRender(root, exitStatus, lanes) {
        switch(exitStatus){
            case RootInProgress:
            case RootFatalErrored:
                throw new Error('Root did not complete. This is a bug in React.');
            // Flow knows about invariant, so it complains if I add a break
            // statement, but eslint doesn't know about invariant, so it complains
            // if I do. eslint-disable-next-line no-fallthrough
            case RootErrored:
                // We should have already attempted to retry this tree. If we reached
                // this point, it errored again. Commit it.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspended:
                markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
                // should immediately commit it or wait a bit.
                if (includesOnlyRetries(lanes) && !shouldForceFlushFallbacksInDEV()) {
                    // This render only included retries, no updates. Throttle committing
                    // retries so that we don't show too many loading states too quickly.
                    var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.
                    if (msUntilTimeout > 10) {
                        var nextLanes = getNextLanes(root, NoLanes);
                        if (nextLanes !== NoLanes) break;
                        var suspendedLanes = root.suspendedLanes;
                        if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                            // We should prefer to render the fallback of at the last
                            // suspended level. Ping the last suspended level to try
                            // rendering it again.
                            // FIXME: What if the suspended lanes are Idle? Should not restart.
                            var eventTime = requestEventTime();
                            markRootPinged(root, suspendedLanes);
                            break;
                        } // The render is suspended, it hasn't timed out, and there's no
                        // lower priority work to do. Instead of committing the fallback
                        // immediately, wait for more data to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                        break;
                    }
                } // The work expired. Commit immediately.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootSuspendedWithDelay:
                markRootSuspended$1(root, lanes);
                if (includesOnlyTransitions(lanes)) break;
                if (!shouldForceFlushFallbacksInDEV()) {
                    // This is not a transition, but we did trigger an avoided state.
                    // Schedule a placeholder to display after a short delay, using the Just
                    // Noticeable Difference.
                    // TODO: Is the JND optimization worth the added complexity? If this is
                    // the only reason we track the event time, then probably not.
                    // Consider removing.
                    var mostRecentEventTime = getMostRecentEventTime(root, lanes);
                    var eventTimeMs = mostRecentEventTime;
                    var timeElapsedMs = now() - eventTimeMs;
                    var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.
                    if (_msUntilTimeout > 10) {
                        // Instead of committing the fallback immediately, wait for more data
                        // to arrive.
                        root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                        break;
                    }
                } // Commit the placeholder.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            case RootCompleted:
                // The work completed. Ready to commit.
                commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions);
                break;
            default:
                throw new Error('Unknown root exit status.');
        }
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
        // Search the rendered tree for external store reads, and check whether the
        // stores were mutated in a concurrent event. Intentionally using an iterative
        // loop instead of recursion so we can exit early.
        var node = finishedWork;
        while(true){
            if (node.flags & StoreConsistency) {
                var updateQueue = node.updateQueue;
                if (updateQueue !== null) {
                    var checks = updateQueue.stores;
                    if (checks !== null) for(var i = 0; i < checks.length; i++){
                        var check = checks[i];
                        var getSnapshot = check.getSnapshot;
                        var renderedValue = check.value;
                        try {
                            if (!objectIs(getSnapshot(), renderedValue)) // Found an inconsistent store.
                            return false;
                        } catch (error) {
                            // If `getSnapshot` throws, return `false`. This will schedule
                            // a re-render, and the error will be rethrown during render.
                            return false;
                        }
                    }
                }
            }
            var child = node.child;
            if (node.subtreeFlags & StoreConsistency && child !== null) {
                child.return = node;
                node = child;
                continue;
            }
            if (node === finishedWork) return true;
            while(node.sibling === null){
                if (node.return === null || node.return === finishedWork) return true;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        } // Flow doesn't know this is unreachable, but eslint does
        // eslint-disable-next-line no-unreachable
        return true;
    }
    function markRootSuspended$1(root, suspendedLanes) {
        // When suspending, we should always exclude lanes that were pinged or (more
        // rarely, since we try to avoid it) updated during the render phase.
        // TODO: Lol maybe there's a better way to factor this besides this
        // obnoxiously named function :)
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
        markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler
    function performSyncWorkOnRoot(root) {
        syncNestedUpdateFlag();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
        flushPassiveEffects();
        var lanes = getNextLanes(root, NoLanes);
        if (!includesSomeLane(lanes, SyncLane)) {
            // There's no remaining sync work left.
            ensureRootIsScheduled(root, now());
            return null;
        }
        var exitStatus = renderRootSync(root, lanes);
        if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
            // If something threw an error, try rendering one more time. We'll render
            // synchronously to block concurrent data mutations, and we'll includes
            // all pending updates are included. If it still fails after the second
            // attempt, we'll give up and commit the resulting tree.
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);
            if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root, errorRetryLanes);
            }
        }
        if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root, NoLanes);
            markRootSuspended$1(root, lanes);
            ensureRootIsScheduled(root, now());
            throw fatalError;
        }
        if (exitStatus === RootDidNotComplete) throw new Error('Root did not complete. This is a bug in React.');
         // We now have a consistent tree. Because this is a sync render, we
        // will commit it even if something suspended.
        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        commitRoot(root, workInProgressRootRecoverableErrors, workInProgressTransitions); // Before exiting, make sure there's a callback scheduled for the next
        // pending level.
        ensureRootIsScheduled(root, now());
        return null;
    }
    function flushRoot(root, lanes) {
        if (lanes !== NoLanes) {
            markRootEntangled(root, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root, now());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                resetRenderTimer();
                flushSyncCallbacks();
            }
        }
    }
    function batchedUpdates$1(fn, a) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
            return fn(a);
        } finally{
            executionContext = prevExecutionContext; // If there were legacy sync updates, flush them at the end of the outer
            // most batchedUpdates-like method.
            if (executionContext === NoContext && !ReactCurrentActQueue$1.isBatchingLegacy) {
                resetRenderTimer();
                flushSyncCallbacksOnlyInLegacyMode();
            }
        }
    }
    function discreteUpdates(fn, a, b, c, d) {
        var previousPriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn(a, b, c, d);
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) resetRenderTimer();
        }
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync(fn) {
        // In legacy mode, we flush pending passive effects at the beginning of the
        // next event, not at the end of the previous one.
        if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) flushPassiveEffects();
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        var previousPriority = getCurrentUpdatePriority();
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn) return fn();
            else return undefined;
        } finally{
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
            // Note that this will happen even if batchedUpdates is higher up
            // the stack.
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) flushSyncCallbacks();
        }
    }
    function isAlreadyRendering() {
        // Used by the renderer to print a warning if certain APIs are called from
        // the wrong context.
        return (executionContext & (RenderContext | CommitContext)) !== NoContext;
    }
    function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes1, fiber);
        subtreeRenderLanes1 = mergeLanes(subtreeRenderLanes1, lanes);
        workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }
    function popRenderLanes(fiber) {
        subtreeRenderLanes1 = subtreeRenderLanesCursor.current;
        pop(subtreeRenderLanesCursor, fiber);
    }
    function prepareFreshStack(root, lanes) {
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        var timeoutHandle = root.timeoutHandle;
        if (timeoutHandle !== noTimeout) {
            // The root previous suspended and scheduled a timeout to commit a fallback
            // state. Now that we have additional work, cancel the timeout.
            root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
            cancelTimeout(timeoutHandle);
        }
        if (workInProgress1 !== null) {
            var interruptedWork = workInProgress1.return;
            while(interruptedWork !== null){
                var current = interruptedWork.alternate;
                unwindInterruptedWork(current, interruptedWork);
                interruptedWork = interruptedWork.return;
            }
        }
        workInProgressRoot = root;
        var rootWorkInProgress = createWorkInProgress(root.current, null);
        workInProgress1 = rootWorkInProgress;
        workInProgressRootRenderLanes = subtreeRenderLanes1 = workInProgressRootIncludedLanes = lanes;
        workInProgressRootExitStatus = RootInProgress;
        workInProgressRootFatalError = null;
        workInProgressRootSkippedLanes = NoLanes;
        workInProgressRootInterleavedUpdatedLanes = NoLanes;
        workInProgressRootPingedLanes = NoLanes;
        workInProgressRootConcurrentErrors = null;
        workInProgressRootRecoverableErrors = null;
        enqueueInterleavedUpdates();
        ReactStrictModeWarnings.discardPendingWarnings();
        return rootWorkInProgress;
    }
    function handleError(root, thrownValue) {
        do {
            var erroredWork = workInProgress1;
            try {
                // Reset module-level state that was set during the render phase.
                resetContextDependencies();
                resetHooksAfterThrow();
                resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
                // separate issue. Write a regression test using string refs.
                ReactCurrentOwner$2.current = null;
                if (erroredWork === null || erroredWork.return === null) {
                    // Expected to be working on a non-root fiber. This is a fatal error
                    // because there's no ancestor that can handle it; the root is
                    // supposed to capture all errors that weren't caught by an error
                    // boundary.
                    workInProgressRootExitStatus = RootFatalErrored;
                    workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
                    // sibling, or the parent if there are no siblings. But since the root
                    // has no siblings nor a parent, we set it to null. Usually this is
                    // handled by `completeUnitOfWork` or `unwindWork`, but since we're
                    // intentionally not calling those, we need set it here.
                    // TODO: Consider calling `unwindWork` to pop the contexts.
                    workInProgress1 = null;
                    return;
                }
                if (enableProfilerTimer && erroredWork.mode & ProfileMode) // Record the time spent rendering before an error was thrown. This
                // avoids inaccurate Profiler durations in the case of a
                // suspended render.
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                if (enableSchedulingProfiler) {
                    markComponentRenderStopped();
                    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
                        var wakeable = thrownValue;
                        markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                    } else markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
                throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
                // Something in the return path also threw.
                thrownValue = yetAnotherThrownValue;
                if (workInProgress1 === erroredWork && erroredWork !== null) {
                    // If this boundary has already errored, then we had trouble processing
                    // the error. Bubble it to the next boundary.
                    erroredWork = erroredWork.return;
                    workInProgress1 = erroredWork;
                } else erroredWork = workInProgress1;
                continue;
            } // Return to the normal work loop.
            return;
        }while (true)
    }
    function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
        if (prevDispatcher === null) // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
        else return prevDispatcher;
    }
    function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
    }
    function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
    }
    function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }
    function renderDidSuspend() {
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootSuspended;
    }
    function renderDidSuspendDelayIfPossible() {
        if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) workInProgressRootExitStatus = RootSuspendedWithDelay;
         // Check if there are updates that we skipped tree that might have unblocked
        // this render.
        if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
    }
    function renderDidError(error) {
        if (workInProgressRootExitStatus !== RootSuspendedWithDelay) workInProgressRootExitStatus = RootErrored;
        if (workInProgressRootConcurrentErrors === null) workInProgressRootConcurrentErrors = [
            error
        ];
        else workInProgressRootConcurrentErrors.push(error);
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.
    function renderHasNotSuspendedYet() {
        // If something errored or completed, we can't really be sure,
        // so those are false.
        return workInProgressRootExitStatus === RootInProgress;
    }
    function renderRootSync(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopSync();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        executionContext = prevExecutionContext;
        popDispatcher(prevDispatcher);
        if (workInProgress1 !== null) // This is a sync render, so we should have finished the whole tree.
        throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        markRenderStopped();
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes;
        return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.
    /** @noinline */ function workLoopSync() {
        // Already timed out, so perform work without checking if we need to yield.
        while(workInProgress1 !== null)performUnitOfWork(workInProgress1);
    }
    function renderRootConcurrent(root, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.
        if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
            if (isDevToolsPresent) {
                var memoizedUpdaters = root.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                    restorePendingUpdaters(root, workInProgressRootRenderLanes);
                    memoizedUpdaters.clear();
                } // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.
                // If we bailout on this work, we'll move them back (like above).
                // It's important to move them now in case the work spawns more work at the same priority with different updaters.
                // That way we can keep the current update and future updates separate.
                movePendingFibersToMemoized(root, lanes);
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root, lanes);
        }
        markRenderStarted(lanes);
        for(;;)try {
            workLoopConcurrent();
            break;
        } catch (thrownValue) {
            handleError(root, thrownValue);
        }
        resetContextDependencies();
        popDispatcher(prevDispatcher);
        executionContext = prevExecutionContext;
        if (workInProgress1 !== null) {
            markRenderYielded();
            return RootInProgress;
        } else {
            markRenderStopped();
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes; // Return the final exit status.
            return workInProgressRootExitStatus;
        }
    }
    /** @noinline */ function workLoopConcurrent() {
        // Perform work until Scheduler asks us to yield
        while(workInProgress1 !== null && !shouldYield())performUnitOfWork(workInProgress1);
    }
    function performUnitOfWork(unitOfWork) {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current, unitOfWork, subtreeRenderLanes1);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
        } else next = beginWork$1(current, unitOfWork, subtreeRenderLanes1);
        resetCurrentFiber();
        unitOfWork.memoizedProps = unitOfWork.pendingProps;
        if (next === null) // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
        else workInProgress1 = next;
        ReactCurrentOwner$2.current = null;
    }
    function completeUnitOfWork(unitOfWork) {
        // Attempt to complete the current unit of work, then move to the next
        // sibling. If there are no more siblings, return to the parent fiber.
        var completedWork = unitOfWork;
        do {
            // The current, flushed, state of this fiber is the alternate. Ideally
            // nothing should rely on this, but relying on it here means that we don't
            // need an additional field on the work in progress.
            var current = completedWork.alternate;
            var returnFiber = completedWork.return; // Check if the work completed or if something threw.
            if ((completedWork.flags & Incomplete) === NoFlags) {
                setCurrentFiber(completedWork);
                var next = void 0;
                if ((completedWork.mode & ProfileMode) === NoMode) next = completeWork(current, completedWork, subtreeRenderLanes1);
                else {
                    startProfilerTimer(completedWork);
                    next = completeWork(current, completedWork, subtreeRenderLanes1); // Update render duration assuming we didn't error.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                }
                resetCurrentFiber();
                if (next !== null) {
                    // Completing this fiber spawned new work. Work on that next.
                    workInProgress1 = next;
                    return;
                }
            } else {
                // This fiber did not complete because something threw. Pop values off
                // the stack without entering the complete phase. If this is a boundary,
                // capture values if possible.
                var _next = unwindWork(current, completedWork); // Because this fiber did not complete, don't reset its lanes.
                if (_next !== null) {
                    // If completing this work spawned new work, do that next. We'll come
                    // back here again.
                    // Since we're restarting, remove anything that is not a host effect
                    // from the effect tag.
                    _next.flags &= HostEffectMask;
                    workInProgress1 = _next;
                    return;
                }
                if ((completedWork.mode & ProfileMode) !== NoMode) {
                    // Record the render duration for the fiber that errored.
                    stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.
                    var actualDuration = completedWork.actualDuration;
                    var child = completedWork.child;
                    while(child !== null){
                        actualDuration += child.actualDuration;
                        child = child.sibling;
                    }
                    completedWork.actualDuration = actualDuration;
                }
                if (returnFiber !== null) {
                    // Mark the parent fiber as incomplete and clear its subtree flags.
                    returnFiber.flags |= Incomplete;
                    returnFiber.subtreeFlags = NoFlags;
                    returnFiber.deletions = null;
                } else {
                    // We've unwound all the way to the root.
                    workInProgressRootExitStatus = RootDidNotComplete;
                    workInProgress1 = null;
                    return;
                }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                workInProgress1 = siblingFiber;
                return;
            } // Otherwise, return to the parent
            completedWork = returnFiber; // Update the next thing we're working on in case something throws.
            workInProgress1 = completedWork;
        }while (completedWork !== null) // We've reached the root.
        if (workInProgressRootExitStatus === RootInProgress) workInProgressRootExitStatus = RootCompleted;
    }
    function commitRoot(root, recoverableErrors, transitions) {
        // TODO: This no longer makes any sense. We already wrap the mutation and
        // layout phases. Should be able to remove.
        var previousUpdateLanePriority = getCurrentUpdatePriority();
        var prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root, recoverableErrors, transitions, previousUpdateLanePriority);
        } finally{
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
        }
        return null;
    }
    function commitRootImpl(root, recoverableErrors, transitions, renderPriorityLevel) {
        do // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null)
        flushRenderPhaseStrictModeWarningsInDEV();
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Should not already be working.');
        var finishedWork = root.finishedWork;
        var lanes = root.finishedLanes;
        markCommitStarted(lanes);
        if (finishedWork === null) {
            markCommitStopped();
            return null;
        } else if (lanes === NoLanes) error1("root.finishedLanes should not be empty during a commit. This is a bug in React.");
        root.finishedWork = null;
        root.finishedLanes = NoLanes;
        if (finishedWork === root.current) throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
         // commitRoot never returns a continuation; it always finishes synchronously.
        // So we can clear these now to allow a new callback to be scheduled.
        root.callbackNode = null;
        root.callbackPriority = NoLane; // Update the first and last pending times on this root. The new first
        // pending time is whatever is left on the root fiber.
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root, remainingLanes);
        if (root === workInProgressRoot) {
            // We can reset these now that they are finished.
            workInProgressRoot = null;
            workInProgress1 = null;
            workInProgressRootRenderLanes = NoLanes;
        } // If there are pending passive effects, schedule a callback to process them.
        // Do this as early as possible, so it is queued before anything else that
        // might get scheduled in the commit phase. (See #16714.)
        // TODO: Delete all other places that schedule the passive effect callback
        // They're redundant.
        if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
                rootDoesHavePassiveEffects = true;
                // to store it in pendingPassiveTransitions until they get processed
                // We need to pass this through as an argument to commitRoot
                // because workInProgressTransitions might have changed between
                // the previous render and commit if we throttle the commit
                // with setTimeout
                pendingPassiveTransitions = transitions;
                scheduleCallback$1(NormalPriority, function() {
                    flushPassiveEffects(); // This render triggered passive effects: release the root cache pool
                    // *after* passive effects fire to avoid freeing a cache pool that may
                    // be referenced by a node in the tree (HostRoot, Cache boundary etc)
                    return null;
                });
            }
        } // Check if there are any effects in the whole tree.
        // TODO: This is left over from the effect list implementation, where we had
        // to check for the existence of `firstEffect` to satisfy Flow. I think the
        // only other reason this optimization exists is because it affects profiling.
        // Reconsider whether this is necessary.
        var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext; // Reset this to null before calling lifecycles
            ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
            // of the effect list for each phase: all mutation effects come before all
            // layout effects, and so on.
            // The first phase a "before mutation" phase. We use this phase to read the
            // state of the host tree right before we mutate it. This is where
            // getSnapshotBeforeUpdate is called.
            var shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(root, finishedWork);
            // Mark the current commit time to be shared by all Profilers in this
            // batch. This enables them to be grouped later.
            recordCommitTime();
            commitMutationEffects(root, finishedWork, lanes);
            resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
            // the mutation phase, so that the previous tree is still current during
            // componentWillUnmount, but before the layout phase, so that the finished
            // work is current during componentDidMount/Update.
            root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
            markLayoutEffectsStarted(lanes);
            commitLayoutEffects(finishedWork, root, lanes);
            markLayoutEffectsStopped();
            // opportunity to paint.
            requestPaint();
            executionContext = prevExecutionContext; // Reset the priority to the previous non-sync value.
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
        } else {
            // No effects.
            root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
            recordCommitTime();
        }
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects) {
            // This commit has passive effects. Stash a reference to them. But don't
            // schedule a callback until after flushing layout work.
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root;
            pendingPassiveEffectsLanes = lanes;
        } else {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
        } // Read this again, since an effect might have updated it
        remainingLanes = root.pendingLanes; // Check if there's remaining work on this root
        // TODO: This is part of the `componentDidCatch` implementation. Its purpose
        // is to detect whether something might have called setState inside
        // `componentDidCatch`. The mechanism is known to be flawed because `setState`
        // inside `componentDidCatch` is itself flawed — that's why we recommend
        // `getDerivedStateFromError` instead. However, it could be improved by
        // checking if remainingLanes includes Sync work, instead of whether there's
        // any work remaining at all (which would also include stuff like Suspense
        // retries or transitions). It's been like this for a while, though, so fixing
        // it probably isn't that urgent.
        if (remainingLanes === NoLanes) // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
        if (!rootDidHavePassiveEffects) commitDoubleInvokeEffectsInDEV(root.current, false);
        onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
        if (isDevToolsPresent) root.memoizedUpdaters.clear();
        onCommitRoot$1();
        // additional work on this root is scheduled.
        ensureRootIsScheduled(root, now());
        if (recoverableErrors !== null) {
            // There were errors during this render, but recovered from them without
            // needing to surface it to the UI. We log them here.
            var onRecoverableError = root.onRecoverableError;
            for(var i = 0; i < recoverableErrors.length; i++){
                var recoverableError = recoverableErrors[i];
                onRecoverableError(recoverableError);
            }
        }
        if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
        } // If the passive effects are the result of a discrete render, flush them
        // synchronously at the end of the current task so that the result is
        // immediately observable. Otherwise, we assume that they are not
        // order-dependent and do not need to be observed by external systems, so we
        // can wait until after paint.
        // TODO: We can optimize this by not scheduling the callback earlier. Since we
        // currently schedule the callback in multiple places, will wait until those
        // are consolidated.
        if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root.tag !== LegacyRoot) flushPassiveEffects();
         // Read this again, since a passive effect might have updated it
        remainingLanes = root.pendingLanes;
        if (includesSomeLane(remainingLanes, SyncLane)) {
            markNestedUpdateScheduled();
            // finishing. If there are too many, it indicates an infinite update loop.
            if (root === rootWithNestedUpdates) nestedUpdateCount++;
            else {
                nestedUpdateCount = 0;
                rootWithNestedUpdates = root;
            }
        } else nestedUpdateCount = 0;
         // If layout work was scheduled, flush it now.
        flushSyncCallbacks();
        markCommitStopped();
        return null;
    }
    function flushPassiveEffects() {
        // Returns whether passive effects were flushed.
        // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should
        // probably just combine the two functions. I believe they were only separate
        // in the first place because we used to wrap it with
        // `Scheduler.runWithPriority`, which accepts a function. But now we track the
        // priority within React itself, so we can mutate the variable directly.
        if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
                ReactCurrentBatchConfig$3.transition = null;
                setCurrentUpdatePriority(priority);
                return flushPassiveEffectsImpl();
            } finally{
                setCurrentUpdatePriority(previousPriority);
                ReactCurrentBatchConfig$3.transition = prevTransition; // Once passive effects have run for the tree - giving components a
            }
        }
        return false;
    }
    function enqueuePendingPassiveProfilerEffect(fiber) {
        pendingPassiveProfilerEffects.push(fiber);
        if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
            });
        }
    }
    function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null) return false;
         // Cache and clear the transitions flag
        var transitions = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        var root = rootWithPendingPassiveEffects;
        var lanes = pendingPassiveEffectsLanes;
        rootWithPendingPassiveEffects = null; // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.
        // Figure out why and fix it. It's not causing any known issues (probably
        // because it's only used for profiling), but it's a refactor hazard.
        pendingPassiveEffectsLanes = NoLanes;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext) throw new Error('Cannot flush passive effects while already rendering.');
        isFlushingPassiveEffects = true;
        didScheduleUpdateDuringPassiveEffects = false;
        markPassiveEffectsStarted(lanes);
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        commitPassiveUnmountEffects(root.current);
        commitPassiveMountEffects(root, root.current, lanes, transitions); // TODO: Move to commitPassiveMountEffects
        var profilerEffects = pendingPassiveProfilerEffects;
        pendingPassiveProfilerEffects = [];
        for(var i = 0; i < profilerEffects.length; i++){
            var _fiber = profilerEffects[i];
            commitPassiveEffectDurations(root, _fiber);
        }
        markPassiveEffectsStopped();
        commitDoubleInvokeEffectsInDEV(root.current, true);
        executionContext = prevExecutionContext;
        flushSyncCallbacks();
        // If additional passive effects were scheduled, increment a counter. If this
        // exceeds the limit, we'll fire a warning.
        if (didScheduleUpdateDuringPassiveEffects) {
            if (root === rootWithPassiveNestedUpdates) nestedPassiveUpdateCount++;
            else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root;
            }
        } else nestedPassiveUpdateCount = 0;
        isFlushingPassiveEffects = false;
        didScheduleUpdateDuringPassiveEffects = false;
        onPostCommitRoot(root);
        var stateNode = root.current.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        return true;
    }
    function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }
    function markLegacyErrorBoundaryAsFailed(instance) {
        if (legacyErrorBoundariesThatAlreadyFailed === null) legacyErrorBoundariesThatAlreadyFailed = new Set([
            instance
        ]);
        else legacyErrorBoundariesThatAlreadyFailed.add(instance);
    }
    function prepareToThrowUncaughtError(error) {
        if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error;
        }
    }
    var onUncaughtError = prepareToThrowUncaughtError;
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
        var errorInfo = createCapturedValue(error, sourceFiber);
        var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
        enqueueUpdate(rootFiber, update);
        var eventTime = requestEventTime();
        var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);
        if (root !== null) {
            markRootUpdated(root, SyncLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
        reportUncaughtErrorInDEV(error$1);
        setIsRunningInsertionEffect(false);
        if (sourceFiber.tag === HostRoot) {
            // Error was thrown at the root. There is no parent, so the root
            // itself should capture it.
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
        }
        var fiber = null;
        fiber = nearestMountedAncestor;
        while(fiber !== null){
            if (fiber.tag === HostRoot) {
                captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
                return;
            } else if (fiber.tag === ClassComponent) {
                var ctor = fiber.type;
                var instance = fiber.stateNode;
                if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                    var errorInfo = createCapturedValue(error$1, sourceFiber);
                    var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                    enqueueUpdate(fiber, update);
                    var eventTime = requestEventTime();
                    var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);
                    if (root !== null) {
                        markRootUpdated(root, SyncLane, eventTime);
                        ensureRootIsScheduled(root, eventTime);
                    }
                    return;
                }
            }
            fiber = fiber.return;
        }
        // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning
        // will fire for errors that are thrown by destroy functions inside deleted
        // trees. What it should instead do is propagate the error to the parent of
        // the deleted tree. In the meantime, do not add this warning to the
        // allowlist; this is only for our internal use.
        error1("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
        var pingCache = root.pingCache;
        if (pingCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root, pingedLanes);
        warnIfSuspenseResolutionNotWrappedWithActDEV(root);
        if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            // Received a ping at the same priority level at which we're currently
            // rendering. We might want to restart this render. This should mirror
            // the logic of whether or not a root suspends once it completes.
            // TODO: If we're rendering sync either due to Sync, Batched or expired,
            // we should probably never restart.
            // If we're suspended with delay, or if it's a retry, we'll always suspend
            // so we can always restart.
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) // Restart from the root.
            prepareFreshStack(root, NoLanes);
            else // Even though we can't restart right now, we might get an
            // opportunity later. So we mark this render as having a ping.
            workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
        ensureRootIsScheduled(root, eventTime);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
        // The boundary fiber (a Suspense component or SuspenseList component)
        // previously was rendered in its fallback state. One of the promises that
        // suspended it has resolved, which means at least part of the tree was
        // likely unblocked. Try rendering again, at a new lanes.
        if (retryLane === NoLane) // TODO: Assign this to `suspenseState.retryLane`? to avoid
        // unnecessary entanglement?
        retryLane = requestRetryLane(boundaryFiber);
         // TODO: Special case idle priority?
        var eventTime = requestEventTime();
        var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);
        if (root !== null) {
            markRootUpdated(root, retryLane, eventTime);
            ensureRootIsScheduled(root, eventTime);
        }
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState;
        var retryLane = NoLane;
        if (suspenseState !== null) retryLane = suspenseState.retryLane;
        retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane; // Default
        var retryCache;
        switch(boundaryFiber.tag){
            case SuspenseComponent:
                retryCache = boundaryFiber.stateNode;
                var suspenseState = boundaryFiber.memoizedState;
                if (suspenseState !== null) retryLane = suspenseState.retryLane;
                break;
            case SuspenseListComponent:
                retryCache = boundaryFiber.stateNode;
                break;
            default:
                throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        if (retryCache !== null) // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
        retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.
    function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }
    function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        }
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
            nestedPassiveUpdateCount = 0;
            rootWithPassiveNestedUpdates = null;
            error1("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
        }
    }
    function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    }
    function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
        // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects
        // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.
        // Maybe not a big deal since this is DEV only behavior.
        setCurrentFiber(fiber);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
        invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
        if (hasPassiveEffects) invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
        resetCurrentFiber();
    }
    function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
        // We don't need to re-check StrictEffectsMode here.
        // This function is only called if that check has already passed.
        var current = firstChild;
        var subtreeRoot = null;
        while(current !== null){
            var primarySubtreeFlag = current.subtreeFlags & fiberFlags;
            if (current !== subtreeRoot && current.child !== null && primarySubtreeFlag !== NoFlags) current = current.child;
            else {
                if ((current.flags & fiberFlags) !== NoFlags) invokeEffectFn(current);
                if (current.sibling !== null) current = current.sibling;
                else current = subtreeRoot = current.return;
            }
        }
    }
    var didWarnStateUpdateForNotYetMountedComponent = null;
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        if ((executionContext & RenderContext) !== NoContext) // We let the other warning about render phase updates deal with this one.
        return;
        if (!(fiber.mode & ConcurrentMode)) return;
        var tag = fiber.tag;
        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) // Only warn for user-defined components, not internal ones like Suspense.
        return;
         // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.
        var componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';
        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else didWarnStateUpdateForNotYetMountedComponent = new Set([
            componentName
        ]);
        var previousFiber = current1;
        try {
            setCurrentFiber(fiber);
            error1("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
        } finally{
            if (previousFiber) setCurrentFiber(fiber);
            else resetCurrentFiber();
        }
    }
    var beginWork$1;
    var dummyFiber = null;
    beginWork$1 = function(current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
        try {
            return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
            if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') // Don't replay promises. Treat everything else like an error.
            throw originalError;
             // Keep this code in sync with handleError; any changes here must have
            // corresponding changes there.
            resetContextDependencies();
            resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
            // same fiber again.
            // Unwind the failed stack frame
            unwindInterruptedWork(current, unitOfWork); // Restore the original properties of the fiber.
            assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
            if (unitOfWork.mode & ProfileMode) // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
             // Run beginWork again.
            invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);
            if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === 'object' && replayError !== null && replayError._suppressLogging && typeof originalError === 'object' && originalError !== null && !originalError._suppressLogging) // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.
                originalError._suppressLogging = true;
            } // We always throw the original error in case the second render pass is not idempotent.
            // This can happen if a memoized function or CommonJS module doesn't throw after first invocation.
            throw originalError;
        }
    };
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) switch(fiber.tag){
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
                var renderingComponentName = workInProgress1 && getComponentNameFromFiber(workInProgress1) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.
                var dedupeKey = renderingComponentName;
                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || 'Unknown';
                    error1("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                }
                break;
            case ClassComponent:
                if (!didWarnAboutUpdateInRender) {
                    error1("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                }
                break;
        }
    }
    function restorePendingUpdaters(root, lanes) {
        if (isDevToolsPresent) {
            var memoizedUpdaters = root.memoizedUpdaters;
            memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root, schedulingFiber, lanes);
            }); // This function intentionally does not clear memoized updaters.
        // Those may still be relevant to the current commit
        // and a future one (e.g. Suspense).
        }
    }
    var fakeActCallbackNode = {};
    function scheduleCallback$1(priorityLevel, callback) {
        // If we're currently inside an `act` scope, bypass Scheduler and push to
        // the `act` queue instead.
        var actQueue = ReactCurrentActQueue$1.current;
        if (actQueue !== null) {
            actQueue.push(callback);
            return fakeActCallbackNode;
        } else return scheduleCallback(priorityLevel, callback);
    }
    function cancelCallback$1(callbackNode) {
        if (callbackNode === fakeActCallbackNode) return;
         // In production, always call Scheduler. This function will be stripped out.
        return cancelCallback(callbackNode);
    }
    function shouldForceFlushFallbacksInDEV() {
        // Never force flush in production. This function should get stripped out.
        return ReactCurrentActQueue$1.current !== null;
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        if (fiber.mode & ConcurrentMode) {
            if (!isConcurrentActEnvironment()) // Not in an act environment. No need to warn.
            return;
        } else {
            // Legacy mode has additional cases where we suppress a warning.
            if (!isLegacyActEnvironment()) // Not in an act environment. No need to warn.
            return;
            if (executionContext !== NoContext) // Legacy mode doesn't warn if the update is batched, i.e.
            // batchedUpdates or flushSync.
            return;
            if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) // For backwards compatibility with pre-hooks code, legacy mode only
            // warns for updates that originate from a hook.
            return;
        }
        if (ReactCurrentActQueue$1.current === null) {
            var previousFiber = current1;
            try {
                setCurrentFiber(fiber);
                error1("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
            } finally{
                if (previousFiber) setCurrentFiber(fiber);
                else resetCurrentFiber();
            }
        }
    }
    function warnIfSuspenseResolutionNotWrappedWithActDEV(root) {
        if (root.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) error1("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
    }
    function setIsRunningInsertionEffect(isRunning) {
        isRunningInsertionEffect = isRunning;
    }
    /* eslint-disable react-internal/prod-error-codes */ var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.
    var failedBoundaries = null;
    var setRefreshHandler = function(handler) {
        resolveFamily = handler;
    };
    function resolveFunctionForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) return type;
         // Use the latest known implementation.
        return family.current;
    }
    function resolveClassForHotReloading(type) {
        // No implementation differences.
        return resolveFunctionForHotReloading(type);
    }
    function resolveForwardRefForHotReloading(type) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return type;
        var family = resolveFamily(type);
        if (family === undefined) {
            // Check if we're dealing with a real forwardRef. Don't want to crash early.
            if (type !== null && type !== undefined && typeof type.render === 'function') {
                // ForwardRef is special because its resolved .type is an object,
                // but it's possible that we only have its inner render function in the map.
                // If that inner render function is different, we'll build a new forwardRef type.
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                    var syntheticType = {
                        $$typeof: REACT_FORWARD_REF_TYPE,
                        render: currentRender
                    };
                    if (type.displayName !== undefined) syntheticType.displayName = type.displayName;
                    return syntheticType;
                }
            }
            return type;
        } // Use the latest known implementation.
        return family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return false;
        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.
        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;
        switch(fiber.tag){
            case ClassComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                break;
            case FunctionComponent:
                if (typeof nextType === 'function') needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
                break;
            case ForwardRef:
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            case MemoComponent:
            case SimpleMemoComponent:
                if ($$typeofNextType === REACT_MEMO_TYPE) // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
                else if ($$typeofNextType === REACT_LAZY_TYPE) needsCompareFamilies = true;
                break;
            default:
                return false;
        } // Check if both types have a family and it's the same one.
        if (needsCompareFamilies) {
            // Note: memo() and forwardRef() we'll compare outer rather than inner type.
            // This means both of them need to be registered to preserve state.
            // If we unwrapped and compared the inner types for wrappers instead,
            // then we would risk falsely saying two separate memo(Foo)
            // calls are equivalent because they wrap the same Foo function.
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) return true;
        }
        return false;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        if (typeof WeakSet !== 'function') return;
        if (failedBoundaries === null) failedBoundaries = new WeakSet();
        failedBoundaries.add(fiber);
    }
    var scheduleRefresh = function(root, update) {
        if (resolveFamily === null) // Hot reloading is disabled.
        return;
        var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
    };
    var scheduleRoot = function(root, element) {
        if (root.context !== emptyContextObject) // Super edge case: root has a legacy _renderSubtree context
        // but we don't know the parentComponent so we can't pass it.
        // Just ignore. We'll delete this with _renderSubtree code path later.
        return;
        flushPassiveEffects();
        flushSync(function() {
            updateContainer(element, root, null, null);
        });
    };
    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        if (resolveFamily === null) throw new Error('Expected resolveFamily to be set during hot reload.');
        var needsRender = false;
        var needsRemount = false;
        if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            if (family !== undefined) {
                if (staleFamilies.has(family)) needsRemount = true;
                else if (updatedFamilies.has(family)) {
                    if (tag === ClassComponent) needsRemount = true;
                    else needsRender = true;
                }
            }
        }
        if (failedBoundaries !== null) {
            if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) needsRemount = true;
        }
        if (needsRemount) fiber._debugNeedsRemount = true;
        if (needsRemount || needsRender) scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        if (child !== null && !needsRemount) scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        if (sibling !== null) scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
    }
    var findHostInstancesForRefresh = function(root, families) {
        var hostInstances = new Set();
        var types = new Set(families.map(function(family) {
            return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
    };
    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
        var candidateType = null;
        switch(tag){
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
                candidateType = type;
                break;
            case ForwardRef:
                candidateType = type.render;
                break;
        }
        var didMatch = false;
        if (candidateType !== null) {
            if (types.has(candidateType)) didMatch = true;
        }
        if (didMatch) // We have a match. This only drills down to the closest host components.
        // There's no need to search deeper because for the purpose of giving
        // visual feedback, "flashing" outermost parent rectangles is sufficient.
        findHostInstancesForFiberShallowly(fiber, hostInstances);
        else // If there's no match, maybe there will be one further down in the child tree.
        if (child !== null) findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
        if (sibling !== null) findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
    }
    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
        if (foundHostInstances) return;
         // If we didn't find any host children, fallback to closest host parent.
        var node = fiber;
        while(true){
            switch(node.tag){
                case HostComponent:
                    hostInstances.add(node.stateNode);
                    return;
                case HostPortal:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
                case HostRoot:
                    hostInstances.add(node.stateNode.containerInfo);
                    return;
            }
            if (node.return === null) throw new Error('Expected to reach root first.');
            node = node.return;
        }
    }
    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        var node = fiber;
        var foundHostInstances = false;
        while(true){
            if (node.tag === HostComponent) {
                // We got a match.
                foundHostInstances = true;
                hostInstances.add(node.stateNode); // There may still be more, so keep searching.
            } else if (node.child !== null) {
                node.child.return = node;
                node = node.child;
                continue;
            }
            if (node === fiber) return foundHostInstances;
            while(node.sibling === null){
                if (node.return === null || node.return === fiber) return foundHostInstances;
                node = node.return;
            }
            node.sibling.return = node.return;
            node = node.sibling;
        }
        return false;
    }
    var hasBadMapPolyfill;
    hasBadMapPolyfill = false;
    try {
        var nonExtensibleObject = Object.preventExtensions({});
        /* eslint-disable no-new */ new Map([
            [
                nonExtensibleObject,
                null
            ]
        ]);
        new Set([
            nonExtensibleObject
        ]);
    /* eslint-enable no-new */ } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
    }
    function FiberNode(tag, pendingProps, key, mode) {
        // Instance
        this.tag = tag;
        this.key = key;
        this.elementType = null;
        this.type = null;
        this.stateNode = null; // Fiber
        this.return = null;
        this.child = null;
        this.sibling = null;
        this.index = 0;
        this.ref = null;
        this.pendingProps = pendingProps;
        this.memoizedProps = null;
        this.updateQueue = null;
        this.memoizedState = null;
        this.dependencies = null;
        this.mode = mode; // Effects
        this.flags = NoFlags;
        this.subtreeFlags = NoFlags;
        this.deletions = null;
        this.lanes = NoLanes;
        this.childLanes = NoLanes;
        this.alternate = null;
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).
        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
        // This isn't directly used but is handy for debugging internals:
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;
        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') Object.preventExtensions(this);
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.
    var createFiber = function(tag, pendingProps, key, mode) {
        // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
        return new FiberNode(tag, pendingProps, key, mode);
    };
    function shouldConstruct$1(Component) {
        var prototype = Component.prototype;
        return !!(prototype && prototype.isReactComponent);
    }
    function isSimpleFunctionComponent(type) {
        return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }
    function resolveLazyComponentTag(Component) {
        if (typeof Component === 'function') return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
        else if (Component !== undefined && Component !== null) {
            var $$typeof = Component.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) return ForwardRef;
            if ($$typeof === REACT_MEMO_TYPE) return MemoComponent;
        }
        return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.
    function createWorkInProgress(current, pendingProps) {
        var workInProgress = current.alternate;
        if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
            workInProgress.elementType = current.elementType;
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;
            // DEV-only fields
            workInProgress._debugSource = current._debugSource;
            workInProgress._debugOwner = current._debugOwner;
            workInProgress._debugHookTypes = current._debugHookTypes;
            workInProgress.alternate = current;
            current.alternate = workInProgress;
        } else {
            workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // We already have an alternate.
            // Reset the effect tag.
            workInProgress.flags = NoFlags; // The effects are no longer valid.
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            // We intentionally reset, rather than copy, actualDuration & actualStartTime.
            // This prevents time from endlessly accumulating in new commits.
            // This has the downside of resetting values for different priority renders,
            // But works for yielding (the common case) and should support resuming.
            workInProgress.actualDuration = 0;
            workInProgress.actualStartTime = -1;
        } // Reset all effects except static ones.
        // Static effects are not specific to a render.
        workInProgress.flags = current.flags & StaticMask;
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.
        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
        }; // These will be overridden during the parent's reconciliation
        workInProgress.sibling = current.sibling;
        workInProgress.index = current.index;
        workInProgress.ref = current.ref;
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;
        switch(workInProgress.tag){
            case IndeterminateComponent:
            case FunctionComponent:
            case SimpleMemoComponent:
                workInProgress.type = resolveFunctionForHotReloading(current.type);
                break;
            case ClassComponent:
                workInProgress.type = resolveClassForHotReloading(current.type);
                break;
            case ForwardRef:
                workInProgress.type = resolveForwardRefForHotReloading(current.type);
                break;
        }
        return workInProgress;
    } // Used to reuse a Fiber for a second pass.
    function resetWorkInProgress(workInProgress, renderLanes) {
        // This resets the Fiber to what createFiber or createWorkInProgress would
        // have set the values to before during the first pass. Ideally this wouldn't
        // be necessary but unfortunately many code paths reads from the workInProgress
        // when they should be reading from current and writing to workInProgress.
        // We assume pendingProps, index, key, ref, return are still untouched to
        // avoid doing another reconciliation.
        // Reset the effect flags but keep any Placement tags, since that's something
        // that child fiber is setting, not the reconciliation.
        workInProgress.flags &= StaticMask | Placement; // The effects are no longer valid.
        var current = workInProgress.alternate;
        if (current === null) {
            // Reset to createFiber's initial values.
            workInProgress.childLanes = NoLanes;
            workInProgress.lanes = renderLanes;
            workInProgress.child = null;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.memoizedProps = null;
            workInProgress.memoizedState = null;
            workInProgress.updateQueue = null;
            workInProgress.dependencies = null;
            workInProgress.stateNode = null;
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = 0;
            workInProgress.treeBaseDuration = 0;
        } else {
            // Reset to the cloned values that createWorkInProgress would've.
            workInProgress.childLanes = current.childLanes;
            workInProgress.lanes = current.lanes;
            workInProgress.child = current.child;
            workInProgress.subtreeFlags = NoFlags;
            workInProgress.deletions = null;
            workInProgress.memoizedProps = current.memoizedProps;
            workInProgress.memoizedState = current.memoizedState;
            workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.
            workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
            // it cannot be shared with the current fiber.
            var currentDependencies = current.dependencies;
            workInProgress.dependencies = currentDependencies === null ? null : {
                lanes: currentDependencies.lanes,
                firstContext: currentDependencies.firstContext
            };
            // Note: We don't reset the actualTime counts. It's useful to accumulate
            // actual time across multiple render passes.
            workInProgress.selfBaseDuration = current.selfBaseDuration;
            workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
        return workInProgress;
    }
    function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
        var mode;
        if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
                mode |= StrictLegacyMode;
                mode |= StrictEffectsMode;
            }
        } else mode = NoMode;
        if (isDevToolsPresent) // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
        return createFiber(HostRoot, null, null, mode);
    }
    function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
        var resolvedType = type;
        if (typeof type === 'function') {
            if (shouldConstruct$1(type)) {
                fiberTag = ClassComponent;
                resolvedType = resolveClassForHotReloading(resolvedType);
            } else resolvedType = resolveFunctionForHotReloading(resolvedType);
        } else if (typeof type === 'string') fiberTag = HostComponent;
        else getTag: switch(type){
            case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
            case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode;
                mode |= StrictLegacyMode;
                if ((mode & ConcurrentMode) !== NoMode) // Strict effects should never run on legacy roots
                mode |= StrictEffectsMode;
                break;
            case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
            case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
            case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
            case REACT_LEGACY_HIDDEN_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_SCOPE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_CACHE_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_TRACING_MARKER_TYPE:
            // eslint-disable-next-line no-fallthrough
            case REACT_DEBUG_TRACING_MODE_TYPE:
            // eslint-disable-next-line no-fallthrough
            default:
                if (typeof type === 'object' && type !== null) switch(type.$$typeof){
                    case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                    case REACT_CONTEXT_TYPE:
                        // This is a consumer
                        fiberTag = ContextConsumer;
                        break getTag;
                    case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        break getTag;
                    case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                    case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                }
                var info = '';
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                if (ownerName) info += '\n\nCheck the render method of `' + ownerName + '`.';
                throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
        }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        fiber.elementType = type;
        fiber.type = resolvedType;
        fiber.lanes = lanes;
        fiber._debugOwner = owner;
        return fiber;
    }
    function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type;
        var key = element.key;
        var pendingProps = element.props;
        var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
        return fiber;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment, elements, key, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        if (typeof pendingProps.id !== 'string') error1('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
        fiber.elementType = REACT_PROFILER_TYPE;
        fiber.lanes = lanes;
        fiber.stateNode = {
            effectDuration: 0,
            passiveEffectDuration: 0
        };
        return fiber;
    }
    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
        fiber.elementType = REACT_OFFSCREEN_TYPE;
        fiber.lanes = lanes;
        var primaryChildInstance = {};
        fiber.stateNode = primaryChildInstance;
        return fiber;
    }
    function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        fiber.lanes = lanes;
        return fiber;
    }
    function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode);
        fiber.elementType = 'DELETED';
        return fiber;
    }
    function createFiberFromDehydratedFragment(dehydratedNode) {
        var fiber = createFiber(DehydratedFragment, null, null, NoMode);
        fiber.stateNode = dehydratedNode;
        return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [];
        var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        fiber.lanes = lanes;
        fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
        };
        return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.
    function assignFiberPropertiesInDEV(target, source) {
        if (target === null) // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
         // This is intentionally written as a list of all properties.
        // We tried to use Object.assign() instead but this is called in
        // the hottest path, and Object.assign() was too slow:
        // https://github.com/facebook/react/issues/12502
        // This code is DEV-only so size is not a concern.
        target.tag = source.tag;
        target.key = source.key;
        target.elementType = source.elementType;
        target.type = source.type;
        target.stateNode = source.stateNode;
        target.return = source.return;
        target.child = source.child;
        target.sibling = source.sibling;
        target.index = source.index;
        target.ref = source.ref;
        target.pendingProps = source.pendingProps;
        target.memoizedProps = source.memoizedProps;
        target.updateQueue = source.updateQueue;
        target.memoizedState = source.memoizedState;
        target.dependencies = source.dependencies;
        target.mode = source.mode;
        target.flags = source.flags;
        target.subtreeFlags = source.subtreeFlags;
        target.deletions = source.deletions;
        target.lanes = source.lanes;
        target.childLanes = source.childLanes;
        target.alternate = source.alternate;
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
        target._debugSource = source._debugSource;
        target._debugOwner = source._debugOwner;
        target._debugNeedsRemount = source._debugNeedsRemount;
        target._debugHookTypes = source._debugHookTypes;
        return target;
    }
    function FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError) {
        this.tag = tag;
        this.containerInfo = containerInfo;
        this.pendingChildren = null;
        this.current = null;
        this.pingCache = null;
        this.finishedWork = null;
        this.timeoutHandle = noTimeout;
        this.context = null;
        this.pendingContext = null;
        this.callbackNode = null;
        this.callbackPriority = NoLane;
        this.eventTimes = createLaneMap(NoLanes);
        this.expirationTimes = createLaneMap(NoTimestamp);
        this.pendingLanes = NoLanes;
        this.suspendedLanes = NoLanes;
        this.pingedLanes = NoLanes;
        this.expiredLanes = NoLanes;
        this.mutableReadLanes = NoLanes;
        this.finishedLanes = NoLanes;
        this.entangledLanes = NoLanes;
        this.entanglements = createLaneMap(NoLanes);
        this.identifierPrefix = identifierPrefix;
        this.onRecoverableError = onRecoverableError;
        this.mutableSourceEagerHydrationData = null;
        this.effectDuration = 0;
        this.passiveEffectDuration = 0;
        this.memoizedUpdaters = new Set();
        var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
        for(var _i = 0; _i < TotalLanes; _i++)pendingUpdatersLaneMap.push(new Set());
        switch(tag){
            case ConcurrentRoot:
                this._debugRootType = hydrate ? 'hydrateRoot()' : 'createRoot()';
                break;
            case LegacyRoot:
                this._debugRootType = hydrate ? 'hydrate()' : 'render()';
                break;
        }
    }
    function createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, // host config, but because they are passed in at runtime, we have to thread
    // them through the root constructor. Perhaps we should put them all into a
    // single type, like a DynamicHostConfig that is defined by the renderer.
    identifierPrefix, onRecoverableError, transitionCallbacks) {
        var root = new FiberRootNode(containerInfo, tag, hydrate, identifierPrefix, onRecoverableError);
        // stateNode is any.
        var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        var _initialState = {
            element: initialChildren,
            isDehydrated: hydrate,
            cache: null,
            // not enabled yet
            transitions: null,
            pendingSuspenseBoundaries: null
        };
        uninitializedFiber.memoizedState = _initialState;
        initializeUpdateQueue(uninitializedFiber);
        return root;
    }
    var ReactVersion = '18.1.0';
    function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        checkKeyStringCoercion(key);
        return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : '' + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
        };
    }
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    didWarnAboutNestedUpdates = false;
    didWarnAboutFindNodeInStrictMode = {};
    function getContextForSubtree(parentComponent) {
        if (!parentComponent) return emptyContextObject;
        var fiber = get1(parentComponent);
        var parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
            var Component = fiber.type;
            if (isContextProvider(Component)) return processChildContext(fiber, Component, parentContext);
        }
        return parentContext;
    }
    function findHostInstanceWithWarning(component, methodName) {
        var fiber = get1(component);
        if (fiber === undefined) {
            if (typeof component.render === 'function') throw new Error('Unable to find node on an unmounted component.');
            else {
                var keys = Object.keys(component).join(',');
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
            }
        }
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        if (hostFiber.mode & StrictLegacyMode) {
            var componentName = getComponentNameFromFiber(fiber) || 'Component';
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current1;
                try {
                    setCurrentFiber(hostFiber);
                    if (fiber.mode & StrictLegacyMode) error1("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                    else error1("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                } finally{
                    // Ideally this should reset to previous but this shouldn't be called in
                    // render and there's another warning for that anyway.
                    if (previousFiber) setCurrentFiber(previousFiber);
                    else resetCurrentFiber();
                }
            }
        }
        return hostFiber.stateNode;
    }
    function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = false;
        var initialChildren = null;
        return createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
    }
    function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate = true;
        var root = createFiberRoot(containerInfo, tag, hydrate, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError); // TODO: Move this to FiberRoot constructor
        root.context = getContextForSubtree(null); // Schedule the initial render. In a hydration root, this is different from
        // a regular update because the initial render must match was was rendered
        // on the server.
        // NOTE: This update intentionally doesn't have a payload. We're only using
        // the update to schedule work on the root fiber (and, for legacy roots, to
        // enqueue the callback if one is provided).
        var current = root.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current);
        var update = createUpdate(eventTime, lane);
        update.callback = callback !== undefined && callback !== null ? callback : null;
        enqueueUpdate(current, update);
        scheduleInitialHydrationOnRoot(root, lane, eventTime);
        return root;
    }
    function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(current$1);
        markRenderScheduled(lane);
        var context = getContextForSubtree(parentComponent);
        if (container.context === null) container.context = context;
        else container.pendingContext = context;
        if (isRendering && current1 !== null && !didWarnAboutNestedUpdates) {
            didWarnAboutNestedUpdates = true;
            error1("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current1) || 'Unknown');
        }
        var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
        // being called "element".
        update.payload = {
            element: element
        };
        callback = callback === undefined ? null : callback;
        if (callback !== null) {
            if (typeof callback !== 'function') error1("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
            update.callback = callback;
        }
        enqueueUpdate(current$1, update);
        var root = scheduleUpdateOnFiber(current$1, lane, eventTime);
        if (root !== null) entangleTransitions(root, current$1, lane);
        return lane;
    }
    function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child) return null;
        switch(containerFiber.child.tag){
            case HostComponent:
                return getPublicInstance(containerFiber.child.stateNode);
            default:
                return containerFiber.child.stateNode;
        }
    }
    function attemptSynchronousHydration$1(fiber) {
        switch(fiber.tag){
            case HostRoot:
                var root = fiber.stateNode;
                if (isRootDehydrated(root)) {
                    // Flush the first scheduled "update".
                    var lanes = getHighestPriorityPendingLanes(root);
                    flushRoot(root, lanes);
                }
                break;
            case SuspenseComponent:
                var eventTime = requestEventTime();
                flushSync(function() {
                    return scheduleUpdateOnFiber(fiber, SyncLane, eventTime);
                }); // If we're still blocked after this, we need to increase
                // the priority of any promises resolving within this
                // boundary so that they next attempt also has higher pri.
                var retryLane = SyncLane;
                markRetryLaneIfNotHydrated(fiber, retryLane);
                break;
        }
    }
    function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        if (suspenseState !== null && suspenseState.dehydrated !== null) suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
    } // Increases the priority of thenables when they resolve within this boundary.
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        if (alternate) markRetryLaneImpl(alternate, retryLane);
    }
    function attemptContinuousHydration$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
        var eventTime = requestEventTime();
        var lane = SelectiveHydrationLane;
        scheduleUpdateOnFiber(fiber, lane, eventTime);
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag !== SuspenseComponent) // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(fiber);
        scheduleUpdateOnFiber(fiber, lane, eventTime);
        markRetryLaneIfNotHydrated(fiber, lane);
    }
    function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    var shouldErrorImpl = function(fiber) {
        return null;
    };
    function shouldError(fiber) {
        return shouldErrorImpl(fiber);
    }
    var shouldSuspendImpl = function(fiber) {
        return false;
    };
    function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
    }
    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setErrorHandler = null;
    var setSuspenseHandler = null;
    var copyWithDeleteImpl = function(obj, path, index) {
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === path.length) {
            if (isArray(updated)) updated.splice(key, 1);
            else delete updated[key];
            return updated;
        } // $FlowFixMe number or string is fine here
        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
    };
    var copyWithDelete = function(obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
    };
    var copyWithRenameImpl = function(obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj);
        if (index + 1 === oldPath.length) {
            var newKey = newPath[index]; // $FlowFixMe number or string is fine here
            updated[newKey] = updated[oldKey];
            if (isArray(updated)) updated.splice(oldKey, 1);
            else delete updated[oldKey];
        } else // $FlowFixMe number or string is fine here
        updated[oldKey] = copyWithRenameImpl(obj[oldKey], oldPath, newPath, index + 1);
        return updated;
    };
    var copyWithRename = function(obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
            warn('copyWithRename() expects paths of the same length');
            return;
        } else {
            for(var i = 0; i < newPath.length - 1; i++)if (oldPath[i] !== newPath[i]) {
                warn('copyWithRename() expects paths to be the same except for the deepest key');
                return;
            }
        }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
    };
    var copyWithSetImpl = function(obj, path, index, value) {
        if (index >= path.length) return value;
        var key = path[index];
        var updated = isArray(obj) ? obj.slice() : assign({}, obj); // $FlowFixMe number or string is fine here
        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
    };
    var copyWithSet = function(obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
    };
    var findHook = function(fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;
        while(currentHook !== null && id > 0){
            currentHook = currentHook.next;
            id--;
        }
        return currentHook;
    }; // Support DevTools editable values for useState and useReducer.
    overrideHookState = function(fiber, id, path, value) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateDeletePath = function(fiber, id, path) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    };
    overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);
        if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState;
            hook.baseState = newState; // We aren't actually adding an update to the queue,
            // because there is no update we can add for useReducer hooks that won't trigger an error.
            // (There's no appropriate action type for DevTools overrides.)
            // As a result though, React will see the scheduled update as a noop and bailout.
            // Shallow cloning props works as a workaround for now to bypass the bailout check.
            fiber.memoizedProps = assign({}, fiber.memoizedProps);
            scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
    }; // Support DevTools props for function components, forwardRef, memo, host components, etc.
    overrideProps = function(fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    overridePropsDeletePath = function(fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    overridePropsRenamePath = function(fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
        if (fiber.alternate) fiber.alternate.pendingProps = fiber.pendingProps;
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    scheduleUpdate = function(fiber) {
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
    };
    setErrorHandler = function(newShouldErrorImpl) {
        shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function(newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
    };
    function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        if (hostFiber === null) return null;
        return hostFiber.stateNode;
    }
    function emptyFindFiberByHostInstance(instance) {
        return null;
    }
    function getCurrentFiberForDevTools() {
        return current1;
    }
    function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState: overrideHookState,
            overrideHookStateDeletePath: overrideHookStateDeletePath,
            overrideHookStateRenamePath: overrideHookStateRenamePath,
            overrideProps: overrideProps,
            overridePropsDeletePath: overridePropsDeletePath,
            overridePropsRenamePath: overridePropsRenamePath,
            setErrorHandler: setErrorHandler,
            setSuspenseHandler: setSuspenseHandler,
            scheduleUpdate: scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher,
            findHostInstanceByFiber: findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh: findHostInstancesForRefresh,
            scheduleRefresh: scheduleRefresh,
            scheduleRoot: scheduleRoot,
            setRefreshHandler: setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools,
            // Enables DevTools to detect reconciler version rather than renderer version
            // which may not match for third party renderers.
            reconcilerVersion: ReactVersion
        });
    }
    /* global reportError */ var defaultOnRecoverableError = typeof reportError === 'function' ? // emulating an uncaught JavaScript error.
    reportError : function(error) {
        // In older browsers and test environments, fallback to console.error.
        // eslint-disable-next-line react-internal/no-production-logging
        console['error'](error);
    };
    function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root = this._internalRoot;
        if (root === null) throw new Error('Cannot update an unmounted root.');
        if (typeof arguments[1] === 'function') error1("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        else if (isValidContainer(arguments[1])) error1("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
        else if (typeof arguments[1] !== 'undefined') error1("You passed a second argument to root.render(...) but it only accepts one argument.");
        var container = root.containerInfo;
        if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error1("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
            }
        }
        updateContainer(children, root, null, null);
    };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        if (typeof arguments[0] === 'function') error1("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root = this._internalRoot;
        if (root !== null) {
            this._internalRoot = null;
            var container = root.containerInfo;
            if (isAlreadyRendering()) error1("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
            flushSync(function() {
                updateContainer(null, root, null, null);
            });
            unmarkContainerAsRoot(container);
        }
    };
    function createRoot(container, options) {
        if (!isValidContainer(container)) throw new Error('createRoot(...): Target container is not a DOM element.');
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = '';
        var onRecoverableError = defaultOnRecoverableError;
        var transitionCallbacks = null;
        if (options !== null && options !== undefined) {
            if (options.hydrate) warn('hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.');
            else if (typeof options === 'object' && options !== null && options.$$typeof === REACT_ELEMENT_TYPE) error1("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
            if (options.transitionCallbacks !== undefined) transitionCallbacks = options.transitionCallbacks;
        }
        var root = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container);
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
        return new ReactDOMRoot(root);
    }
    function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
    }
    function scheduleHydration(target) {
        if (target) queueExplicitHydrationTarget(target);
    }
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
    function hydrateRoot(container, initialChildren, options) {
        if (!isValidContainer(container)) throw new Error('hydrateRoot(...): Target container is not a DOM element.');
        warnIfReactDOMContainerInDEV(container);
        if (initialChildren === undefined) error1("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        // the hydration callbacks.
        var hydrationCallbacks = options != null ? options : null; // TODO: Delete this option
        var mutableSources = options != null && options.hydratedSources || null;
        var isStrictMode = false;
        var concurrentUpdatesByDefaultOverride = false;
        var identifierPrefix = '';
        var onRecoverableError = defaultOnRecoverableError;
        if (options !== null && options !== undefined) {
            if (options.unstable_strictMode === true) isStrictMode = true;
            if (options.identifierPrefix !== undefined) identifierPrefix = options.identifierPrefix;
            if (options.onRecoverableError !== undefined) onRecoverableError = options.onRecoverableError;
        }
        var root = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root.current, container); // This can't be a comment node since hydration doesn't work on comment nodes anyway.
        listenToAllSupportedEvents(container);
        if (mutableSources) for(var i = 0; i < mutableSources.length; i++){
            var mutableSource = mutableSources[i];
            registerMutableSourceForHydration(root, mutableSource);
        }
        return new ReactDOMHydrationRoot(root);
    }
    function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
    } // TODO: Remove this function which also includes comment nodes.
    // We only use it in places that are currently more relaxed.
    function isValidContainerLegacy(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }
    function warnIfReactDOMContainerInDEV(container) {
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') error1("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
        if (isContainerMarkedAsRoot(container)) {
            if (container._reactRootContainer) error1("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
            else error1("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
        }
    }
    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
            if (hostInstance) {
                if (hostInstance.parentNode !== container) error1("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
            }
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        if (hasNonRootReactChild && !isRootRenderedBySomeReact) error1("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') error1("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
    };
    function getReactRootElementInContainer(container) {
        if (!container) return null;
        if (container.nodeType === DOCUMENT_NODE) return container.documentElement;
        else return container.firstChild;
    }
    function noopOnRecoverableError() {
    // legacy API.
    }
    function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
        if (isHydrationContainer) {
            if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            }
            var root = createHydrationContainer(initialChildren, callback, container, LegacyRoot, null, false, false, '', noopOnRecoverableError);
            container._reactRootContainer = root;
            markContainerAsRoot(root.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root;
        } else {
            // First clear any existing content.
            var rootSibling;
            while(rootSibling = container.lastChild)container.removeChild(rootSibling);
            if (typeof callback === 'function') {
                var _originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(_root);
                    _originalCallback.call(instance);
                };
            }
            var _root = createContainer(container, LegacyRoot, null, false, false, '', noopOnRecoverableError);
            container._reactRootContainer = _root;
            markContainerAsRoot(_root.current, container);
            var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(_rootContainerElement); // Initial mount should not be batched.
            flushSync(function() {
                updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
        }
    }
    function warnOnInvalidCallback$1(callback, callerName) {
        if (callback !== null && typeof callback !== 'function') error1("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
    }
    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
        var maybeRoot = container._reactRootContainer;
        var root;
        if (!maybeRoot) // Initial mount
        root = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
        else {
            root = maybeRoot;
            if (typeof callback === 'function') {
                var originalCallback = callback;
                callback = function() {
                    var instance = getPublicRootInstance(root);
                    originalCallback.call(instance);
                };
            } // Update
            updateContainer(children, root, parentComponent, callback);
        }
        return getPublicRootInstance(root);
    }
    function findDOMNode(componentOrElement) {
        var owner = ReactCurrentOwner$3.current;
        if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            if (!warnedAboutRefsInRender) error1("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || 'A component');
            owner.stateNode._warnedAboutRefsInRender = true;
        }
        if (componentOrElement == null) return null;
        if (componentOrElement.nodeType === ELEMENT_NODE) return componentOrElement;
        return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
    }
    function hydrate1(element, container, callback) {
        error1("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error('Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }
    function render1(element, container, callback) {
        error1("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(container)) throw new Error('Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }
    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        error1("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
        if (!isValidContainerLegacy(containerNode)) throw new Error('Target container is not a DOM element.');
        if (parentComponent == null || !has1(parentComponent)) throw new Error('parentComponent must be a valid React Component');
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }
    function unmountComponentAtNode(container) {
        if (!isValidContainerLegacy(container)) throw new Error('unmountComponentAtNode(...): Target container is not a DOM element.');
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;
        if (isModernRoot) error1("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        if (container._reactRootContainer) {
            var rootEl = getReactRootElementInContainer(container);
            var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            if (renderedByDifferentReact) error1("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
            flushSync(function() {
                legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                    // $FlowFixMe This should probably use `delete container._reactRootContainer`
                    container._reactRootContainer = null;
                    unmarkContainerAsRoot(container);
                });
            }); // If you call unmountComponentAtNode twice in quick succession, you'll
            // get `true` twice. That's probably fine?
            return true;
        } else {
            var _rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.
            var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
            if (hasNonRootReactChild) error1("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
            return false;
        }
    }
    setAttemptSynchronousHydration(attemptSynchronousHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setGetCurrentUpdatePriority(getCurrentUpdatePriority);
    setAttemptHydrationAtPriority(runWithPriority);
    if (typeof Map !== 'function' || Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') error1("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
    function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        if (!isValidContainer(container)) throw new Error('Target container is not a DOM element.');
         // TODO: pass ReactDOM portal implementation as third argument
        // $FlowFixMe The Flow type is opaque but there's no way to actually create it.
        return createPortal(children, container, null, key);
    }
    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }
    var Internals = {
        usingClientEntryPoint: false,
        // Keep in sync with ReactTestUtils.js.
        // This is an array for better minification.
        Events: [
            getInstanceFromNode,
            getNodeFromInstance,
            getFiberCurrentPropsFromNode,
            enqueueStateRestore,
            restoreStateIfNeeded,
            batchedUpdates$1
        ]
    };
    function createRoot$1(container, options) {
        if (!Internals.usingClientEntryPoint && true) error1('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return createRoot(container, options);
    }
    function hydrateRoot$1(container, initialChildren, options) {
        if (!Internals.usingClientEntryPoint && true) error1('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
        return hydrateRoot(container, initialChildren, options);
    } // Overload the definition to the two valid signatures.
    // Warning, this opts-out of checking the function body.
    // eslint-disable-next-line no-redeclare
    function flushSync$1(fn) {
        if (isAlreadyRendering()) error1("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
        return flushSync(fn);
    }
    var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: 'react-dom'
    });
    if (!foundDevTools && canUseDOM && window.top === window.self) // If we're in Chrome or Firefox, provide a download link if not installed.
    {
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
            var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.
            if (/^(https?|file):$/.test(protocol)) // eslint-disable-next-line react-internal/no-production-logging
            console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === 'file:' ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ''), 'font-weight:bold');
        }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.createRoot = createRoot$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync$1;
    exports.hydrate = hydrate1;
    exports.hydrateRoot = hydrateRoot$1;
    exports.render = render1;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{"react":"21dqq","scheduler":"juvHo"}],"juvHo":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/scheduler.development.js');

},{"./cjs/scheduler.development.js":"RqdIf"}],"RqdIf":[function(require,module,exports) {
/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var frameYieldMs = 5;
    function push(heap, node) {
        var index = heap.length;
        heap.push(node);
        siftUp(heap, node, index);
    }
    function peek(heap) {
        return heap.length === 0 ? null : heap[0];
    }
    function pop(heap) {
        if (heap.length === 0) return null;
        var first = heap[0];
        var last = heap.pop();
        if (last !== first) {
            heap[0] = last;
            siftDown(heap, last, 0);
        }
        return first;
    }
    function siftUp(heap, node, i) {
        var index = i;
        while(index > 0){
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare(parent, node) > 0) {
                // The parent is larger. Swap positions.
                heap[parentIndex] = node;
                heap[index] = parent;
                index = parentIndex;
            } else // The parent is smaller. Exit.
            return;
        }
    }
    function siftDown(heap, node, i) {
        var index = i;
        var length = heap.length;
        var halfLength = length >>> 1;
        while(index < halfLength){
            var leftIndex = (index + 1) * 2 - 1;
            var left = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.
            if (compare(left, node) < 0) {
                if (rightIndex < length && compare(right, left) < 0) {
                    heap[index] = right;
                    heap[rightIndex] = node;
                    index = rightIndex;
                } else {
                    heap[index] = left;
                    heap[leftIndex] = node;
                    index = leftIndex;
                }
            } else if (rightIndex < length && compare(right, node) < 0) {
                heap[index] = right;
                heap[rightIndex] = node;
                index = rightIndex;
            } else // Neither child is smaller. Exit.
            return;
        }
    }
    function compare(a, b) {
        // Compare sort index first, then task id.
        var diff = a.sortIndex - b.sortIndex;
        return diff !== 0 ? diff : a.id - b.id;
    }
    // TODO: Use symbols?
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    function markTaskErrored(task, ms) {}
    /* eslint-disable no-var */ var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
    if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
            return localPerformance.now();
        };
    } else {
        var localDate = Date;
        var initialTime = localDate.now();
        exports.unstable_now = function() {
            return localDate.now() - initialTime;
        };
    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111
    var maxSigned31BitInt = 1073741823; // Times out immediately
    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out
    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out
    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap
    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.
    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.
    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.
    var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;
    var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;
    var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom
    var isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
    function advanceTimers(currentTime) {
        // Check for tasks that are no longer delayed and add them to the queue.
        var timer = peek(timerQueue);
        while(timer !== null){
            if (timer.callback === null) // Timer was cancelled.
            pop(timerQueue);
            else if (timer.startTime <= currentTime) {
                // Timer fired. Transfer to the task queue.
                pop(timerQueue);
                timer.sortIndex = timer.expirationTime;
                push(taskQueue, timer);
            } else // Remaining timers are pending.
            return;
            timer = peek(timerQueue);
        }
    }
    function handleTimeout(currentTime) {
        isHostTimeoutScheduled = false;
        advanceTimers(currentTime);
        if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            } else {
                var firstTimer = peek(timerQueue);
                if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
        }
    }
    function flushWork(hasTimeRemaining, initialTime) {
        isHostCallbackScheduled = false;
        if (isHostTimeoutScheduled) {
            // We scheduled a timeout but it's no longer needed. Cancel it.
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
        }
        isPerformingWork = true;
        var previousPriorityLevel = currentPriorityLevel;
        try {
            if (enableProfiling) try {
                return workLoop(hasTimeRemaining, initialTime);
            } catch (error) {
                if (currentTask !== null) {
                    var currentTime = exports.unstable_now();
                    markTaskErrored(currentTask, currentTime);
                    currentTask.isQueued = false;
                }
                throw error;
            }
            else // No catch in prod code path.
            return workLoop(hasTimeRemaining, initialTime);
        } finally{
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
        }
    }
    function workLoop(hasTimeRemaining, initialTime) {
        var currentTime = initialTime;
        advanceTimers(currentTime);
        currentTask = peek(taskQueue);
        while(currentTask !== null && !enableSchedulerDebugging){
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) break;
            var callback = currentTask.callback;
            if (typeof callback === 'function') {
                currentTask.callback = null;
                currentPriorityLevel = currentTask.priorityLevel;
                var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                var continuationCallback = callback(didUserCallbackTimeout);
                currentTime = exports.unstable_now();
                if (typeof continuationCallback === 'function') currentTask.callback = continuationCallback;
                else if (currentTask === peek(taskQueue)) pop(taskQueue);
                advanceTimers(currentTime);
            } else pop(taskQueue);
            currentTask = peek(taskQueue);
        } // Return whether there's additional work
        if (currentTask !== null) return true;
        else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            return false;
        }
    }
    function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch(priorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
                break;
            default:
                priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_next(eventHandler) {
        var priorityLevel;
        switch(currentPriorityLevel){
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
                // Shift down to normal priority
                priorityLevel = NormalPriority;
                break;
            default:
                // Anything lower than normal priority should remain at the current level.
                priorityLevel = currentPriorityLevel;
                break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
            return eventHandler();
        } finally{
            currentPriorityLevel = previousPriorityLevel;
        }
    }
    function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
            // This is a fork of runWithPriority, inlined for performance.
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
                return callback.apply(this, arguments);
            } finally{
                currentPriorityLevel = previousPriorityLevel;
            }
        };
    }
    function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now();
        var startTime;
        if (typeof options === 'object' && options !== null) {
            var delay = options.delay;
            if (typeof delay === 'number' && delay > 0) startTime = currentTime + delay;
            else startTime = currentTime;
        } else startTime = currentTime;
        var timeout;
        switch(priorityLevel){
            case ImmediatePriority:
                timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                break;
            case UserBlockingPriority:
                timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                break;
            case IdlePriority:
                timeout = IDLE_PRIORITY_TIMEOUT;
                break;
            case LowPriority:
                timeout = LOW_PRIORITY_TIMEOUT;
                break;
            case NormalPriority:
            default:
                timeout = NORMAL_PRIORITY_TIMEOUT;
                break;
        }
        var expirationTime = startTime + timeout;
        var newTask = {
            id: taskIdCounter++,
            callback: callback,
            priorityLevel: priorityLevel,
            startTime: startTime,
            expirationTime: expirationTime,
            sortIndex: -1
        };
        if (startTime > currentTime) {
            // This is a delayed task.
            newTask.sortIndex = startTime;
            push(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                // All tasks are delayed, and this is the task with the earliest delay.
                if (isHostTimeoutScheduled) // Cancel an existing timeout.
                cancelHostTimeout();
                else isHostTimeoutScheduled = true;
                 // Schedule a timeout.
                requestHostTimeout(handleTimeout, startTime - currentTime);
            }
        } else {
            newTask.sortIndex = expirationTime;
            push(taskQueue, newTask);
            // wait until the next time we yield.
            if (!isHostCallbackScheduled && !isPerformingWork) {
                isHostCallbackScheduled = true;
                requestHostCallback(flushWork);
            }
        }
        return newTask;
    }
    function unstable_pauseExecution() {}
    function unstable_continueExecution() {
        if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
        }
    }
    function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
    }
    function unstable_cancelCallback(task) {
        // remove from the queue because you can't remove arbitrary nodes from an
        // array based heap, only the first one.)
        task.callback = null;
    }
    function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
    }
    var isMessageLoopRunning = false;
    var scheduledHostCallback = null;
    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
    // thread, like user events. By default, it yields multiple times per frame.
    // It does not attempt to align with frame boundaries, since most tasks don't
    // need to be frame aligned; for those that do, use requestAnimationFrame.
    var frameInterval = frameYieldMs;
    var startTime1 = -1;
    function shouldYieldToHost() {
        var timeElapsed = exports.unstable_now() - startTime1;
        if (timeElapsed < frameInterval) // The main thread has only been blocked for a really short amount of time;
        // smaller than a single frame. Don't yield yet.
        return false;
         // The main thread has been blocked for a non-negligible amount of time. We
        return true;
    }
    function requestPaint() {}
    function forceFrameRate(fps) {
        if (fps < 0 || fps > 125) {
            // Using console['error'] to evade Babel and ESLint
            console['error']("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
        }
        if (fps > 0) frameInterval = Math.floor(1000 / fps);
        else // reset the framerate
        frameInterval = frameYieldMs;
    }
    var performWorkUntilDeadline = function() {
        if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread
            // has been blocked.
            startTime1 = currentTime;
            var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the
            // error can be observed.
            //
            // Intentionally not using a try-catch, since that makes some debugging
            // techniques harder. Instead, if `scheduledHostCallback` errors, then
            // `hasMoreWork` will remain true, and we'll continue the work loop.
            var hasMoreWork = true;
            try {
                hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally{
                if (hasMoreWork) // If there's more work, schedule the next message event at the end
                // of the preceding one.
                schedulePerformWorkUntilDeadline();
                else {
                    isMessageLoopRunning = false;
                    scheduledHostCallback = null;
                }
            }
        } else isMessageLoopRunning = false;
         // Yielding to the browser will give it a chance to paint, so we can
    };
    var schedulePerformWorkUntilDeadline;
    if (typeof localSetImmediate === 'function') // Node.js and old IE.
    // There's a few reasons for why we prefer setImmediate.
    //
    // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.
    // (Even though this is a DOM fork of the Scheduler, you could get here
    // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)
    // https://github.com/facebook/react/issues/20756
    //
    // But also, it runs earlier which is the semantic we want.
    // If other browsers ever implement it, it's better to use it.
    // Although both of these would be inferior to native scheduling.
    schedulePerformWorkUntilDeadline = function() {
        localSetImmediate(performWorkUntilDeadline);
    };
    else if (typeof MessageChannel !== 'undefined') {
        // DOM and Worker environments.
        // We prefer MessageChannel because of the 4ms setTimeout clamping.
        var channel = new MessageChannel();
        var port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline;
        schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
        };
    } else // We should only fallback here in non-browser environments.
    schedulePerformWorkUntilDeadline = function() {
        localSetTimeout(performWorkUntilDeadline, 0);
    };
    function requestHostCallback(callback) {
        scheduledHostCallback = callback;
        if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
        }
    }
    function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
        }, ms);
    }
    function cancelHostTimeout() {
        localClearTimeout(taskTimeoutID);
        taskTimeoutID = -1;
    }
    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_forceFrameRate = forceFrameRate;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
})();

},{}],"7F5Te":[function(require,module,exports) {
var $parcel$ReactRefreshHelpers$0342 = require("@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
$parcel$ReactRefreshHelpers$0342.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "App", ()=>App
);
var _jsxDevRuntime = require("react/jsx-dev-runtime");
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _core = require("@blueprintjs/core");
var _datetime = require("@blueprintjs/datetime");
var _useRequest = require("@ahooksjs/use-request");
var _useRequestDefault = parcelHelpers.interopDefault(_useRequest);
var _table = require("@blueprintjs/table");
var _fuseJs = require("fuse.js");
var _fuseJsDefault = parcelHelpers.interopDefault(_fuseJs);
var _s = $RefreshSig$();
const sourceEndpoint = 'https://cdn.jsdelivr.net/gh/logseq/marketplace@master/plugins.json';
let appActionsType;
(function(appActionsType1) {
    appActionsType1["update"] = "update";
})(appActionsType || (appActionsType = {}));
const initialState = {
    q: '',
    category: 'all',
    dateRange: [
        null,
        null
    ],
    darkMode: window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches,
    cacheKey: 0
};
const appReducer = (prevState, action)=>{
    switch(action.type){
        case appActionsType.update:
            return Object.assign({}, prevState, action.payload);
        default:
            return Object.assign({}, prevState, action.payload || action);
    }
};
const fetchPlugins = ()=>{
    return fetch(sourceEndpoint).then((r)=>r.json()
    );
};
function App() {
    _s();
    const [state, dispatch] = _react.useReducer(appReducer, initialState);
    const { loading , data , error , run  } = _useRequestDefault.default(fetchPlugins, {
        cacheKey: 'plugins-' + state.cacheKey,
        staleTime: 600000
    });
    const [results, setResults] = _react.useState([]);
    _react.useEffect(()=>{
        let ret = data?.packages || [];
        // filters
        if (state.category?.toLowerCase() !== 'all') {
            const shouldTheme = state.category.toLowerCase() === 'themes';
            ret = ret.filter((it)=>{
                return shouldTheme ? it.theme : !it.theme;
            });
        }
        const startTime = state.dateRange[0]?.getTime();
        const endTime = state.dateRange[1]?.getTime();
        if (startTime && endTime) ret = ret.filter((it)=>{
            if (!it.addedAt) return true;
            return it.addedAt >= startTime && it.addedAt <= endTime;
        });
        // search
        if (ret?.length > 1 && state.q?.trim().length > 1) {
            const s = new _fuseJsDefault.default(ret, {
                includeScore: false,
                distance: 10,
                minMatchCharLength: 2,
                keys: [
                    'title',
                    'name'
                ]
            });
            ret = s.search(state.q);
            ret = ret?.map((it)=>it.item
            );
        }
        // sort
        ret = ret.sort((a, b)=>{
            if (!b.addedAt) return;
            return b.addedAt - a.addedAt;
        });
        setResults(ret);
    }, [
        data,
        state.q,
        state.dateRange,
        state.category
    ]);
    _react.useEffect(()=>{
        const body = document.body;
        if (state.darkMode) body.classList.add('bp4-dark');
        else body.classList.remove('bp4-dark');
    }, [
        state.darkMode
    ]);
    // @ts-ignore
    return /*#__PURE__*/ _jsxDevRuntime.jsxDEV("main", {
        className: 'app',
        children: [
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV("h1", {
                children: [
                    "Logseq plugins & themes",
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV("sup", {
                        onClick: ()=>open('https://github.com/logseq/marketplace', '_blank')
                        ,
                        children: "Marketplace"
                    }, void 0, false, {
                        fileName: "src/App.tsx",
                        lineNumber: 118,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/App.tsx",
                lineNumber: 116,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV("section", {
                className: "controls",
                children: [
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                        className: "l",
                        children: [
                            /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                                className: "bp4-html-select bp4-large",
                                children: [
                                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV("select", {
                                        className: "bp4-large",
                                        value: state.category?.toLowerCase(),
                                        onChange: (e)=>{
                                            dispatch({
                                                category: e.target.value?.toLowerCase()
                                            });
                                        },
                                        children: [
                                            'All',
                                            'Plugins',
                                            'Themes'
                                        ].map((it)=>{
                                            return /*#__PURE__*/ _jsxDevRuntime.jsxDEV("option", {
                                                value: it.toLowerCase(),
                                                children: it
                                            }, void 0, false, {
                                                fileName: "src/App.tsx",
                                                lineNumber: 133,
                                                columnNumber: 24
                                            }, this);
                                        })
                                    }, void 0, false, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 126,
                                        columnNumber: 13
                                    }, this),
                                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV("span", {
                                        className: "bp4-icon bp4-icon-double-caret-vertical"
                                    }, void 0, false, {
                                        fileName: "src/App.tsx",
                                        lineNumber: 136,
                                        columnNumber: 13
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "src/App.tsx",
                                lineNumber: 125,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_core.Button, {
                                large: true,
                                minimal: true,
                                style: {
                                    margin: '0 10px',
                                    opacity: '.4'
                                },
                                children: " x "
                            }, void 0, false, {
                                fileName: "src/App.tsx",
                                lineNumber: 140,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_datetime.DateRangeInput, {
                                allowSingleDayRange: true,
                                formatDate: (date)=>date.toDateString()
                                ,
                                onChange: (e)=>{
                                    dispatch({
                                        dateRange: e
                                    });
                                },
                                parseDate: (str)=>new Date(str)
                                ,
                                value: state.dateRange,
                                maxDate: new Date(),
                                startInputProps: {
                                    large: true,
                                    leftIcon: 'time'
                                },
                                endInputProps: {
                                    large: true,
                                    leftIcon: 'time'
                                }
                            }, void 0, false, {
                                fileName: "src/App.tsx",
                                lineNumber: 144,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_core.Button, {
                                className: 'reset-date-range',
                                large: true,
                                minimal: true,
                                icon: 'reset',
                                onClick: ()=>{
                                    dispatch({
                                        dateRange: [
                                            null,
                                            null
                                        ],
                                        category: 'All'
                                    });
                                }
                            }, void 0, false, {
                                fileName: "src/App.tsx",
                                lineNumber: 158,
                                columnNumber: 11
                            }, this),
                            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_core.Button, {
                                large: true,
                                outlined: true,
                                style: {
                                    marginLeft: 0,
                                    opacity: '.8',
                                    flex: 1
                                },
                                onClick: ()=>{
                                    dispatch({
                                        cacheKey: Date.now()
                                    });
                                    // refresh()
                                    run();
                                },
                                children: [
                                    "Total ",
                                    results?.length || 0
                                ]
                            }, void 0, true, {
                                fileName: "src/App.tsx",
                                lineNumber: 168,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "src/App.tsx",
                        lineNumber: 123,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                        className: "r",
                        children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_core.ControlGroup, {
                            fill: true,
                            vertical: false,
                            children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_core.InputGroup, {
                                value: state.q,
                                large: true,
                                leftIcon: 'search',
                                placeholder: "Search title ...",
                                autoFocus: true,
                                onChange: (e)=>{
                                    const value = e.target.value;
                                    dispatch({
                                        q: value
                                    });
                                }
                            }, void 0, false, {
                                fileName: "src/App.tsx",
                                lineNumber: 184,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "src/App.tsx",
                            lineNumber: 183,
                            columnNumber: 11
                        }, this)
                    }, void 0, false, {
                        fileName: "src/App.tsx",
                        lineNumber: 182,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "src/App.tsx",
                lineNumber: 122,
                columnNumber: 7
            }, this),
            error ? /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_core.Callout, {
                title: 'Remote Error',
                intent: 'danger',
                children: error.toString()
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 199,
                columnNumber: 16
            }, this) : /*#__PURE__*/ _jsxDevRuntime.jsxDEV("div", {
                className: 'table-wrap',
                children: loading ? /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_core.Spinner, {}, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 201,
                    columnNumber: 23
                }, this) : /*#__PURE__*/ _jsxDevRuntime.jsxDEV(PluginsTable, {
                    plugins: results
                }, void 0, false, {
                    fileName: "src/App.tsx",
                    lineNumber: 201,
                    columnNumber: 36
                }, this)
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 200,
                columnNumber: 10
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/App.tsx",
        lineNumber: 115,
        columnNumber: 5
    }, this);
}
_s(App, "26SY0suNwDk+Tj+mi7FZB0oBZwA=", false, function() {
    return [
        _useRequestDefault.default
    ];
});
_c = App;
function PluginsTable(props) {
    const { plugins  } = props;
    const titleCellRenderer = (rowIndex)=>{
        const d = plugins[rowIndex];
        return /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Cell, {
            children: [
                d.theme ? '🎨' : '🧩',
                " ",
                d.title
            ]
        }, void 0, true, {
            fileName: "src/App.tsx",
            lineNumber: 214,
            columnNumber: 7
        }, this);
    };
    const authorCellRenderer = (rowIndex)=>/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Cell, {
            children: plugins[rowIndex].author
        }, void 0, false, {
            fileName: "src/App.tsx",
            lineNumber: 220,
            columnNumber: 52
        }, this)
    ;
    const descCellRenderer = (rowIndex)=>/*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Cell, {
            children: plugins[rowIndex].description
        }, void 0, false, {
            fileName: "src/App.tsx",
            lineNumber: 221,
            columnNumber: 50
        }, this)
    ;
    const repoCellRenderer = (rowIndex)=>{
        const d = plugins[rowIndex];
        return /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Cell, {
            children: /*#__PURE__*/ _jsxDevRuntime.jsxDEV("a", {
                href: 'https://github.com/' + d.repo,
                target: '_blank',
                children: d.repo
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 226,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "src/App.tsx",
            lineNumber: 225,
            columnNumber: 7
        }, this);
    };
    const addedAtCellRenderer = (rowIndex)=>{
        const d = plugins[rowIndex].addedAt;
        const date = new Date(d).toDateString();
        return /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Cell, {
            children: date
        }, void 0, false, {
            fileName: "src/App.tsx",
            lineNumber: 236,
            columnNumber: 12
        }, this);
    };
    return /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Table2, {
        numRows: plugins.length,
        columnWidths: [
            250,
            150,
            300,
            160,
            300
        ],
        children: [
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Column, {
                name: 'Title',
                cellRenderer: titleCellRenderer
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 241,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Column, {
                name: 'Author',
                cellRenderer: authorCellRenderer
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 242,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Column, {
                name: 'Repo',
                cellRenderer: repoCellRenderer
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 243,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Column, {
                name: 'Added at',
                cellRenderer: addedAtCellRenderer
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 244,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ _jsxDevRuntime.jsxDEV(_table.Column, {
                name: 'Description',
                cellRenderer: descCellRenderer
            }, void 0, false, {
                fileName: "src/App.tsx",
                lineNumber: 245,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "src/App.tsx",
        lineNumber: 240,
        columnNumber: 5
    }, this);
}
_c1 = PluginsTable;
var _c, _c1;
$RefreshReg$(_c, "App");
$RefreshReg$(_c1, "PluginsTable");

  $parcel$ReactRefreshHelpers$0342.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
},{"react/jsx-dev-runtime":"iTorj","react":"21dqq","@blueprintjs/core":"3LcXQ","@blueprintjs/datetime":"6UFnv","@ahooksjs/use-request":"9doIm","@blueprintjs/table":"i6vsm","fuse.js":"4xnao","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3","@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js":"km3Ru"}],"3LcXQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _accessibility = require("./accessibility");
parcelHelpers.exportAll(_accessibility, exports);
var _common = require("./common");
parcelHelpers.exportAll(_common, exports);
var _components = require("./components");
parcelHelpers.exportAll(_components, exports);
var _context = require("./context");
parcelHelpers.exportAll(_context, exports);
var _hooks = require("./hooks");
parcelHelpers.exportAll(_hooks, exports);

},{"./accessibility":"gfb8x","./common":"6BNPY","./components":"kz2Zc","./context":"f9V4b","./hooks":"3bAWr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gfb8x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _focusStyleManager = require("./focusStyleManager");
parcelHelpers.exportAll(_focusStyleManager, exports);

},{"./focusStyleManager":"iGX3C","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iGX3C":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusStyleManager", ()=>FocusStyleManager
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _classes = require("../common/classes");
var _interactionMode = require("../common/interactionMode");
/* istanbul ignore next */ var fakeFocusEngine = {
    isActive: function() {
        return true;
    },
    start: function() {
        return true;
    },
    stop: function() {
        return true;
    }
};
var focusEngine = typeof document !== "undefined" ? new _interactionMode.InteractionModeEngine(document.documentElement, _classes.FOCUS_DISABLED) : fakeFocusEngine;
var FocusStyleManager = {
    alwaysShowFocus: function() {
        return focusEngine.stop();
    },
    isActive: function() {
        return focusEngine.isActive();
    },
    onlyShowFocusOnTabs: function() {
        return focusEngine.start();
    }
};

},{"../common/classes":"6Ep96","../common/interactionMode":"dzAjT","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6Ep96":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ACTIVE", ()=>ACTIVE
);
parcelHelpers.export(exports, "ALIGN_LEFT", ()=>ALIGN_LEFT
);
parcelHelpers.export(exports, "ALIGN_RIGHT", ()=>ALIGN_RIGHT
);
parcelHelpers.export(exports, "DARK", ()=>DARK
);
parcelHelpers.export(exports, "DISABLED", ()=>DISABLED
);
parcelHelpers.export(exports, "FILL", ()=>FILL
);
parcelHelpers.export(exports, "FIXED", ()=>FIXED
);
parcelHelpers.export(exports, "FIXED_TOP", ()=>FIXED_TOP
);
parcelHelpers.export(exports, "INLINE", ()=>INLINE
);
parcelHelpers.export(exports, "INTERACTIVE", ()=>INTERACTIVE
);
parcelHelpers.export(exports, "LARGE", ()=>LARGE
);
parcelHelpers.export(exports, "LOADING", ()=>LOADING
);
parcelHelpers.export(exports, "MINIMAL", ()=>MINIMAL
);
parcelHelpers.export(exports, "OUTLINED", ()=>OUTLINED
);
parcelHelpers.export(exports, "MULTILINE", ()=>MULTILINE
);
parcelHelpers.export(exports, "ROUND", ()=>ROUND
);
parcelHelpers.export(exports, "SELECTED", ()=>SELECTED
);
parcelHelpers.export(exports, "SMALL", ()=>SMALL
);
parcelHelpers.export(exports, "VERTICAL", ()=>VERTICAL
);
parcelHelpers.export(exports, "POSITION_TOP", ()=>POSITION_TOP
);
parcelHelpers.export(exports, "POSITION_BOTTOM", ()=>POSITION_BOTTOM
);
parcelHelpers.export(exports, "POSITION_LEFT", ()=>POSITION_LEFT
);
parcelHelpers.export(exports, "POSITION_RIGHT", ()=>POSITION_RIGHT
);
parcelHelpers.export(exports, "ELEVATION_0", ()=>ELEVATION_0
);
parcelHelpers.export(exports, "ELEVATION_1", ()=>ELEVATION_1
);
parcelHelpers.export(exports, "ELEVATION_2", ()=>ELEVATION_2
);
parcelHelpers.export(exports, "ELEVATION_3", ()=>ELEVATION_3
);
parcelHelpers.export(exports, "ELEVATION_4", ()=>ELEVATION_4
);
parcelHelpers.export(exports, "INTENT_PRIMARY", ()=>INTENT_PRIMARY
);
parcelHelpers.export(exports, "INTENT_SUCCESS", ()=>INTENT_SUCCESS
);
parcelHelpers.export(exports, "INTENT_WARNING", ()=>INTENT_WARNING
);
parcelHelpers.export(exports, "INTENT_DANGER", ()=>INTENT_DANGER
);
parcelHelpers.export(exports, "FOCUS_DISABLED", ()=>FOCUS_DISABLED
);
parcelHelpers.export(exports, "FOCUS_STYLE_MANAGER_IGNORE", ()=>FOCUS_STYLE_MANAGER_IGNORE
);
parcelHelpers.export(exports, "UI_TEXT", ()=>UI_TEXT
);
parcelHelpers.export(exports, "RUNNING_TEXT", ()=>RUNNING_TEXT
);
parcelHelpers.export(exports, "MONOSPACE_TEXT", ()=>MONOSPACE_TEXT
);
parcelHelpers.export(exports, "TEXT_LARGE", ()=>TEXT_LARGE
);
parcelHelpers.export(exports, "TEXT_SMALL", ()=>TEXT_SMALL
);
parcelHelpers.export(exports, "TEXT_MUTED", ()=>TEXT_MUTED
);
parcelHelpers.export(exports, "TEXT_DISABLED", ()=>TEXT_DISABLED
);
parcelHelpers.export(exports, "TEXT_OVERFLOW_ELLIPSIS", ()=>TEXT_OVERFLOW_ELLIPSIS
);
parcelHelpers.export(exports, "BLOCKQUOTE", ()=>BLOCKQUOTE
);
parcelHelpers.export(exports, "CODE", ()=>CODE
);
parcelHelpers.export(exports, "CODE_BLOCK", ()=>CODE_BLOCK
);
parcelHelpers.export(exports, "HEADING", ()=>HEADING
);
parcelHelpers.export(exports, "LIST", ()=>LIST
);
parcelHelpers.export(exports, "LIST_UNSTYLED", ()=>LIST_UNSTYLED
);
parcelHelpers.export(exports, "RTL", ()=>RTL
);
parcelHelpers.export(exports, "ALERT", ()=>ALERT
);
parcelHelpers.export(exports, "ALERT_BODY", ()=>ALERT_BODY
);
parcelHelpers.export(exports, "ALERT_CONTENTS", ()=>ALERT_CONTENTS
);
parcelHelpers.export(exports, "ALERT_FOOTER", ()=>ALERT_FOOTER
);
parcelHelpers.export(exports, "BREADCRUMB", ()=>BREADCRUMB
);
parcelHelpers.export(exports, "BREADCRUMB_CURRENT", ()=>BREADCRUMB_CURRENT
);
parcelHelpers.export(exports, "BREADCRUMBS", ()=>BREADCRUMBS
);
parcelHelpers.export(exports, "BREADCRUMBS_COLLAPSED", ()=>BREADCRUMBS_COLLAPSED
);
parcelHelpers.export(exports, "BUTTON", ()=>BUTTON
);
parcelHelpers.export(exports, "BUTTON_GROUP", ()=>BUTTON_GROUP
);
parcelHelpers.export(exports, "BUTTON_SPINNER", ()=>BUTTON_SPINNER
);
parcelHelpers.export(exports, "BUTTON_TEXT", ()=>BUTTON_TEXT
);
parcelHelpers.export(exports, "CALLOUT", ()=>CALLOUT
);
parcelHelpers.export(exports, "CALLOUT_ICON", ()=>CALLOUT_ICON
);
parcelHelpers.export(exports, "CARD", ()=>CARD
);
parcelHelpers.export(exports, "COLLAPSE", ()=>COLLAPSE
);
parcelHelpers.export(exports, "COLLAPSE_BODY", ()=>COLLAPSE_BODY
);
parcelHelpers.export(exports, "COLLAPSIBLE_LIST", ()=>COLLAPSIBLE_LIST
);
parcelHelpers.export(exports, "CONTEXT_MENU", ()=>CONTEXT_MENU
);
parcelHelpers.export(exports, "CONTEXT_MENU_POPOVER_TARGET", ()=>CONTEXT_MENU_POPOVER_TARGET
);
parcelHelpers.export(exports, "CONTROL_GROUP", ()=>CONTROL_GROUP
);
parcelHelpers.export(exports, "DIALOG", ()=>DIALOG
);
parcelHelpers.export(exports, "DIALOG_CONTAINER", ()=>DIALOG_CONTAINER
);
parcelHelpers.export(exports, "DIALOG_BODY", ()=>DIALOG_BODY
);
parcelHelpers.export(exports, "DIALOG_CLOSE_BUTTON", ()=>DIALOG_CLOSE_BUTTON
);
parcelHelpers.export(exports, "DIALOG_FOOTER", ()=>DIALOG_FOOTER
);
parcelHelpers.export(exports, "DIALOG_FOOTER_ACTIONS", ()=>DIALOG_FOOTER_ACTIONS
);
parcelHelpers.export(exports, "DIALOG_HEADER", ()=>DIALOG_HEADER
);
parcelHelpers.export(exports, "DIALOG_STEP", ()=>DIALOG_STEP
);
parcelHelpers.export(exports, "DIALOG_STEP_CONTAINER", ()=>DIALOG_STEP_CONTAINER
);
parcelHelpers.export(exports, "DIALOG_STEP_TITLE", ()=>DIALOG_STEP_TITLE
);
parcelHelpers.export(exports, "DIALOG_STEP_ICON", ()=>DIALOG_STEP_ICON
);
parcelHelpers.export(exports, "DIALOG_STEP_VIEWED", ()=>DIALOG_STEP_VIEWED
);
parcelHelpers.export(exports, "DIVIDER", ()=>DIVIDER
);
parcelHelpers.export(exports, "DRAWER", ()=>DRAWER
);
parcelHelpers.export(exports, "DRAWER_BODY", ()=>DRAWER_BODY
);
parcelHelpers.export(exports, "DRAWER_FOOTER", ()=>DRAWER_FOOTER
);
parcelHelpers.export(exports, "DRAWER_HEADER", ()=>DRAWER_HEADER
);
parcelHelpers.export(exports, "EDITABLE_TEXT", ()=>EDITABLE_TEXT
);
parcelHelpers.export(exports, "EDITABLE_TEXT_CONTENT", ()=>EDITABLE_TEXT_CONTENT
);
parcelHelpers.export(exports, "EDITABLE_TEXT_EDITING", ()=>EDITABLE_TEXT_EDITING
);
parcelHelpers.export(exports, "EDITABLE_TEXT_INPUT", ()=>EDITABLE_TEXT_INPUT
);
parcelHelpers.export(exports, "EDITABLE_TEXT_PLACEHOLDER", ()=>EDITABLE_TEXT_PLACEHOLDER
);
parcelHelpers.export(exports, "FLEX_EXPANDER", ()=>FLEX_EXPANDER
);
parcelHelpers.export(exports, "HTML_SELECT", ()=>HTML_SELECT
);
parcelHelpers.export(exports, "SELECT", ()=>SELECT
);
parcelHelpers.export(exports, "HTML_TABLE", ()=>HTML_TABLE
);
parcelHelpers.export(exports, "HTML_TABLE_BORDERED", ()=>HTML_TABLE_BORDERED
);
parcelHelpers.export(exports, "HTML_TABLE_CONDENSED", ()=>HTML_TABLE_CONDENSED
);
parcelHelpers.export(exports, "HTML_TABLE_STRIPED", ()=>HTML_TABLE_STRIPED
);
parcelHelpers.export(exports, "INPUT", ()=>INPUT
);
parcelHelpers.export(exports, "INPUT_GHOST", ()=>INPUT_GHOST
);
parcelHelpers.export(exports, "INPUT_GROUP", ()=>INPUT_GROUP
);
parcelHelpers.export(exports, "INPUT_LEFT_CONTAINER", ()=>INPUT_LEFT_CONTAINER
);
parcelHelpers.export(exports, "INPUT_ACTION", ()=>INPUT_ACTION
);
parcelHelpers.export(exports, "CONTROL", ()=>CONTROL
);
parcelHelpers.export(exports, "CONTROL_INDICATOR", ()=>CONTROL_INDICATOR
);
parcelHelpers.export(exports, "CONTROL_INDICATOR_CHILD", ()=>CONTROL_INDICATOR_CHILD
);
parcelHelpers.export(exports, "CHECKBOX", ()=>CHECKBOX
);
parcelHelpers.export(exports, "RADIO", ()=>RADIO
);
parcelHelpers.export(exports, "SWITCH", ()=>SWITCH
);
parcelHelpers.export(exports, "SWITCH_INNER_TEXT", ()=>SWITCH_INNER_TEXT
);
parcelHelpers.export(exports, "FILE_INPUT", ()=>FILE_INPUT
);
parcelHelpers.export(exports, "FILE_INPUT_HAS_SELECTION", ()=>FILE_INPUT_HAS_SELECTION
);
parcelHelpers.export(exports, "FILE_UPLOAD_INPUT", ()=>FILE_UPLOAD_INPUT
);
parcelHelpers.export(exports, "FILE_UPLOAD_INPUT_CUSTOM_TEXT", ()=>FILE_UPLOAD_INPUT_CUSTOM_TEXT
);
parcelHelpers.export(exports, "KEY", ()=>KEY
);
parcelHelpers.export(exports, "KEY_COMBO", ()=>KEY_COMBO
);
parcelHelpers.export(exports, "MODIFIER_KEY", ()=>MODIFIER_KEY
);
parcelHelpers.export(exports, "HOTKEY", ()=>HOTKEY
);
parcelHelpers.export(exports, "HOTKEY_LABEL", ()=>HOTKEY_LABEL
);
parcelHelpers.export(exports, "HOTKEY_COLUMN", ()=>HOTKEY_COLUMN
);
parcelHelpers.export(exports, "HOTKEY_DIALOG", ()=>HOTKEY_DIALOG
);
parcelHelpers.export(exports, "LABEL", ()=>LABEL
);
parcelHelpers.export(exports, "FORM_GROUP", ()=>FORM_GROUP
);
parcelHelpers.export(exports, "FORM_CONTENT", ()=>FORM_CONTENT
);
parcelHelpers.export(exports, "FORM_HELPER_TEXT", ()=>FORM_HELPER_TEXT
);
parcelHelpers.export(exports, "FORM_GROUP_SUB_LABEL", ()=>FORM_GROUP_SUB_LABEL
);
parcelHelpers.export(exports, "MENU", ()=>MENU
);
parcelHelpers.export(exports, "MENU_ITEM", ()=>MENU_ITEM
);
parcelHelpers.export(exports, "MENU_ITEM_ICON", ()=>MENU_ITEM_ICON
);
parcelHelpers.export(exports, "MENU_ITEM_LABEL", ()=>MENU_ITEM_LABEL
);
parcelHelpers.export(exports, "MENU_SUBMENU", ()=>MENU_SUBMENU
);
parcelHelpers.export(exports, "MENU_SUBMENU_ICON", ()=>MENU_SUBMENU_ICON
);
parcelHelpers.export(exports, "MENU_DIVIDER", ()=>MENU_DIVIDER
);
parcelHelpers.export(exports, "MENU_HEADER", ()=>MENU_HEADER
);
parcelHelpers.export(exports, "MULTISTEP_DIALOG", ()=>MULTISTEP_DIALOG
);
parcelHelpers.export(exports, "MULTISTEP_DIALOG_PANELS", ()=>MULTISTEP_DIALOG_PANELS
);
parcelHelpers.export(exports, "MULTISTEP_DIALOG_LEFT_PANEL", ()=>MULTISTEP_DIALOG_LEFT_PANEL
);
parcelHelpers.export(exports, "MULTISTEP_DIALOG_RIGHT_PANEL", ()=>MULTISTEP_DIALOG_RIGHT_PANEL
);
parcelHelpers.export(exports, "MULTISTEP_DIALOG_FOOTER", ()=>MULTISTEP_DIALOG_FOOTER
);
parcelHelpers.export(exports, "MULTISTEP_DIALOG_NAV_TOP", ()=>MULTISTEP_DIALOG_NAV_TOP
);
parcelHelpers.export(exports, "MULTISTEP_DIALOG_NAV_RIGHT", ()=>MULTISTEP_DIALOG_NAV_RIGHT
);
parcelHelpers.export(exports, "NAVBAR", ()=>NAVBAR
);
parcelHelpers.export(exports, "NAVBAR_GROUP", ()=>NAVBAR_GROUP
);
parcelHelpers.export(exports, "NAVBAR_HEADING", ()=>NAVBAR_HEADING
);
parcelHelpers.export(exports, "NAVBAR_DIVIDER", ()=>NAVBAR_DIVIDER
);
parcelHelpers.export(exports, "NON_IDEAL_STATE", ()=>NON_IDEAL_STATE
);
parcelHelpers.export(exports, "NON_IDEAL_STATE_VISUAL", ()=>NON_IDEAL_STATE_VISUAL
);
parcelHelpers.export(exports, "NUMERIC_INPUT", ()=>NUMERIC_INPUT
);
parcelHelpers.export(exports, "OVERFLOW_LIST", ()=>OVERFLOW_LIST
);
parcelHelpers.export(exports, "OVERFLOW_LIST_SPACER", ()=>OVERFLOW_LIST_SPACER
);
parcelHelpers.export(exports, "OVERLAY", ()=>OVERLAY
);
parcelHelpers.export(exports, "OVERLAY_BACKDROP", ()=>OVERLAY_BACKDROP
);
parcelHelpers.export(exports, "OVERLAY_CONTAINER", ()=>OVERLAY_CONTAINER
);
parcelHelpers.export(exports, "OVERLAY_CONTENT", ()=>OVERLAY_CONTENT
);
parcelHelpers.export(exports, "OVERLAY_INLINE", ()=>OVERLAY_INLINE
);
parcelHelpers.export(exports, "OVERLAY_OPEN", ()=>OVERLAY_OPEN
);
parcelHelpers.export(exports, "OVERLAY_SCROLL_CONTAINER", ()=>OVERLAY_SCROLL_CONTAINER
);
parcelHelpers.export(exports, "OVERLAY_START_FOCUS_TRAP", ()=>OVERLAY_START_FOCUS_TRAP
);
parcelHelpers.export(exports, "OVERLAY_END_FOCUS_TRAP", ()=>OVERLAY_END_FOCUS_TRAP
);
parcelHelpers.export(exports, "PANEL_STACK", ()=>PANEL_STACK
);
parcelHelpers.export(exports, "PANEL_STACK_HEADER", ()=>PANEL_STACK_HEADER
);
parcelHelpers.export(exports, "PANEL_STACK_HEADER_BACK", ()=>PANEL_STACK_HEADER_BACK
);
parcelHelpers.export(exports, "PANEL_STACK_VIEW", ()=>PANEL_STACK_VIEW
);
parcelHelpers.export(exports, "PANEL_STACK2", ()=>PANEL_STACK2
);
parcelHelpers.export(exports, "PANEL_STACK2_HEADER", ()=>PANEL_STACK2_HEADER
);
parcelHelpers.export(exports, "PANEL_STACK2_HEADER_BACK", ()=>PANEL_STACK2_HEADER_BACK
);
parcelHelpers.export(exports, "PANEL_STACK2_VIEW", ()=>PANEL_STACK2_VIEW
);
parcelHelpers.export(exports, "POPOVER", ()=>POPOVER
);
parcelHelpers.export(exports, "POPOVER_ARROW", ()=>POPOVER_ARROW
);
parcelHelpers.export(exports, "POPOVER_BACKDROP", ()=>POPOVER_BACKDROP
);
parcelHelpers.export(exports, "POPOVER_CAPTURING_DISMISS", ()=>POPOVER_CAPTURING_DISMISS
);
parcelHelpers.export(exports, "POPOVER_CONTENT", ()=>POPOVER_CONTENT
);
parcelHelpers.export(exports, "POPOVER_CONTENT_SIZING", ()=>POPOVER_CONTENT_SIZING
);
parcelHelpers.export(exports, "POPOVER_DISMISS", ()=>POPOVER_DISMISS
);
parcelHelpers.export(exports, "POPOVER_DISMISS_OVERRIDE", ()=>POPOVER_DISMISS_OVERRIDE
);
parcelHelpers.export(exports, "POPOVER_OPEN", ()=>POPOVER_OPEN
);
parcelHelpers.export(exports, "POPOVER_OUT_OF_BOUNDARIES", ()=>POPOVER_OUT_OF_BOUNDARIES
);
parcelHelpers.export(exports, "POPOVER_TARGET", ()=>POPOVER_TARGET
);
parcelHelpers.export(exports, "POPOVER_WRAPPER", ()=>POPOVER_WRAPPER
);
parcelHelpers.export(exports, "TRANSITION_CONTAINER", ()=>TRANSITION_CONTAINER
);
parcelHelpers.export(exports, "PROGRESS_BAR", ()=>PROGRESS_BAR
);
parcelHelpers.export(exports, "PROGRESS_METER", ()=>PROGRESS_METER
);
parcelHelpers.export(exports, "PROGRESS_NO_STRIPES", ()=>PROGRESS_NO_STRIPES
);
parcelHelpers.export(exports, "PROGRESS_NO_ANIMATION", ()=>PROGRESS_NO_ANIMATION
);
parcelHelpers.export(exports, "PORTAL", ()=>PORTAL
);
parcelHelpers.export(exports, "SKELETON", ()=>SKELETON
);
parcelHelpers.export(exports, "SLIDER", ()=>SLIDER
);
parcelHelpers.export(exports, "SLIDER_AXIS", ()=>SLIDER_AXIS
);
parcelHelpers.export(exports, "SLIDER_HANDLE", ()=>SLIDER_HANDLE
);
parcelHelpers.export(exports, "SLIDER_LABEL", ()=>SLIDER_LABEL
);
parcelHelpers.export(exports, "SLIDER_TRACK", ()=>SLIDER_TRACK
);
parcelHelpers.export(exports, "SLIDER_PROGRESS", ()=>SLIDER_PROGRESS
);
parcelHelpers.export(exports, "START", ()=>START
);
parcelHelpers.export(exports, "END", ()=>END
);
parcelHelpers.export(exports, "SPINNER", ()=>SPINNER
);
parcelHelpers.export(exports, "SPINNER_ANIMATION", ()=>SPINNER_ANIMATION
);
parcelHelpers.export(exports, "SPINNER_HEAD", ()=>SPINNER_HEAD
);
parcelHelpers.export(exports, "SPINNER_NO_SPIN", ()=>SPINNER_NO_SPIN
);
parcelHelpers.export(exports, "SPINNER_TRACK", ()=>SPINNER_TRACK
);
parcelHelpers.export(exports, "TAB", ()=>TAB
);
parcelHelpers.export(exports, "TAB_INDICATOR", ()=>TAB_INDICATOR
);
parcelHelpers.export(exports, "TAB_INDICATOR_WRAPPER", ()=>TAB_INDICATOR_WRAPPER
);
parcelHelpers.export(exports, "TAB_LIST", ()=>TAB_LIST
);
parcelHelpers.export(exports, "TAB_PANEL", ()=>TAB_PANEL
);
parcelHelpers.export(exports, "TABS", ()=>TABS
);
parcelHelpers.export(exports, "TAG", ()=>TAG
);
parcelHelpers.export(exports, "TAG_REMOVE", ()=>TAG_REMOVE
);
parcelHelpers.export(exports, "TAG_INPUT", ()=>TAG_INPUT
);
parcelHelpers.export(exports, "TAG_INPUT_ICON", ()=>TAG_INPUT_ICON
);
parcelHelpers.export(exports, "TAG_INPUT_VALUES", ()=>TAG_INPUT_VALUES
);
parcelHelpers.export(exports, "TOAST", ()=>TOAST
);
parcelHelpers.export(exports, "TOAST_CONTAINER", ()=>TOAST_CONTAINER
);
parcelHelpers.export(exports, "TOAST_MESSAGE", ()=>TOAST_MESSAGE
);
parcelHelpers.export(exports, "TOOLTIP", ()=>TOOLTIP
);
parcelHelpers.export(exports, "TOOLTIP_INDICATOR", ()=>TOOLTIP_INDICATOR
);
parcelHelpers.export(exports, "TREE", ()=>TREE
);
parcelHelpers.export(exports, "TREE_NODE", ()=>TREE_NODE
);
parcelHelpers.export(exports, "TREE_NODE_CARET", ()=>TREE_NODE_CARET
);
parcelHelpers.export(exports, "TREE_NODE_CARET_CLOSED", ()=>TREE_NODE_CARET_CLOSED
);
parcelHelpers.export(exports, "TREE_NODE_CARET_NONE", ()=>TREE_NODE_CARET_NONE
);
parcelHelpers.export(exports, "TREE_NODE_CARET_OPEN", ()=>TREE_NODE_CARET_OPEN
);
parcelHelpers.export(exports, "TREE_NODE_CONTENT", ()=>TREE_NODE_CONTENT
);
parcelHelpers.export(exports, "TREE_NODE_EXPANDED", ()=>TREE_NODE_EXPANDED
);
parcelHelpers.export(exports, "TREE_NODE_ICON", ()=>TREE_NODE_ICON
);
parcelHelpers.export(exports, "TREE_NODE_LABEL", ()=>TREE_NODE_LABEL
);
parcelHelpers.export(exports, "TREE_NODE_LIST", ()=>TREE_NODE_LIST
);
parcelHelpers.export(exports, "TREE_NODE_SECONDARY_LABEL", ()=>TREE_NODE_SECONDARY_LABEL
);
parcelHelpers.export(exports, "TREE_NODE_SELECTED", ()=>TREE_NODE_SELECTED
);
parcelHelpers.export(exports, "TREE_ROOT", ()=>TREE_ROOT
);
parcelHelpers.export(exports, "ICON", ()=>ICON
);
parcelHelpers.export(exports, "ICON_STANDARD", ()=>ICON_STANDARD
);
parcelHelpers.export(exports, "ICON_LARGE", ()=>ICON_LARGE
);
/**
 * Returns the namespace prefix for all Blueprint CSS classes.
 * Customize this namespace at build time with the `process.env.BLUEPRINT_NAMESPACE` environment variable.
 */ parcelHelpers.export(exports, "getClassNamespace", ()=>getClassNamespace
);
/** Return CSS class for alignment. */ parcelHelpers.export(exports, "alignmentClass", ()=>alignmentClass
);
parcelHelpers.export(exports, "elevationClass", ()=>elevationClass
);
parcelHelpers.export(exports, "iconClass", ()=>iconClass
);
parcelHelpers.export(exports, "intentClass", ()=>intentClass
);
parcelHelpers.export(exports, "positionClass", ()=>positionClass
);
var _alignment = require("./alignment");
var _elevation = require("./elevation");
var _intent = require("./intent");
var _position = require("./position");
var process = require("process");
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _a, _b, _c, _d;
var NS = "bp4";
if (typeof process !== "undefined") NS = (_d = (_b = (_a = {}, _a === void 0) ? void 0 : _a.BLUEPRINT_NAMESPACE) !== null && _b !== void 0 ? _b : (_c = {}, _c === void 0) ? void 0 : _c.REACT_APP_BLUEPRINT_NAMESPACE) !== null && _d !== void 0 ? _d : NS;
var ACTIVE = "".concat(NS, "-active");
var ALIGN_LEFT = "".concat(NS, "-align-left");
var ALIGN_RIGHT = "".concat(NS, "-align-right");
var DARK = "".concat(NS, "-dark");
var DISABLED = "".concat(NS, "-disabled");
var FILL = "".concat(NS, "-fill");
var FIXED = "".concat(NS, "-fixed");
var FIXED_TOP = "".concat(NS, "-fixed-top");
var INLINE = "".concat(NS, "-inline");
var INTERACTIVE = "".concat(NS, "-interactive");
var LARGE = "".concat(NS, "-large");
var LOADING = "".concat(NS, "-loading");
var MINIMAL = "".concat(NS, "-minimal");
var OUTLINED = "".concat(NS, "-outlined");
var MULTILINE = "".concat(NS, "-multiline");
var ROUND = "".concat(NS, "-round");
var SELECTED = "".concat(NS, "-selected");
var SMALL = "".concat(NS, "-small");
var VERTICAL = "".concat(NS, "-vertical");
var POSITION_TOP = positionClass(_position.Position.TOP);
var POSITION_BOTTOM = positionClass(_position.Position.BOTTOM);
var POSITION_LEFT = positionClass(_position.Position.LEFT);
var POSITION_RIGHT = positionClass(_position.Position.RIGHT);
var ELEVATION_0 = elevationClass(_elevation.Elevation.ZERO);
var ELEVATION_1 = elevationClass(_elevation.Elevation.ONE);
var ELEVATION_2 = elevationClass(_elevation.Elevation.TWO);
var ELEVATION_3 = elevationClass(_elevation.Elevation.THREE);
var ELEVATION_4 = elevationClass(_elevation.Elevation.FOUR);
var INTENT_PRIMARY = intentClass(_intent.Intent.PRIMARY);
var INTENT_SUCCESS = intentClass(_intent.Intent.SUCCESS);
var INTENT_WARNING = intentClass(_intent.Intent.WARNING);
var INTENT_DANGER = intentClass(_intent.Intent.DANGER);
var FOCUS_DISABLED = "".concat(NS, "-focus-disabled");
var FOCUS_STYLE_MANAGER_IGNORE = "".concat(NS, "-focus-style-manager-ignore");
var UI_TEXT = "".concat(NS, "-ui-text");
var RUNNING_TEXT = "".concat(NS, "-running-text");
var MONOSPACE_TEXT = "".concat(NS, "-monospace-text");
var TEXT_LARGE = "".concat(NS, "-text-large");
var TEXT_SMALL = "".concat(NS, "-text-small");
var TEXT_MUTED = "".concat(NS, "-text-muted");
var TEXT_DISABLED = "".concat(NS, "-text-disabled");
var TEXT_OVERFLOW_ELLIPSIS = "".concat(NS, "-text-overflow-ellipsis");
var BLOCKQUOTE = "".concat(NS, "-blockquote");
var CODE = "".concat(NS, "-code");
var CODE_BLOCK = "".concat(NS, "-code-block");
var HEADING = "".concat(NS, "-heading");
var LIST = "".concat(NS, "-list");
var LIST_UNSTYLED = "".concat(NS, "-list-unstyled");
var RTL = "".concat(NS, "-rtl");
var ALERT = "".concat(NS, "-alert");
var ALERT_BODY = "".concat(ALERT, "-body");
var ALERT_CONTENTS = "".concat(ALERT, "-contents");
var ALERT_FOOTER = "".concat(ALERT, "-footer");
var BREADCRUMB = "".concat(NS, "-breadcrumb");
var BREADCRUMB_CURRENT = "".concat(BREADCRUMB, "-current");
var BREADCRUMBS = "".concat(BREADCRUMB, "s");
var BREADCRUMBS_COLLAPSED = "".concat(BREADCRUMB, "s-collapsed");
var BUTTON = "".concat(NS, "-button");
var BUTTON_GROUP = "".concat(BUTTON, "-group");
var BUTTON_SPINNER = "".concat(BUTTON, "-spinner");
var BUTTON_TEXT = "".concat(BUTTON, "-text");
var CALLOUT = "".concat(NS, "-callout");
var CALLOUT_ICON = "".concat(CALLOUT, "-icon");
var CARD = "".concat(NS, "-card");
var COLLAPSE = "".concat(NS, "-collapse");
var COLLAPSE_BODY = "".concat(COLLAPSE, "-body");
var COLLAPSIBLE_LIST = "".concat(NS, "-collapse-list");
var CONTEXT_MENU = "".concat(NS, "-context-menu");
var CONTEXT_MENU_POPOVER_TARGET = "".concat(CONTEXT_MENU, "-popover-target");
var CONTROL_GROUP = "".concat(NS, "-control-group");
var DIALOG = "".concat(NS, "-dialog");
var DIALOG_CONTAINER = "".concat(DIALOG, "-container");
var DIALOG_BODY = "".concat(DIALOG, "-body");
var DIALOG_CLOSE_BUTTON = "".concat(DIALOG, "-close-button");
var DIALOG_FOOTER = "".concat(DIALOG, "-footer");
var DIALOG_FOOTER_ACTIONS = "".concat(DIALOG, "-footer-actions");
var DIALOG_HEADER = "".concat(DIALOG, "-header");
var DIALOG_STEP = "".concat(NS, "-dialog-step");
var DIALOG_STEP_CONTAINER = "".concat(DIALOG_STEP, "-container");
var DIALOG_STEP_TITLE = "".concat(DIALOG_STEP, "-title");
var DIALOG_STEP_ICON = "".concat(DIALOG_STEP, "-icon");
var DIALOG_STEP_VIEWED = "".concat(DIALOG_STEP, "-viewed");
var DIVIDER = "".concat(NS, "-divider");
var DRAWER = "".concat(NS, "-drawer");
var DRAWER_BODY = "".concat(DRAWER, "-body");
var DRAWER_FOOTER = "".concat(DRAWER, "-footer");
var DRAWER_HEADER = "".concat(DRAWER, "-header");
var EDITABLE_TEXT = "".concat(NS, "-editable-text");
var EDITABLE_TEXT_CONTENT = "".concat(EDITABLE_TEXT, "-content");
var EDITABLE_TEXT_EDITING = "".concat(EDITABLE_TEXT, "-editing");
var EDITABLE_TEXT_INPUT = "".concat(EDITABLE_TEXT, "-input");
var EDITABLE_TEXT_PLACEHOLDER = "".concat(EDITABLE_TEXT, "-placeholder");
var FLEX_EXPANDER = "".concat(NS, "-flex-expander");
var HTML_SELECT = "".concat(NS, "-html-select");
var SELECT = "".concat(NS, "-select");
var HTML_TABLE = "".concat(NS, "-html-table");
var HTML_TABLE_BORDERED = "".concat(HTML_TABLE, "-bordered");
var HTML_TABLE_CONDENSED = "".concat(HTML_TABLE, "-condensed");
var HTML_TABLE_STRIPED = "".concat(HTML_TABLE, "-striped");
var INPUT = "".concat(NS, "-input");
var INPUT_GHOST = "".concat(INPUT, "-ghost");
var INPUT_GROUP = "".concat(INPUT, "-group");
var INPUT_LEFT_CONTAINER = "".concat(INPUT, "-left-container");
var INPUT_ACTION = "".concat(INPUT, "-action");
var CONTROL = "".concat(NS, "-control");
var CONTROL_INDICATOR = "".concat(CONTROL, "-indicator");
var CONTROL_INDICATOR_CHILD = "".concat(CONTROL_INDICATOR, "-child");
var CHECKBOX = "".concat(NS, "-checkbox");
var RADIO = "".concat(NS, "-radio");
var SWITCH = "".concat(NS, "-switch");
var SWITCH_INNER_TEXT = "".concat(SWITCH, "-inner-text");
var FILE_INPUT = "".concat(NS, "-file-input");
var FILE_INPUT_HAS_SELECTION = "".concat(NS, "-file-input-has-selection");
var FILE_UPLOAD_INPUT = "".concat(NS, "-file-upload-input");
var FILE_UPLOAD_INPUT_CUSTOM_TEXT = "".concat(NS, "-file-upload-input-custom-text");
var KEY = "".concat(NS, "-key");
var KEY_COMBO = "".concat(KEY, "-combo");
var MODIFIER_KEY = "".concat(NS, "-modifier-key");
var HOTKEY = "".concat(NS, "-hotkey");
var HOTKEY_LABEL = "".concat(HOTKEY, "-label");
var HOTKEY_COLUMN = "".concat(HOTKEY, "-column");
var HOTKEY_DIALOG = "".concat(HOTKEY, "-dialog");
var LABEL = "".concat(NS, "-label");
var FORM_GROUP = "".concat(NS, "-form-group");
var FORM_CONTENT = "".concat(NS, "-form-content");
var FORM_HELPER_TEXT = "".concat(NS, "-form-helper-text");
var FORM_GROUP_SUB_LABEL = "".concat(NS, "-form-group-sub-label");
var MENU = "".concat(NS, "-menu");
var MENU_ITEM = "".concat(MENU, "-item");
var MENU_ITEM_ICON = "".concat(MENU_ITEM, "-icon");
var MENU_ITEM_LABEL = "".concat(MENU_ITEM, "-label");
var MENU_SUBMENU = "".concat(NS, "-submenu");
var MENU_SUBMENU_ICON = "".concat(MENU_SUBMENU, "-icon");
var MENU_DIVIDER = "".concat(MENU, "-divider");
var MENU_HEADER = "".concat(MENU, "-header");
var MULTISTEP_DIALOG = "".concat(NS, "-multistep-dialog");
var MULTISTEP_DIALOG_PANELS = "".concat(MULTISTEP_DIALOG, "-panels");
var MULTISTEP_DIALOG_LEFT_PANEL = "".concat(MULTISTEP_DIALOG, "-left-panel");
var MULTISTEP_DIALOG_RIGHT_PANEL = "".concat(MULTISTEP_DIALOG, "-right-panel");
var MULTISTEP_DIALOG_FOOTER = "".concat(MULTISTEP_DIALOG, "-footer");
var MULTISTEP_DIALOG_NAV_TOP = "".concat(MULTISTEP_DIALOG, "-nav-top");
var MULTISTEP_DIALOG_NAV_RIGHT = "".concat(MULTISTEP_DIALOG, "-nav-right");
var NAVBAR = "".concat(NS, "-navbar");
var NAVBAR_GROUP = "".concat(NAVBAR, "-group");
var NAVBAR_HEADING = "".concat(NAVBAR, "-heading");
var NAVBAR_DIVIDER = "".concat(NAVBAR, "-divider");
var NON_IDEAL_STATE = "".concat(NS, "-non-ideal-state");
var NON_IDEAL_STATE_VISUAL = "".concat(NON_IDEAL_STATE, "-visual");
var NUMERIC_INPUT = "".concat(NS, "-numeric-input");
var OVERFLOW_LIST = "".concat(NS, "-overflow-list");
var OVERFLOW_LIST_SPACER = "".concat(OVERFLOW_LIST, "-spacer");
var OVERLAY = "".concat(NS, "-overlay");
var OVERLAY_BACKDROP = "".concat(OVERLAY, "-backdrop");
var OVERLAY_CONTAINER = "".concat(OVERLAY, "-container");
var OVERLAY_CONTENT = "".concat(OVERLAY, "-content");
var OVERLAY_INLINE = "".concat(OVERLAY, "-inline");
var OVERLAY_OPEN = "".concat(OVERLAY, "-open");
var OVERLAY_SCROLL_CONTAINER = "".concat(OVERLAY, "-scroll-container");
var OVERLAY_START_FOCUS_TRAP = "".concat(OVERLAY, "-start-focus-trap");
var OVERLAY_END_FOCUS_TRAP = "".concat(OVERLAY, "-end-focus-trap");
var PANEL_STACK = "".concat(NS, "-panel-stack");
var PANEL_STACK_HEADER = "".concat(PANEL_STACK, "-header");
var PANEL_STACK_HEADER_BACK = "".concat(PANEL_STACK, "-header-back");
var PANEL_STACK_VIEW = "".concat(PANEL_STACK, "-view");
var PANEL_STACK2 = "".concat(NS, "-panel-stack2");
var PANEL_STACK2_HEADER = "".concat(PANEL_STACK, "-header");
var PANEL_STACK2_HEADER_BACK = "".concat(PANEL_STACK, "-header-back");
var PANEL_STACK2_VIEW = "".concat(PANEL_STACK, "-view");
var POPOVER = "".concat(NS, "-popover");
var POPOVER_ARROW = "".concat(POPOVER, "-arrow");
var POPOVER_BACKDROP = "".concat(POPOVER, "-backdrop");
var POPOVER_CAPTURING_DISMISS = "".concat(POPOVER, "-capturing-dismiss");
var POPOVER_CONTENT = "".concat(POPOVER, "-content");
var POPOVER_CONTENT_SIZING = "".concat(POPOVER_CONTENT, "-sizing");
var POPOVER_DISMISS = "".concat(POPOVER, "-dismiss");
var POPOVER_DISMISS_OVERRIDE = "".concat(POPOVER_DISMISS, "-override");
var POPOVER_OPEN = "".concat(POPOVER, "-open");
var POPOVER_OUT_OF_BOUNDARIES = "".concat(POPOVER, "-out-of-boundaries");
var POPOVER_TARGET = "".concat(POPOVER, "-target");
var POPOVER_WRAPPER = "".concat(POPOVER, "-wrapper");
var TRANSITION_CONTAINER = "".concat(NS, "-transition-container");
var PROGRESS_BAR = "".concat(NS, "-progress-bar");
var PROGRESS_METER = "".concat(NS, "-progress-meter");
var PROGRESS_NO_STRIPES = "".concat(NS, "-no-stripes");
var PROGRESS_NO_ANIMATION = "".concat(NS, "-no-animation");
var PORTAL = "".concat(NS, "-portal");
var SKELETON = "".concat(NS, "-skeleton");
var SLIDER = "".concat(NS, "-slider");
var SLIDER_AXIS = "".concat(SLIDER, "-axis");
var SLIDER_HANDLE = "".concat(SLIDER, "-handle");
var SLIDER_LABEL = "".concat(SLIDER, "-label");
var SLIDER_TRACK = "".concat(SLIDER, "-track");
var SLIDER_PROGRESS = "".concat(SLIDER, "-progress");
var START = "".concat(NS, "-start");
var END = "".concat(NS, "-end");
var SPINNER = "".concat(NS, "-spinner");
var SPINNER_ANIMATION = "".concat(SPINNER, "-animation");
var SPINNER_HEAD = "".concat(SPINNER, "-head");
var SPINNER_NO_SPIN = "".concat(NS, "-no-spin");
var SPINNER_TRACK = "".concat(SPINNER, "-track");
var TAB = "".concat(NS, "-tab");
var TAB_INDICATOR = "".concat(TAB, "-indicator");
var TAB_INDICATOR_WRAPPER = "".concat(TAB_INDICATOR, "-wrapper");
var TAB_LIST = "".concat(TAB, "-list");
var TAB_PANEL = "".concat(TAB, "-panel");
var TABS = "".concat(TAB, "s");
var TAG = "".concat(NS, "-tag");
var TAG_REMOVE = "".concat(TAG, "-remove");
var TAG_INPUT = "".concat(NS, "-tag-input");
var TAG_INPUT_ICON = "".concat(TAG_INPUT, "-icon");
var TAG_INPUT_VALUES = "".concat(TAG_INPUT, "-values");
var TOAST = "".concat(NS, "-toast");
var TOAST_CONTAINER = "".concat(TOAST, "-container");
var TOAST_MESSAGE = "".concat(TOAST, "-message");
var TOOLTIP = "".concat(NS, "-tooltip");
var TOOLTIP_INDICATOR = "".concat(TOOLTIP, "-indicator");
var TREE = "".concat(NS, "-tree");
var TREE_NODE = "".concat(NS, "-tree-node");
var TREE_NODE_CARET = "".concat(TREE_NODE, "-caret");
var TREE_NODE_CARET_CLOSED = "".concat(TREE_NODE_CARET, "-closed");
var TREE_NODE_CARET_NONE = "".concat(TREE_NODE_CARET, "-none");
var TREE_NODE_CARET_OPEN = "".concat(TREE_NODE_CARET, "-open");
var TREE_NODE_CONTENT = "".concat(TREE_NODE, "-content");
var TREE_NODE_EXPANDED = "".concat(TREE_NODE, "-expanded");
var TREE_NODE_ICON = "".concat(TREE_NODE, "-icon");
var TREE_NODE_LABEL = "".concat(TREE_NODE, "-label");
var TREE_NODE_LIST = "".concat(TREE_NODE, "-list");
var TREE_NODE_SECONDARY_LABEL = "".concat(TREE_NODE, "-secondary-label");
var TREE_NODE_SELECTED = "".concat(TREE_NODE, "-selected");
var TREE_ROOT = "".concat(NS, "-tree-root");
var ICON = "".concat(NS, "-icon");
var ICON_STANDARD = "".concat(ICON, "-standard");
var ICON_LARGE = "".concat(ICON, "-large");
function getClassNamespace() {
    return NS;
}
function alignmentClass(alignment) {
    switch(alignment){
        case _alignment.Alignment.LEFT:
            return ALIGN_LEFT;
        case _alignment.Alignment.RIGHT:
            return ALIGN_RIGHT;
        default:
            return undefined;
    }
}
function elevationClass(elevation) {
    if (elevation === undefined) return undefined;
    return "".concat(NS, "-elevation-").concat(elevation);
}
function iconClass(iconName) {
    if (iconName == null) return undefined;
    return iconName.indexOf("".concat(NS, "-icon-")) === 0 ? iconName : "".concat(NS, "-icon-").concat(iconName);
}
function intentClass(intent) {
    if (intent == null || intent === _intent.Intent.NONE) return undefined;
    return "".concat(NS, "-intent-").concat(intent.toLowerCase());
}
function positionClass(position) {
    if (position === undefined) return undefined;
    return "".concat(NS, "-position-").concat(position);
}

},{"./alignment":"70kQX","./elevation":"7oS9j","./intent":"Rg9JL","./position":"gwedn","process":"d5jf4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"70kQX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Alignment", ()=>Alignment
);
var Alignment = {
    CENTER: "center",
    LEFT: "left",
    RIGHT: "right"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkKU3":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, '__esModule', {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"7oS9j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Elevation", ()=>Elevation
);
var Elevation = {
    ZERO: 0,
    ONE: 1,
    TWO: 2,
    THREE: 3,
    FOUR: 4
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Rg9JL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Intent", ()=>Intent
);
var Intent = {
    NONE: "none",
    PRIMARY: "primary",
    SUCCESS: "success",
    WARNING: "warning",
    DANGER: "danger"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gwedn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Position", ()=>Position
);
parcelHelpers.export(exports, "isPositionHorizontal", ()=>isPositionHorizontal
);
parcelHelpers.export(exports, "isPositionVertical", ()=>isPositionVertical
);
parcelHelpers.export(exports, "getPositionIgnoreAngles", ()=>getPositionIgnoreAngles
);
var Position = {
    BOTTOM: "bottom",
    BOTTOM_LEFT: "bottom-left",
    BOTTOM_RIGHT: "bottom-right",
    LEFT: "left",
    LEFT_BOTTOM: "left-bottom",
    LEFT_TOP: "left-top",
    RIGHT: "right",
    RIGHT_BOTTOM: "right-bottom",
    RIGHT_TOP: "right-top",
    TOP: "top",
    TOP_LEFT: "top-left",
    TOP_RIGHT: "top-right"
};
function isPositionHorizontal(position) {
    /* istanbul ignore next */ return position === Position.TOP || position === Position.TOP_LEFT || position === Position.TOP_RIGHT || position === Position.BOTTOM || position === Position.BOTTOM_LEFT || position === Position.BOTTOM_RIGHT;
}
function isPositionVertical(position) {
    /* istanbul ignore next */ return position === Position.LEFT || position === Position.LEFT_TOP || position === Position.LEFT_BOTTOM || position === Position.RIGHT || position === Position.RIGHT_TOP || position === Position.RIGHT_BOTTOM;
}
function getPositionIgnoreAngles(position) {
    if (position === Position.TOP || position === Position.TOP_LEFT || position === Position.TOP_RIGHT) return Position.TOP;
    else if (position === Position.BOTTOM || position === Position.BOTTOM_LEFT || position === Position.BOTTOM_RIGHT) return Position.BOTTOM;
    else if (position === Position.LEFT || position === Position.LEFT_TOP || position === Position.LEFT_BOTTOM) return Position.LEFT;
    else return Position.RIGHT;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d5jf4":[function(require,module,exports) {
// shim for using process in browser
var process = module.exports = {};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;
var cachedClearTimeout;
function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
}
(function() {
    try {
        if (typeof setTimeout === 'function') cachedSetTimeout = setTimeout;
        else cachedSetTimeout = defaultSetTimout;
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') cachedClearTimeout = clearTimeout;
        else cachedClearTimeout = defaultClearTimeout;
    } catch (e1) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;
function cleanUpNextTick() {
    if (!draining || !currentQueue) return;
    draining = false;
    if (currentQueue.length) queue = currentQueue.concat(queue);
    else queueIndex = -1;
    if (queue.length) drainQueue();
}
function drainQueue() {
    if (draining) return;
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while(len){
        currentQueue = queue;
        queue = [];
        while(++queueIndex < len)if (currentQueue) currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}
process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) runTimeout(drainQueue);
};
// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};
function noop() {}
process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;
process.listeners = function(name) {
    return [];
};
process.binding = function(name) {
    throw new Error('process.binding is not supported');
};
process.cwd = function() {
    return '/';
};
process.chdir = function(dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() {
    return 0;
};

},{}],"dzAjT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "InteractionModeEngine", ()=>InteractionModeEngine
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /* istanbul ignore next */ /**
 * A nifty little class that maintains event handlers to add a class to the container element
 * when entering "mouse mode" (on a `mousedown` event) and remove it when entering "keyboard mode"
 * (on a `tab` key `keydown` event).
 */ var InteractionModeEngine = /** @class */ function() {
    function InteractionModeEngine1(container, className) {
        var _this = this;
        this.container = container;
        this.className = className;
        this.isRunning = false;
        this.handleKeyDown = function(e) {
            if (e.key === "Tab") {
                _this.reset();
                _this.container.addEventListener("mousedown", _this.handleMouseDown);
            }
        };
        this.handleMouseDown = function() {
            _this.reset();
            _this.container.classList.add(_this.className);
            _this.container.addEventListener("keydown", _this.handleKeyDown);
        };
    }
    /** Returns whether the engine is currently running. */ InteractionModeEngine1.prototype.isActive = function() {
        return this.isRunning;
    };
    /** Enable behavior which applies the given className when in mouse mode. */ InteractionModeEngine1.prototype.start = function() {
        this.container.addEventListener("mousedown", this.handleMouseDown);
        this.isRunning = true;
    };
    /** Disable interaction mode behavior and remove className from container. */ InteractionModeEngine1.prototype.stop = function() {
        this.reset();
        this.isRunning = false;
    };
    InteractionModeEngine1.prototype.reset = function() {
        this.container.classList.remove(this.className);
        this.container.removeEventListener("keydown", this.handleKeyDown);
        this.container.removeEventListener("mousedown", this.handleMouseDown);
    };
    return InteractionModeEngine1;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6BNPY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Classes", ()=>_classes
) // NOTE: Errors is not exported in public API
;
parcelHelpers.export(exports, "Keys", ()=>_keys
);
parcelHelpers.export(exports, "Utils", ()=>_utils
);
parcelHelpers.export(exports, "Colors", ()=>_colors.Colors
);
var _colors = require("@blueprintjs/colors");
var _classes = require("./classes");
var _keys = require("./keys");
var _utils = require("./utils");
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _abstractComponent = require("./abstractComponent");
parcelHelpers.exportAll(_abstractComponent, exports);
var _abstractComponent2 = require("./abstractComponent2");
parcelHelpers.exportAll(_abstractComponent2, exports);
var _abstractPureComponent = require("./abstractPureComponent");
parcelHelpers.exportAll(_abstractPureComponent, exports);
var _abstractPureComponent2 = require("./abstractPureComponent2");
parcelHelpers.exportAll(_abstractPureComponent2, exports);
var _alignment = require("./alignment");
parcelHelpers.exportAll(_alignment, exports);
var _boundary = require("./boundary");
parcelHelpers.exportAll(_boundary, exports);
var _constructor = require("./constructor");
parcelHelpers.exportAll(_constructor, exports);
var _elevation = require("./elevation");
parcelHelpers.exportAll(_elevation, exports);
var _intent = require("./intent");
parcelHelpers.exportAll(_intent, exports);
var _position = require("./position");
parcelHelpers.exportAll(_position, exports);
var _props = require("./props");
parcelHelpers.exportAll(_props, exports);
var _refs = require("./refs");
parcelHelpers.exportAll(_refs, exports);

},{"@blueprintjs/colors":"psboX","./classes":"6Ep96","./keys":"4SJW1","./utils":"8MRas","./abstractComponent":"5dUyY","./abstractComponent2":"7OmPa","./abstractPureComponent":"h9JtO","./abstractPureComponent2":"4HnqN","./alignment":"70kQX","./boundary":"12gzq","./constructor":"8WZAt","./elevation":"7oS9j","./intent":"Rg9JL","./position":"gwedn","./props":"7F9ht","./refs":"cGLry","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"psboX":[function(require,module,exports) {
"use strict";
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LegacyColors = exports.Colors = void 0;
var colors_1 = require("./colors");
Object.defineProperty(exports, "Colors", {
    enumerable: true,
    get: function() {
        return colors_1.Colors;
    }
});
var legacyColors_1 = require("./legacyColors");
Object.defineProperty(exports, "LegacyColors", {
    enumerable: true,
    get: function() {
        return legacyColors_1.LegacyColors;
    }
});

},{"./colors":"llt0T","./legacyColors":"7y5wg"}],"llt0T":[function(require,module,exports) {
"use strict";
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Colors = void 0;
const grayScale = {
    BLACK: "#111418",
    DARK_GRAY1: "#1C2127",
    DARK_GRAY2: "#252A31",
    DARK_GRAY3: "#2F343C",
    DARK_GRAY4: "#383E47",
    DARK_GRAY5: "#404854",
    GRAY1: "#5F6B7C",
    GRAY2: "#738091",
    GRAY3: "#8F99A8",
    GRAY4: "#ABB3BF",
    GRAY5: "#C5CBD3",
    LIGHT_GRAY1: "#D3D8DE",
    LIGHT_GRAY2: "#DCE0E5",
    LIGHT_GRAY3: "#E5E8EB",
    LIGHT_GRAY4: "#EDEFF2",
    LIGHT_GRAY5: "#F6F7F9",
    WHITE: "#FFFFFF"
};
const coreColors = {
    BLUE1: "#184A90",
    BLUE2: "#215DB0",
    BLUE3: "#2D72D2",
    BLUE4: "#4C90F0",
    BLUE5: "#8ABBFF",
    GREEN1: "#165A36",
    GREEN2: "#1C6E42",
    GREEN3: "#238551",
    GREEN4: "#32A467",
    GREEN5: "#72CA9B",
    ORANGE1: "#77450D",
    ORANGE2: "#935610",
    ORANGE3: "#C87619",
    ORANGE4: "#EC9A3C",
    ORANGE5: "#FBB360",
    RED1: "#8E292C",
    RED2: "#AC2F33",
    RED3: "#CD4246",
    RED4: "#E76A6E",
    RED5: "#FA999C"
};
const extendedColors = {
    CERULEAN1: "#0C5174",
    CERULEAN2: "#0F6894",
    CERULEAN3: "#147EB3",
    CERULEAN4: "#3FA6DA",
    CERULEAN5: "#68C1EE",
    FOREST1: "#1D7324",
    FOREST2: "#238C2C",
    FOREST3: "#29A634",
    FOREST4: "#43BF4D",
    FOREST5: "#62D96B",
    GOLD1: "#5C4405",
    GOLD2: "#866103",
    GOLD3: "#D1980B",
    GOLD4: "#F0B726",
    GOLD5: "#FBD065",
    INDIGO1: "#5642A6",
    INDIGO2: "#634DBF",
    INDIGO3: "#7961DB",
    INDIGO4: "#9881F3",
    INDIGO5: "#BDADFF",
    LIME1: "#43501B",
    LIME2: "#5A701A",
    LIME3: "#8EB125",
    LIME4: "#B6D94C",
    LIME5: "#D4F17E",
    ROSE1: "#A82255",
    ROSE2: "#C22762",
    ROSE3: "#DB2C6F",
    ROSE4: "#F5498B",
    ROSE5: "#FF66A1",
    SEPIA1: "#5E4123",
    SEPIA2: "#7A542E",
    SEPIA3: "#946638",
    SEPIA4: "#AF855A",
    SEPIA5: "#D0B090",
    TURQUOISE1: "#004D46",
    TURQUOISE2: "#007067",
    TURQUOISE3: "#00A396",
    TURQUOISE4: "#13C9BA",
    TURQUOISE5: "#7AE1D8",
    VERMILION1: "#96290D",
    VERMILION2: "#B83211",
    VERMILION3: "#D33D17",
    VERMILION4: "#EB6847",
    VERMILION5: "#FF9980",
    VIOLET1: "#5C255C",
    VIOLET2: "#7C327C",
    VIOLET3: "#9D3F9D",
    VIOLET4: "#BD6BBD",
    VIOLET5: "#D69FD6"
};
/* eslint-disable deprecation/deprecation */ /**
 * Blueprint v3.x legacy color names, provided as aliases for their new names in v4.x.
 * These symbols allow references to the "cobalt" identifiers (not color hex values)
 * to continue working with the new color palette. They will be removed in v5.0.
 */ const legacyColors = {
    /** @deprecated use CERULEAN1 */ COBALT1: extendedColors.CERULEAN1,
    /** @deprecated use CERULEAN2 */ COBALT2: extendedColors.CERULEAN2,
    /** @deprecated use CERULEAN3 */ COBALT3: extendedColors.CERULEAN3,
    /** @deprecated use CERULEAN4 */ COBALT4: extendedColors.CERULEAN4,
    /** @deprecated use CERULEAN5 */ COBALT5: extendedColors.CERULEAN5
};
/* eslint-enable deprecation/deprecation */ exports.Colors = Object.assign(Object.assign(Object.assign(Object.assign({}, grayScale), coreColors), extendedColors), legacyColors);

},{}],"7y5wg":[function(require,module,exports) {
"use strict";
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.LegacyColors = void 0;
/**
 * Blueprint 3.x colors
 */ exports.LegacyColors = {
    BLACK: "#10161A",
    BLUE1: "#0E5A8A",
    BLUE2: "#106BA3",
    BLUE3: "#137CBD",
    BLUE4: "#2B95D6",
    BLUE5: "#48AFF0",
    COBALT1: "#1F4B99",
    COBALT2: "#2458B3",
    COBALT3: "#2965CC",
    COBALT4: "#4580E6",
    COBALT5: "#669EFF",
    DARK_GRAY1: "#182026",
    DARK_GRAY2: "#202B33",
    DARK_GRAY3: "#293742",
    DARK_GRAY4: "#30404D",
    DARK_GRAY5: "#394B59",
    FOREST1: "#1D7324",
    FOREST2: "#238C2C",
    FOREST3: "#29A634",
    FOREST4: "#43BF4D",
    FOREST5: "#62D96B",
    GOLD1: "#A67908",
    GOLD2: "#BF8C0A",
    GOLD3: "#D99E0B",
    GOLD4: "#F2B824",
    GOLD5: "#FFC940",
    GRAY1: "#5C7080",
    GRAY2: "#738694",
    GRAY3: "#8A9BA8",
    GRAY4: "#A7B6C2",
    GRAY5: "#BFCCD6",
    GREEN1: "#0A6640",
    GREEN2: "#0D8050",
    GREEN3: "#0F9960",
    GREEN4: "#15B371",
    GREEN5: "#3DCC91",
    INDIGO1: "#5642A6",
    INDIGO2: "#634DBF",
    INDIGO3: "#7157D9",
    INDIGO4: "#9179F2",
    INDIGO5: "#AD99FF",
    LIGHT_GRAY1: "#CED9E0",
    LIGHT_GRAY2: "#D8E1E8",
    LIGHT_GRAY3: "#E1E8ED",
    LIGHT_GRAY4: "#EBF1F5",
    LIGHT_GRAY5: "#F5F8FA",
    LIME1: "#728C23",
    LIME2: "#87A629",
    LIME3: "#9BBF30",
    LIME4: "#B6D94C",
    LIME5: "#D1F26D",
    ORANGE1: "#A66321",
    ORANGE2: "#BF7326",
    ORANGE3: "#D9822B",
    ORANGE4: "#F29D49",
    ORANGE5: "#FFB366",
    RED1: "#A82A2A",
    RED2: "#C23030",
    RED3: "#DB3737",
    RED4: "#F55656",
    RED5: "#FF7373",
    ROSE1: "#A82255",
    ROSE2: "#C22762",
    ROSE3: "#DB2C6F",
    ROSE4: "#F5498B",
    ROSE5: "#FF66A1",
    SEPIA1: "#63411E",
    SEPIA2: "#7D5125",
    SEPIA3: "#96622D",
    SEPIA4: "#B07B46",
    SEPIA5: "#C99765",
    TURQUOISE1: "#008075",
    TURQUOISE2: "#00998C",
    TURQUOISE3: "#00B3A4",
    TURQUOISE4: "#14CCBD",
    TURQUOISE5: "#2EE6D6",
    VERMILION1: "#9E2B0E",
    VERMILION2: "#B83211",
    VERMILION3: "#D13913",
    VERMILION4: "#EB532D",
    VERMILION5: "#FF6E4A",
    VIOLET1: "#5C255C",
    VIOLET2: "#752F75",
    VIOLET3: "#8F398F",
    VIOLET4: "#A854A8",
    VIOLET5: "#C274C2",
    WHITE: "#FFFFFF"
};

},{}],"4SJW1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "BACKSPACE", ()=>BACKSPACE
);
parcelHelpers.export(exports, "TAB", ()=>TAB
);
parcelHelpers.export(exports, "ENTER", ()=>ENTER
);
parcelHelpers.export(exports, "SHIFT", ()=>SHIFT
);
parcelHelpers.export(exports, "ESCAPE", ()=>ESCAPE
);
parcelHelpers.export(exports, "SPACE", ()=>SPACE
);
parcelHelpers.export(exports, "ARROW_LEFT", ()=>ARROW_LEFT
);
parcelHelpers.export(exports, "ARROW_UP", ()=>ARROW_UP
);
parcelHelpers.export(exports, "ARROW_RIGHT", ()=>ARROW_RIGHT
);
parcelHelpers.export(exports, "ARROW_DOWN", ()=>ARROW_DOWN
);
parcelHelpers.export(exports, "DELETE", ()=>DELETE
);
/** Returns whether the key code is `enter` or `space`, the two keys that can click a button. */ parcelHelpers.export(exports, "isKeyboardClick", ()=>isKeyboardClick
);
var BACKSPACE = 8;
var TAB = 9;
var ENTER = 13;
var SHIFT = 16;
var ESCAPE = 27;
var SPACE = 32;
var ARROW_LEFT = 37;
var ARROW_UP = 38;
var ARROW_RIGHT = 39;
var ARROW_DOWN = 40;
var DELETE = 46;
function isKeyboardClick(keyCode) {
    return keyCode === ENTER || keyCode === SPACE;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8MRas":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isDarkTheme", ()=>_isDarkTheme.isDarkTheme
);
// ref utils used to live in this folder, but got refactored and moved elsewhere.
// we keep this export here for backwards compatibility
parcelHelpers.export(exports, "setRef", ()=>_refs.setRef
);
parcelHelpers.export(exports, "getRef", ()=>_refs.getRef
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _compareUtils = require("./compareUtils");
parcelHelpers.exportAll(_compareUtils, exports);
var _domUtils = require("./domUtils");
parcelHelpers.exportAll(_domUtils, exports);
var _functionUtils = require("./functionUtils");
parcelHelpers.exportAll(_functionUtils, exports);
var _jsUtils = require("./jsUtils");
parcelHelpers.exportAll(_jsUtils, exports);
var _reactUtils = require("./reactUtils");
parcelHelpers.exportAll(_reactUtils, exports);
var _isDarkTheme = require("./isDarkTheme");
var _refs = require("../refs");

},{"./compareUtils":"jMjaE","./domUtils":"e1F4k","./functionUtils":"ghVFW","./jsUtils":"ggbXu","./reactUtils":"bQw7L","./isDarkTheme":"9wAay","../refs":"cGLry","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jMjaE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /* eslint-enable deprecation/deprecation */ /**
 * Returns true if the arrays are equal. Elements will be shallowly compared by
 * default, or they will be compared using the custom `compare` function if one
 * is provided.
 */ parcelHelpers.export(exports, "arraysEqual", ()=>arraysEqual
);
/**
 * Shallow comparison between objects. If `keys` is provided, just that subset
 * of keys will be compared; otherwise, all keys will be compared.
 *
 * @returns true if items are equal.
 */ parcelHelpers.export(exports, "shallowCompareKeys", ()=>shallowCompareKeys
);
/**
 * Deep comparison between objects. If `keys` is provided, just that subset of
 * keys will be compared; otherwise, all keys will be compared.
 *
 * @returns true if items are equal.
 */ parcelHelpers.export(exports, "deepCompareKeys", ()=>deepCompareKeys
);
/**
 * Returns a descriptive object for each key whose values are deeply unequal
 * between two provided objects. Useful for debugging shouldComponentUpdate.
 */ parcelHelpers.export(exports, "getDeepUnequalKeyValues", ()=>getDeepUnequalKeyValues
);
function arraysEqual(arrA, arrB, compare) {
    if (compare === void 0) compare = function(a, b) {
        return a === b;
    };
    // treat `null` and `undefined` as the same
    if (arrA == null && arrB == null) return true;
    else if (arrA == null || arrB == null || arrA.length !== arrB.length) return false;
    else return arrA.every(function(a, i) {
        return compare(a, arrB[i]);
    });
}
function shallowCompareKeys(objA, objB, keys) {
    // treat `null` and `undefined` as the same
    if (objA == null && objB == null) return true;
    else if (objA == null || objB == null) return false;
    else if (Array.isArray(objA) || Array.isArray(objB)) return false;
    else if (keys != null) return shallowCompareKeysImpl(objA, objB, keys);
    else {
        // shallowly compare all keys from both objects
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        return shallowCompareKeysImpl(objA, objB, {
            include: keysA
        }) && shallowCompareKeysImpl(objA, objB, {
            include: keysB
        });
    }
}
function deepCompareKeys(objA, objB, keys) {
    if (objA === objB) return true;
    else if (objA == null && objB == null) // treat `null` and `undefined` as the same
    return true;
    else if (objA == null || objB == null) return false;
    else if (Array.isArray(objA) || Array.isArray(objB)) return arraysEqual(objA, objB, deepCompareKeys);
    else if (isSimplePrimitiveType(objA) || isSimplePrimitiveType(objB)) return objA === objB;
    else if (keys != null) return deepCompareKeysImpl(objA, objB, keys);
    else if (objA.constructor !== objB.constructor) return false;
    else {
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        if (keysA == null || keysB == null) return false;
        if (keysA.length === 0 && keysB.length === 0) return true;
        return arraysEqual(keysA, keysB) && deepCompareKeysImpl(objA, objB, keysA);
    }
}
function getDeepUnequalKeyValues(objA, objB, keys) {
    if (objA === void 0) objA = {};
    if (objB === void 0) objB = {};
    var filteredKeys = keys == null ? unionKeys(objA, objB) : keys;
    return getUnequalKeyValues(objA, objB, filteredKeys, function(a, b, key) {
        return deepCompareKeys(a, b, [
            key
        ]);
    });
}
// Private helpers
// ===============
/**
 * Partial shallow comparison between objects using the given list of keys.
 */ function shallowCompareKeysImpl(objA, objB, keys) {
    return filterKeys(objA, objB, keys).every(function(key) {
        return objA.hasOwnProperty(key) === objB.hasOwnProperty(key) && objA[key] === objB[key];
    });
}
/**
 * Partial deep comparison between objects using the given list of keys.
 */ function deepCompareKeysImpl(objA, objB, keys) {
    return keys.every(function(key) {
        return objA.hasOwnProperty(key) === objB.hasOwnProperty(key) && deepCompareKeys(objA[key], objB[key]);
    });
}
function isSimplePrimitiveType(value) {
    return typeof value === "number" || typeof value === "string" || typeof value === "boolean";
}
function filterKeys(objA, objB, keys) {
    if (isAllowlist(keys)) return keys.include;
    else if (isDenylist(keys)) {
        var keysA = Object.keys(objA);
        var keysB = Object.keys(objB);
        // merge keys from both objects into a big set for quick access
        var keySet_1 = arrayToObject(keysA.concat(keysB));
        // delete denied keys from the key set
        keys.exclude.forEach(function(key) {
            return delete keySet_1[key];
        });
        // return the remaining keys as an array
        return Object.keys(keySet_1);
    }
    return [];
}
function isAllowlist(keys) {
    return keys != null && keys.include != null;
}
function isDenylist(keys) {
    return keys != null && keys.exclude != null;
}
function arrayToObject(arr) {
    return arr.reduce(function(obj, element) {
        obj[element] = true;
        return obj;
    }, {});
}
function getUnequalKeyValues(objA, objB, keys, compareFn) {
    var unequalKeys = keys.filter(function(key) {
        return !compareFn(objA, objB, key);
    });
    var unequalKeyValues = unequalKeys.map(function(key) {
        return {
            key: key,
            valueA: objA[key],
            valueB: objB[key]
        };
    });
    return unequalKeyValues;
}
function unionKeys(objA, objB) {
    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    var concatKeys = keysA.concat(keysB);
    var keySet = arrayToObject(concatKeys);
    return Object.keys(keySet);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e1F4k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ parcelHelpers.export(exports, "elementIsOrContains", ()=>elementIsOrContains
);
/**
 * Throttle an event on an EventTarget by wrapping it in a
 * `requestAnimationFrame` call. Returns the event handler that was bound to
 * given eventName so you can clean up after yourself.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/Events/scroll
 */ /* istanbul ignore next */ parcelHelpers.export(exports, "throttleEvent", ()=>throttleEvent
);
/**
 * Throttle a callback by wrapping it in a `requestAnimationFrame` call. Returns
 * the throttled function.
 *
 * @see https://www.html5rocks.com/en/tutorials/speed/animations/
 */ parcelHelpers.export(exports, "throttleReactEventCallback", ()=>throttleReactEventCallback
);
/**
 * Throttle a method by wrapping it in a `requestAnimationFrame` call. Returns
 * the throttled function.
 */ // eslint-disable-next-line @typescript-eslint/ban-types
parcelHelpers.export(exports, "throttle", ()=>throttle
);
function elementIsOrContains(element, testElement) {
    return element === testElement || element.contains(testElement);
}
function throttleEvent(target, eventName, newEventName) {
    var throttledFunc = throttleImpl(function(event) {
        target.dispatchEvent(new CustomEvent(newEventName, event));
    });
    target.addEventListener(eventName, throttledFunc);
    return throttledFunc;
}
function throttleReactEventCallback(callback, options) {
    if (options === void 0) options = {};
    var throttledFunc = throttleImpl(callback, function(event2) {
        if (options.preventDefault) event2.preventDefault();
    }, // prevent React from reclaiming the event object before we reference it
    function(event2) {
        return event2.persist();
    });
    return throttledFunc;
}
function throttle(method) {
    return throttleImpl(method);
}
// eslint-disable-next-line @typescript-eslint/ban-types
function throttleImpl(onAnimationFrameRequested, onBeforeIsRunningCheck, onAfterIsRunningCheck) {
    var isRunning = false;
    var func = function() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        onBeforeIsRunningCheck === null || onBeforeIsRunningCheck === void 0 || onBeforeIsRunningCheck.apply(void 0, args);
        if (isRunning) return;
        isRunning = true;
        onAfterIsRunningCheck === null || onAfterIsRunningCheck === void 0 || onAfterIsRunningCheck.apply(void 0, args);
        requestAnimationFrame(function() {
            onAnimationFrameRequested.apply(void 0, args);
            isRunning = false;
        });
    };
    return func;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ghVFW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /** Returns whether the value is a function. Acts as a type guard. */ /* istanbul ignore next */ // eslint-disable-next-line @typescript-eslint/ban-types
parcelHelpers.export(exports, "isFunction", ()=>isFunction
);
function isFunction(value) {
    return typeof value === "function";
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ggbXu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/** Returns whether `process.env.NODE_ENV` exists and equals `env`. */ parcelHelpers.export(exports, "isNodeEnv", ()=>isNodeEnv
);
/**
 * Returns the difference in length between two arrays. A `null` argument is
 * considered an empty list. The return value will be positive if `a` is longer
 * than `b`, negative if the opposite is true, and zero if their lengths are
 * equal.
 */ parcelHelpers.export(exports, "arrayLengthCompare", ()=>arrayLengthCompare
);
/**
 * Returns true if the two numbers are within the given tolerance of each other.
 * This is useful to correct for floating point precision issues, less useful
 * for integers.
 */ parcelHelpers.export(exports, "approxEqual", ()=>approxEqual
);
/**
 * Clamps the given number between min and max values. Returns value if within
 * range, or closest bound.
 */ parcelHelpers.export(exports, "clamp", ()=>clamp
);
/** Returns the number of decimal places in the given number. */ parcelHelpers.export(exports, "countDecimalPlaces", ()=>countDecimalPlaces
);
/** Generate a unique ID within a given namespace, using a simple counter-based implementation to avoid collisions. */ parcelHelpers.export(exports, "uniqueId", ()=>uniqueId
);
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _errors = require("../errors");
var process = require("process");
function isNodeEnv(env) {
    return typeof process !== "undefined" && process.env && "development" === env;
}
function arrayLengthCompare(a, b) {
    if (a === void 0) a = [];
    if (b === void 0) b = [];
    return a.length - b.length;
}
function approxEqual(a, b, tolerance) {
    if (tolerance === void 0) tolerance = 0.00001;
    return Math.abs(a - b) <= tolerance;
}
function clamp(val, min, max) {
    if (val == null) return val;
    if (max < min) throw new Error(_errors.CLAMP_MIN_MAX);
    return Math.min(Math.max(val, min), max);
}
function countDecimalPlaces(num) {
    if (!isFinite(num)) return 0;
    var e = 1;
    var p = 0;
    while(Math.round(num * e) / e !== num){
        e *= 10;
        p++;
    }
    return p;
}
var uniqueCountForNamespace = new Map();
function uniqueId(namespace) {
    var _a;
    var curCount = (_a = uniqueCountForNamespace.get(namespace)) !== null && _a !== void 0 ? _a : 0;
    uniqueCountForNamespace.set(namespace, curCount + 1);
    return "".concat(namespace, "-").concat(curCount);
}

},{"../errors":"7mLY3","process":"d5jf4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7mLY3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CLAMP_MIN_MAX", ()=>CLAMP_MIN_MAX
);
parcelHelpers.export(exports, "ALERT_WARN_CANCEL_PROPS", ()=>ALERT_WARN_CANCEL_PROPS
);
parcelHelpers.export(exports, "ALERT_WARN_CANCEL_ESCAPE_KEY", ()=>ALERT_WARN_CANCEL_ESCAPE_KEY
);
parcelHelpers.export(exports, "ALERT_WARN_CANCEL_OUTSIDE_CLICK", ()=>ALERT_WARN_CANCEL_OUTSIDE_CLICK
);
parcelHelpers.export(exports, "COLLAPSIBLE_LIST_INVALID_CHILD", ()=>COLLAPSIBLE_LIST_INVALID_CHILD
);
parcelHelpers.export(exports, "CONTEXTMENU_WARN_DECORATOR_NO_METHOD", ()=>CONTEXTMENU_WARN_DECORATOR_NO_METHOD
);
parcelHelpers.export(exports, "CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT", ()=>CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT
);
parcelHelpers.export(exports, "HOTKEYS_HOTKEY_CHILDREN", ()=>HOTKEYS_HOTKEY_CHILDREN
);
parcelHelpers.export(exports, "HOTKEYS_WARN_DECORATOR_NO_METHOD", ()=>HOTKEYS_WARN_DECORATOR_NO_METHOD
);
parcelHelpers.export(exports, "HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT", ()=>HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT
);
parcelHelpers.export(exports, "HOTKEYS_PROVIDER_NOT_FOUND", ()=>HOTKEYS_PROVIDER_NOT_FOUND
);
parcelHelpers.export(exports, "HOTKEYS_TARGET2_CHILDREN_LOCAL_HOTKEYS", ()=>HOTKEYS_TARGET2_CHILDREN_LOCAL_HOTKEYS
);
parcelHelpers.export(exports, "INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX", ()=>INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX
);
parcelHelpers.export(exports, "NUMERIC_INPUT_MIN_MAX", ()=>NUMERIC_INPUT_MIN_MAX
);
parcelHelpers.export(exports, "NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND", ()=>NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND
);
parcelHelpers.export(exports, "NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND", ()=>NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND
);
parcelHelpers.export(exports, "NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE", ()=>NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE
);
parcelHelpers.export(exports, "NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE", ()=>NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE
);
parcelHelpers.export(exports, "NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE", ()=>NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE
);
parcelHelpers.export(exports, "NUMERIC_INPUT_CONTROLLED_VALUE_INVALID", ()=>NUMERIC_INPUT_CONTROLLED_VALUE_INVALID
);
parcelHelpers.export(exports, "PANEL_STACK_INITIAL_PANEL_STACK_MUTEX", ()=>PANEL_STACK_INITIAL_PANEL_STACK_MUTEX
);
parcelHelpers.export(exports, "PANEL_STACK_REQUIRES_PANEL", ()=>PANEL_STACK_REQUIRES_PANEL
);
parcelHelpers.export(exports, "OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED", ()=>OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED
);
parcelHelpers.export(exports, "POPOVER_REQUIRES_TARGET", ()=>POPOVER_REQUIRES_TARGET
);
parcelHelpers.export(exports, "POPOVER_HAS_BACKDROP_INTERACTION", ()=>POPOVER_HAS_BACKDROP_INTERACTION
);
parcelHelpers.export(exports, "POPOVER_WARN_TOO_MANY_CHILDREN", ()=>POPOVER_WARN_TOO_MANY_CHILDREN
);
parcelHelpers.export(exports, "POPOVER_WARN_DOUBLE_CONTENT", ()=>POPOVER_WARN_DOUBLE_CONTENT
);
parcelHelpers.export(exports, "POPOVER_WARN_DOUBLE_TARGET", ()=>POPOVER_WARN_DOUBLE_TARGET
);
parcelHelpers.export(exports, "POPOVER_WARN_EMPTY_CONTENT", ()=>POPOVER_WARN_EMPTY_CONTENT
);
parcelHelpers.export(exports, "POPOVER_WARN_HAS_BACKDROP_INLINE", ()=>POPOVER_WARN_HAS_BACKDROP_INLINE
);
parcelHelpers.export(exports, "POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX", ()=>POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX
);
parcelHelpers.export(exports, "POPOVER_WARN_UNCONTROLLED_ONINTERACTION", ()=>POPOVER_WARN_UNCONTROLLED_ONINTERACTION
);
parcelHelpers.export(exports, "PORTAL_CONTEXT_CLASS_NAME_STRING", ()=>PORTAL_CONTEXT_CLASS_NAME_STRING
);
parcelHelpers.export(exports, "RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX", ()=>RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX
);
parcelHelpers.export(exports, "SLIDER_ZERO_STEP", ()=>SLIDER_ZERO_STEP
);
parcelHelpers.export(exports, "SLIDER_ZERO_LABEL_STEP", ()=>SLIDER_ZERO_LABEL_STEP
);
parcelHelpers.export(exports, "RANGESLIDER_NULL_VALUE", ()=>RANGESLIDER_NULL_VALUE
);
parcelHelpers.export(exports, "MULTISLIDER_INVALID_CHILD", ()=>MULTISLIDER_INVALID_CHILD
);
parcelHelpers.export(exports, "MULTISLIDER_WARN_LABEL_STEP_SIZE_LABEL_VALUES_MUTEX", ()=>MULTISLIDER_WARN_LABEL_STEP_SIZE_LABEL_VALUES_MUTEX
);
parcelHelpers.export(exports, "SPINNER_WARN_CLASSES_SIZE", ()=>SPINNER_WARN_CLASSES_SIZE
);
parcelHelpers.export(exports, "TOASTER_CREATE_NULL", ()=>TOASTER_CREATE_NULL
);
parcelHelpers.export(exports, "TOASTER_WARN_INLINE", ()=>TOASTER_WARN_INLINE
);
parcelHelpers.export(exports, "DIALOG_WARN_NO_HEADER_ICON", ()=>DIALOG_WARN_NO_HEADER_ICON
);
parcelHelpers.export(exports, "DIALOG_WARN_NO_HEADER_CLOSE_BUTTON", ()=>DIALOG_WARN_NO_HEADER_CLOSE_BUTTON
);
parcelHelpers.export(exports, "DRAWER_ANGLE_POSITIONS_ARE_CASTED", ()=>DRAWER_ANGLE_POSITIONS_ARE_CASTED
);
parcelHelpers.export(exports, "TOASTER_MAX_TOASTS_INVALID", ()=>TOASTER_MAX_TOASTS_INVALID
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var ns = "[Blueprint]";
var CLAMP_MIN_MAX = ns + " clamp: max cannot be less than min";
var ALERT_WARN_CANCEL_PROPS = ns + " <Alert> cancelButtonText and onCancel should be set together.";
var ALERT_WARN_CANCEL_ESCAPE_KEY = ns + " <Alert> canEscapeKeyCancel enabled without onCancel or onClose handler.";
var ALERT_WARN_CANCEL_OUTSIDE_CLICK = ns + " <Alert> canOutsideClickCancel enabled without onCancel or onClose handler.";
var COLLAPSIBLE_LIST_INVALID_CHILD = ns + " <CollapsibleList> children must be <MenuItem>s";
var CONTEXTMENU_WARN_DECORATOR_NO_METHOD = ns + " @ContextMenuTarget-decorated class should implement renderContextMenu.";
var CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT = ns + " \"@ContextMenuTarget-decorated components must return a single JSX.Element or an empty render.";
var HOTKEYS_HOTKEY_CHILDREN = ns + " <Hotkeys> only accepts <Hotkey> children.";
var HOTKEYS_WARN_DECORATOR_NO_METHOD = ns + " @HotkeysTarget-decorated class should implement renderHotkeys.";
var HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT = ns + " \"@HotkeysTarget-decorated components must return a single JSX.Element or an empty render.";
var HOTKEYS_PROVIDER_NOT_FOUND = ns + " useHotkeys() was used outside of a <HotkeysProvider> context. These hotkeys will not be shown in the hotkeys help dialog.";
var HOTKEYS_TARGET2_CHILDREN_LOCAL_HOTKEYS = ns + " <HotkeysTarget2> was configured with local hotkeys, but you did not use the generated event handlers to bind their event handlers. Try using a render function as the child of this component.";
var INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX = ns + " <InputGroup> leftElement and leftIcon prop are mutually exclusive, with leftElement taking priority.";
var NUMERIC_INPUT_MIN_MAX = ns + " <NumericInput> requires min to be no greater than max if both are defined.";
var NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires minorStepSize to be no greater than stepSize.";
var NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires stepSize to be no greater than majorStepSize.";
var NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires minorStepSize to be strictly greater than zero.";
var NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires majorStepSize to be strictly greater than zero.";
var NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires stepSize to be strictly greater than zero.";
var NUMERIC_INPUT_CONTROLLED_VALUE_INVALID = ns + " <NumericInput> controlled value prop does not adhere to stepSize, min, and/or max constraints.";
var PANEL_STACK_INITIAL_PANEL_STACK_MUTEX = ns + " <PanelStack> requires exactly one of initialPanel and stack prop";
var PANEL_STACK_REQUIRES_PANEL = ns + " <PanelStack> requires at least one panel in the stack";
var OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED = ns + " <OverflowList> does not support changing observeParents after mounting.";
var POPOVER_REQUIRES_TARGET = ns + " <Popover> requires target prop or at least one child element.";
var POPOVER_HAS_BACKDROP_INTERACTION = ns + " <Popover hasBackdrop={true}> requires interactionKind={PopoverInteractionKind.CLICK}.";
var POPOVER_WARN_TOO_MANY_CHILDREN = ns + " <Popover> supports one or two children; additional children are ignored." + " First child is the target, second child is the content. You may instead supply these two as props.";
var POPOVER_WARN_DOUBLE_CONTENT = ns + " <Popover> with two children ignores content prop; use either prop or children.";
var POPOVER_WARN_DOUBLE_TARGET = ns + " <Popover> with children ignores target prop; use either prop or children.";
var POPOVER_WARN_EMPTY_CONTENT = ns + " Disabling <Popover> with empty/whitespace content...";
var POPOVER_WARN_HAS_BACKDROP_INLINE = ns + " <Popover usePortal={false}> ignores hasBackdrop";
var POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX = ns + " <Popover> supports either placement or position prop, not both.";
var POPOVER_WARN_UNCONTROLLED_ONINTERACTION = ns + " <Popover> onInteraction is ignored when uncontrolled.";
var PORTAL_CONTEXT_CLASS_NAME_STRING = ns + " <Portal> context blueprintPortalClassName must be string";
var RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX = ns + " <RadioGroup> children and options prop are mutually exclusive, with options taking priority.";
var SLIDER_ZERO_STEP = ns + " <Slider> stepSize must be greater than zero.";
var SLIDER_ZERO_LABEL_STEP = ns + " <Slider> labelStepSize must be greater than zero.";
var RANGESLIDER_NULL_VALUE = ns + " <RangeSlider> value prop must be an array of two non-null numbers.";
var MULTISLIDER_INVALID_CHILD = ns + " <MultiSlider> children must be <SliderHandle>s or <SliderTrackStop>s";
var MULTISLIDER_WARN_LABEL_STEP_SIZE_LABEL_VALUES_MUTEX = ns + " <MultiSlider> labelStepSize and labelValues prop are mutually exclusive, with labelStepSize taking priority.";
var SPINNER_WARN_CLASSES_SIZE = ns + " <Spinner> Classes.SMALL/LARGE are ignored if size prop is set.";
var TOASTER_CREATE_NULL = ns + " Toaster.create() is not supported inside React lifecycle methods in React 16." + " See usage example on the docs site.";
var TOASTER_WARN_INLINE = ns + " Toaster.create() ignores inline prop as it always creates a new element.";
var DIALOG_WARN_NO_HEADER_ICON = ns + " <Dialog> iconName is ignored if title is omitted.";
var DIALOG_WARN_NO_HEADER_CLOSE_BUTTON = ns + " <Dialog> isCloseButtonShown prop is ignored if title is omitted.";
var DRAWER_ANGLE_POSITIONS_ARE_CASTED = ns + " <Drawer> all angle positions are casted into pure position (TOP, BOTTOM, LEFT or RIGHT)";
var TOASTER_MAX_TOASTS_INVALID = ns + " <Toaster> maxToasts is set to an invalid number, must be greater than 0";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bQw7L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Returns true if `node` is null/undefined, false, empty string, or an array
 * composed of those. If `node` is an array, only one level of the array is
 * checked, for performance reasons.
 */ parcelHelpers.export(exports, "isReactNodeEmpty", ()=>isReactNodeEmpty
);
/**
 * Returns true if children are a mappable children array
 *
 * @internal
 */ parcelHelpers.export(exports, "isReactChildrenElementOrElements", ()=>isReactChildrenElementOrElements
);
/**
 * Converts a React node to an element: non-empty string or number or
 * `React.Fragment` (React 16.3+) is wrapped in given tag name; empty strings
 * and booleans are discarded.
 */ parcelHelpers.export(exports, "ensureElement", ()=>ensureElement
);
/**
 * @deprecated will be removed in v5.0
 */ parcelHelpers.export(exports, "getDisplayName", ()=>getDisplayName
);
/**
 * Returns true if the given JSX element matches the given component type.
 *
 * NOTE: This function only checks equality of `displayName` for performance and
 * to tolerate multiple minor versions of a component being included in one
 * application bundle.
 *
 * @param element JSX element in question
 * @param ComponentType desired component type of element
 */ // eslint-disable-next-line @typescript-eslint/ban-types
parcelHelpers.export(exports, "isElementOfType", ()=>isElementOfType
);
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _react = require("react");
function isReactNodeEmpty(node, skipArray) {
    if (skipArray === void 0) skipArray = false;
    return node == null || node === "" || node === false || !skipArray && Array.isArray(node) && (node.length === 0 || node.every(function(n) {
        return isReactNodeEmpty(n, true);
    }));
}
function isReactChildrenElementOrElements(children) {
    return !isReactNodeEmpty(children, true) && children !== true;
}
function ensureElement(child, tagName) {
    if (tagName === void 0) tagName = "span";
    if (child == null || typeof child === "boolean") return undefined;
    else if (typeof child === "string") // cull whitespace strings
    return child.trim().length > 0 ? _react.createElement(tagName, {}, child) : undefined;
    else if (typeof child === "number" || typeof child.type === "symbol" || Array.isArray(child)) // React.Fragment has a symbol type, ReactNodeArray extends from Array
    return _react.createElement(tagName, {}, child);
    else if (isReactElement(child)) return child;
    else // child is inferred as {}
    return undefined;
}
function isReactElement(child) {
    return typeof child === "object" && typeof child.type !== "undefined" && typeof child.props !== "undefined";
}
function getDisplayName(ComponentClass) {
    return ComponentClass.displayName || ComponentClass.name || "Unknown";
}
function isElementOfType(element, ComponentType) {
    return element != null && element.type != null && element.type.displayName != null && element.type.displayName === ComponentType.displayName;
}

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9wAay":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isDarkTheme", ()=>isDarkTheme
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _configureDom4 = require("../configureDom4");
var _classes = require("../classes");
function isDarkTheme(element) {
    return element != null && element instanceof Element && element.closest(".".concat(_classes.DARK)) != null;
}

},{"../configureDom4":"aQfqf","../classes":"6Ep96","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aQfqf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2019 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ if (typeof window !== "undefined" && typeof document !== "undefined") // we're in browser
require("dom4"); // only import actual dom4 if we're in the browser (not server-compatible)

},{"dom4":"aUkeo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aUkeo":[function(require,module,exports) {
/*!
Copyright (C) 2013-2015 by Andrea Giammarchi - @WebReflection

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/ (function(window) {
    /* jshint loopfunc: true, noempty: false*/ // http://www.w3.org/TR/dom/#element
    function createDocumentFragment() {
        return document.createDocumentFragment();
    }
    function createElement(nodeName) {
        return document.createElement(nodeName);
    }
    function enoughArguments(length, name) {
        if (!length) throw new Error('Failed to construct ' + name + ': 1 argument required, but only 0 present.');
    }
    function mutationMacro(nodes) {
        if (nodes.length === 1) return textNodeIfPrimitive(nodes[0]);
        for(var fragment = createDocumentFragment(), list = slice.call(nodes), i = 0; i < nodes.length; i++)fragment.appendChild(textNodeIfPrimitive(list[i]));
        return fragment;
    }
    function textNodeIfPrimitive(node) {
        return typeof node === 'object' ? node : document.createTextNode(node);
    }
    for(var head, property1, TemporaryPrototype, TemporaryTokenList, wrapVerifyToken, document = window.document, hOP = Object.prototype.hasOwnProperty, defineProperty = Object.defineProperty || function(object, property, descriptor) {
        if (hOP.call(descriptor, 'value')) object[property] = descriptor.value;
        else {
            if (hOP.call(descriptor, 'get')) object.__defineGetter__(property, descriptor.get);
            if (hOP.call(descriptor, 'set')) object.__defineSetter__(property, descriptor.set);
        }
        return object;
    }, indexOf1 = [].indexOf || function indexOf(value) {
        var length = this.length;
        while(length--){
            if (this[length] === value) break;
        }
        return length;
    }, // http://www.w3.org/TR/domcore/#domtokenlist
    verifyToken = function(token) {
        if (!token) throw 'SyntaxError';
        else if (spaces.test(token)) throw 'InvalidCharacterError';
        return token;
    }, DOMTokenList = function(node) {
        var noClassName = typeof node.className === 'undefined', className = noClassName ? node.getAttribute('class') || '' : node.className, isSVG = noClassName || typeof className === 'object', value = (isSVG ? noClassName ? className : className.baseVal : className).replace(trim, '');
        if (value.length) properties.push.apply(this, value.split(spaces));
        this._isSVG = isSVG;
        this._ = node;
    }, classListDescriptor = {
        get: function get() {
            return new DOMTokenList(this);
        },
        set: function() {}
    }, trim = /^\s+|\s+$/g, spaces = /\s+/, SPACE = '\x20', CLASS_LIST = 'classList', toggle = function toggle(token, force) {
        if (this.contains(token)) {
            if (!force) // force is not true (either false or omitted)
            this.remove(token);
        } else if (force === undefined || force) {
            force = true;
            this.add(token);
        }
        return !!force;
    }, DocumentFragmentPrototype = window.DocumentFragment && DocumentFragment.prototype, Node = window.Node, NodePrototype = (Node || Element).prototype, CharacterData = window.CharacterData || Node, CharacterDataPrototype = CharacterData && CharacterData.prototype, DocumentType = window.DocumentType, DocumentTypePrototype = DocumentType && DocumentType.prototype, ElementPrototype = (window.Element || Node || window.HTMLElement).prototype, HTMLSelectElement = window.HTMLSelectElement || createElement('select').constructor, selectRemove = HTMLSelectElement.prototype.remove, SVGElement = window.SVGElement, properties = [
        'matches',
        ElementPrototype.matchesSelector || ElementPrototype.webkitMatchesSelector || ElementPrototype.khtmlMatchesSelector || ElementPrototype.mozMatchesSelector || ElementPrototype.msMatchesSelector || ElementPrototype.oMatchesSelector || function matches(selector) {
            var parentNode = this.parentNode;
            return !!parentNode && -1 < indexOf1.call(parentNode.querySelectorAll(selector), this);
        },
        'closest',
        function closest(selector) {
            var parentNode = this, matches;
            while(// document has no .matches
            (matches = parentNode && parentNode.matches) && !parentNode.matches(selector))parentNode = parentNode.parentNode;
            return matches ? parentNode : null;
        },
        'prepend',
        function prepend() {
            var firstChild = this.firstChild, node = mutationMacro(arguments);
            if (firstChild) this.insertBefore(node, firstChild);
            else this.appendChild(node);
        },
        'append',
        function append() {
            this.appendChild(mutationMacro(arguments));
        },
        'before',
        function before() {
            var parentNode = this.parentNode;
            if (parentNode) parentNode.insertBefore(mutationMacro(arguments), this);
        },
        'after',
        function after() {
            var parentNode = this.parentNode, nextSibling = this.nextSibling, node = mutationMacro(arguments);
            if (parentNode) {
                if (nextSibling) parentNode.insertBefore(node, nextSibling);
                else parentNode.appendChild(node);
            }
        },
        // https://dom.spec.whatwg.org/#dom-element-toggleattribute
        'toggleAttribute',
        function toggleAttribute(name, force) {
            var had = this.hasAttribute(name);
            if (1 < arguments.length) {
                if (had && !force) this.removeAttribute(name);
                else if (force && !had) this.setAttribute(name, "");
            } else if (had) this.removeAttribute(name);
            else this.setAttribute(name, "");
            return this.hasAttribute(name);
        },
        // WARNING - DEPRECATED - use .replaceWith() instead
        'replace',
        function replace() {
            this.replaceWith.apply(this, arguments);
        },
        'replaceWith',
        function replaceWith() {
            var parentNode = this.parentNode;
            if (parentNode) parentNode.replaceChild(mutationMacro(arguments), this);
        },
        'remove',
        function remove() {
            var parentNode = this.parentNode;
            if (parentNode) parentNode.removeChild(this);
        }
    ], slice = properties.slice, i1 = properties.length; i1; i1 -= 2){
        property1 = properties[i1 - 2];
        if (!(property1 in ElementPrototype)) ElementPrototype[property1] = properties[i1 - 1];
        // avoid unnecessary re-patch when the script is included
        // gazillion times without any reason whatsoever
        // https://github.com/WebReflection/dom4/pull/48
        if (property1 === 'remove' && !selectRemove._dom4) // see https://github.com/WebReflection/dom4/issues/19
        (HTMLSelectElement.prototype[property1] = function() {
            return 0 < arguments.length ? selectRemove.apply(this, arguments) : ElementPrototype.remove.call(this);
        })._dom4 = true;
        // see https://github.com/WebReflection/dom4/issues/18
        if (/^(?:before|after|replace|replaceWith|remove)$/.test(property1)) {
            if (CharacterData && !(property1 in CharacterDataPrototype)) CharacterDataPrototype[property1] = properties[i1 - 1];
            if (DocumentType && !(property1 in DocumentTypePrototype)) DocumentTypePrototype[property1] = properties[i1 - 1];
        }
        // see https://github.com/WebReflection/dom4/pull/26
        if (/^(?:append|prepend)$/.test(property1)) {
            if (DocumentFragmentPrototype) {
                if (!(property1 in DocumentFragmentPrototype)) DocumentFragmentPrototype[property1] = properties[i1 - 1];
            } else try {
                createDocumentFragment().constructor.prototype[property1] = properties[i1 - 1];
            } catch (o_O) {}
        }
    }
    // most likely an IE9 only issue
    // see https://github.com/WebReflection/dom4/issues/6
    if (!createElement('a').matches('a')) ElementPrototype[property1] = function(matches) {
        return function(selector) {
            return matches.call(this.parentNode ? this : createDocumentFragment().appendChild(this), selector);
        };
    }(ElementPrototype[property1]);
    // used to fix both old webkit and SVG
    DOMTokenList.prototype = {
        length: 0,
        add: function add() {
            for(var j = 0, token; j < arguments.length; j++){
                token = arguments[j];
                if (!this.contains(token)) properties.push.call(this, property1);
            }
            if (this._isSVG) this._.setAttribute('class', '' + this);
            else this._.className = '' + this;
        },
        contains: function(indexOf) {
            return function contains(token) {
                i1 = indexOf.call(this, property1 = verifyToken(token));
                return -1 < i1;
            };
        }([].indexOf || function(token) {
            i1 = this.length;
            while((i1--) && this[i1] !== token);
            return i1;
        }),
        item: function item(i) {
            return this[i] || null;
        },
        remove: function remove() {
            for(var j = 0, token; j < arguments.length; j++){
                token = arguments[j];
                if (this.contains(token)) properties.splice.call(this, i1, 1);
            }
            if (this._isSVG) this._.setAttribute('class', '' + this);
            else this._.className = '' + this;
        },
        toggle: toggle,
        toString: function toString() {
            return properties.join.call(this, SPACE);
        }
    };
    if (SVGElement && !(CLASS_LIST in SVGElement.prototype)) defineProperty(SVGElement.prototype, CLASS_LIST, classListDescriptor);
    // http://www.w3.org/TR/dom/#domtokenlist
    // iOS 5.1 has completely screwed this property
    // classList in ElementPrototype is false
    // but it's actually there as getter
    if (!(CLASS_LIST in document.documentElement)) defineProperty(ElementPrototype, CLASS_LIST, classListDescriptor);
    else {
        // iOS 5.1 and Nokia ASHA do not support multiple add or remove
        // trying to detect and fix that in here
        TemporaryTokenList = createElement('div')[CLASS_LIST];
        TemporaryTokenList.add('a', 'b', 'a');
        if ('a\x20b' != TemporaryTokenList) {
            // no other way to reach original methods in iOS 5.1
            TemporaryPrototype = TemporaryTokenList.constructor.prototype;
            if (!('add' in TemporaryPrototype)) // ASHA double fails in here
            TemporaryPrototype = window.TemporaryTokenList.prototype;
            wrapVerifyToken = function(original) {
                return function() {
                    var i = 0;
                    while(i < arguments.length)original.call(this, arguments[i++]);
                };
            };
            TemporaryPrototype.add = wrapVerifyToken(TemporaryPrototype.add);
            TemporaryPrototype.remove = wrapVerifyToken(TemporaryPrototype.remove);
            // toggle is broken too ^_^ ... let's fix it
            TemporaryPrototype.toggle = toggle;
        }
    }
    if (!('contains' in NodePrototype)) defineProperty(NodePrototype, 'contains', {
        value: function(el) {
            while(el && el !== this)el = el.parentNode;
            return this === el;
        }
    });
    if (!('head' in document)) defineProperty(document, 'head', {
        get: function() {
            return head || (head = document.getElementsByTagName('head')[0]);
        }
    });
    // requestAnimationFrame partial polyfill
    (function() {
        for(var raf, rAF = window.requestAnimationFrame, cAF = window.cancelAnimationFrame, prefixes = [
            'o',
            'ms',
            'moz',
            'webkit'
        ], i = prefixes.length; !cAF && i--;){
            rAF = rAF || window[prefixes[i] + 'RequestAnimationFrame'];
            cAF = window[prefixes[i] + 'CancelAnimationFrame'] || window[prefixes[i] + 'CancelRequestAnimationFrame'];
        }
        if (!cAF) {
            // some FF apparently implemented rAF but no cAF 
            if (rAF) {
                raf = rAF;
                rAF = function(callback) {
                    var goOn = true;
                    raf(function() {
                        if (goOn) callback.apply(this, arguments);
                    });
                    return function() {
                        goOn = false;
                    };
                };
                cAF = function(id) {
                    id();
                };
            } else {
                rAF = function(callback) {
                    return setTimeout(callback, 15, 15);
                };
                cAF = function(id) {
                    clearTimeout(id);
                };
            }
        }
        window.requestAnimationFrame = rAF;
        window.cancelAnimationFrame = cAF;
    })();
    // http://www.w3.org/TR/dom/#customevent
    try {
        new window.CustomEvent('?');
    } catch (o_O) {
        window.CustomEvent = function(eventName, defaultInitDict) {
            // the infamous substitute
            function CustomEvent(type, eventInitDict) {
                /*jshint eqnull:true */ var event = document.createEvent(eventName);
                if (typeof type != 'string') throw new Error('An event name must be provided');
                if (eventName == 'Event') event.initCustomEvent = initCustomEvent;
                if (eventInitDict == null) eventInitDict = defaultInitDict;
                event.initCustomEvent(type, eventInitDict.bubbles, eventInitDict.cancelable, eventInitDict.detail);
                return event;
            }
            // attached at runtime
            function initCustomEvent(type, bubbles, cancelable, detail) {
                /*jshint validthis:true*/ this.initEvent(type, bubbles, cancelable);
                this.detail = detail;
            }
            // that's it
            return CustomEvent;
        }(// is this IE9 or IE10 ?
        // where CustomEvent is there
        // but not usable as construtor ?
        window.CustomEvent ? // use the CustomEvent interface in such case
        'CustomEvent' : 'Event', // otherwise the common compatible one
        {
            bubbles: false,
            cancelable: false,
            detail: null
        });
    }
    // window.Event as constructor
    try {
        new Event('_');
    } catch (o_O1) {
        /* jshint -W022 */ o_O1 = function($Event) {
            function Event(type, init) {
                enoughArguments(arguments.length, 'Event');
                var out = document.createEvent('Event');
                if (!init) init = {};
                out.initEvent(type, !!init.bubbles, !!init.cancelable);
                return out;
            }
            Event.prototype = $Event.prototype;
            return Event;
        }(window.Event || function Event() {});
        defineProperty(window, 'Event', {
            value: o_O1
        });
        // Android 4 gotcha
        if (Event !== o_O1) Event = o_O1;
    }
    // window.KeyboardEvent as constructor
    try {
        new KeyboardEvent('_', {});
    } catch (o_O2) {
        /* jshint -W022 */ o_O2 = function($KeyboardEvent) {
            // code inspired by https://gist.github.com/termi/4654819
            var initType = 0, defaults = {
                char: '',
                key: '',
                location: 0,
                ctrlKey: false,
                shiftKey: false,
                altKey: false,
                metaKey: false,
                altGraphKey: false,
                repeat: false,
                locale: navigator.language,
                detail: 0,
                bubbles: false,
                cancelable: false,
                keyCode: 0,
                charCode: 0,
                which: 0
            }, eventType;
            try {
                var e = document.createEvent('KeyboardEvent');
                e.initKeyboardEvent('keyup', false, false, window, '+', 3, true, false, true, false, false);
                initType = (e.keyIdentifier || e.key) == '+' && (e.keyLocation || e.location) == 3 && (e.ctrlKey ? e.altKey ? 1 : 3 : e.shiftKey ? 2 : 4) || 9;
            } catch (o_O) {}
            eventType = 0 < initType ? 'KeyboardEvent' : 'Event';
            function getModifier(init) {
                for(var out = [], keys = [
                    'ctrlKey',
                    'Control',
                    'shiftKey',
                    'Shift',
                    'altKey',
                    'Alt',
                    'metaKey',
                    'Meta',
                    'altGraphKey',
                    'AltGraph'
                ], i = 0; i < keys.length; i += 2)if (init[keys[i]]) out.push(keys[i + 1]);
                return out.join(' ');
            }
            function withDefaults(target, source) {
                for(var key in source)if (source.hasOwnProperty(key) && !source.hasOwnProperty.call(target, key)) target[key] = source[key];
                return target;
            }
            function withInitValues(key, out, init) {
                try {
                    out[key] = init[key];
                } catch (o_O) {}
            }
            function KeyboardEvent(type, init) {
                enoughArguments(arguments.length, 'KeyboardEvent');
                init = withDefaults(init || {}, defaults);
                var out = document.createEvent(eventType), ctrlKey = init.ctrlKey, shiftKey = init.shiftKey, altKey = init.altKey, metaKey = init.metaKey, altGraphKey = init.altGraphKey, modifiers = initType > 3 ? getModifier(init) : null, key = String(init.key), chr = String(init.char), location = init.location, keyCode = init.keyCode || (init.keyCode = key) && key.charCodeAt(0) || 0, charCode = init.charCode || (init.charCode = chr) && chr.charCodeAt(0) || 0, bubbles = init.bubbles, cancelable = init.cancelable, repeat = init.repeat, locale = init.locale, view = init.view || window, args;
                if (!init.which) init.which = init.keyCode;
                if ('initKeyEvent' in out) out.initKeyEvent(type, bubbles, cancelable, view, ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);
                else if (0 < initType && 'initKeyboardEvent' in out) {
                    args = [
                        type,
                        bubbles,
                        cancelable,
                        view
                    ];
                    switch(initType){
                        case 1:
                            args.push(key, location, ctrlKey, shiftKey, altKey, metaKey, altGraphKey);
                            break;
                        case 2:
                            args.push(ctrlKey, altKey, shiftKey, metaKey, keyCode, charCode);
                            break;
                        case 3:
                            args.push(key, location, ctrlKey, altKey, shiftKey, metaKey, altGraphKey);
                            break;
                        case 4:
                            args.push(key, location, modifiers, repeat, locale);
                            break;
                        default:
                            args.push(char, key, location, modifiers, repeat, locale);
                    }
                    out.initKeyboardEvent.apply(out, args);
                } else out.initEvent(type, bubbles, cancelable);
                for(key in out)if (defaults.hasOwnProperty(key) && out[key] !== init[key]) withInitValues(key, out, init);
                return out;
            }
            KeyboardEvent.prototype = $KeyboardEvent.prototype;
            return KeyboardEvent;
        }(window.KeyboardEvent || function KeyboardEvent() {});
        defineProperty(window, 'KeyboardEvent', {
            value: o_O2
        });
        // Android 4 gotcha
        if (KeyboardEvent !== o_O2) KeyboardEvent = o_O2;
    }
    // window.MouseEvent as constructor
    try {
        new MouseEvent('_', {});
    } catch (o_O3) {
        /* jshint -W022 */ o_O3 = function($MouseEvent) {
            function MouseEvent(type, init) {
                enoughArguments(arguments.length, 'MouseEvent');
                var out = document.createEvent('MouseEvent');
                if (!init) init = {};
                out.initMouseEvent(type, !!init.bubbles, !!init.cancelable, init.view || window, init.detail || 1, init.screenX || 0, init.screenY || 0, init.clientX || 0, init.clientY || 0, !!init.ctrlKey, !!init.altKey, !!init.shiftKey, !!init.metaKey, init.button || 0, init.relatedTarget || null);
                return out;
            }
            MouseEvent.prototype = $MouseEvent.prototype;
            return MouseEvent;
        }(window.MouseEvent || function MouseEvent() {});
        defineProperty(window, 'MouseEvent', {
            value: o_O3
        });
        // Android 4 gotcha
        if (MouseEvent !== o_O3) MouseEvent = o_O3;
    }
    if (!document.querySelectorAll('*').forEach) (function() {
        function patch(what) {
            var querySelectorAll = what.querySelectorAll;
            what.querySelectorAll = function qSA(css) {
                var result = querySelectorAll.call(this, css);
                result.forEach = Array.prototype.forEach;
                return result;
            };
        }
        patch(document);
        patch(Element.prototype);
    })();
    try {
        // https://drafts.csswg.org/selectors-4/#the-scope-pseudo
        document.querySelector(':scope *');
    } catch (o_O4) {
        (function() {
            var dataScope = 'data-scope-' + (Math.random() * 1e9 >>> 0);
            var proto = Element.prototype;
            var querySelector = proto.querySelector;
            var querySelectorAll = proto.querySelectorAll;
            proto.querySelector = function qS(css) {
                return find(this, querySelector, css);
            };
            proto.querySelectorAll = function qSA(css) {
                return find(this, querySelectorAll, css);
            };
            function find(node, method, css) {
                if (node.type != document.ELEMENT_NODE) return method.call(node, css);
                node.setAttribute(dataScope, null);
                var result = method.call(node, String(css).replace(/(^|,\s*)(:scope([ >]|$))/g, function($0, $1, $2, $3) {
                    return $1 + '[' + dataScope + ']' + ($3 || ' ');
                }));
                node.removeAttribute(dataScope);
                return result;
            }
        })();
    }
})(window);
(function(global) {
    // a WeakMap fallback for DOM nodes only used as key
    var DOMMap1 = global.WeakMap || function() {
        var counter = 0, dispatched = false, drop = false, value1;
        function dispatch(key, ce, shouldDrop) {
            drop = shouldDrop;
            dispatched = false;
            value1 = undefined;
            key.dispatchEvent(ce);
        }
        function Handler(value) {
            this.value = value;
        }
        Handler.prototype.handleEvent = function handleEvent(e) {
            dispatched = true;
            if (drop) e.currentTarget.removeEventListener(e.type, this, false);
            else value1 = this.value;
        };
        function DOMMap() {
            counter++; // make id clashing highly improbable
            this.__ce__ = new Event('@DOMMap:' + counter + Math.random());
        }
        DOMMap.prototype = {
            'constructor': DOMMap,
            'delete': function del(key) {
                return dispatch(key, this.__ce__, true), dispatched;
            },
            'get': function get(key) {
                dispatch(key, this.__ce__, false);
                var v = value1;
                value1 = undefined;
                return v;
            },
            'has': function has(key) {
                return dispatch(key, this.__ce__, false), dispatched;
            },
            'set': function set(key, value) {
                dispatch(key, this.__ce__, true);
                key.addEventListener(this.__ce__.type, new Handler(value), false);
                return this;
            }
        };
        return DOMMap;
    }();
    function Dict() {}
    Dict.prototype = (Object.create || Object)(null);
    // https://dom.spec.whatwg.org/#interface-eventtarget
    function createEventListener(type, callback, options) {
        function eventListener(e) {
            if (eventListener.once) {
                e.currentTarget.removeEventListener(e.type, callback, eventListener);
                eventListener.removed = true;
            }
            if (eventListener.passive) e.preventDefault = createEventListener.preventDefault;
            if (typeof eventListener.callback === 'function') /* jshint validthis: true */ eventListener.callback.call(this, e);
            else if (eventListener.callback) eventListener.callback.handleEvent(e);
            if (eventListener.passive) delete e.preventDefault;
        }
        eventListener.type = type;
        eventListener.callback = callback;
        eventListener.capture = !!options.capture;
        eventListener.passive = !!options.passive;
        eventListener.once = !!options.once;
        // currently pointless but specs say to use it, so ...
        eventListener.removed = false;
        return eventListener;
    }
    createEventListener.preventDefault = function preventDefault() {};
    var Event = global.CustomEvent, dE = global.dispatchEvent, aEL1 = global.addEventListener, rEL1 = global.removeEventListener, counter1 = 0, increment = function() {
        counter1++;
    }, indexOf = [].indexOf || function indexOf(value) {
        var length = this.length;
        while(length--){
            if (this[length] === value) break;
        }
        return length;
    }, getListenerKey = function(options) {
        return ''.concat(options.capture ? '1' : '0', options.passive ? '1' : '0', options.once ? '1' : '0');
    }, augment;
    try {
        aEL1('_', increment, {
            once: true
        });
        dE(new Event('_'));
        dE(new Event('_'));
        rEL1('_', increment, {
            once: true
        });
    } catch (o_O) {}
    if (counter1 !== 1) (function() {
        var dm = new DOMMap1();
        function createAEL(aEL) {
            return function addEventListener(type, handler, options) {
                if (options && typeof options !== 'boolean') {
                    var info = dm.get(this), key = getListenerKey(options), i, tmp, wrap;
                    if (!info) dm.set(this, info = new Dict());
                    if (!(type in info)) info[type] = {
                        handler: [],
                        wrap: []
                    };
                    tmp = info[type];
                    i = indexOf.call(tmp.handler, handler);
                    if (i < 0) {
                        i = tmp.handler.push(handler) - 1;
                        tmp.wrap[i] = wrap = new Dict();
                    } else wrap = tmp.wrap[i];
                    if (!(key in wrap)) {
                        wrap[key] = createEventListener(type, handler, options);
                        aEL.call(this, type, wrap[key], wrap[key].capture);
                    }
                } else aEL.call(this, type, handler, options);
            };
        }
        function createREL(rEL) {
            return function removeEventListener(type, handler, options) {
                if (options && typeof options !== 'boolean') {
                    var info = dm.get(this), key, i, tmp, wrap;
                    if (info && type in info) {
                        tmp = info[type];
                        i = indexOf.call(tmp.handler, handler);
                        if (-1 < i) {
                            key = getListenerKey(options);
                            wrap = tmp.wrap[i];
                            if (key in wrap) {
                                rEL.call(this, type, wrap[key], wrap[key].capture);
                                delete wrap[key];
                                // return if there are other wraps
                                for(key in wrap)return;
                                // otherwise remove all the things
                                tmp.handler.splice(i, 1);
                                tmp.wrap.splice(i, 1);
                                // if there are no other handlers
                                if (tmp.handler.length === 0) // drop the info[type] entirely
                                delete info[type];
                            }
                        }
                    }
                } else rEL.call(this, type, handler, options);
            };
        }
        augment = function(Constructor) {
            if (!Constructor) return;
            var proto = Constructor.prototype;
            proto.addEventListener = createAEL(proto.addEventListener);
            proto.removeEventListener = createREL(proto.removeEventListener);
        };
        if (global.EventTarget) augment(EventTarget);
        else {
            augment(global.Text);
            augment(global.Element || global.HTMLElement);
            augment(global.HTMLDocument);
            augment(global.Window || {
                prototype: global
            });
            augment(global.XMLHttpRequest);
        }
    })();
})(self);

},{}],"cGLry":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ parcelHelpers.export(exports, "isRefObject", ()=>isRefObject
);
parcelHelpers.export(exports, "isRefCallback", ()=>isRefCallback
);
/**
 * Assign the given ref to a target, either a React ref object or a callback which takes the ref as its first argument.
 */ parcelHelpers.export(exports, "setRef", ()=>setRef
);
/** @deprecated use mergeRefs() instead */ parcelHelpers.export(exports, "combineRefs", ()=>combineRefs
);
/**
 * Utility for merging refs into one singular callback ref.
 * If using in a functional component, would recomend using `useMemo` to preserve function identity.
 */ parcelHelpers.export(exports, "mergeRefs", ()=>mergeRefs
);
parcelHelpers.export(exports, "getRef", ()=>getRef
);
/**
 * Creates a ref handler which assigns the ref returned by React for a mounted component to a field on the target object.
 * The target object is usually a component class.
 *
 * If provided, it will also update the given `refProp` with the value of the ref.
 */ parcelHelpers.export(exports, "refHandler", ()=>refHandler
);
function isRefObject(value) {
    return value != null && typeof value !== "function";
}
function isRefCallback(value) {
    return typeof value === "function";
}
function setRef(refTarget, ref) {
    if (isRefObject(refTarget)) refTarget.current = ref;
    else if (isRefCallback(refTarget)) refTarget(ref);
}
function combineRefs(ref1, ref2) {
    return mergeRefs(ref1, ref2);
}
function mergeRefs() {
    var refs = [];
    for(var _i = 0; _i < arguments.length; _i++)refs[_i] = arguments[_i];
    return function(value) {
        refs.forEach(function(ref) {
            setRef(ref, value);
        });
    };
}
function getRef(ref) {
    var _a;
    if (ref === null) return null;
    return (_a = ref.current) !== null && _a !== void 0 ? _a : ref;
}
function refHandler(refTargetParent, refTargetKey, refProp) {
    return function(ref) {
        refTargetParent[refTargetKey] = ref;
        setRef(refProp, ref);
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5dUyY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AbstractComponent", ()=>AbstractComponent
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _utils = require("./utils");
/**
 * An abstract component that Blueprint components can extend
 * in order to add some common functionality like runtime props validation.
 *
 * @deprecated componentWillReceiveProps is deprecated in React 16.9; use AbstractComponent2 instead
 */ var AbstractComponent = /** @class */ function(_super) {
    _tslib.__extends(AbstractComponent1, _super);
    function AbstractComponent1(props, context) {
        var _this = _super.call(this, props, context) || this;
        // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op
        _this.timeoutIds = [];
        /**
         * Clear all known timeouts.
         */ _this.clearTimeouts = function() {
            if (_this.timeoutIds.length > 0) {
                for(var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++){
                    var timeoutId = _a[_i];
                    window.clearTimeout(timeoutId);
                }
                _this.timeoutIds = [];
            }
        };
        if (!_utils.isNodeEnv("production")) _this.validateProps(_this.props);
        return _this;
    }
    AbstractComponent1.prototype.componentWillReceiveProps = function(nextProps) {
        if (!_utils.isNodeEnv("production")) this.validateProps(nextProps);
    };
    AbstractComponent1.prototype.componentWillUnmount = function() {
        this.clearTimeouts();
    };
    /**
     * Set a timeout and remember its ID.
     * All stored timeouts will be cleared when component unmounts.
     *
     * @returns a "cancel" function that will clear timeout when invoked.
     */ AbstractComponent1.prototype.setTimeout = function(callback, timeout) {
        var handle = window.setTimeout(callback, timeout);
        this.timeoutIds.push(handle);
        return function() {
            return window.clearTimeout(handle);
        };
    };
    /**
     * Ensures that the props specified for a component are valid.
     * Implementations should check that props are valid and usually throw an Error if they are not.
     * Implementations should not duplicate checks that the type system already guarantees.
     *
     * This method should be used instead of React's
     * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.
     * Like propTypes, these runtime checks run only in development mode.
     */ AbstractComponent1.prototype.validateProps = function(_) {
    // implement in subclass
    };
    return AbstractComponent1;
}(_react.Component);

},{"tslib":"45hme","react":"21dqq","./utils":"8MRas","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"45hme":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends
);
parcelHelpers.export(exports, "__assign", ()=>__assign
);
parcelHelpers.export(exports, "__rest", ()=>__rest
);
parcelHelpers.export(exports, "__decorate", ()=>__decorate
);
parcelHelpers.export(exports, "__param", ()=>__param
);
parcelHelpers.export(exports, "__metadata", ()=>__metadata
);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter
);
parcelHelpers.export(exports, "__generator", ()=>__generator
);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding
);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar
);
parcelHelpers.export(exports, "__values", ()=>__values
);
parcelHelpers.export(exports, "__read", ()=>__read
);
/** @deprecated */ parcelHelpers.export(exports, "__spread", ()=>__spread
);
/** @deprecated */ parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays
);
parcelHelpers.export(exports, "__spreadArray", ()=>__spreadArray
);
parcelHelpers.export(exports, "__await", ()=>__await
);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator
);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator
);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues
);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject
);
parcelHelpers.export(exports, "__importStar", ()=>__importStar
);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault
);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet
);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet
);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d1, b1) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d1, b1);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: n === "return"
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v1) {
        Promise.resolve(v1).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7OmPa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AbstractComponent2", ()=>AbstractComponent2
);
/*
 * Copyright 2019 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _utils = require("./utils");
/**
 * An abstract component that Blueprint components can extend
 * in order to add some common functionality like runtime props validation.
 */ // eslint-disable-next-line @typescript-eslint/ban-types
var AbstractComponent2 = /** @class */ function(_super) {
    _tslib.__extends(AbstractComponent21, _super);
    function AbstractComponent21(props, context) {
        var _this = _super.call(this, props, context) || this;
        // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op
        _this.timeoutIds = [];
        _this.requestIds = [];
        /**
         * Clear all known timeouts.
         */ _this.clearTimeouts = function() {
            if (_this.timeoutIds.length > 0) {
                for(var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++){
                    var timeoutId = _a[_i];
                    window.clearTimeout(timeoutId);
                }
                _this.timeoutIds = [];
            }
        };
        /**
         * Clear all known animation frame requests.
         */ _this.cancelAnimationFrames = function() {
            if (_this.requestIds.length > 0) {
                for(var _i = 0, _a = _this.requestIds; _i < _a.length; _i++){
                    var requestId = _a[_i];
                    window.cancelAnimationFrame(requestId);
                }
                _this.requestIds = [];
            }
        };
        if (!_utils.isNodeEnv("production")) _this.validateProps(_this.props);
        return _this;
    }
    AbstractComponent21.prototype.componentDidUpdate = function(_prevProps, _prevState, _snapshot) {
        if (!_utils.isNodeEnv("production")) this.validateProps(this.props);
    };
    AbstractComponent21.prototype.componentWillUnmount = function() {
        this.clearTimeouts();
        this.cancelAnimationFrames();
    };
    /**
     * Request an animation frame and remember its ID.
     * All pending requests will be canceled when component unmounts.
     *
     * @returns a "cancel" function that will cancel the request when invoked.
     */ AbstractComponent21.prototype.requestAnimationFrame = function(callback) {
        var handle = window.requestAnimationFrame(callback);
        this.requestIds.push(handle);
        return function() {
            return window.cancelAnimationFrame(handle);
        };
    };
    /**
     * Set a timeout and remember its ID.
     * All stored timeouts will be cleared when component unmounts.
     *
     * @returns a "cancel" function that will clear timeout when invoked.
     */ AbstractComponent21.prototype.setTimeout = function(callback, timeout) {
        var handle = window.setTimeout(callback, timeout);
        this.timeoutIds.push(handle);
        return function() {
            return window.clearTimeout(handle);
        };
    };
    /**
     * Ensures that the props specified for a component are valid.
     * Implementations should check that props are valid and usually throw an Error if they are not.
     * Implementations should not duplicate checks that the type system already guarantees.
     *
     * This method should be used instead of React's
     * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.
     * Like propTypes, these runtime checks run only in development mode.
     */ AbstractComponent21.prototype.validateProps = function(_props) {
    // implement in subclass
    };
    return AbstractComponent21;
}(_react.Component);

},{"tslib":"45hme","react":"21dqq","./utils":"8MRas","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h9JtO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AbstractPureComponent", ()=>AbstractPureComponent
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _utils = require("./utils");
/**
 * An abstract component that Blueprint components can extend
 * in order to add some common functionality like runtime props validation.
 *
 * @deprecated componentWillReceiveProps is deprecated in React 16.9; use AbstractPureComponent2 instead
 */ // eslint-disable-next-line @typescript-eslint/ban-types
var AbstractPureComponent = /** @class */ function(_super) {
    _tslib.__extends(AbstractPureComponent1, _super);
    function AbstractPureComponent1(props, context) {
        var _this = _super.call(this, props, context) || this;
        // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op
        _this.timeoutIds = [];
        /**
         * Clear all known timeouts.
         */ _this.clearTimeouts = function() {
            if (_this.timeoutIds.length > 0) {
                for(var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++){
                    var timeoutId = _a[_i];
                    window.clearTimeout(timeoutId);
                }
                _this.timeoutIds = [];
            }
        };
        if (!_utils.isNodeEnv("production")) _this.validateProps(_this.props);
        return _this;
    }
    AbstractPureComponent1.prototype.componentWillReceiveProps = function(nextProps) {
        if (!_utils.isNodeEnv("production")) this.validateProps(nextProps);
    };
    AbstractPureComponent1.prototype.componentWillUnmount = function() {
        this.clearTimeouts();
    };
    /**
     * Set a timeout and remember its ID.
     * All stored timeouts will be cleared when component unmounts.
     *
     * @returns a "cancel" function that will clear timeout when invoked.
     */ AbstractPureComponent1.prototype.setTimeout = function(callback, timeout) {
        var handle = window.setTimeout(callback, timeout);
        this.timeoutIds.push(handle);
        return function() {
            return window.clearTimeout(handle);
        };
    };
    /**
     * Ensures that the props specified for a component are valid.
     * Implementations should check that props are valid and usually throw an Error if they are not.
     * Implementations should not duplicate checks that the type system already guarantees.
     *
     * This method should be used instead of React's
     * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.
     * Like propTypes, these runtime checks run only in development mode.
     */ AbstractPureComponent1.prototype.validateProps = function(_props) {
    // implement in subclass
    };
    return AbstractPureComponent1;
}(_react.PureComponent);

},{"tslib":"45hme","react":"21dqq","./utils":"8MRas","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4HnqN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AbstractPureComponent2", ()=>AbstractPureComponent2
);
/*
 * Copyright 2019 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _utils = require("./utils");
/**
 * An abstract component that Blueprint components can extend
 * in order to add some common functionality like runtime props validation.
 */ // eslint-disable-next-line @typescript-eslint/ban-types
var AbstractPureComponent2 = /** @class */ function(_super) {
    _tslib.__extends(AbstractPureComponent21, _super);
    function AbstractPureComponent21(props, context) {
        var _this = _super.call(this, props, context) || this;
        // Not bothering to remove entries when their timeouts finish because clearing invalid ID is a no-op
        _this.timeoutIds = [];
        _this.requestIds = [];
        /**
         * Clear all known timeouts.
         */ _this.clearTimeouts = function() {
            if (_this.timeoutIds.length > 0) {
                for(var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++){
                    var timeoutId = _a[_i];
                    window.clearTimeout(timeoutId);
                }
                _this.timeoutIds = [];
            }
        };
        /**
         * Clear all known animation frame requests.
         */ _this.cancelAnimationFrames = function() {
            if (_this.requestIds.length > 0) {
                for(var _i = 0, _a = _this.requestIds; _i < _a.length; _i++){
                    var requestId = _a[_i];
                    window.cancelAnimationFrame(requestId);
                }
                _this.requestIds = [];
            }
        };
        if (!_utils.isNodeEnv("production")) _this.validateProps(_this.props);
        return _this;
    }
    AbstractPureComponent21.prototype.componentDidUpdate = function(_prevProps, _prevState, _snapshot) {
        if (!_utils.isNodeEnv("production")) this.validateProps(this.props);
    };
    AbstractPureComponent21.prototype.componentWillUnmount = function() {
        this.clearTimeouts();
        this.cancelAnimationFrames();
    };
    /**
     * Request an animation frame and remember its ID.
     * All pending requests will be canceled when component unmounts.
     *
     * @returns a "cancel" function that will cancel the request when invoked.
     */ AbstractPureComponent21.prototype.requestAnimationFrame = function(callback) {
        var handle = window.requestAnimationFrame(callback);
        this.requestIds.push(handle);
        return function() {
            return window.cancelAnimationFrame(handle);
        };
    };
    /**
     * Set a timeout and remember its ID.
     * All pending timeouts will be cleared when component unmounts.
     *
     * @returns a "cancel" function that will clear timeout when invoked.
     */ AbstractPureComponent21.prototype.setTimeout = function(callback, timeout) {
        var handle = window.setTimeout(callback, timeout);
        this.timeoutIds.push(handle);
        return function() {
            return window.clearTimeout(handle);
        };
    };
    /**
     * Ensures that the props specified for a component are valid.
     * Implementations should check that props are valid and usually throw an Error if they are not.
     * Implementations should not duplicate checks that the type system already guarantees.
     *
     * This method should be used instead of React's
     * [propTypes](https://facebook.github.io/react/docs/reusable-components.html#prop-validation) feature.
     * Like propTypes, these runtime checks run only in development mode.
     */ AbstractPureComponent21.prototype.validateProps = function(_props) {
    // implement in subclass
    };
    return AbstractPureComponent21;
}(_react.PureComponent);

},{"tslib":"45hme","react":"21dqq","./utils":"8MRas","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"12gzq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Boundary", ()=>Boundary
);
var Boundary = {
    START: "start",
    // tslint:disable-next-line:object-literal-sort-keys
    END: "end"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8WZAt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7F9ht":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DISPLAYNAME_PREFIX", ()=>DISPLAYNAME_PREFIX
);
/**
 * Typically applied to HTMLElements to filter out disallowed props. When applied to a Component,
 * can filter props from being passed down to the children. Can also filter by a combined list of
 * supplied prop keys and the denylist (only appropriate for HTMLElements).
 *
 * @param props The original props object to filter down.
 * @param {string[]} invalidProps If supplied, overwrites the default denylist.
 * @param {boolean} shouldMerge If true, will merge supplied invalidProps and denylist together.
 */ parcelHelpers.export(exports, "removeNonHTMLProps", ()=>removeNonHTMLProps
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var DISPLAYNAME_PREFIX = "Blueprint4";
/** A collection of curated prop keys used across our Components which are not valid HTMLElement props. */ var INVALID_PROPS = [
    "active",
    "alignText",
    "asyncControl",
    "containerRef",
    "current",
    "elementRef",
    "fill",
    "icon",
    "inputRef",
    "intent",
    "inline",
    "large",
    "loading",
    "leftElement",
    "leftIcon",
    "minimal",
    "onRemove",
    "outlined",
    "panel",
    "panelClassName",
    "popoverProps",
    "rightElement",
    "rightIcon",
    "round",
    "small",
    "text", 
];
function removeNonHTMLProps(props, invalidProps, shouldMerge) {
    if (invalidProps === void 0) invalidProps = INVALID_PROPS;
    if (shouldMerge === void 0) shouldMerge = false;
    if (shouldMerge) invalidProps = invalidProps.concat(INVALID_PROPS);
    return invalidProps.reduce(function(prev, curr) {
        // Props with hyphens (e.g. data-*) are always considered html props
        if (curr.indexOf("-") !== -1) return prev;
        if (prev.hasOwnProperty(curr)) delete prev[curr];
        return prev;
    }, _tslib.__assign({}, props));
}

},{"tslib":"45hme","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kz2Zc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ContextMenu", ()=>ContextMenu
);
parcelHelpers.export(exports, "PanelStack2", ()=>_panelStack2.PanelStack2
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _configureDom4 = require("../common/configureDom4");
var _contextMenu = require("./context-menu/contextMenu");
var _alert = require("./alert/alert");
parcelHelpers.exportAll(_alert, exports);
var _breadcrumb = require("./breadcrumbs/breadcrumb");
parcelHelpers.exportAll(_breadcrumb, exports);
var _breadcrumbs = require("./breadcrumbs/breadcrumbs");
parcelHelpers.exportAll(_breadcrumbs, exports);
var _buttons = require("./button/buttons");
parcelHelpers.exportAll(_buttons, exports);
var _buttonGroup = require("./button/buttonGroup");
parcelHelpers.exportAll(_buttonGroup, exports);
var _callout = require("./callout/callout");
parcelHelpers.exportAll(_callout, exports);
var _card = require("./card/card");
parcelHelpers.exportAll(_card, exports);
var _collapse = require("./collapse/collapse");
parcelHelpers.exportAll(_collapse, exports);
var _collapsibleList = require("./collapsible-list/collapsibleList");
parcelHelpers.exportAll(_collapsibleList, exports);
var _contextMenuTarget = require("./context-menu/contextMenuTarget");
parcelHelpers.exportAll(_contextMenuTarget, exports);
var _dialog = require("./dialog/dialog");
parcelHelpers.exportAll(_dialog, exports);
var _multistepDialog = require("./dialog/multistepDialog");
parcelHelpers.exportAll(_multistepDialog, exports);
var _dialogStep = require("./dialog/dialogStep");
parcelHelpers.exportAll(_dialogStep, exports);
var _divider = require("./divider/divider");
parcelHelpers.exportAll(_divider, exports);
var _drawer = require("./drawer/drawer");
parcelHelpers.exportAll(_drawer, exports);
var _editableText = require("./editable-text/editableText");
parcelHelpers.exportAll(_editableText, exports);
var _controlGroup = require("./forms/controlGroup");
parcelHelpers.exportAll(_controlGroup, exports);
var _controls = require("./forms/controls");
parcelHelpers.exportAll(_controls, exports);
var _fileInput = require("./forms/fileInput");
parcelHelpers.exportAll(_fileInput, exports);
var _formGroup = require("./forms/formGroup");
parcelHelpers.exportAll(_formGroup, exports);
var _inputGroup = require("./forms/inputGroup");
parcelHelpers.exportAll(_inputGroup, exports);
var _numericInput = require("./forms/numericInput");
parcelHelpers.exportAll(_numericInput, exports);
var _radioGroup = require("./forms/radioGroup");
parcelHelpers.exportAll(_radioGroup, exports);
var _textArea = require("./forms/textArea");
parcelHelpers.exportAll(_textArea, exports);
var _html = require("./html/html");
parcelHelpers.exportAll(_html, exports);
var _htmlSelect = require("./html-select/htmlSelect");
parcelHelpers.exportAll(_htmlSelect, exports);
var _htmlTable = require("./html-table/htmlTable");
parcelHelpers.exportAll(_htmlTable, exports);
var _index = require("./hotkeys/index");
parcelHelpers.exportAll(_index, exports);
var _icon = require("./icon/icon");
parcelHelpers.exportAll(_icon, exports);
var _menu = require("./menu/menu");
parcelHelpers.exportAll(_menu, exports);
var _menuDivider = require("./menu/menuDivider");
parcelHelpers.exportAll(_menuDivider, exports);
var _menuItem = require("./menu/menuItem");
parcelHelpers.exportAll(_menuItem, exports);
var _navbar = require("./navbar/navbar");
parcelHelpers.exportAll(_navbar, exports);
var _navbarDivider = require("./navbar/navbarDivider");
parcelHelpers.exportAll(_navbarDivider, exports);
var _navbarGroup = require("./navbar/navbarGroup");
parcelHelpers.exportAll(_navbarGroup, exports);
var _navbarHeading = require("./navbar/navbarHeading");
parcelHelpers.exportAll(_navbarHeading, exports);
var _nonIdealState = require("./non-ideal-state/nonIdealState");
parcelHelpers.exportAll(_nonIdealState, exports);
var _overflowList = require("./overflow-list/overflowList");
parcelHelpers.exportAll(_overflowList, exports);
var _overlay = require("./overlay/overlay");
parcelHelpers.exportAll(_overlay, exports);
var _text = require("./text/text");
parcelHelpers.exportAll(_text, exports);
var _panelProps = require("./panel-stack/panelProps");
parcelHelpers.exportAll(_panelProps, exports);
var _panelStack = require("./panel-stack/panelStack");
parcelHelpers.exportAll(_panelStack, exports);
var _panelStack2 = require("./panel-stack2/panelStack2");
var _popover = require("./popover/popover");
parcelHelpers.exportAll(_popover, exports);
var _popoverSharedProps = require("./popover/popoverSharedProps");
parcelHelpers.exportAll(_popoverSharedProps, exports);
var _portal = require("./portal/portal");
parcelHelpers.exportAll(_portal, exports);
var _progressBar = require("./progress-bar/progressBar");
parcelHelpers.exportAll(_progressBar, exports);
var _resizeSensor = require("./resize-sensor/resizeSensor");
parcelHelpers.exportAll(_resizeSensor, exports);
var _resizeObserverTypes = require("./resize-sensor/resizeObserverTypes");
parcelHelpers.exportAll(_resizeObserverTypes, exports);
var _handleProps = require("./slider/handleProps");
parcelHelpers.exportAll(_handleProps, exports);
var _multiSlider = require("./slider/multiSlider");
parcelHelpers.exportAll(_multiSlider, exports);
var _rangeSlider = require("./slider/rangeSlider");
parcelHelpers.exportAll(_rangeSlider, exports);
var _slider = require("./slider/slider");
parcelHelpers.exportAll(_slider, exports);
var _spinner = require("./spinner/spinner");
parcelHelpers.exportAll(_spinner, exports);
var _tab = require("./tabs/tab");
parcelHelpers.exportAll(_tab, exports);
var _tabs = require("./tabs/tabs");
parcelHelpers.exportAll(_tabs, exports);
var _tag = require("./tag/tag");
parcelHelpers.exportAll(_tag, exports);
var _tagInput = require("./tag-input/tagInput");
parcelHelpers.exportAll(_tagInput, exports);
var _toast = require("./toast/toast");
parcelHelpers.exportAll(_toast, exports);
var _toaster = require("./toast/toaster");
parcelHelpers.exportAll(_toaster, exports);
var _tooltip = require("./tooltip/tooltip");
parcelHelpers.exportAll(_tooltip, exports);
var _tree = require("./tree/tree");
parcelHelpers.exportAll(_tree, exports);
var _treeNode = require("./tree/treeNode");
parcelHelpers.exportAll(_treeNode, exports);
var ContextMenu = _contextMenu;

},{"../common/configureDom4":"aQfqf","./context-menu/contextMenu":"jkqy3","./alert/alert":"aYDC9","./breadcrumbs/breadcrumb":"cU5A6","./breadcrumbs/breadcrumbs":"gvHUX","./button/buttons":"lDi9s","./button/buttonGroup":"1Hg3x","./callout/callout":"lJ4y4","./card/card":"lzOSv","./collapse/collapse":"6FJtN","./collapsible-list/collapsibleList":"03E29","./context-menu/contextMenuTarget":"cmIQK","./dialog/dialog":"aVitu","./dialog/multistepDialog":"gupDz","./dialog/dialogStep":"hzES5","./divider/divider":"5lcjg","./drawer/drawer":"gdHwx","./editable-text/editableText":"3W3rI","./forms/controlGroup":"8C6YA","./forms/controls":"2eMZi","./forms/fileInput":"1CcCZ","./forms/formGroup":"8TGbI","./forms/inputGroup":"3i4VK","./forms/numericInput":"i5ufe","./forms/radioGroup":"i1Tq8","./forms/textArea":"2qg2E","./html/html":"iCwHB","./html-select/htmlSelect":"6GeNU","./html-table/htmlTable":"9Ndxk","./hotkeys/index":"8rD26","./icon/icon":"7dRdu","./menu/menu":"025mK","./menu/menuDivider":"1XXc1","./menu/menuItem":"3MFRd","./navbar/navbar":"8zPlx","./navbar/navbarDivider":"duZSg","./navbar/navbarGroup":"3XASG","./navbar/navbarHeading":"lU6pr","./non-ideal-state/nonIdealState":"aOp9W","./overflow-list/overflowList":"fGPil","./overlay/overlay":"ikpmN","./text/text":"ll8ip","./panel-stack/panelProps":"eTJPU","./panel-stack/panelStack":"9eaQL","./panel-stack2/panelStack2":"aH1jU","./popover/popover":"kIaY0","./popover/popoverSharedProps":"cxkUE","./portal/portal":"45Axs","./progress-bar/progressBar":"22QiL","./resize-sensor/resizeSensor":"kcRK5","./resize-sensor/resizeObserverTypes":"3gw4h","./slider/handleProps":"hPDcD","./slider/multiSlider":"8DU1y","./slider/rangeSlider":"hsX4m","./slider/slider":"iMGKL","./spinner/spinner":"6ziR3","./tabs/tab":"aQHyU","./tabs/tabs":"5IVoJ","./tag/tag":"9uHiF","./tag-input/tagInput":"QDtNx","./toast/toast":"8nZR3","./toast/toaster":"6gg8h","./tooltip/tooltip":"avrl0","./tree/tree":"i1wQV","./tree/treeNode":"4cgOz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jkqy3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Show the given menu element at the given offset from the top-left corner of the viewport.
 * The menu will appear below-right of this point and will flip to below-left if there is not enough
 * room onscreen. The optional callback will be invoked when this menu closes.
 *
 * @deprecated use ContextMenu2
 */ parcelHelpers.export(exports, "show", ()=>show
);
/** Hide the open context menu. */ parcelHelpers.export(exports, "hide", ()=>hide
);
/** Return whether a context menu is currently open. */ parcelHelpers.export(exports, "isOpen", ()=>isOpen
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactDom = require("react-dom");
var _common = require("../../common");
var _popover = require("../popover/popover");
var POPPER_MODIFIERS = {
    preventOverflow: {
        boundariesElement: "viewport"
    }
};
var TRANSITION_DURATION = 100;
/* istanbul ignore next */ /** @deprecated use ContextMenu2 */ var ContextMenu = /** @class */ function(_super) {
    _tslib.__extends(ContextMenu1, _super);
    function ContextMenu1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isDarkTheme: false,
            isOpen: false
        };
        _this.cancelContextMenu = function(e) {
            return e.preventDefault();
        };
        _this.handleBackdropContextMenu = function(e) {
            // React function to remove from the event pool, useful when using a event within a callback
            e.persist();
            e.preventDefault();
            // wait for backdrop to disappear so we can find the "real" element at event coordinates.
            // timeout duration is equivalent to transition duration so we know it's animated out.
            _this.setTimeout(function() {
                // retrigger context menu event at the element beneath the backdrop.
                // if it has a `contextmenu` event handler then it'll be invoked.
                // if it doesn't, no native menu will show (at least on OSX) :(
                var newTarget = document.elementFromPoint(e.clientX, e.clientY);
                var view = e.view, newEventInit = _tslib.__rest(e, [
                    "view"
                ]);
                newTarget === null || newTarget === void 0 || newTarget.dispatchEvent(new MouseEvent("contextmenu", newEventInit));
            }, TRANSITION_DURATION);
        };
        _this.handlePopoverInteraction = function(nextOpenState) {
            if (!nextOpenState) // delay the actual hiding till the event queue clears
            // to avoid flicker of opening twice
            _this.requestAnimationFrame(function() {
                return _this.hide();
            });
        };
        return _this;
    }
    ContextMenu1.prototype.render = function() {
        var _a;
        // prevent right-clicking in a context menu
        var content = _react.createElement("div", {
            onContextMenu: this.cancelContextMenu
        }, this.state.menu);
        var popoverClassName = _classnamesDefault.default((_a = {}, _a[_common.Classes.DARK] = this.state.isDarkTheme, _a));
        // HACKHACK: workaround until we have access to Popper#scheduleUpdate().
        // https://github.com/palantir/blueprint/issues/692
        // Generate key based on offset so a new Popover instance is created
        // when offset changes, to force recomputing position.
        var key = this.state.offset === undefined ? "" : "".concat(this.state.offset.left, "x").concat(this.state.offset.top);
        // wrap the popover in a positioned div to make sure it is properly
        // offset on the screen.
        /* eslint-disable deprecation/deprecation */ return _react.createElement("div", {
            className: _common.Classes.CONTEXT_MENU_POPOVER_TARGET,
            style: this.state.offset
        }, _react.createElement(_popover.Popover, _tslib.__assign({}, this.props, {
            backdropProps: {
                onContextMenu: this.handleBackdropContextMenu
            },
            content: content,
            enforceFocus: false,
            key: key,
            hasBackdrop: true,
            isOpen: this.state.isOpen,
            minimal: true,
            modifiers: POPPER_MODIFIERS,
            onInteraction: this.handlePopoverInteraction,
            position: _common.Position.RIGHT_TOP,
            popoverClassName: popoverClassName,
            target: _react.createElement("div", null),
            transitionDuration: TRANSITION_DURATION
        })));
    /* eslint-enable deprecation/deprecation */ };
    ContextMenu1.prototype.show = function(menu, offset, onClose, isDarkTheme) {
        if (isDarkTheme === void 0) isDarkTheme = false;
        this.setState({
            isOpen: true,
            menu: menu,
            offset: offset,
            onClose: onClose,
            isDarkTheme: isDarkTheme
        });
    };
    ContextMenu1.prototype.hide = function() {
        var _a, _b;
        (_b = (_a = this.state).onClose) === null || _b === void 0 || _b.call(_a);
        this.setState({
            isOpen: false,
            onClose: undefined
        });
    };
    return ContextMenu1;
}(_common.AbstractPureComponent2);
var contextMenuElement;
// eslint-disable-next-line deprecation/deprecation
var contextMenu;
function show(menu, offset, onClose, isDarkTheme) {
    if (contextMenuElement === undefined) {
        contextMenuElement = document.createElement("div");
        contextMenuElement.classList.add(_common.Classes.CONTEXT_MENU);
        document.body.appendChild(contextMenuElement);
        /* eslint-disable deprecation/deprecation */ contextMenu = _reactDom.render(_react.createElement(ContextMenu, {
            onClosed: remove
        }), contextMenuElement);
    /* eslint-enable deprecation/deprecation */ }
    contextMenu.show(menu, offset, onClose, isDarkTheme);
}
function hide() {
    contextMenu === null || contextMenu === void 0 || contextMenu.hide();
}
function isOpen() {
    return contextMenu != null && contextMenu.state.isOpen;
}
function remove() {
    if (contextMenuElement != null) {
        _reactDom.unmountComponentAtNode(contextMenuElement);
        contextMenuElement.remove();
        contextMenuElement = undefined;
        contextMenu = undefined;
    }
}

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","react-dom":"j6uA9","../../common":"6BNPY","../popover/popover":"kIaY0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jocGM":[function(require,module,exports) {
/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/ /* global define */ (function() {
    var hasOwn = {}.hasOwnProperty;
    function classNames() {
        var classes = [];
        for(var i = 0; i < arguments.length; i++){
            var arg = arguments[i];
            if (!arg) continue;
            var argType = typeof arg;
            if (argType === 'string' || argType === 'number') classes.push(arg);
            else if (Array.isArray(arg)) {
                if (arg.length) {
                    var inner = classNames.apply(null, arg);
                    if (inner) classes.push(inner);
                }
            } else if (argType === 'object') {
                if (arg.toString === Object.prototype.toString) {
                    for(var key in arg)if (hasOwn.call(arg, key) && arg[key]) classes.push(key);
                } else classes.push(arg.toString());
            }
        }
        return classes.join(' ');
    }
    if (module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
    } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) // register as 'classnames', consistent with npm package name
    define('classnames', [], function() {
        return classNames;
    });
    else window.classNames = classNames;
})();

},{}],"kIaY0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PopoverInteractionKind", ()=>PopoverInteractionKind
);
parcelHelpers.export(exports, "Popover", ()=>Popover
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactPopper = require("react-popper");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _overlay = require("../overlay/overlay");
var _resizeSensor = require("../resize-sensor/resizeSensor");
// eslint-disable-next-line import/no-cycle
var _tooltip = require("../tooltip/tooltip");
var _popoverArrow = require("./popoverArrow");
var _popoverMigrationUtils = require("./popoverMigrationUtils");
var _popperUtils = require("./popperUtils");
var PopoverInteractionKind = {
    CLICK: "click",
    CLICK_TARGET_ONLY: "click-target",
    HOVER: "hover",
    HOVER_TARGET_ONLY: "hover-target"
};
/** @deprecated use { Popover2 } from "@blueprintjs/popover2" */ var Popover = /** @class */ function(_super) {
    _tslib.__extends(Popover1, _super);
    function Popover1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // eslint-disable-next-line deprecation/deprecation
        _this.popoverRef = _react.createRef();
        /**
         * DOM element that contains the popover.
         * When `usePortal={true}`, this element will be portaled outside the usual DOM flow,
         * so this reference can be very useful for testing.
         */ _this.popoverElement = null;
        /** DOM element that contains the target. */ _this.targetElement = null;
        _this.state = {
            hasDarkParent: false,
            isOpen: _this.getIsOpen(_this.props),
            transformOrigin: ""
        };
        // a flag that lets us detect mouse movement between the target and popover,
        // now that mouseleave is triggered when you cross the gap between the two.
        _this.isMouseInTargetOrPopover = false;
        // a flag that indicates whether the target previously lost focus to another
        // element on the same page.
        _this.lostFocusOnSamePage = true;
        _this.handlePopoverRef = _common.refHandler(_this, "popoverElement", _this.props.popoverRef);
        _this.handleTargetRef = function(ref) {
            return _this.targetElement = ref;
        };
        /**
         * Instance method to instruct the `Popover` to recompute its position.
         *
         * This method should only be used if you are updating the target in a way
         * that does not cause it to re-render, such as changing its _position_
         * without changing its _size_ (since `Popover` already repositions when it
         * detects a resize).
         */ _this.reposition = function() {
            var _a;
            return (_a = _this.popperScheduleUpdate) === null || _a === void 0 ? void 0 : _a.call(_this);
        };
        _this.renderPopover = function(popperProps) {
            var _a;
            var _b = _this.props, interactionKind = _b.interactionKind, usePortal = _b.usePortal;
            var transformOrigin = _this.state.transformOrigin;
            // Need to update our reference to this on every render as it will change.
            _this.popperScheduleUpdate = popperProps.scheduleUpdate;
            var popoverHandlers = {
                // always check popover clicks for dismiss class
                onClick: _this.handlePopoverClick
            };
            if (interactionKind === PopoverInteractionKind.HOVER || !usePortal && interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY) {
                popoverHandlers.onMouseEnter = _this.handleMouseEnter;
                popoverHandlers.onMouseLeave = _this.handleMouseLeave;
            }
            var popoverClasses = _classnamesDefault.default(_common.Classes.POPOVER, (_a = {}, _a[_common.Classes.DARK] = _this.props.inheritDarkTheme && _this.state.hasDarkParent, _a[_common.Classes.MINIMAL] = _this.props.minimal, _a[_common.Classes.POPOVER_CAPTURING_DISMISS] = _this.props.captureDismiss, _a[_common.Classes.POPOVER_OUT_OF_BOUNDARIES] = popperProps.outOfBoundaries === true, _a), _this.props.popoverClassName);
            return _react.createElement("div", {
                className: _common.Classes.TRANSITION_CONTAINER,
                ref: popperProps.ref,
                style: popperProps.style
            }, _react.createElement(_resizeSensor.ResizeSensor, {
                onResize: _this.reposition
            }, _react.createElement("div", _tslib.__assign({
                className: popoverClasses,
                style: {
                    transformOrigin: transformOrigin
                },
                ref: _this.popoverRef
            }, popoverHandlers), _this.isArrowEnabled() && _react.createElement(_popoverArrow.PopoverArrow, {
                arrowProps: popperProps.arrowProps,
                placement: popperProps.placement
            }), _react.createElement("div", {
                className: _common.Classes.POPOVER_CONTENT
            }, _this.understandChildren().content))));
        };
        _this.renderTarget = function(referenceProps) {
            var _a, _b;
            var _c = _this.props, fill = _c.fill, openOnTargetFocus = _c.openOnTargetFocus, targetClassName = _c.targetClassName, _d = _c.targetProps, targetProps = _d === void 0 ? {} : _d;
            var isOpen = _this.state.isOpen;
            var isControlled = _this.isControlled();
            var isHoverInteractionKind = _this.isHoverInteractionKind();
            var targetTagName = _this.props.targetTagName;
            if (fill) targetTagName = "div";
            var finalTargetProps = isHoverInteractionKind ? {
                // HOVER handlers
                onBlur: _this.handleTargetBlur,
                onFocus: _this.handleTargetFocus,
                onMouseEnter: _this.handleMouseEnter,
                onMouseLeave: _this.handleMouseLeave
            } : {
                // CLICK needs only one handler
                onClick: _this.handleTargetClick
            };
            finalTargetProps["aria-haspopup"] = "true";
            finalTargetProps.className = _classnamesDefault.default(_common.Classes.POPOVER_TARGET, (_a = {}, _a[_common.Classes.POPOVER_OPEN] = isOpen, _a), targetProps.className, targetClassName);
            finalTargetProps.ref = referenceProps.ref;
            var rawTarget = _utils.ensureElement(_this.understandChildren().target);
            if (rawTarget === undefined) return null;
            var rawTabIndex = rawTarget.props.tabIndex;
            // ensure target is focusable if relevant prop enabled
            var tabIndex = rawTabIndex == null && openOnTargetFocus && isHoverInteractionKind ? 0 : rawTabIndex;
            var clonedTarget = _react.cloneElement(rawTarget, {
                className: _classnamesDefault.default(rawTarget.props.className, (_b = {}, // this class is mainly useful for button targets; we should only apply it for uncontrolled popovers
                // when they are opened by a user interaction
                _b[_common.Classes.ACTIVE] = isOpen && !isControlled && !isHoverInteractionKind, _b)),
                // force disable single Tooltip child when popover is open (BLUEPRINT-552)
                /* eslint-disable-next-line deprecation/deprecation */ disabled: isOpen && _utils.isElementOfType(rawTarget, _tooltip.Tooltip) ? true : rawTarget.props.disabled,
                tabIndex: tabIndex
            });
            var target = _react.createElement(targetTagName, _tslib.__assign(_tslib.__assign({}, targetProps), finalTargetProps), clonedTarget);
            return _react.createElement(_resizeSensor.ResizeSensor, {
                onResize: _this.reposition
            }, target);
        };
        _this.isControlled = function() {
            return _this.props.isOpen !== undefined;
        };
        _this.handleTargetFocus = function(e) {
            var _a, _b;
            if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
                if (e.relatedTarget == null && !_this.lostFocusOnSamePage) // ignore this focus event -- the target was already focused but the page itself
                // lost focus (e.g. due to switching tabs).
                return;
                _this.handleMouseEnter(e);
            }
            (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onFocus) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleTargetBlur = function(e) {
            var _a, _b;
            if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) // if the next element to receive focus is within the popover, we'll want to leave the
            // popover open. e.relatedTarget ought to tell us the next element to receive focus, but if the user just
            // clicked on an element which is not focusable (either by default or with a tabIndex attribute),
            // it won't be set. So, we filter those out here and assume that a click handler somewhere else will
            // close the popover if necessary.
            {
                if (e.relatedTarget != null && !_this.isElementInPopover(e.relatedTarget)) _this.handleMouseLeave(e);
            }
            _this.lostFocusOnSamePage = e.relatedTarget != null;
            (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onBlur) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleMouseEnter = function(e) {
            var _a, _b;
            _this.isMouseInTargetOrPopover = true;
            // if we're entering the popover, and the mode is set to be HOVER_TARGET_ONLY, we want to manually
            // trigger the mouse leave event, as hovering over the popover shouldn't count.
            if (!_this.props.usePortal && _this.isElementInPopover(e.target) && _this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY && !_this.props.openOnTargetFocus) _this.handleMouseLeave(e);
            else if (!_this.props.disabled) // only begin opening popover when it is enabled
            _this.setOpenState(true, e, _this.props.hoverOpenDelay);
            (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onMouseEnter) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleMouseLeave = function(e) {
            var _a, _b;
            _this.isMouseInTargetOrPopover = false;
            // wait until the event queue is flushed, because we want to leave the
            // popover open if the mouse entered the popover immediately after
            // leaving the target (or vice versa).
            _this.setTimeout(function() {
                if (_this.isMouseInTargetOrPopover) return;
                // user-configurable closing delay is helpful when moving mouse from target to popover
                _this.setOpenState(false, e, _this.props.hoverCloseDelay);
            });
            (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onMouseLeave) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handlePopoverClick = function(e) {
            var eventTarget = e.target;
            var eventPopover = eventTarget.closest(".".concat(_common.Classes.POPOVER));
            var isEventFromSelf = eventPopover === _this.popoverRef.current;
            var isEventPopoverCapturing = eventPopover === null || eventPopover === void 0 ? void 0 : eventPopover.classList.contains(_common.Classes.POPOVER_CAPTURING_DISMISS);
            // an OVERRIDE inside a DISMISS does not dismiss, and a DISMISS inside an OVERRIDE will dismiss.
            var dismissElement = eventTarget.closest(".".concat(_common.Classes.POPOVER_DISMISS, ", .").concat(_common.Classes.POPOVER_DISMISS_OVERRIDE));
            var shouldDismiss = dismissElement != null && dismissElement.classList.contains(_common.Classes.POPOVER_DISMISS);
            var isDisabled = eventTarget.closest(":disabled, .".concat(_common.Classes.DISABLED)) != null;
            if (shouldDismiss && !isDisabled && (!isEventPopoverCapturing || isEventFromSelf)) _this.setOpenState(false, e);
        };
        _this.handleOverlayClose = function(e) {
            if (_this.targetElement === null || e === undefined) return;
            var eventTarget = e.target;
            // if click was in target, target event listener will handle things, so don't close
            if (!_utils.elementIsOrContains(_this.targetElement, eventTarget) || e.nativeEvent instanceof KeyboardEvent) _this.setOpenState(false, e);
        };
        _this.handleTargetClick = function(e) {
            var _a, _b;
            // ensure click did not originate from within inline popover before closing
            if (!_this.props.disabled && !_this.isElementInPopover(e.target)) {
                if (_this.props.isOpen == null) _this.setState(function(prevState) {
                    return {
                        isOpen: !prevState.isOpen
                    };
                });
                else _this.setOpenState(!_this.props.isOpen, e);
            }
            (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 || _b.call(_a, e);
        };
        /** Popper modifier that updates React state (for style properties) based on latest data. */ _this.updatePopoverState = function(data) {
            // always set string; let shouldComponentUpdate determine if update is necessary
            _this.setState({
                transformOrigin: _popperUtils.getTransformOrigin(data)
            });
            return data;
        };
        return _this;
    }
    Popover1.prototype.render = function() {
        var _a;
        var _b;
        // rename wrapper tag to begin with uppercase letter so it's recognized
        // as JSX component instead of intrinsic element. but because of its
        // type, tsc actually recognizes that it is _any_ intrinsic element, so
        // it can typecheck the HTML props!!
        var _c = this.props, className = _c.className, disabled = _c.disabled, fill = _c.fill, placement = _c.placement, _d = _c.position, position = _d === void 0 ? "auto" : _d, shouldReturnFocusOnClose = _c.shouldReturnFocusOnClose;
        var isOpen = this.state.isOpen;
        var wrapperTagName = this.props.wrapperTagName;
        if (fill) wrapperTagName = "div";
        var isContentEmpty = _utils.ensureElement(this.understandChildren().content) == null;
        // need to do this check in render(), because `isOpen` is derived from
        // state, and state can't necessarily be accessed in validateProps.
        if (isContentEmpty && !disabled && isOpen !== false && !_utils.isNodeEnv("production")) console.warn(_errors.POPOVER_WARN_EMPTY_CONTENT);
        var wrapperClasses = _classnamesDefault.default(_common.Classes.POPOVER_WRAPPER, className, (_a = {}, _a[_common.Classes.FILL] = fill, _a));
        var defaultAutoFocus = this.isHoverInteractionKind() ? false : undefined;
        var wrapper = _react.createElement(wrapperTagName, {
            className: wrapperClasses
        }, _react.createElement(_reactPopper.Reference, {
            innerRef: this.handleTargetRef
        }, this.renderTarget), _react.createElement(_overlay.Overlay, {
            autoFocus: (_b = this.props.autoFocus) !== null && _b !== void 0 ? _b : defaultAutoFocus,
            backdropClassName: _common.Classes.POPOVER_BACKDROP,
            backdropProps: this.props.backdropProps,
            canEscapeKeyClose: this.props.canEscapeKeyClose,
            canOutsideClickClose: this.props.interactionKind === PopoverInteractionKind.CLICK,
            className: this.props.portalClassName,
            enforceFocus: this.props.enforceFocus,
            hasBackdrop: this.props.hasBackdrop,
            isOpen: isOpen && !isContentEmpty,
            onClose: this.handleOverlayClose,
            onClosed: this.props.onClosed,
            onClosing: this.props.onClosing,
            onOpened: this.props.onOpened,
            onOpening: this.props.onOpening,
            transitionDuration: this.props.transitionDuration,
            transitionName: _common.Classes.POPOVER,
            usePortal: this.props.usePortal,
            portalContainer: this.props.portalContainer,
            // if hover interaciton, it doesn't make sense to take over focus control
            shouldReturnFocusOnClose: this.isHoverInteractionKind() ? false : shouldReturnFocusOnClose
        }, _react.createElement(_reactPopper.Popper, {
            innerRef: this.handlePopoverRef,
            placement: placement !== null && placement !== void 0 ? placement : _popoverMigrationUtils.positionToPlacement(position),
            modifiers: this.getPopperModifiers()
        }, this.renderPopover)));
        return _react.createElement(_reactPopper.Manager, null, wrapper);
    };
    Popover1.prototype.componentDidMount = function() {
        this.updateDarkParent();
    };
    Popover1.prototype.componentDidUpdate = function(prevProps, prevState) {
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        if (prevProps.popoverRef !== this.props.popoverRef) {
            _common.setRef(prevProps.popoverRef, null);
            this.handlePopoverRef = _common.refHandler(this, "popoverElement", this.props.popoverRef);
            _common.setRef(this.props.popoverRef, this.popoverElement);
        }
        this.updateDarkParent();
        var nextIsOpen = this.getIsOpen(this.props);
        if (this.props.isOpen != null && nextIsOpen !== this.state.isOpen) {
            this.setOpenState(nextIsOpen);
            // tricky: setOpenState calls setState only if this.props.isOpen is
            // not controlled, so we need to invoke setState manually here.
            this.setState({
                isOpen: nextIsOpen
            });
        } else if (this.props.disabled && this.state.isOpen && this.props.isOpen == null) // special case: close an uncontrolled popover when disabled is set to true
        this.setOpenState(false);
    };
    Popover1.prototype.validateProps = function(props) {
        if (props.isOpen == null && props.onInteraction != null) console.warn(_errors.POPOVER_WARN_UNCONTROLLED_ONINTERACTION);
        if (props.hasBackdrop && !props.usePortal) console.warn(_errors.POPOVER_WARN_HAS_BACKDROP_INLINE);
        if (props.hasBackdrop && props.interactionKind !== PopoverInteractionKind.CLICK) console.error(_errors.POPOVER_HAS_BACKDROP_INTERACTION);
        if (props.placement !== undefined && props.position !== undefined) console.warn(_errors.POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX);
        var childrenCount = _react.Children.count(props.children);
        var hasContentProp = props.content !== undefined;
        var hasTargetProp = props.target !== undefined;
        if (childrenCount === 0 && !hasTargetProp) console.error(_errors.POPOVER_REQUIRES_TARGET);
        if (childrenCount > 2) console.warn(_errors.POPOVER_WARN_TOO_MANY_CHILDREN);
        if (childrenCount > 0 && hasTargetProp) console.warn(_errors.POPOVER_WARN_DOUBLE_TARGET);
        if (childrenCount === 2 && hasContentProp) console.warn(_errors.POPOVER_WARN_DOUBLE_CONTENT);
    };
    Popover1.prototype.updateDarkParent = function() {
        if (this.props.usePortal && this.state.isOpen) {
            var hasDarkParent = this.targetElement != null && this.targetElement.closest(".".concat(_common.Classes.DARK)) != null;
            this.setState({
                hasDarkParent: hasDarkParent
            });
        }
    };
    // content and target can be specified as props or as children. this method
    // normalizes the two approaches, preferring child over prop.
    Popover1.prototype.understandChildren = function() {
        var _a = this.props, children = _a.children, contentProp = _a.content, targetProp = _a.target;
        // #validateProps asserts that 1 <= children.length <= 2 so content is optional
        var _b = _react.Children.toArray(children), targetChild = _b[0], contentChild = _b[1];
        return {
            content: contentChild == null ? contentProp : contentChild,
            target: targetChild == null ? targetProp : targetChild
        };
    };
    Popover1.prototype.getIsOpen = function(props) {
        // disabled popovers should never be allowed to open.
        if (props.disabled) return false;
        else if (props.isOpen != null) return props.isOpen;
        else return props.defaultIsOpen;
    };
    Popover1.prototype.getPopperModifiers = function() {
        var _a = this.props, boundary = _a.boundary, modifiers = _a.modifiers;
        var _b = modifiers, _c = _b.flip, flip = _c === void 0 ? {} : _c, _d = _b.preventOverflow, preventOverflow = _d === void 0 ? {} : _d;
        return _tslib.__assign(_tslib.__assign({}, modifiers), {
            arrowOffset: {
                enabled: this.isArrowEnabled(),
                fn: _popperUtils.arrowOffsetModifier,
                order: 510
            },
            flip: _tslib.__assign({
                boundariesElement: boundary
            }, flip),
            preventOverflow: _tslib.__assign({
                boundariesElement: boundary
            }, preventOverflow),
            updatePopoverState: {
                enabled: true,
                fn: this.updatePopoverState,
                order: 900
            }
        });
    };
    // a wrapper around setState({isOpen}) that will call props.onInteraction instead when in controlled mode.
    // starts a timeout to delay changing the state if a non-zero duration is provided.
    Popover1.prototype.setOpenState = function(isOpen, e, timeout) {
        var _this = this;
        var _a, _b, _c, _d, _e;
        // cancel any existing timeout because we have new state
        (_a = this.cancelOpenTimeout) === null || _a === void 0 || _a.call(this);
        if (timeout !== undefined && timeout > 0) this.cancelOpenTimeout = this.setTimeout(function() {
            return _this.setOpenState(isOpen, e);
        }, timeout);
        else {
            if (this.props.isOpen == null) this.setState({
                isOpen: isOpen
            });
            else (_c = (_b = this.props).onInteraction) === null || _c === void 0 || _c.call(_b, isOpen, e);
            if (!isOpen) // non-null assertion because the only time `e` is undefined is when in controlled mode
            // or the rare special case in uncontrolled mode when the `disabled` flag is toggled true
            (_e = (_d = this.props).onClose) === null || _e === void 0 || _e.call(_d, e);
        }
    };
    Popover1.prototype.isArrowEnabled = function() {
        var _a = this.props, minimal = _a.minimal, modifiers = _a.modifiers;
        // omitting `arrow` from `modifiers` uses Popper default, which does show an arrow.
        return !minimal && ((modifiers === null || modifiers === void 0 ? void 0 : modifiers.arrow) == null || modifiers.arrow.enabled);
    };
    Popover1.prototype.isElementInPopover = function(element) {
        var _a;
        return (_a = this.popoverElement) === null || _a === void 0 ? void 0 : _a.contains(element);
    };
    Popover1.prototype.isHoverInteractionKind = function() {
        return this.props.interactionKind === PopoverInteractionKind.HOVER || this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY;
    };
    Popover1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Popover");
    Popover1.defaultProps = {
        boundary: "scrollParent",
        captureDismiss: false,
        defaultIsOpen: false,
        disabled: false,
        fill: false,
        hasBackdrop: false,
        hoverCloseDelay: 300,
        hoverOpenDelay: 150,
        inheritDarkTheme: true,
        interactionKind: PopoverInteractionKind.CLICK,
        minimal: false,
        modifiers: {},
        openOnTargetFocus: true,
        shouldReturnFocusOnClose: false,
        // N.B. we don't set a default for `placement` or `position` here because that would trigger
        // a warning in validateProps if the other prop is specified by a user of this component
        targetTagName: "span",
        transitionDuration: 300,
        usePortal: true,
        wrapperTagName: "span"
    };
    return Popover1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","react-popper":"3FJWQ","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/props":"7F9ht","../../common/utils":"8MRas","../overlay/overlay":"ikpmN","../resize-sensor/resizeSensor":"kcRK5","../tooltip/tooltip":"avrl0","./popoverArrow":"gM9K9","./popoverMigrationUtils":"73S1l","./popperUtils":"aQnfM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3FJWQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Popper", ()=>_popperDefault.default
) // Public types
;
parcelHelpers.export(exports, "placements", ()=>_popper.placements
);
parcelHelpers.export(exports, "Manager", ()=>_managerDefault.default
);
parcelHelpers.export(exports, "Reference", ()=>_referenceDefault.default
);
// Public components
var _popper = require("./Popper");
var _popperDefault = parcelHelpers.interopDefault(_popper);
var _manager = require("./Manager");
var _managerDefault = parcelHelpers.interopDefault(_manager);
var _reference = require("./Reference");
var _referenceDefault = parcelHelpers.interopDefault(_reference);

},{"./Popper":"3Bqvm","./Manager":"2IRUA","./Reference":"a8peP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Bqvm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "InnerPopper", ()=>InnerPopper
);
parcelHelpers.export(exports, "placements", ()=>placements
);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _inheritsLoose = require("@babel/runtime/helpers/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _assertThisInitialized = require("@babel/runtime/helpers/assertThisInitialized");
var _assertThisInitializedDefault = parcelHelpers.interopDefault(_assertThisInitialized);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _deepEqual = require("deep-equal");
var _deepEqualDefault = parcelHelpers.interopDefault(_deepEqual);
var _react = require("react");
var _popperJs = require("popper.js");
var _popperJsDefault = parcelHelpers.interopDefault(_popperJs);
var _manager = require("./Manager");
var _utils = require("./utils");
var initialStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    opacity: 0,
    pointerEvents: 'none'
};
var initialArrowStyle = {};
var InnerPopper = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(InnerPopper1, _React$Component);
    function InnerPopper1() {
        var _this;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _React$Component.call.apply(_React$Component, [
            this
        ].concat(args)) || this;
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "state", {
            data: undefined,
            placement: undefined
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "popperInstance", void 0);
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "popperNode", null);
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "arrowNode", null);
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "setPopperNode", function(popperNode) {
            if (!popperNode || _this.popperNode === popperNode) return;
            _utils.setRef(_this.props.innerRef, popperNode);
            _this.popperNode = popperNode;
            _this.updatePopperInstance();
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "setArrowNode", function(arrowNode) {
            _this.arrowNode = arrowNode;
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "updateStateModifier", {
            enabled: true,
            order: 900,
            fn: function fn(data) {
                var placement = data.placement;
                _this.setState({
                    data: data,
                    placement: placement
                });
                return data;
            }
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "getOptions", function() {
            return {
                placement: _this.props.placement,
                eventsEnabled: _this.props.eventsEnabled,
                positionFixed: _this.props.positionFixed,
                modifiers: _extendsDefault.default({}, _this.props.modifiers, {
                    arrow: _extendsDefault.default({}, _this.props.modifiers && _this.props.modifiers.arrow, {
                        enabled: !!_this.arrowNode,
                        element: _this.arrowNode
                    }),
                    applyStyle: {
                        enabled: false
                    },
                    updateStateModifier: _this.updateStateModifier
                })
            };
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "getPopperStyle", function() {
            return !_this.popperNode || !_this.state.data ? initialStyle : _extendsDefault.default({
                position: _this.state.data.offsets.popper.position
            }, _this.state.data.styles);
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "getPopperPlacement", function() {
            return !_this.state.data ? undefined : _this.state.placement;
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "getArrowStyle", function() {
            return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "getOutOfBoundariesState", function() {
            return _this.state.data ? _this.state.data.hide : undefined;
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "destroyPopperInstance", function() {
            if (!_this.popperInstance) return;
            _this.popperInstance.destroy();
            _this.popperInstance = null;
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "updatePopperInstance", function() {
            _this.destroyPopperInstance();
            var _assertThisInitialize = _assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), popperNode = _assertThisInitialize.popperNode;
            var referenceElement = _this.props.referenceElement;
            if (!referenceElement || !popperNode) return;
            _this.popperInstance = new _popperJsDefault.default(referenceElement, popperNode, _this.getOptions());
        });
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "scheduleUpdate", function() {
            if (_this.popperInstance) _this.popperInstance.scheduleUpdate();
        });
        return _this;
    }
    var _proto = InnerPopper1.prototype;
    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
        // If the Popper.js options have changed, update the instance (destroy + create)
        if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed || !_deepEqualDefault.default(this.props.modifiers, prevProps.modifiers, {
            strict: true
        })) {
            if (this.props.modifiers !== prevProps.modifiers && this.props.modifiers != null && prevProps.modifiers != null && _utils.shallowEqual(this.props.modifiers, prevProps.modifiers)) console.warn("'modifiers' prop reference updated even though all values appear the same.\nConsider memoizing the 'modifiers' object to avoid needless rendering.");
            this.updatePopperInstance();
        } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
         // A placement difference in state means popper determined a new placement
        // apart from the props value. By the time the popper element is rendered with
        // the new position Popper has already measured it, if the place change triggers
        // a size change it will result in a misaligned popper. So we schedule an update to be sure.
        if (prevState.placement !== this.state.placement) this.scheduleUpdate();
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        _utils.setRef(this.props.innerRef, null);
        this.destroyPopperInstance();
    };
    _proto.render = function render() {
        return _utils.unwrapArray(this.props.children)({
            ref: this.setPopperNode,
            style: this.getPopperStyle(),
            placement: this.getPopperPlacement(),
            outOfBoundaries: this.getOutOfBoundariesState(),
            scheduleUpdate: this.scheduleUpdate,
            arrowProps: {
                ref: this.setArrowNode,
                style: this.getArrowStyle()
            }
        });
    };
    return InnerPopper1;
}(_react.Component);
_definePropertyDefault.default(InnerPopper, "defaultProps", {
    placement: 'bottom',
    eventsEnabled: true,
    referenceElement: undefined,
    positionFixed: false
});
var placements = _popperJsDefault.default.placements;
function Popper(_ref) {
    var referenceElement = _ref.referenceElement, props = _objectWithoutPropertiesLooseDefault.default(_ref, [
        "referenceElement"
    ]);
    return _react.createElement(_manager.ManagerReferenceNodeContext.Consumer, null, function(referenceNode) {
        return _react.createElement(InnerPopper, _extendsDefault.default({
            referenceElement: referenceElement !== undefined ? referenceElement : referenceNode
        }, props));
    });
}
exports.default = Popper;

},{"@babel/runtime/helpers/objectWithoutPropertiesLoose":"hvCCX","@babel/runtime/helpers/extends":"vw3vn","@babel/runtime/helpers/inheritsLoose":"bfCya","@babel/runtime/helpers/assertThisInitialized":"1mVba","@babel/runtime/helpers/defineProperty":"4x6r7","deep-equal":"b4xGx","react":"21dqq","popper.js":"dj939","./Manager":"2IRUA","./utils":"3AaM4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hvCCX":[function(require,module,exports) {
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"vw3vn":[function(require,module,exports) {
function _extends() {
    module.exports = _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
    return _extends.apply(this, arguments);
}
module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"bfCya":[function(require,module,exports) {
var setPrototypeOf = require("./setPrototypeOf.js");
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    setPrototypeOf(subClass, superClass);
}
module.exports = _inheritsLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{"./setPrototypeOf.js":"bblYu"}],"bblYu":[function(require,module,exports) {
function _setPrototypeOf(o1, p1) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
    return _setPrototypeOf(o1, p1);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"1mVba":[function(require,module,exports) {
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"4x6r7":[function(require,module,exports) {
function _defineProperty(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

},{}],"b4xGx":[function(require,module,exports) {
var objectKeys = require('object-keys');
var isArguments = require('is-arguments');
var is = require('object-is');
var isRegex = require('is-regex');
var flags = require('regexp.prototype.flags');
var isDate = require('is-date-object');
var getTime = Date.prototype.getTime;
function deepEqual(actual, expected, options) {
    var opts = options || {};
    // 7.1. All identical values are equivalent, as determined by ===.
    if (opts.strict ? is(actual, expected) : actual === expected) return true;
    // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
    if (!actual || !expected || typeof actual !== 'object' && typeof expected !== 'object') return opts.strict ? is(actual, expected) : actual == expected;
    /*
   * 7.4. For all other Object pairs, including Array objects, equivalence is
   * determined by having the same number of owned properties (as verified
   * with Object.prototype.hasOwnProperty.call), the same set of keys
   * (although not necessarily the same order), equivalent values for every
   * corresponding key, and an identical 'prototype' property. Note: this
   * accounts for both named and indexed properties on Arrays.
   */ // eslint-disable-next-line no-use-before-define
    return objEquiv(actual, expected, opts);
}
function isUndefinedOrNull(value) {
    return value === null || value === undefined;
}
function isBuffer(x) {
    if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
    if (typeof x.copy !== 'function' || typeof x.slice !== 'function') return false;
    if (x.length > 0 && typeof x[0] !== 'number') return false;
    return true;
}
function objEquiv(a, b, opts) {
    /* eslint max-statements: [2, 50] */ var i, key;
    if (typeof a !== typeof b) return false;
    if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false;
    // an identical 'prototype' property.
    if (a.prototype !== b.prototype) return false;
    if (isArguments(a) !== isArguments(b)) return false;
    var aIsRegex = isRegex(a);
    var bIsRegex = isRegex(b);
    if (aIsRegex !== bIsRegex) return false;
    if (aIsRegex || bIsRegex) return a.source === b.source && flags(a) === flags(b);
    if (isDate(a) && isDate(b)) return getTime.call(a) === getTime.call(b);
    var aIsBuffer = isBuffer(a);
    var bIsBuffer = isBuffer(b);
    if (aIsBuffer !== bIsBuffer) return false;
    if (aIsBuffer || bIsBuffer) {
        if (a.length !== b.length) return false;
        for(i = 0; i < a.length; i++){
            if (a[i] !== b[i]) return false;
        }
        return true;
    }
    if (typeof a !== typeof b) return false;
    try {
        var ka = objectKeys(a);
        var kb = objectKeys(b);
    } catch (e) {
        return false;
    }
    // having the same number of owned properties (keys incorporates hasOwnProperty)
    if (ka.length !== kb.length) return false;
    // the same set of keys (although not necessarily the same order),
    ka.sort();
    kb.sort();
    // ~~~cheap key test
    for(i = ka.length - 1; i >= 0; i--){
        if (ka[i] != kb[i]) return false;
    }
    // equivalent values for every corresponding key, and ~~~possibly expensive deep test
    for(i = ka.length - 1; i >= 0; i--){
        key = ka[i];
        if (!deepEqual(a[key], b[key], opts)) return false;
    }
    return true;
}
module.exports = deepEqual;

},{"object-keys":"eNyf4","is-arguments":"czr4n","object-is":"k2tpA","is-regex":"cBe8p","regexp.prototype.flags":"6ZV2O","is-date-object":"f8OL7"}],"eNyf4":[function(require,module,exports) {
'use strict';
var slice = Array.prototype.slice;
var isArgs = require('./isArguments');
var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) {
    return origKeys(o);
} : require('./implementation');
var originalKeys = Object.keys;
keysShim.shim = function shimObjectKeys() {
    if (Object.keys) {
        var keysWorksWithArguments = function() {
            // Safari 5.0 bug
            var args = Object.keys(arguments);
            return args && args.length === arguments.length;
        }(1, 2);
        if (!keysWorksWithArguments) Object.keys = function keys(object) {
            if (isArgs(object)) return originalKeys(slice.call(object));
            return originalKeys(object);
        };
    } else Object.keys = keysShim;
    return Object.keys || keysShim;
};
module.exports = keysShim;

},{"./isArguments":"1HhOq","./implementation":"aV01q"}],"1HhOq":[function(require,module,exports) {
'use strict';
var toStr = Object.prototype.toString;
module.exports = function isArguments(value) {
    var str = toStr.call(value);
    var isArgs = str === '[object Arguments]';
    if (!isArgs) isArgs = str !== '[object Array]' && value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';
    return isArgs;
};

},{}],"aV01q":[function(require,module,exports) {
'use strict';
var keysShim;
if (!Object.keys) {
    // modified from https://github.com/es-shims/es5-shim
    var has = Object.prototype.hasOwnProperty;
    var toStr = Object.prototype.toString;
    var isArgs = require('./isArguments'); // eslint-disable-line global-require
    var isEnumerable = Object.prototype.propertyIsEnumerable;
    var hasDontEnumBug = !isEnumerable.call({
        toString: null
    }, 'toString');
    var hasProtoEnumBug = isEnumerable.call(function() {}, 'prototype');
    var dontEnums = [
        'toString',
        'toLocaleString',
        'valueOf',
        'hasOwnProperty',
        'isPrototypeOf',
        'propertyIsEnumerable',
        'constructor'
    ];
    var equalsConstructorPrototype = function(o) {
        var ctor = o.constructor;
        return ctor && ctor.prototype === o;
    };
    var excludedKeys = {
        $applicationCache: true,
        $console: true,
        $external: true,
        $frame: true,
        $frameElement: true,
        $frames: true,
        $innerHeight: true,
        $innerWidth: true,
        $onmozfullscreenchange: true,
        $onmozfullscreenerror: true,
        $outerHeight: true,
        $outerWidth: true,
        $pageXOffset: true,
        $pageYOffset: true,
        $parent: true,
        $scrollLeft: true,
        $scrollTop: true,
        $scrollX: true,
        $scrollY: true,
        $self: true,
        $webkitIndexedDB: true,
        $webkitStorageInfo: true,
        $window: true
    };
    var hasAutomationEqualityBug = function() {
        /* global window */ if (typeof window === 'undefined') return false;
        for(var k in window)try {
            if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') try {
                equalsConstructorPrototype(window[k]);
            } catch (e) {
                return true;
            }
        } catch (e) {
            return true;
        }
        return false;
    }();
    var equalsConstructorPrototypeIfNotBuggy = function(o) {
        /* global window */ if (typeof window === 'undefined' || !hasAutomationEqualityBug) return equalsConstructorPrototype(o);
        try {
            return equalsConstructorPrototype(o);
        } catch (e) {
            return false;
        }
    };
    keysShim = function keys(object) {
        var isObject = object !== null && typeof object === 'object';
        var isFunction = toStr.call(object) === '[object Function]';
        var isArguments = isArgs(object);
        var isString = isObject && toStr.call(object) === '[object String]';
        var theKeys = [];
        if (!isObject && !isFunction && !isArguments) throw new TypeError('Object.keys called on a non-object');
        var skipProto = hasProtoEnumBug && isFunction;
        if (isString && object.length > 0 && !has.call(object, 0)) for(var i = 0; i < object.length; ++i)theKeys.push(String(i));
        if (isArguments && object.length > 0) for(var j = 0; j < object.length; ++j)theKeys.push(String(j));
        else {
            for(var name in object)if (!(skipProto && name === 'prototype') && has.call(object, name)) theKeys.push(String(name));
        }
        if (hasDontEnumBug) {
            var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
            for(var k = 0; k < dontEnums.length; ++k)if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) theKeys.push(dontEnums[k]);
        }
        return theKeys;
    };
}
module.exports = keysShim;

},{"./isArguments":"1HhOq"}],"czr4n":[function(require,module,exports) {
'use strict';
var hasToStringTag = require('has-tostringtag/shams')();
var callBound = require('call-bind/callBound');
var $toString = callBound('Object.prototype.toString');
var isStandardArguments = function isArguments(value) {
    if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) return false;
    return $toString(value) === '[object Arguments]';
};
var isLegacyArguments = function isArguments(value) {
    if (isStandardArguments(value)) return true;
    return value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && $toString(value) !== '[object Array]' && $toString(value.callee) === '[object Function]';
};
var supportsStandardArguments = function() {
    return isStandardArguments(arguments);
}();
isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests
module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

},{"has-tostringtag/shams":"9LdQ9","call-bind/callBound":"5yYiF"}],"9LdQ9":[function(require,module,exports) {
'use strict';
var hasSymbols = require('has-symbols/shams');
module.exports = function hasToStringTagShams() {
    return hasSymbols() && !!Symbol.toStringTag;
};

},{"has-symbols/shams":"euYk7"}],"euYk7":[function(require,module,exports) {
'use strict';
/* eslint complexity: [2, 18], max-statements: [2, 33] */ module.exports = function hasSymbols() {
    if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') return false;
    if (typeof Symbol.iterator === 'symbol') return true;
    var obj = {};
    var sym = Symbol('test');
    var symObj = Object(sym);
    if (typeof sym === 'string') return false;
    if (Object.prototype.toString.call(sym) !== '[object Symbol]') return false;
    if (Object.prototype.toString.call(symObj) !== '[object Symbol]') return false;
    // temp disabled per https://github.com/ljharb/object.assign/issues/17
    // if (sym instanceof Symbol) { return false; }
    // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
    // if (!(symObj instanceof Symbol)) { return false; }
    // if (typeof Symbol.prototype.toString !== 'function') { return false; }
    // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }
    var symVal = 42;
    obj[sym] = symVal;
    for(sym in obj)return false;
     // eslint-disable-line no-restricted-syntax, no-unreachable-loop
    if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) return false;
    if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) return false;
    var syms = Object.getOwnPropertySymbols(obj);
    if (syms.length !== 1 || syms[0] !== sym) return false;
    if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) return false;
    if (typeof Object.getOwnPropertyDescriptor === 'function') {
        var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
        if (descriptor.value !== symVal || descriptor.enumerable !== true) return false;
    }
    return true;
};

},{}],"5yYiF":[function(require,module,exports) {
'use strict';
var GetIntrinsic = require('get-intrinsic');
var callBind = require('./');
var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
module.exports = function callBoundIntrinsic(name, allowMissing) {
    var intrinsic = GetIntrinsic(name, !!allowMissing);
    if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) return callBind(intrinsic);
    return intrinsic;
};

},{"get-intrinsic":"dZb05","./":"bfo8D"}],"dZb05":[function(require,module,exports) {
'use strict';
var undefined;
var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;
// eslint-disable-next-line consistent-return
var getEvalledConstructor = function(expressionSyntax) {
    try {
        return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    } catch (e) {}
};
var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) try {
    $gOPD({}, '');
} catch (e) {
    $gOPD = null; // this is IE 8, which has a broken gOPD
}
var throwTypeError = function() {
    throw new $TypeError();
};
var ThrowTypeError = $gOPD ? function() {
    try {
        // eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
        arguments.callee; // IE 8 does not throw here
        return throwTypeError;
    } catch (calleeThrows) {
        try {
            // IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
            return $gOPD(arguments, 'callee').get;
        } catch (gOPDthrows) {
            return throwTypeError;
        }
    }
}() : throwTypeError;
var hasSymbols = require('has-symbols')();
var getProto = Object.getPrototypeOf || function(x) {
    return x.__proto__;
}; // eslint-disable-line no-proto
var needsEval = {};
var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);
var INTRINSICS = {
    '%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
    '%Array%': Array,
    '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
    '%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
    '%AsyncFromSyncIteratorPrototype%': undefined,
    '%AsyncFunction%': needsEval,
    '%AsyncGenerator%': needsEval,
    '%AsyncGeneratorFunction%': needsEval,
    '%AsyncIteratorPrototype%': needsEval,
    '%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
    '%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
    '%Boolean%': Boolean,
    '%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
    '%Date%': Date,
    '%decodeURI%': decodeURI,
    '%decodeURIComponent%': decodeURIComponent,
    '%encodeURI%': encodeURI,
    '%encodeURIComponent%': encodeURIComponent,
    '%Error%': Error,
    '%eval%': eval,
    '%EvalError%': EvalError,
    '%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
    '%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
    '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
    '%Function%': $Function,
    '%GeneratorFunction%': needsEval,
    '%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
    '%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
    '%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
    '%isFinite%': isFinite,
    '%isNaN%': isNaN,
    '%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
    '%JSON%': typeof JSON === 'object' ? JSON : undefined,
    '%Map%': typeof Map === 'undefined' ? undefined : Map,
    '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
    '%Math%': Math,
    '%Number%': Number,
    '%Object%': Object,
    '%parseFloat%': parseFloat,
    '%parseInt%': parseInt,
    '%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
    '%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
    '%RangeError%': RangeError,
    '%ReferenceError%': ReferenceError,
    '%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
    '%RegExp%': RegExp,
    '%Set%': typeof Set === 'undefined' ? undefined : Set,
    '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
    '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
    '%String%': String,
    '%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
    '%Symbol%': hasSymbols ? Symbol : undefined,
    '%SyntaxError%': $SyntaxError,
    '%ThrowTypeError%': ThrowTypeError,
    '%TypedArray%': TypedArray,
    '%TypeError%': $TypeError,
    '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
    '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
    '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
    '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
    '%URIError%': URIError,
    '%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
    '%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
    '%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};
var doEval = function doEval1(name) {
    var value;
    if (name === '%AsyncFunction%') value = getEvalledConstructor('async function () {}');
    else if (name === '%GeneratorFunction%') value = getEvalledConstructor('function* () {}');
    else if (name === '%AsyncGeneratorFunction%') value = getEvalledConstructor('async function* () {}');
    else if (name === '%AsyncGenerator%') {
        var fn = doEval1('%AsyncGeneratorFunction%');
        if (fn) value = fn.prototype;
    } else if (name === '%AsyncIteratorPrototype%') {
        var gen = doEval1('%AsyncGenerator%');
        if (gen) value = getProto(gen.prototype);
    }
    INTRINSICS[name] = value;
    return value;
};
var LEGACY_ALIASES = {
    '%ArrayBufferPrototype%': [
        'ArrayBuffer',
        'prototype'
    ],
    '%ArrayPrototype%': [
        'Array',
        'prototype'
    ],
    '%ArrayProto_entries%': [
        'Array',
        'prototype',
        'entries'
    ],
    '%ArrayProto_forEach%': [
        'Array',
        'prototype',
        'forEach'
    ],
    '%ArrayProto_keys%': [
        'Array',
        'prototype',
        'keys'
    ],
    '%ArrayProto_values%': [
        'Array',
        'prototype',
        'values'
    ],
    '%AsyncFunctionPrototype%': [
        'AsyncFunction',
        'prototype'
    ],
    '%AsyncGenerator%': [
        'AsyncGeneratorFunction',
        'prototype'
    ],
    '%AsyncGeneratorPrototype%': [
        'AsyncGeneratorFunction',
        'prototype',
        'prototype'
    ],
    '%BooleanPrototype%': [
        'Boolean',
        'prototype'
    ],
    '%DataViewPrototype%': [
        'DataView',
        'prototype'
    ],
    '%DatePrototype%': [
        'Date',
        'prototype'
    ],
    '%ErrorPrototype%': [
        'Error',
        'prototype'
    ],
    '%EvalErrorPrototype%': [
        'EvalError',
        'prototype'
    ],
    '%Float32ArrayPrototype%': [
        'Float32Array',
        'prototype'
    ],
    '%Float64ArrayPrototype%': [
        'Float64Array',
        'prototype'
    ],
    '%FunctionPrototype%': [
        'Function',
        'prototype'
    ],
    '%Generator%': [
        'GeneratorFunction',
        'prototype'
    ],
    '%GeneratorPrototype%': [
        'GeneratorFunction',
        'prototype',
        'prototype'
    ],
    '%Int8ArrayPrototype%': [
        'Int8Array',
        'prototype'
    ],
    '%Int16ArrayPrototype%': [
        'Int16Array',
        'prototype'
    ],
    '%Int32ArrayPrototype%': [
        'Int32Array',
        'prototype'
    ],
    '%JSONParse%': [
        'JSON',
        'parse'
    ],
    '%JSONStringify%': [
        'JSON',
        'stringify'
    ],
    '%MapPrototype%': [
        'Map',
        'prototype'
    ],
    '%NumberPrototype%': [
        'Number',
        'prototype'
    ],
    '%ObjectPrototype%': [
        'Object',
        'prototype'
    ],
    '%ObjProto_toString%': [
        'Object',
        'prototype',
        'toString'
    ],
    '%ObjProto_valueOf%': [
        'Object',
        'prototype',
        'valueOf'
    ],
    '%PromisePrototype%': [
        'Promise',
        'prototype'
    ],
    '%PromiseProto_then%': [
        'Promise',
        'prototype',
        'then'
    ],
    '%Promise_all%': [
        'Promise',
        'all'
    ],
    '%Promise_reject%': [
        'Promise',
        'reject'
    ],
    '%Promise_resolve%': [
        'Promise',
        'resolve'
    ],
    '%RangeErrorPrototype%': [
        'RangeError',
        'prototype'
    ],
    '%ReferenceErrorPrototype%': [
        'ReferenceError',
        'prototype'
    ],
    '%RegExpPrototype%': [
        'RegExp',
        'prototype'
    ],
    '%SetPrototype%': [
        'Set',
        'prototype'
    ],
    '%SharedArrayBufferPrototype%': [
        'SharedArrayBuffer',
        'prototype'
    ],
    '%StringPrototype%': [
        'String',
        'prototype'
    ],
    '%SymbolPrototype%': [
        'Symbol',
        'prototype'
    ],
    '%SyntaxErrorPrototype%': [
        'SyntaxError',
        'prototype'
    ],
    '%TypedArrayPrototype%': [
        'TypedArray',
        'prototype'
    ],
    '%TypeErrorPrototype%': [
        'TypeError',
        'prototype'
    ],
    '%Uint8ArrayPrototype%': [
        'Uint8Array',
        'prototype'
    ],
    '%Uint8ClampedArrayPrototype%': [
        'Uint8ClampedArray',
        'prototype'
    ],
    '%Uint16ArrayPrototype%': [
        'Uint16Array',
        'prototype'
    ],
    '%Uint32ArrayPrototype%': [
        'Uint32Array',
        'prototype'
    ],
    '%URIErrorPrototype%': [
        'URIError',
        'prototype'
    ],
    '%WeakMapPrototype%': [
        'WeakMap',
        'prototype'
    ],
    '%WeakSetPrototype%': [
        'WeakSet',
        'prototype'
    ]
};
var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);
/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */ var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */ 
var stringToPath = function stringToPath(string) {
    var first = $strSlice(string, 0, 1);
    var last = $strSlice(string, -1);
    if (first === '%' && last !== '%') throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
    else if (last === '%' && first !== '%') throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
    var result = [];
    $replace(string, rePropName, function(match, number, quote, subString) {
        result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
    });
    return result;
};
/* end adaptation */ var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
    var intrinsicName = name;
    var alias;
    if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
        alias = LEGACY_ALIASES[intrinsicName];
        intrinsicName = '%' + alias[0] + '%';
    }
    if (hasOwn(INTRINSICS, intrinsicName)) {
        var value = INTRINSICS[intrinsicName];
        if (value === needsEval) value = doEval(intrinsicName);
        if (typeof value === 'undefined' && !allowMissing) throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
        return {
            alias: alias,
            name: intrinsicName,
            value: value
        };
    }
    throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};
module.exports = function GetIntrinsic(name, allowMissing) {
    if (typeof name !== 'string' || name.length === 0) throw new $TypeError('intrinsic name must be a non-empty string');
    if (arguments.length > 1 && typeof allowMissing !== 'boolean') throw new $TypeError('"allowMissing" argument must be a boolean');
    var parts = stringToPath(name);
    var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
    var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
    var intrinsicRealName = intrinsic.name;
    var value = intrinsic.value;
    var skipFurtherCaching = false;
    var alias = intrinsic.alias;
    if (alias) {
        intrinsicBaseName = alias[0];
        $spliceApply(parts, $concat([
            0,
            1
        ], alias));
    }
    for(var i = 1, isOwn = true; i < parts.length; i += 1){
        var part = parts[i];
        var first = $strSlice(part, 0, 1);
        var last = $strSlice(part, -1);
        if ((first === '"' || first === "'" || first === '`' || last === '"' || last === "'" || last === '`') && first !== last) throw new $SyntaxError('property names with quotes must have matching quotes');
        if (part === 'constructor' || !isOwn) skipFurtherCaching = true;
        intrinsicBaseName += '.' + part;
        intrinsicRealName = '%' + intrinsicBaseName + '%';
        if (hasOwn(INTRINSICS, intrinsicRealName)) value = INTRINSICS[intrinsicRealName];
        else if (value != null) {
            if (!(part in value)) {
                if (!allowMissing) throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
                return void 0;
            }
            if ($gOPD && i + 1 >= parts.length) {
                var desc = $gOPD(value, part);
                isOwn = !!desc;
                // By convention, when a data property is converted to an accessor
                // property to emulate a data property that does not suffer from
                // the override mistake, that accessor's getter is marked with
                // an `originalValue` property. Here, when we detect this, we
                // uphold the illusion by pretending to see that original data
                // property, i.e., returning the value rather than the getter
                // itself.
                if (isOwn && 'get' in desc && !('originalValue' in desc.get)) value = desc.get;
                else value = value[part];
            } else {
                isOwn = hasOwn(value, part);
                value = value[part];
            }
            if (isOwn && !skipFurtherCaching) INTRINSICS[intrinsicRealName] = value;
        }
    }
    return value;
};

},{"has-symbols":"3dK91","function-bind":"6J4ob","has":"ksyoO"}],"3dK91":[function(require,module,exports) {
'use strict';
var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');
module.exports = function hasNativeSymbols() {
    if (typeof origSymbol !== 'function') return false;
    if (typeof Symbol !== 'function') return false;
    if (typeof origSymbol('foo') !== 'symbol') return false;
    if (typeof Symbol('bar') !== 'symbol') return false;
    return hasSymbolSham();
};

},{"./shams":"euYk7"}],"6J4ob":[function(require,module,exports) {
'use strict';
var implementation = require('./implementation');
module.exports = Function.prototype.bind || implementation;

},{"./implementation":"jwaxQ"}],"jwaxQ":[function(require,module,exports) {
'use strict';
/* eslint no-invalid-this: 1 */ var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';
module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) throw new TypeError(ERROR_MESSAGE + target);
    var args = slice.call(arguments, 1);
    var bound;
    var binder = function() {
        if (this instanceof bound) {
            var result = target.apply(this, args.concat(slice.call(arguments)));
            if (Object(result) === result) return result;
            return this;
        } else return target.apply(that, args.concat(slice.call(arguments)));
    };
    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for(var i = 0; i < boundLength; i++)boundArgs.push('$' + i);
    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }
    return bound;
};

},{}],"ksyoO":[function(require,module,exports) {
'use strict';
var bind = require('function-bind');
module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":"6J4ob"}],"bfo8D":[function(require,module,exports) {
'use strict';
var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');
var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');
if ($defineProperty) try {
    $defineProperty({}, 'a', {
        value: 1
    });
} catch (e) {
    // IE 8 has a broken defineProperty
    $defineProperty = null;
}
module.exports = function callBind(originalFunction) {
    var func = $reflectApply(bind, $call, arguments);
    if ($gOPD && $defineProperty) {
        var desc = $gOPD(func, 'length');
        if (desc.configurable) // original length, plus the receiver, minus any additional arguments (after the receiver)
        $defineProperty(func, 'length', {
            value: 1 + $max(0, originalFunction.length - (arguments.length - 1))
        });
    }
    return func;
};
var applyBind = function applyBind() {
    return $reflectApply(bind, $apply, arguments);
};
if ($defineProperty) $defineProperty(module.exports, 'apply', {
    value: applyBind
});
else module.exports.apply = applyBind;

},{"function-bind":"6J4ob","get-intrinsic":"dZb05"}],"k2tpA":[function(require,module,exports) {
'use strict';
var define = require('define-properties');
var callBind = require('call-bind');
var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');
var polyfill = callBind(getPolyfill(), Object);
define(polyfill, {
    getPolyfill: getPolyfill,
    implementation: implementation,
    shim: shim
});
module.exports = polyfill;

},{"define-properties":"6eq5U","call-bind":"bfo8D","./implementation":"WLxcH","./polyfill":"ezjA5","./shim":"9p2yJ"}],"6eq5U":[function(require,module,exports) {
'use strict';
var keys = require('object-keys');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';
var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;
var isFunction = function(fn) {
    return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};
var hasPropertyDescriptors = require('has-property-descriptors')();
var supportsDescriptors = origDefineProperty && hasPropertyDescriptors;
var defineProperty = function(object, name, value, predicate) {
    if (name in object && (!isFunction(predicate) || !predicate())) return;
    if (supportsDescriptors) origDefineProperty(object, name, {
        configurable: true,
        enumerable: false,
        value: value,
        writable: true
    });
    else object[name] = value; // eslint-disable-line no-param-reassign
};
var defineProperties = function(object, map) {
    var predicates = arguments.length > 2 ? arguments[2] : {};
    var props = keys(map);
    if (hasSymbols) props = concat.call(props, Object.getOwnPropertySymbols(map));
    for(var i = 0; i < props.length; i += 1)defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
};
defineProperties.supportsDescriptors = !!supportsDescriptors;
module.exports = defineProperties;

},{"object-keys":"eNyf4","has-property-descriptors":"esBLZ"}],"esBLZ":[function(require,module,exports) {
'use strict';
var GetIntrinsic = require('get-intrinsic');
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var hasPropertyDescriptors = function hasPropertyDescriptors() {
    if ($defineProperty) try {
        $defineProperty({}, 'a', {
            value: 1
        });
        return true;
    } catch (e) {
        // IE 8 has a broken defineProperty
        return false;
    }
    return false;
};
hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
    // node v0.6 has a bug where array lengths can be Set but not Defined
    if (!hasPropertyDescriptors()) return null;
    try {
        return $defineProperty([], 'length', {
            value: 1
        }).length !== 1;
    } catch (e) {
        // In Firefox 4-22, defining length on an array throws an exception.
        return true;
    }
};
module.exports = hasPropertyDescriptors;

},{"get-intrinsic":"dZb05"}],"WLxcH":[function(require,module,exports) {
'use strict';
var numberIsNaN = function(value) {
    return value !== value;
};
module.exports = function is(a, b) {
    if (a === 0 && b === 0) return 1 / a === 1 / b;
    if (a === b) return true;
    if (numberIsNaN(a) && numberIsNaN(b)) return true;
    return false;
};

},{}],"ezjA5":[function(require,module,exports) {
'use strict';
var implementation = require('./implementation');
module.exports = function getPolyfill() {
    return typeof Object.is === 'function' ? Object.is : implementation;
};

},{"./implementation":"WLxcH"}],"9p2yJ":[function(require,module,exports) {
'use strict';
var getPolyfill = require('./polyfill');
var define = require('define-properties');
module.exports = function shimObjectIs() {
    var polyfill = getPolyfill();
    define(Object, {
        is: polyfill
    }, {
        is: function testObjectIs() {
            return Object.is !== polyfill;
        }
    });
    return polyfill;
};

},{"./polyfill":"ezjA5","define-properties":"6eq5U"}],"cBe8p":[function(require,module,exports) {
'use strict';
var callBound = require('call-bind/callBound');
var hasToStringTag = require('has-tostringtag/shams')();
var has;
var $exec;
var isRegexMarker;
var badStringifier;
if (hasToStringTag) {
    has = callBound('Object.prototype.hasOwnProperty');
    $exec = callBound('RegExp.prototype.exec');
    isRegexMarker = {};
    var throwRegexMarker = function() {
        throw isRegexMarker;
    };
    badStringifier = {
        toString: throwRegexMarker,
        valueOf: throwRegexMarker
    };
    if (typeof Symbol.toPrimitive === 'symbol') badStringifier[Symbol.toPrimitive] = throwRegexMarker;
}
var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';
module.exports = hasToStringTag ? function isRegex(value) {
    if (!value || typeof value !== 'object') return false;
    var descriptor = gOPD(value, 'lastIndex');
    var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
    if (!hasLastIndexDataProperty) return false;
    try {
        $exec(value, badStringifier);
    } catch (e) {
        return e === isRegexMarker;
    }
} : function isRegex(value) {
    // In older browsers, typeof regex incorrectly returns 'function'
    if (!value || typeof value !== 'object' && typeof value !== 'function') return false;
    return $toString(value) === regexClass;
};

},{"call-bind/callBound":"5yYiF","has-tostringtag/shams":"9LdQ9"}],"6ZV2O":[function(require,module,exports) {
'use strict';
var define = require('define-properties');
var callBind = require('call-bind');
var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');
var flagsBound = callBind(getPolyfill());
define(flagsBound, {
    getPolyfill: getPolyfill,
    implementation: implementation,
    shim: shim
});
module.exports = flagsBound;

},{"define-properties":"6eq5U","call-bind":"bfo8D","./implementation":"f8ozX","./polyfill":"8OQQ9","./shim":"5EuJU"}],"f8ozX":[function(require,module,exports) {
'use strict';
var functionsHaveConfigurableNames = require('functions-have-names').functionsHaveConfigurableNames();
var $Object = Object;
var $TypeError = TypeError;
module.exports = function flags() {
    if (this != null && this !== $Object(this)) throw new $TypeError('RegExp.prototype.flags getter called on non-object');
    var result = '';
    if (this.hasIndices) result += 'd';
    if (this.global) result += 'g';
    if (this.ignoreCase) result += 'i';
    if (this.multiline) result += 'm';
    if (this.dotAll) result += 's';
    if (this.unicode) result += 'u';
    if (this.sticky) result += 'y';
    return result;
};
if (functionsHaveConfigurableNames && Object.defineProperty) Object.defineProperty(module.exports, 'name', {
    value: 'get flags'
});

},{"functions-have-names":"7AgiE"}],"7AgiE":[function(require,module,exports) {
'use strict';
var functionsHaveNames = function functionsHaveNames() {
    return typeof (function f() {}).name === 'string';
};
var gOPD = Object.getOwnPropertyDescriptor;
if (gOPD) try {
    gOPD([], 'length');
} catch (e) {
    // IE 8 has a broken gOPD
    gOPD = null;
}
functionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {
    if (!functionsHaveNames() || !gOPD) return false;
    var desc = gOPD(function() {}, 'name');
    return !!desc && !!desc.configurable;
};
var $bind = Function.prototype.bind;
functionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {
    return functionsHaveNames() && typeof $bind === 'function' && (function f() {}).bind().name !== '';
};
module.exports = functionsHaveNames;

},{}],"8OQQ9":[function(require,module,exports) {
'use strict';
var implementation = require('./implementation');
var supportsDescriptors = require('define-properties').supportsDescriptors;
var $gOPD = Object.getOwnPropertyDescriptor;
module.exports = function getPolyfill() {
    if (supportsDescriptors && /a/mig.flags === 'gim') {
        var descriptor = $gOPD(RegExp.prototype, 'flags');
        if (descriptor && typeof descriptor.get === 'function' && typeof RegExp.prototype.dotAll === 'boolean' && typeof RegExp.prototype.hasIndices === 'boolean') {
            /* eslint getter-return: 0 */ var calls = '';
            var o = {};
            Object.defineProperty(o, 'hasIndices', {
                get: function() {
                    calls += 'd';
                }
            });
            Object.defineProperty(o, 'sticky', {
                get: function() {
                    calls += 'y';
                }
            });
            if (calls === 'dy') return descriptor.get;
        }
    }
    return implementation;
};

},{"./implementation":"f8ozX","define-properties":"6eq5U"}],"5EuJU":[function(require,module,exports) {
'use strict';
var supportsDescriptors = require('define-properties').supportsDescriptors;
var getPolyfill = require('./polyfill');
var gOPD = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var TypeErr = TypeError;
var getProto = Object.getPrototypeOf;
var regex = /a/;
module.exports = function shimFlags() {
    if (!supportsDescriptors || !getProto) throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
    var polyfill = getPolyfill();
    var proto = getProto(regex);
    var descriptor = gOPD(proto, 'flags');
    if (!descriptor || descriptor.get !== polyfill) defineProperty(proto, 'flags', {
        configurable: true,
        enumerable: false,
        get: polyfill
    });
    return polyfill;
};

},{"define-properties":"6eq5U","./polyfill":"8OQQ9"}],"f8OL7":[function(require,module,exports) {
'use strict';
var getDay = Date.prototype.getDay;
var tryDateObject = function tryDateGetDayCall(value) {
    try {
        getDay.call(value);
        return true;
    } catch (e) {
        return false;
    }
};
var toStr = Object.prototype.toString;
var dateClass = '[object Date]';
var hasToStringTag = require('has-tostringtag/shams')();
module.exports = function isDateObject(value) {
    if (typeof value !== 'object' || value === null) return false;
    return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
};

},{"has-tostringtag/shams":"9LdQ9"}],"dj939":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var global = arguments[3];
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */ var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';
var timeoutDuration = function() {
    var longerTimeoutBrowsers = [
        'Edge',
        'Trident',
        'Firefox'
    ];
    for(var i = 0; i < longerTimeoutBrowsers.length; i += 1){
        if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) return 1;
    }
    return 0;
}();
function microtaskDebounce(fn) {
    var called = false;
    return function() {
        if (called) return;
        called = true;
        window.Promise.resolve().then(function() {
            called = false;
            fn();
        });
    };
}
function taskDebounce(fn) {
    var scheduled = false;
    return function() {
        if (!scheduled) {
            scheduled = true;
            setTimeout(function() {
                scheduled = false;
                fn();
            }, timeoutDuration);
        }
    };
}
var supportsMicroTasks = isBrowser && window.Promise;
/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/ var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */ function isFunction(functionToCheck) {
    var getType = {};
    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}
/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */ function getStyleComputedProperty(element, property) {
    if (element.nodeType !== 1) return [];
    // NOTE: 1 DOM access here
    var window = element.ownerDocument.defaultView;
    var css = window.getComputedStyle(element, null);
    return property ? css[property] : css;
}
/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */ function getParentNode(element) {
    if (element.nodeName === 'HTML') return element;
    return element.parentNode || element.host;
}
/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */ function getScrollParent(element) {
    // Return body, `getScroll` will take care to get the correct `scrollTop` from it
    if (!element) return document.body;
    switch(element.nodeName){
        case 'HTML':
        case 'BODY':
            return element.ownerDocument.body;
        case '#document':
            return element.body;
    }
    // Firefox want us to check `-x` and `-y` variations as well
    var _getStyleComputedProp = getStyleComputedProperty(element), overflow = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY;
    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) return element;
    return getScrollParent(getParentNode(element));
}
/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */ function getReferenceNode(reference) {
    return reference && reference.referenceNode ? reference.referenceNode : reference;
}
var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */ function isIE(version) {
    if (version === 11) return isIE11;
    if (version === 10) return isIE10;
    return isIE11 || isIE10;
}
/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */ function getOffsetParent(element) {
    if (!element) return document.documentElement;
    var noOffsetParent = isIE(10) ? document.body : null;
    // NOTE: 1 DOM access here
    var offsetParent = element.offsetParent || null;
    // Skip hidden elements which don't have an offsetParent
    while(offsetParent === noOffsetParent && element.nextElementSibling)offsetParent = (element = element.nextElementSibling).offsetParent;
    var nodeName = offsetParent && offsetParent.nodeName;
    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') return element ? element.ownerDocument.documentElement : document.documentElement;
    // .offsetParent will return the closest TH, TD or TABLE in case
    // no offsetParent is present, I hate this job...
    if ([
        'TH',
        'TD',
        'TABLE'
    ].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') return getOffsetParent(offsetParent);
    return offsetParent;
}
function isOffsetContainer(element) {
    var nodeName = element.nodeName;
    if (nodeName === 'BODY') return false;
    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}
/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */ function getRoot(node) {
    if (node.parentNode !== null) return getRoot(node.parentNode);
    return node;
}
/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */ function findCommonOffsetParent(element1, element2) {
    // This check is needed to avoid errors in case one of the elements isn't defined for any reason
    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) return document.documentElement;
    // Here we make sure to give as "start" the element that comes first in the DOM
    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
    var start = order ? element1 : element2;
    var end = order ? element2 : element1;
    // Get common ancestor container
    var range = document.createRange();
    range.setStart(start, 0);
    range.setEnd(end, 0);
    var commonAncestorContainer = range.commonAncestorContainer;
    // Both nodes are inside #document
    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
        if (isOffsetContainer(commonAncestorContainer)) return commonAncestorContainer;
        return getOffsetParent(commonAncestorContainer);
    }
    // one of the nodes is inside shadowDOM, find which one
    var element1root = getRoot(element1);
    if (element1root.host) return findCommonOffsetParent(element1root.host, element2);
    else return findCommonOffsetParent(element1, getRoot(element2).host);
}
/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */ function getScroll(element) {
    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
    var nodeName = element.nodeName;
    if (nodeName === 'BODY' || nodeName === 'HTML') {
        var html = element.ownerDocument.documentElement;
        var scrollingElement = element.ownerDocument.scrollingElement || html;
        return scrollingElement[upperSide];
    }
    return element[upperSide];
}
/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */ function includeScroll(rect, element) {
    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var scrollTop = getScroll(element, 'top');
    var scrollLeft = getScroll(element, 'left');
    var modifier = subtract ? -1 : 1;
    rect.top += scrollTop * modifier;
    rect.bottom += scrollTop * modifier;
    rect.left += scrollLeft * modifier;
    rect.right += scrollLeft * modifier;
    return rect;
}
/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */ function getBordersSize(styles, axis) {
    var sideA = axis === 'x' ? 'Left' : 'Top';
    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
    return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}
function getSize(axis, body, html, computedStyle) {
    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}
function getWindowSizes(document) {
    var body = document.body;
    var html = document.documentElement;
    var computedStyle = isIE(10) && getComputedStyle(html);
    return {
        height: getSize('Height', body, html, computedStyle),
        width: getSize('Width', body, html, computedStyle)
    };
}
var classCallCheck = function(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
};
var createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var defineProperty = function(obj, key, value) {
    if (key in obj) Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
    });
    else obj[key] = value;
    return obj;
};
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
    }
    return target;
};
/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */ function getClientRect(offsets) {
    return _extends({}, offsets, {
        right: offsets.left + offsets.width,
        bottom: offsets.top + offsets.height
    });
}
/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */ function getBoundingClientRect(element) {
    var rect = {};
    // IE10 10 FIX: Please, don't ask, the element isn't
    // considered in DOM in some circumstances...
    // This isn't reproducible in IE10 compatibility mode of IE11
    try {
        if (isIE(10)) {
            rect = element.getBoundingClientRect();
            var scrollTop = getScroll(element, 'top');
            var scrollLeft = getScroll(element, 'left');
            rect.top += scrollTop;
            rect.left += scrollLeft;
            rect.bottom += scrollTop;
            rect.right += scrollLeft;
        } else rect = element.getBoundingClientRect();
    } catch (e) {}
    var result = {
        left: rect.left,
        top: rect.top,
        width: rect.right - rect.left,
        height: rect.bottom - rect.top
    };
    // subtract scrollbar size from sizes
    var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
    var width = sizes.width || element.clientWidth || result.width;
    var height = sizes.height || element.clientHeight || result.height;
    var horizScrollbar = element.offsetWidth - width;
    var vertScrollbar = element.offsetHeight - height;
    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
    // we make this check conditional for performance reasons
    if (horizScrollbar || vertScrollbar) {
        var styles = getStyleComputedProperty(element);
        horizScrollbar -= getBordersSize(styles, 'x');
        vertScrollbar -= getBordersSize(styles, 'y');
        result.width -= horizScrollbar;
        result.height -= vertScrollbar;
    }
    return getClientRect(result);
}
function getOffsetRectRelativeToArbitraryNode(children, parent) {
    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var isIE101 = isIE(10);
    var isHTML = parent.nodeName === 'HTML';
    var childrenRect = getBoundingClientRect(children);
    var parentRect = getBoundingClientRect(parent);
    var scrollParent = getScrollParent(children);
    var styles = getStyleComputedProperty(parent);
    var borderTopWidth = parseFloat(styles.borderTopWidth);
    var borderLeftWidth = parseFloat(styles.borderLeftWidth);
    // In cases where the parent is fixed, we must ignore negative scroll in offset calc
    if (fixedPosition && isHTML) {
        parentRect.top = Math.max(parentRect.top, 0);
        parentRect.left = Math.max(parentRect.left, 0);
    }
    var offsets = getClientRect({
        top: childrenRect.top - parentRect.top - borderTopWidth,
        left: childrenRect.left - parentRect.left - borderLeftWidth,
        width: childrenRect.width,
        height: childrenRect.height
    });
    offsets.marginTop = 0;
    offsets.marginLeft = 0;
    // Subtract margins of documentElement in case it's being used as parent
    // we do this only on HTML because it's the only element that behaves
    // differently when margins are applied to it. The margins are included in
    // the box of the documentElement, in the other cases not.
    if (!isIE101 && isHTML) {
        var marginTop = parseFloat(styles.marginTop);
        var marginLeft = parseFloat(styles.marginLeft);
        offsets.top -= borderTopWidth - marginTop;
        offsets.bottom -= borderTopWidth - marginTop;
        offsets.left -= borderLeftWidth - marginLeft;
        offsets.right -= borderLeftWidth - marginLeft;
        // Attach marginTop and marginLeft because in some circumstances we may need them
        offsets.marginTop = marginTop;
        offsets.marginLeft = marginLeft;
    }
    if (isIE101 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') offsets = includeScroll(offsets, parent);
    return offsets;
}
function getViewportOffsetRectRelativeToArtbitraryNode(element) {
    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var html = element.ownerDocument.documentElement;
    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
    var width = Math.max(html.clientWidth, window.innerWidth || 0);
    var height = Math.max(html.clientHeight, window.innerHeight || 0);
    var scrollTop = !excludeScroll ? getScroll(html) : 0;
    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
    var offset1 = {
        top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
        left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
        width: width,
        height: height
    };
    return getClientRect(offset1);
}
/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */ function isFixed(element) {
    var nodeName = element.nodeName;
    if (nodeName === 'BODY' || nodeName === 'HTML') return false;
    if (getStyleComputedProperty(element, 'position') === 'fixed') return true;
    var parentNode = getParentNode(element);
    if (!parentNode) return false;
    return isFixed(parentNode);
}
/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */ function getFixedPositionOffsetParent(element) {
    // This check is needed to avoid errors in case one of the elements isn't defined for any reason
    if (!element || !element.parentElement || isIE()) return document.documentElement;
    var el = element.parentElement;
    while(el && getStyleComputedProperty(el, 'transform') === 'none')el = el.parentElement;
    return el || document.documentElement;
}
/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */ function getBoundaries(popper, reference, padding, boundariesElement) {
    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    // NOTE: 1 DOM access here
    var boundaries = {
        top: 0,
        left: 0
    };
    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
    // Handle viewport case
    if (boundariesElement === 'viewport') boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
    else {
        // Handle other cases based on DOM element used as boundaries
        var boundariesNode = void 0;
        if (boundariesElement === 'scrollParent') {
            boundariesNode = getScrollParent(getParentNode(reference));
            if (boundariesNode.nodeName === 'BODY') boundariesNode = popper.ownerDocument.documentElement;
        } else if (boundariesElement === 'window') boundariesNode = popper.ownerDocument.documentElement;
        else boundariesNode = boundariesElement;
        var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
        // In case of HTML, we need a different computation
        if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
            var _getWindowSizes = getWindowSizes(popper.ownerDocument), height = _getWindowSizes.height, width = _getWindowSizes.width;
            boundaries.top += offsets.top - offsets.marginTop;
            boundaries.bottom = height + offsets.top;
            boundaries.left += offsets.left - offsets.marginLeft;
            boundaries.right = width + offsets.left;
        } else // for all the other DOM elements, this one is good
        boundaries = offsets;
    }
    // Add paddings
    padding = padding || 0;
    var isPaddingNumber = typeof padding === 'number';
    boundaries.left += isPaddingNumber ? padding : padding.left || 0;
    boundaries.top += isPaddingNumber ? padding : padding.top || 0;
    boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
    boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
    return boundaries;
}
function getArea(_ref) {
    var width = _ref.width, height = _ref.height;
    return width * height;
}
/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
    if (placement.indexOf('auto') === -1) return placement;
    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
    var rects = {
        top: {
            width: boundaries.width,
            height: refRect.top - boundaries.top
        },
        right: {
            width: boundaries.right - refRect.right,
            height: boundaries.height
        },
        bottom: {
            width: boundaries.width,
            height: boundaries.bottom - refRect.bottom
        },
        left: {
            width: refRect.left - boundaries.left,
            height: boundaries.height
        }
    };
    var sortedAreas = Object.keys(rects).map(function(key) {
        return _extends({
            key: key
        }, rects[key], {
            area: getArea(rects[key])
        });
    }).sort(function(a, b) {
        return b.area - a.area;
    });
    var filteredAreas = sortedAreas.filter(function(_ref2) {
        var width = _ref2.width, height = _ref2.height;
        return width >= popper.clientWidth && height >= popper.clientHeight;
    });
    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
    var variation = placement.split('-')[1];
    return computedPlacement + (variation ? '-' + variation : '');
}
/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */ function getReferenceOffsets(state, popper, reference) {
    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */ function getOuterSizes(element) {
    var window = element.ownerDocument.defaultView;
    var styles = window.getComputedStyle(element);
    var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
    var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
    var result = {
        width: element.offsetWidth + y,
        height: element.offsetHeight + x
    };
    return result;
}
/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */ function getOppositePlacement(placement) {
    var hash = {
        left: 'right',
        right: 'left',
        bottom: 'top',
        top: 'bottom'
    };
    return placement.replace(/left|right|bottom|top/g, function(matched) {
        return hash[matched];
    });
}
/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */ function getPopperOffsets(popper, referenceOffsets, placement) {
    placement = placement.split('-')[0];
    // Get popper node sizes
    var popperRect = getOuterSizes(popper);
    // Add position, width and height to our offsets object
    var popperOffsets = {
        width: popperRect.width,
        height: popperRect.height
    };
    // depending by the popper placement we have to compute its offsets slightly differently
    var isHoriz = [
        'right',
        'left'
    ].indexOf(placement) !== -1;
    var mainSide = isHoriz ? 'top' : 'left';
    var secondarySide = isHoriz ? 'left' : 'top';
    var measurement = isHoriz ? 'height' : 'width';
    var secondaryMeasurement = !isHoriz ? 'height' : 'width';
    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
    if (placement === secondarySide) popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
    else popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
    return popperOffsets;
}
/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */ function find(arr, check) {
    // use native find if supported
    if (Array.prototype.find) return arr.find(check);
    // use `filter` to obtain the same behavior of `find`
    return arr.filter(check)[0];
}
/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */ function findIndex(arr, prop, value) {
    // use native findIndex if supported
    if (Array.prototype.findIndex) return arr.findIndex(function(cur) {
        return cur[prop] === value;
    });
    // use `find` + `indexOf` if `findIndex` isn't supported
    var match = find(arr, function(obj) {
        return obj[prop] === value;
    });
    return arr.indexOf(match);
}
/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */ function runModifiers(modifiers1, data, ends) {
    var modifiersToRun = ends === undefined ? modifiers1 : modifiers1.slice(0, findIndex(modifiers1, 'name', ends));
    modifiersToRun.forEach(function(modifier) {
        if (modifier['function']) // eslint-disable-line dot-notation
        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
        var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
        if (modifier.enabled && isFunction(fn)) {
            // Add properties to offsets to make them a complete clientRect object
            // we do this before each modifier to make sure the previous one doesn't
            // mess with these values
            data.offsets.popper = getClientRect(data.offsets.popper);
            data.offsets.reference = getClientRect(data.offsets.reference);
            data = fn(data, modifier);
        }
    });
    return data;
}
/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */ function update() {
    // if popper is destroyed, don't perform any further update
    if (this.state.isDestroyed) return;
    var data = {
        instance: this,
        styles: {},
        arrowStyles: {},
        attributes: {},
        flipped: false,
        offsets: {}
    };
    // compute reference element offsets
    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
    // compute auto placement, store placement inside the data object,
    // modifiers will be able to edit `placement` if needed
    // and refer to originalPlacement to know the original value
    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
    // store the computed placement inside `originalPlacement`
    data.originalPlacement = data.placement;
    data.positionFixed = this.options.positionFixed;
    // compute the popper offsets
    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';
    // run the modifiers
    data = runModifiers(this.modifiers, data);
    // the first `update` will call `onCreate` callback
    // the other ones will call `onUpdate` callback
    if (!this.state.isCreated) {
        this.state.isCreated = true;
        this.options.onCreate(data);
    } else this.options.onUpdate(data);
}
/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */ function isModifierEnabled(modifiers2, modifierName) {
    return modifiers2.some(function(_ref) {
        var name = _ref.name, enabled = _ref.enabled;
        return enabled && name === modifierName;
    });
}
/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */ function getSupportedPropertyName(property) {
    var prefixes = [
        false,
        'ms',
        'Webkit',
        'Moz',
        'O'
    ];
    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);
    for(var i = 0; i < prefixes.length; i++){
        var prefix = prefixes[i];
        var toCheck = prefix ? '' + prefix + upperProp : property;
        if (typeof document.body.style[toCheck] !== 'undefined') return toCheck;
    }
    return null;
}
/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */ function destroy() {
    this.state.isDestroyed = true;
    // touch DOM only if `applyStyle` modifier is enabled
    if (isModifierEnabled(this.modifiers, 'applyStyle')) {
        this.popper.removeAttribute('x-placement');
        this.popper.style.position = '';
        this.popper.style.top = '';
        this.popper.style.left = '';
        this.popper.style.right = '';
        this.popper.style.bottom = '';
        this.popper.style.willChange = '';
        this.popper.style[getSupportedPropertyName('transform')] = '';
    }
    this.disableEventListeners();
    // remove the popper if user explicitly asked for the deletion on destroy
    // do not use `remove` because IE11 doesn't support it
    if (this.options.removeOnDestroy) this.popper.parentNode.removeChild(this.popper);
    return this;
}
/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */ function getWindow(element) {
    var ownerDocument = element.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView : window;
}
function attachToScrollParents(scrollParent, event, callback, scrollParents) {
    var isBody = scrollParent.nodeName === 'BODY';
    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
    target.addEventListener(event, callback, {
        passive: true
    });
    if (!isBody) attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
    scrollParents.push(target);
}
/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */ function setupEventListeners(reference, options, state, updateBound) {
    // Resize event listener on window
    state.updateBound = updateBound;
    getWindow(reference).addEventListener('resize', state.updateBound, {
        passive: true
    });
    // Scroll event listener on scroll parents
    var scrollElement = getScrollParent(reference);
    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
    state.scrollElement = scrollElement;
    state.eventsEnabled = true;
    return state;
}
/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */ function enableEventListeners() {
    if (!this.state.eventsEnabled) this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
}
/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */ function removeEventListeners(reference, state) {
    // Remove resize event listener on window
    getWindow(reference).removeEventListener('resize', state.updateBound);
    // Remove scroll event listener on scroll parents
    state.scrollParents.forEach(function(target) {
        target.removeEventListener('scroll', state.updateBound);
    });
    // Reset state
    state.updateBound = null;
    state.scrollParents = [];
    state.scrollElement = null;
    state.eventsEnabled = false;
    return state;
}
/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */ function disableEventListeners() {
    if (this.state.eventsEnabled) {
        cancelAnimationFrame(this.scheduleUpdate);
        this.state = removeEventListeners(this.reference, this.state);
    }
}
/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */ function isNumeric(n) {
    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}
/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */ function setStyles(element, styles) {
    Object.keys(styles).forEach(function(prop) {
        var unit = '';
        // add unit if the value is numeric and is one of the following
        if ([
            'width',
            'height',
            'top',
            'right',
            'bottom',
            'left'
        ].indexOf(prop) !== -1 && isNumeric(styles[prop])) unit = 'px';
        element.style[prop] = styles[prop] + unit;
    });
}
/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */ function setAttributes(element, attributes) {
    Object.keys(attributes).forEach(function(prop) {
        var value = attributes[prop];
        if (value !== false) element.setAttribute(prop, attributes[prop]);
        else element.removeAttribute(prop);
    });
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */ function applyStyle(data) {
    // any property present in `data.styles` will be applied to the popper,
    // in this way we can make the 3rd party modifiers add custom styles to it
    // Be aware, modifiers could override the properties defined in the previous
    // lines of this modifier!
    setStyles(data.instance.popper, data.styles);
    // any property present in `data.attributes` will be applied to the popper,
    // they will be set as HTML attributes of the element
    setAttributes(data.instance.popper, data.attributes);
    // if arrowElement is defined and arrowStyles has some properties
    if (data.arrowElement && Object.keys(data.arrowStyles).length) setStyles(data.arrowElement, data.arrowStyles);
    return data;
}
/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */ function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
    // compute reference element offsets
    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);
    // compute auto placement, store placement inside the data object,
    // modifiers will be able to edit `placement` if needed
    // and refer to originalPlacement to know the original value
    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
    popper.setAttribute('x-placement', placement);
    // Apply `position` to popper before anything else because
    // without the position applied we can't guarantee correct computations
    setStyles(popper, {
        position: options.positionFixed ? 'fixed' : 'absolute'
    });
    return options;
}
/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */ function getRoundedOffsets(data, shouldRound) {
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var round = Math.round, floor = Math.floor;
    var noRound = function noRound(v) {
        return v;
    };
    var referenceWidth = round(reference.width);
    var popperWidth = round(popper.width);
    var isVertical = [
        'left',
        'right'
    ].indexOf(data.placement) !== -1;
    var isVariation = data.placement.indexOf('-') !== -1;
    var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
    var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
    var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
    var verticalToInteger = !shouldRound ? noRound : round;
    return {
        left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
        top: verticalToInteger(popper.top),
        bottom: verticalToInteger(popper.bottom),
        right: horizontalToInteger(popper.right)
    };
}
var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function computeStyle(data, options) {
    var x = options.x, y = options.y;
    var popper = data.offsets.popper;
    // Remove this legacy support in Popper.js v2
    var legacyGpuAccelerationOption = find(data.instance.modifiers, function(modifier) {
        return modifier.name === 'applyStyle';
    }).gpuAcceleration;
    if (legacyGpuAccelerationOption !== undefined) console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
    var offsetParent = getOffsetParent(data.instance.popper);
    var offsetParentRect = getBoundingClientRect(offsetParent);
    // Styles
    var styles = {
        position: popper.position
    };
    var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
    var sideA = x === 'bottom' ? 'top' : 'bottom';
    var sideB = y === 'right' ? 'left' : 'right';
    // if gpuAcceleration is set to `true` and transform is supported,
    //  we use `translate3d` to apply the position to the popper we
    // automatically use the supported prefixed version if needed
    var prefixedProperty = getSupportedPropertyName('transform');
    // now, let's make a step back and look at this code closely (wtf?)
    // If the content of the popper grows once it's been positioned, it
    // may happen that the popper gets misplaced because of the new content
    // overflowing its reference element
    // To avoid this problem, we provide two options (x and y), which allow
    // the consumer to define the offset origin.
    // If we position a popper on top of a reference element, we can set
    // `x` to `top` to make the popper grow towards its top instead of
    // its bottom.
    var left = void 0, top = void 0;
    if (sideA === 'bottom') {
        // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
        // and not the bottom of the html element
        if (offsetParent.nodeName === 'HTML') top = -offsetParent.clientHeight + offsets.bottom;
        else top = -offsetParentRect.height + offsets.bottom;
    } else top = offsets.top;
    if (sideB === 'right') {
        if (offsetParent.nodeName === 'HTML') left = -offsetParent.clientWidth + offsets.right;
        else left = -offsetParentRect.width + offsets.right;
    } else left = offsets.left;
    if (gpuAcceleration && prefixedProperty) {
        styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
        styles[sideA] = 0;
        styles[sideB] = 0;
        styles.willChange = 'transform';
    } else {
        // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
        var invertTop = sideA === 'bottom' ? -1 : 1;
        var invertLeft = sideB === 'right' ? -1 : 1;
        styles[sideA] = top * invertTop;
        styles[sideB] = left * invertLeft;
        styles.willChange = sideA + ', ' + sideB;
    }
    // Attributes
    var attributes = {
        'x-placement': data.placement
    };
    // Update `data` attributes, styles and arrowStyles
    data.attributes = _extends({}, attributes, data.attributes);
    data.styles = _extends({}, styles, data.styles);
    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
    return data;
}
/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */ function isModifierRequired(modifiers3, requestingName, requestedName) {
    var requesting = find(modifiers3, function(_ref) {
        var name = _ref.name;
        return name === requestingName;
    });
    var isRequired = !!requesting && modifiers3.some(function(modifier) {
        return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
    });
    if (!isRequired) {
        var _requesting = '`' + requestingName + '`';
        var requested = '`' + requestedName + '`';
        console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
    }
    return isRequired;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function arrow(data, options) {
    var _data$offsets$arrow;
    // arrow depends on keepTogether in order to work
    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) return data;
    var arrowElement = options.element;
    // if arrowElement is a string, suppose it's a CSS selector
    if (typeof arrowElement === 'string') {
        arrowElement = data.instance.popper.querySelector(arrowElement);
        // if arrowElement is not found, don't run the modifier
        if (!arrowElement) return data;
    } else // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
        console.warn('WARNING: `arrow.element` must be child of its popper element!');
        return data;
    }
    var placement = data.placement.split('-')[0];
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var isVertical = [
        'left',
        'right'
    ].indexOf(placement) !== -1;
    var len = isVertical ? 'height' : 'width';
    var sideCapitalized = isVertical ? 'Top' : 'Left';
    var side = sideCapitalized.toLowerCase();
    var altSide = isVertical ? 'left' : 'top';
    var opSide = isVertical ? 'bottom' : 'right';
    var arrowElementSize = getOuterSizes(arrowElement)[len];
    //
    // extends keepTogether behavior making sure the popper and its
    // reference have enough pixels in conjunction
    //
    // top/left side
    if (reference[opSide] - arrowElementSize < popper[side]) data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
    // bottom/right side
    if (reference[side] + arrowElementSize > popper[opSide]) data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
    data.offsets.popper = getClientRect(data.offsets.popper);
    // compute center of the popper
    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
    // Compute the sideValue using the updated popper offsets
    // take popper margin in account because we don't have this info available
    var css = getStyleComputedProperty(data.instance.popper);
    var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
    // prevent arrowElement from being placed not contiguously to its popper
    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
    data.arrowElement = arrowElement;
    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
    return data;
}
/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */ function getOppositeVariation(variation) {
    if (variation === 'end') return 'start';
    else if (variation === 'start') return 'end';
    return variation;
}
/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */ var placements = [
    'auto-start',
    'auto',
    'auto-end',
    'top-start',
    'top',
    'top-end',
    'right-start',
    'right',
    'right-end',
    'bottom-end',
    'bottom',
    'bottom-start',
    'left-end',
    'left',
    'left-start'
];
// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);
/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */ function clockwise(placement) {
    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var index = validPlacements.indexOf(placement);
    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
    return counter ? arr.reverse() : arr;
}
var BEHAVIORS = {
    FLIP: 'flip',
    CLOCKWISE: 'clockwise',
    COUNTERCLOCKWISE: 'counterclockwise'
};
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function flip(data, options) {
    // if `inner` modifier is enabled, we can't use the `flip` modifier
    if (isModifierEnabled(data.instance.modifiers, 'inner')) return data;
    if (data.flipped && data.placement === data.originalPlacement) // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
    var placement = data.placement.split('-')[0];
    var placementOpposite = getOppositePlacement(placement);
    var variation = data.placement.split('-')[1] || '';
    var flipOrder = [];
    switch(options.behavior){
        case BEHAVIORS.FLIP:
            flipOrder = [
                placement,
                placementOpposite
            ];
            break;
        case BEHAVIORS.CLOCKWISE:
            flipOrder = clockwise(placement);
            break;
        case BEHAVIORS.COUNTERCLOCKWISE:
            flipOrder = clockwise(placement, true);
            break;
        default:
            flipOrder = options.behavior;
    }
    flipOrder.forEach(function(step, index) {
        if (placement !== step || flipOrder.length === index + 1) return data;
        placement = data.placement.split('-')[0];
        placementOpposite = getOppositePlacement(placement);
        var popperOffsets = data.offsets.popper;
        var refOffsets = data.offsets.reference;
        // using floor because the reference offsets may contain decimals we are not going to consider here
        var floor = Math.floor;
        var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
        var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
        var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
        var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
        var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
        var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;
        // flip the variation if required
        var isVertical = [
            'top',
            'bottom'
        ].indexOf(placement) !== -1;
        // flips variation if reference element overflows boundaries
        var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);
        // flips variation if popper content overflows boundaries
        var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
        var flippedVariation = flippedVariationByRef || flippedVariationByContent;
        if (overlapsRef || overflowsBoundaries || flippedVariation) {
            // this boolean to detect any flip loop
            data.flipped = true;
            if (overlapsRef || overflowsBoundaries) placement = flipOrder[index + 1];
            if (flippedVariation) variation = getOppositeVariation(variation);
            data.placement = placement + (variation ? '-' + variation : '');
            // this object contains `position`, we want to preserve it along with
            // any additional property we may add in the future
            data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
            data = runModifiers(data.instance.modifiers, data, 'flip');
        }
    });
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function keepTogether(data) {
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var placement = data.placement.split('-')[0];
    var floor = Math.floor;
    var isVertical = [
        'top',
        'bottom'
    ].indexOf(placement) !== -1;
    var side = isVertical ? 'right' : 'bottom';
    var opSide = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';
    if (popper[side] < floor(reference[opSide])) data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
    if (popper[opSide] > floor(reference[side])) data.offsets.popper[opSide] = floor(reference[side]);
    return data;
}
/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */ function toValue(str, measurement, popperOffsets, referenceOffsets) {
    // separate value from unit
    var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
    var value = +split[1];
    var unit = split[2];
    // If it's not a number it's an operator, I guess
    if (!value) return str;
    if (unit.indexOf('%') === 0) {
        var element = void 0;
        switch(unit){
            case '%p':
                element = popperOffsets;
                break;
            case '%':
            case '%r':
            default:
                element = referenceOffsets;
        }
        var rect = getClientRect(element);
        return rect[measurement] / 100 * value;
    } else if (unit === 'vh' || unit === 'vw') {
        // if is a vh or vw, we calculate the size based on the viewport
        var size = void 0;
        if (unit === 'vh') size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
        else size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
        return size / 100 * value;
    } else // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
}
/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */ function parseOffset(offset2, popperOffsets, referenceOffsets, basePlacement) {
    var offsets = [
        0,
        0
    ];
    // Use height if placement is left or right and index is 0 otherwise use width
    // in this way the first offset will use an axis and the second one
    // will use the other one
    var useHeight = [
        'right',
        'left'
    ].indexOf(basePlacement) !== -1;
    // Split the offset string to obtain a list of values and operands
    // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
    var fragments = offset2.split(/(\+|\-)/).map(function(frag) {
        return frag.trim();
    });
    // Detect if the offset string contains a pair of values or a single one
    // they could be separated by comma or space
    var divider = fragments.indexOf(find(fragments, function(frag) {
        return frag.search(/,|\s/) !== -1;
    }));
    if (fragments[divider] && fragments[divider].indexOf(',') === -1) console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
    // If divider is found, we divide the list of values and operands to divide
    // them by ofset X and Y.
    var splitRegex = /\s*,\s*|\s+/;
    var ops = divider !== -1 ? [
        fragments.slice(0, divider).concat([
            fragments[divider].split(splitRegex)[0]
        ]),
        [
            fragments[divider].split(splitRegex)[1]
        ].concat(fragments.slice(divider + 1))
    ] : [
        fragments
    ];
    // Convert the values with units to absolute pixels to allow our computations
    ops = ops.map(function(op, index) {
        // Most of the units rely on the orientation of the popper
        var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
        var mergeWithPrevious = false;
        return op// This aggregates any `+` or `-` sign that aren't considered operators
        // e.g.: 10 + +5 => [10, +, +5]
        .reduce(function(a, b) {
            if (a[a.length - 1] === '' && [
                '+',
                '-'
            ].indexOf(b) !== -1) {
                a[a.length - 1] = b;
                mergeWithPrevious = true;
                return a;
            } else if (mergeWithPrevious) {
                a[a.length - 1] += b;
                mergeWithPrevious = false;
                return a;
            } else return a.concat(b);
        }, [])// Here we convert the string values into number values (in px)
        .map(function(str) {
            return toValue(str, measurement, popperOffsets, referenceOffsets);
        });
    });
    // Loop trough the offsets arrays and execute the operations
    ops.forEach(function(op, index) {
        op.forEach(function(frag, index2) {
            if (isNumeric(frag)) offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
        });
    });
    return offsets;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */ function offset(data, _ref) {
    var offset3 = _ref.offset;
    var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var basePlacement = placement.split('-')[0];
    var offsets = void 0;
    if (isNumeric(+offset3)) offsets = [
        +offset3,
        0
    ];
    else offsets = parseOffset(offset3, popper, reference, basePlacement);
    if (basePlacement === 'left') {
        popper.top += offsets[0];
        popper.left -= offsets[1];
    } else if (basePlacement === 'right') {
        popper.top += offsets[0];
        popper.left += offsets[1];
    } else if (basePlacement === 'top') {
        popper.left += offsets[0];
        popper.top -= offsets[1];
    } else if (basePlacement === 'bottom') {
        popper.left += offsets[0];
        popper.top += offsets[1];
    }
    data.popper = popper;
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function preventOverflow(data, options) {
    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);
    // If offsetParent is the reference element, we really want to
    // go one step up and use the next offsetParent as reference to
    // avoid to make this modifier completely useless and look like broken
    if (data.instance.reference === boundariesElement) boundariesElement = getOffsetParent(boundariesElement);
    // NOTE: DOM access here
    // resets the popper's position so that the document size can be calculated excluding
    // the size of the popper element itself
    var transformProp = getSupportedPropertyName('transform');
    var popperStyles = data.instance.popper.style; // assignment to help minification
    var top = popperStyles.top, left = popperStyles.left, transform = popperStyles[transformProp];
    popperStyles.top = '';
    popperStyles.left = '';
    popperStyles[transformProp] = '';
    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
    // NOTE: DOM access here
    // restores the original style properties after the offsets have been computed
    popperStyles.top = top;
    popperStyles.left = left;
    popperStyles[transformProp] = transform;
    options.boundaries = boundaries;
    var order = options.priority;
    var popper = data.offsets.popper;
    var check = {
        primary: function primary(placement) {
            var value = popper[placement];
            if (popper[placement] < boundaries[placement] && !options.escapeWithReference) value = Math.max(popper[placement], boundaries[placement]);
            return defineProperty({}, placement, value);
        },
        secondary: function secondary(placement) {
            var mainSide = placement === 'right' ? 'left' : 'top';
            var value = popper[mainSide];
            if (popper[placement] > boundaries[placement] && !options.escapeWithReference) value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
            return defineProperty({}, mainSide, value);
        }
    };
    order.forEach(function(placement) {
        var side = [
            'left',
            'top'
        ].indexOf(placement) !== -1 ? 'primary' : 'secondary';
        popper = _extends({}, popper, check[side](placement));
    });
    data.offsets.popper = popper;
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function shift(data) {
    var placement = data.placement;
    var basePlacement = placement.split('-')[0];
    var shiftvariation = placement.split('-')[1];
    // if shift shiftvariation is specified, run the modifier
    if (shiftvariation) {
        var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;
        var isVertical = [
            'bottom',
            'top'
        ].indexOf(basePlacement) !== -1;
        var side = isVertical ? 'left' : 'top';
        var measurement = isVertical ? 'width' : 'height';
        var shiftOffsets = {
            start: defineProperty({}, side, reference[side]),
            end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
        };
        data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
    }
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function hide(data) {
    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) return data;
    var refRect = data.offsets.reference;
    var bound = find(data.instance.modifiers, function(modifier) {
        return modifier.name === 'preventOverflow';
    }).boundaries;
    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
        // Avoid unnecessary DOM access if visibility hasn't changed
        if (data.hide === true) return data;
        data.hide = true;
        data.attributes['x-out-of-boundaries'] = '';
    } else {
        // Avoid unnecessary DOM access if visibility hasn't changed
        if (data.hide === false) return data;
        data.hide = false;
        data.attributes['x-out-of-boundaries'] = false;
    }
    return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */ function inner(data) {
    var placement = data.placement;
    var basePlacement = placement.split('-')[0];
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var isHoriz = [
        'left',
        'right'
    ].indexOf(basePlacement) !== -1;
    var subtractLength = [
        'top',
        'left'
    ].indexOf(basePlacement) === -1;
    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
    data.placement = getOppositePlacement(placement);
    data.offsets.popper = getClientRect(popper);
    return data;
}
/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */ /**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */ var modifiers = {
    /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */ shift: {
        /** @prop {number} order=100 - Index used to define the order of execution */ order: 100,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: shift
    },
    /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */ offset: {
        /** @prop {number} order=200 - Index used to define the order of execution */ order: 200,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: offset,
        /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */ offset: 0
    },
    /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */ preventOverflow: {
        /** @prop {number} order=300 - Index used to define the order of execution */ order: 300,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: preventOverflow,
        /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */ priority: [
            'left',
            'right',
            'top',
            'bottom'
        ],
        /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */ padding: 5,
        /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */ boundariesElement: 'scrollParent'
    },
    /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */ keepTogether: {
        /** @prop {number} order=400 - Index used to define the order of execution */ order: 400,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: keepTogether
    },
    /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */ arrow: {
        /** @prop {number} order=500 - Index used to define the order of execution */ order: 500,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: arrow,
        /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */ element: '[x-arrow]'
    },
    /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */ flip: {
        /** @prop {number} order=600 - Index used to define the order of execution */ order: 600,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: flip,
        /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */ behavior: 'flip',
        /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */ padding: 5,
        /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */ boundariesElement: 'viewport',
        /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */ flipVariations: false,
        /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */ flipVariationsByContent: false
    },
    /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */ inner: {
        /** @prop {number} order=700 - Index used to define the order of execution */ order: 700,
        /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */ enabled: false,
        /** @prop {ModifierFn} */ fn: inner
    },
    /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */ hide: {
        /** @prop {number} order=800 - Index used to define the order of execution */ order: 800,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: hide
    },
    /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */ computeStyle: {
        /** @prop {number} order=850 - Index used to define the order of execution */ order: 850,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: computeStyle,
        /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */ gpuAcceleration: true,
        /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */ x: 'bottom',
        /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */ y: 'right'
    },
    /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */ applyStyle: {
        /** @prop {number} order=900 - Index used to define the order of execution */ order: 900,
        /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true,
        /** @prop {ModifierFn} */ fn: applyStyle,
        /** @prop {Function} */ onLoad: applyStyleOnLoad,
        /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */ gpuAcceleration: undefined
    }
};
/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */ /**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */ var Defaults = {
    /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */ placement: 'bottom',
    /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */ positionFixed: false,
    /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */ eventsEnabled: true,
    /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */ removeOnDestroy: false,
    /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */ onCreate: function onCreate() {},
    /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */ onUpdate: function onUpdate() {},
    /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */ modifiers: modifiers
};
/**
 * @callback onCreate
 * @param {dataObject} data
 */ /**
 * @callback onUpdate
 * @param {dataObject} data
 */ // Utils
// Methods
var Popper = function() {
    /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */ function Popper1(reference, popper) {
        var _this = this;
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        classCallCheck(this, Popper1);
        this.scheduleUpdate = function() {
            return requestAnimationFrame(_this.update);
        };
        // make update() debounced, so that it only runs at most once-per-tick
        this.update = debounce(this.update.bind(this));
        // with {} we create a new object with the options inside it
        this.options = _extends({}, Popper1.Defaults, options);
        // init state
        this.state = {
            isDestroyed: false,
            isCreated: false,
            scrollParents: []
        };
        // get reference and popper elements (allow jQuery wrappers)
        this.reference = reference && reference.jquery ? reference[0] : reference;
        this.popper = popper && popper.jquery ? popper[0] : popper;
        // Deep merge modifiers options
        this.options.modifiers = {};
        Object.keys(_extends({}, Popper1.Defaults.modifiers, options.modifiers)).forEach(function(name) {
            _this.options.modifiers[name] = _extends({}, Popper1.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
        });
        // Refactoring modifiers' list (Object => Array)
        this.modifiers = Object.keys(this.options.modifiers).map(function(name) {
            return _extends({
                name: name
            }, _this.options.modifiers[name]);
        })// sort the modifiers by order
        .sort(function(a, b) {
            return a.order - b.order;
        });
        // modifiers have the ability to execute arbitrary code when Popper.js get inited
        // such code is executed in the same order of its modifier
        // they could add new properties to their options configuration
        // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
        this.modifiers.forEach(function(modifierOptions) {
            if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
        });
        // fire the first update to position the popper in the right place
        this.update();
        var eventsEnabled = this.options.eventsEnabled;
        if (eventsEnabled) // setup event listeners, they will take care of update the position in specific situations
        this.enableEventListeners();
        this.state.eventsEnabled = eventsEnabled;
    }
    // We can't use class properties because they don't get listed in the
    // class prototype and break stuff like Sinon stubs
    createClass(Popper1, [
        {
            key: 'update',
            value: function update$$1() {
                return update.call(this);
            }
        },
        {
            key: 'destroy',
            value: function destroy$$1() {
                return destroy.call(this);
            }
        },
        {
            key: 'enableEventListeners',
            value: function enableEventListeners$$1() {
                return enableEventListeners.call(this);
            }
        },
        {
            key: 'disableEventListeners',
            value: function disableEventListeners$$1() {
                return disableEventListeners.call(this);
            }
        }
    ]);
    return Popper1;
}();
/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */ Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;
exports.default = Popper;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2IRUA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ManagerReferenceNodeContext", ()=>ManagerReferenceNodeContext
);
parcelHelpers.export(exports, "ManagerReferenceNodeSetterContext", ()=>ManagerReferenceNodeSetterContext
);
parcelHelpers.export(exports, "default", ()=>Manager
);
var _inheritsLoose = require("@babel/runtime/helpers/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _assertThisInitialized = require("@babel/runtime/helpers/assertThisInitialized");
var _assertThisInitializedDefault = parcelHelpers.interopDefault(_assertThisInitialized);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _createReactContext = require("@hypnosphi/create-react-context");
var _createReactContextDefault = parcelHelpers.interopDefault(_createReactContext);
var ManagerReferenceNodeContext = _createReactContextDefault.default();
var ManagerReferenceNodeSetterContext = _createReactContextDefault.default();
var Manager = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(Manager1, _React$Component);
    function Manager1() {
        var _this;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _React$Component.call.apply(_React$Component, [
            this
        ].concat(args)) || this;
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "referenceNode", void 0);
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "setReferenceNode", function(newReferenceNode) {
            if (newReferenceNode && _this.referenceNode !== newReferenceNode) {
                _this.referenceNode = newReferenceNode;
                _this.forceUpdate();
            }
        });
        return _this;
    }
    var _proto = Manager1.prototype;
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.referenceNode = null;
    };
    _proto.render = function render() {
        return _react.createElement(ManagerReferenceNodeContext.Provider, {
            value: this.referenceNode
        }, _react.createElement(ManagerReferenceNodeSetterContext.Provider, {
            value: this.setReferenceNode
        }, this.props.children));
    };
    return Manager1;
}(_react.Component);

},{"@babel/runtime/helpers/inheritsLoose":"bfCya","@babel/runtime/helpers/assertThisInitialized":"1mVba","@babel/runtime/helpers/defineProperty":"4x6r7","react":"21dqq","@hypnosphi/create-react-context":"4A64j","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4A64j":[function(require,module,exports) {
'use strict';
exports.__esModule = true;
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _implementation = require('./implementation');
var _implementation2 = _interopRequireDefault(_implementation);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
exports.default = _react2.default.createContext || _implementation2.default;
module.exports = exports['default'];

},{"react":"21dqq","./implementation":"jmYyZ"}],"jmYyZ":[function(require,module,exports) {
'use strict';
exports.__esModule = true;
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _propTypes = require('prop-types');
var _propTypes2 = _interopRequireDefault(_propTypes);
var _gud = require('gud');
var _gud2 = _interopRequireDefault(_gud);
var _warning = require('warning');
var _warning2 = _interopRequireDefault(_warning);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var MAX_SIGNED_31_BIT_INT = 1073741823;
// Inlined Object.is polyfill.
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
function objectIs(x, y) {
    if (x === y) return x !== 0 || 1 / x === 1 / y;
    else return x !== x && y !== y;
}
function createEventEmitter(value) {
    var handlers = [];
    return {
        on: function on(handler) {
            handlers.push(handler);
        },
        off: function off(handler) {
            handlers = handlers.filter(function(h) {
                return h !== handler;
            });
        },
        get: function get() {
            return value;
        },
        set: function set(newValue, changedBits) {
            value = newValue;
            handlers.forEach(function(handler) {
                return handler(value, changedBits);
            });
        }
    };
}
function onlyChild(children) {
    return Array.isArray(children) ? children[0] : children;
}
function createReactContext(defaultValue, calculateChangedBits) {
    var _Provider$childContex, _Consumer$contextType;
    var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';
    var Provider1 = function(_Component) {
        _inherits(Provider, _Component);
        function Provider() {
            var _temp, _this, _ret;
            _classCallCheck(this, Provider);
            for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
            return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [
                this
            ].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);
        }
        Provider.prototype.getChildContext = function getChildContext() {
            var _ref;
            return _ref = {}, _ref[contextProp] = this.emitter, _ref;
        };
        Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
            if (this.props.value !== nextProps.value) {
                var oldValue = this.props.value;
                var newValue = nextProps.value;
                var changedBits = void 0;
                if (objectIs(oldValue, newValue)) changedBits = 0; // No change
                else {
                    changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
                    (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, "calculateChangedBits: Expected the return value to be a 31-bit integer. Instead received: %s", changedBits);
                    changedBits |= 0;
                    if (changedBits !== 0) this.emitter.set(nextProps.value, changedBits);
                }
            }
        };
        Provider.prototype.render = function render() {
            return this.props.children;
        };
        return Provider;
    }(_react.Component);
    Provider1.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);
    var Consumer1 = function(_Component2) {
        _inherits(Consumer, _Component2);
        function Consumer() {
            var _temp2, _this2, _ret2;
            _classCallCheck(this, Consumer);
            for(var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];
            return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [
                this
            ].concat(args))), _this2), _this2.state = {
                value: _this2.getValue()
            }, _this2.onUpdate = function(newValue, changedBits) {
                var observedBits = _this2.observedBits | 0;
                if ((observedBits & changedBits) !== 0) _this2.setState({
                    value: _this2.getValue()
                });
            }, _temp2), _possibleConstructorReturn(_this2, _ret2);
        }
        Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
            var observedBits = nextProps.observedBits;
            this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
             : observedBits;
        };
        Consumer.prototype.componentDidMount = function componentDidMount() {
            if (this.context[contextProp]) this.context[contextProp].on(this.onUpdate);
            var observedBits = this.props.observedBits;
            this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default
             : observedBits;
        };
        Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
            if (this.context[contextProp]) this.context[contextProp].off(this.onUpdate);
        };
        Consumer.prototype.getValue = function getValue() {
            if (this.context[contextProp]) return this.context[contextProp].get();
            else return defaultValue;
        };
        Consumer.prototype.render = function render() {
            return onlyChild(this.props.children)(this.state.value);
        };
        return Consumer;
    }(_react.Component);
    Consumer1.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);
    return {
        Provider: Provider1,
        Consumer: Consumer1
    };
}
exports.default = createReactContext;
module.exports = exports['default'];

},{"react":"21dqq","prop-types":"7wKI2","gud":"lE3DS","warning":"eUVzU"}],"7wKI2":[function(require,module,exports) {
var ReactIs = require('react-is');
// By explicitly using `prop-types` you are opting into new development behavior.
// http://fb.me/prop-types-in-prod
var throwOnDirectAccess = true;
module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);

},{"react-is":"7EuwB","./factoryWithTypeCheckers":"bBUgD"}],"7EuwB":[function(require,module,exports) {
'use strict';
module.exports = require('./cjs/react-is.development.js');

},{"./cjs/react-is.development.js":"5DsXl"}],"5DsXl":[function(require,module,exports) {
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
(function() {
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.
    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?
    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    function isValidElementType(type) {
        return typeof type === 'string' || typeof type === 'function' || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
    }
    function typeOf(object) {
        if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch($$typeof){
                case REACT_ELEMENT_TYPE:
                    var type = object.type;
                    switch(type){
                        case REACT_ASYNC_MODE_TYPE:
                        case REACT_CONCURRENT_MODE_TYPE:
                        case REACT_FRAGMENT_TYPE:
                        case REACT_PROFILER_TYPE:
                        case REACT_STRICT_MODE_TYPE:
                        case REACT_SUSPENSE_TYPE:
                            return type;
                        default:
                            var $$typeofType = type && type.$$typeof;
                            switch($$typeofType){
                                case REACT_CONTEXT_TYPE:
                                case REACT_FORWARD_REF_TYPE:
                                case REACT_LAZY_TYPE:
                                case REACT_MEMO_TYPE:
                                case REACT_PROVIDER_TYPE:
                                    return $$typeofType;
                                default:
                                    return $$typeof;
                            }
                    }
                case REACT_PORTAL_TYPE:
                    return $$typeof;
            }
        }
        return undefined;
    } // AsyncMode is deprecated along with isAsyncMode
    var AsyncMode = REACT_ASYNC_MODE_TYPE;
    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
    var ContextConsumer = REACT_CONTEXT_TYPE;
    var ContextProvider = REACT_PROVIDER_TYPE;
    var Element = REACT_ELEMENT_TYPE;
    var ForwardRef = REACT_FORWARD_REF_TYPE;
    var Fragment = REACT_FRAGMENT_TYPE;
    var Lazy = REACT_LAZY_TYPE;
    var Memo = REACT_MEMO_TYPE;
    var Portal = REACT_PORTAL_TYPE;
    var Profiler = REACT_PROFILER_TYPE;
    var StrictMode = REACT_STRICT_MODE_TYPE;
    var Suspense = REACT_SUSPENSE_TYPE;
    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
    function isAsyncMode(object) {
        if (!hasWarnedAboutDeprecatedIsAsyncMode) {
            hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
            console['warn']("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
        }
        return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
    }
    function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
    }
    function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
    }
    function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
    }
    function isElement(object) {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }
    function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
    }
    function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
    }
    function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
    }
    function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
    }
    function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
    }
    function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
    }
    function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
    }
    function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
    }
    exports.AsyncMode = AsyncMode;
    exports.ConcurrentMode = ConcurrentMode;
    exports.ContextConsumer = ContextConsumer;
    exports.ContextProvider = ContextProvider;
    exports.Element = Element;
    exports.ForwardRef = ForwardRef;
    exports.Fragment = Fragment;
    exports.Lazy = Lazy;
    exports.Memo = Memo;
    exports.Portal = Portal;
    exports.Profiler = Profiler;
    exports.StrictMode = StrictMode;
    exports.Suspense = Suspense;
    exports.isAsyncMode = isAsyncMode;
    exports.isConcurrentMode = isConcurrentMode;
    exports.isContextConsumer = isContextConsumer;
    exports.isContextProvider = isContextProvider;
    exports.isElement = isElement;
    exports.isForwardRef = isForwardRef;
    exports.isFragment = isFragment;
    exports.isLazy = isLazy;
    exports.isMemo = isMemo;
    exports.isPortal = isPortal;
    exports.isProfiler = isProfiler;
    exports.isStrictMode = isStrictMode;
    exports.isSuspense = isSuspense;
    exports.isValidElementType = isValidElementType;
    exports.typeOf = typeOf;
})();

},{}],"bBUgD":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactIs = require('react-is');
var assign = require('object-assign');
var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var has = require('./lib/has');
var checkPropTypes = require('./checkPropTypes');
var printWarning = function() {};
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') return iteratorFn;
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) // Steps 1-5, 7-10
        // Steps 6.b-6.e: +0 != -0
        return x !== 0 || 1 / x === 1 / y;
        else // Step 6.a: NaN == NaN
        return x !== x && y !== y;
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {};
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        var manualPropTypeCallCache = {};
        var manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else return validate(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            {
                if (arguments.length > 1) printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                else printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) return null;
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') return String(value);
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            for(var key in propValue)if (has(propValue, key)) {
                var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error instanceof Error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            printWarning('Invalid argument supplied to oneOfType, expected an instance of array.');
            return emptyFunctionThatReturnsNull;
        }
        for(var i1 = 0; i1 < arrayOfTypeCheckers.length; i1++){
            var checker = arrayOfTypeCheckers[i1];
            if (typeof checker !== 'function') {
                printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + ' at index ' + i1 + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) return null;
                if (checkerResult.data && has(checkerResult.data, 'expectedType')) expectedTypes.push(checkerResult.data.expectedType);
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== 'function') return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker) return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) return error;
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue)) return true;
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) while(!(step = iterator.next()).done){
                        if (!isNode(step.value)) return false;
                    }
                    else // Iterator will provide entry [k,v] tuples rather than values.
                    while(!(step = iterator.next()).done){
                        var entry = step.value;
                        if (entry) {
                            if (!isNode(entry[1])) return false;
                        }
                    }
                } else return false;
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') return true;
        // falsy value can't be a Symbol
        if (!propValue) return false;
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') return true;
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) return true;
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) return 'array';
        if (propValue instanceof RegExp) // Old webkits (at least until Android 4.0) return 'function' rather than
        // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
        // passes PropTypes.object.
        return 'object';
        if (isSymbol(propType, propValue)) return 'symbol';
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) return '' + propValue;
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) return 'date';
            else if (propValue instanceof RegExp) return 'regexp';
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) return ANONYMOUS;
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};

},{"react-is":"7EuwB","object-assign":"7OXxh","./lib/ReactPropTypesSecret":"jZTZJ","./lib/has":"fqKuf","./checkPropTypes":"5VwyJ"}],"7OXxh":[function(require,module,exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ 'use strict';
/* eslint-disable no-unused-vars */ var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;
function toObject(val) {
    if (val === null || val === undefined) throw new TypeError('Object.assign cannot be called with null or undefined');
    return Object(val);
}
function shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {};
        for(var i = 0; i < 10; i++)test2['_' + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join('') !== '0123456789') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {};
        'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if (hasOwnProperty.call(from, key)) to[key] = from[key];
        if (getOwnPropertySymbols) {
            symbols = getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if (propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

},{}],"jZTZJ":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

},{}],"fqKuf":[function(require,module,exports) {
module.exports = Function.call.bind(Object.prototype.hasOwnProperty);

},{}],"5VwyJ":[function(require,module,exports) {
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
var printWarning = function() {};
var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');
var loggedTypeFailures = {};
var has = require('./lib/has');
printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') console.error(message);
    try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
    } catch (x) {}
};
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    for(var typeSpecName in typeSpecs)if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
            // This is intentionally an invariant that gets caught. It's the same
            // behavior as without this statement except with a better message.
            if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
            error = ex;
        }
        if (error && !(error instanceof Error)) printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
            // Only monitor this failure once because there tends to be a lot of the
            // same error.
            loggedTypeFailures[error.message] = true;
            var stack = getStack ? getStack() : '';
            printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    loggedTypeFailures = {};
};
module.exports = checkPropTypes;

},{"./lib/ReactPropTypesSecret":"jZTZJ","./lib/has":"fqKuf"}],"lE3DS":[function(require,module,exports) {
// @flow
'use strict';
var global = arguments[3];
var key = '__global_unique_id__';
module.exports = function() {
    return global[key] = (global[key] || 0) + 1;
};

},{}],"eUVzU":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ 'use strict';
/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */ var __DEV__ = true;
var warning = function() {};
if (__DEV__) {
    var printWarning = function printWarning(format, args) {
        var len = arguments.length;
        args = new Array(len > 1 ? len - 1 : 0);
        for(var key = 1; key < len; key++)args[key - 1] = arguments[key];
        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function() {
            return args[argIndex++];
        });
        if (typeof console !== 'undefined') console.error(message);
        try {
            // --- Welcome to debugging React ---
            // This error was thrown as a convenience so that you can use this stack
            // to find the callsite that caused this warning to fire.
            throw new Error(message);
        } catch (x) {}
    };
    warning = function(condition, format, args) {
        var len = arguments.length;
        args = new Array(len > 2 ? len - 2 : 0);
        for(var key = 2; key < len; key++)args[key - 2] = arguments[key];
        if (format === undefined) throw new Error("`warning(condition, format, ...args)` requires a warning message argument");
        if (!condition) printWarning.apply(null, [
            format
        ].concat(args));
    };
}
module.exports = warning;

},{}],"3AaM4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "unwrapArray", ()=>unwrapArray
);
parcelHelpers.export(exports, "safeInvoke", ()=>safeInvoke
);
parcelHelpers.export(exports, "shallowEqual", ()=>shallowEqual
);
parcelHelpers.export(exports, "setRef", ()=>setRef
);
var unwrapArray = function unwrapArray(arg) {
    return Array.isArray(arg) ? arg[0] : arg;
};
var safeInvoke = function safeInvoke(fn) {
    if (typeof fn === "function") {
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        return fn.apply(void 0, args);
    }
};
var shallowEqual = function shallowEqual(objA, objB) {
    var aKeys = Object.keys(objA);
    var bKeys = Object.keys(objB);
    if (bKeys.length !== aKeys.length) return false;
    for(var i = 0; i < bKeys.length; i++){
        var key = aKeys[i];
        if (objA[key] !== objB[key]) return false;
    }
    return true;
};
var setRef = function setRef(ref, node) {
    // if its a function call it
    if (typeof ref === "function") return safeInvoke(ref, node);
    else if (ref != null) ref.current = node;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a8peP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _inheritsLoose = require("@babel/runtime/helpers/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _assertThisInitialized = require("@babel/runtime/helpers/assertThisInitialized");
var _assertThisInitializedDefault = parcelHelpers.interopDefault(_assertThisInitialized);
var _defineProperty = require("@babel/runtime/helpers/defineProperty");
var _definePropertyDefault = parcelHelpers.interopDefault(_defineProperty);
var _react = require("react");
var _warning = require("warning");
var _warningDefault = parcelHelpers.interopDefault(_warning);
var _manager = require("./Manager");
var _utils = require("./utils");
var InnerReference = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(InnerReference1, _React$Component);
    function InnerReference1() {
        var _this;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _React$Component.call.apply(_React$Component, [
            this
        ].concat(args)) || this;
        _definePropertyDefault.default(_assertThisInitializedDefault.default(_assertThisInitializedDefault.default(_this)), "refHandler", function(node) {
            _utils.setRef(_this.props.innerRef, node);
            _utils.safeInvoke(_this.props.setReferenceNode, node);
        });
        return _this;
    }
    var _proto = InnerReference1.prototype;
    _proto.componentWillUnmount = function componentWillUnmount() {
        _utils.setRef(this.props.innerRef, null);
    };
    _proto.render = function render() {
        _warningDefault.default(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
        return _utils.unwrapArray(this.props.children)({
            ref: this.refHandler
        });
    };
    return InnerReference1;
}(_react.Component);
function Reference(props) {
    return _react.createElement(_manager.ManagerReferenceNodeSetterContext.Consumer, null, function(setReferenceNode) {
        return _react.createElement(InnerReference, _extendsDefault.default({
            setReferenceNode: setReferenceNode
        }, props));
    });
}
exports.default = Reference;

},{"@babel/runtime/helpers/extends":"vw3vn","@babel/runtime/helpers/inheritsLoose":"bfCya","@babel/runtime/helpers/assertThisInitialized":"1mVba","@babel/runtime/helpers/defineProperty":"4x6r7","react":"21dqq","warning":"eUVzU","./Manager":"2IRUA","./utils":"3AaM4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ikpmN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Overlay", ()=>Overlay
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactDom = require("react-dom");
var _reactTransitionGroup = require("react-transition-group");
var _common = require("../../common");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _portal = require("../portal/portal");
var Overlay = /** @class */ function(_super) {
    _tslib.__extends(Overlay1, _super);
    function Overlay1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isAutoFocusing = false;
        _this.state = {
            hasEverOpened: _this.props.isOpen
        };
        // an HTMLElement that contains the backdrop and any children, to query for focus target
        _this.containerElement = null;
        // An empty, keyboard-focusable div at the beginning of the Overlay content
        _this.startFocusTrapElement = null;
        // An empty, keyboard-focusable div at the end of the Overlay content
        _this.endFocusTrapElement = null;
        _this.refHandlers = {
            // HACKHACK: see https://github.com/palantir/blueprint/issues/3979
            /* eslint-disable-next-line react/no-find-dom-node */ container: function(ref) {
                return _this.containerElement = _reactDom.findDOMNode(ref);
            },
            endFocusTrap: function(ref) {
                return _this.endFocusTrapElement = ref;
            },
            startFocusTrap: function(ref) {
                return _this.startFocusTrapElement = ref;
            }
        };
        _this.maybeRenderChild = function(child) {
            if (_utils.isFunction(child)) child = child();
            if (child == null) return null;
            // add a special class to each child element that will automatically set the appropriate
            // CSS position mode under the hood.
            var decoratedChild = typeof child === "object" ? _react.cloneElement(child, {
                className: _classnamesDefault.default(child.props.className, _common.Classes.OVERLAY_CONTENT)
            }) : _react.createElement("span", {
                className: _common.Classes.OVERLAY_CONTENT
            }, child);
            var _a = _this.props, onOpening = _a.onOpening, onOpened = _a.onOpened, onClosing = _a.onClosing, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;
            return _react.createElement(_reactTransitionGroup.CSSTransition, {
                classNames: transitionName,
                onEntering: onOpening,
                onEntered: onOpened,
                onExiting: onClosing,
                onExited: _this.handleTransitionExited,
                timeout: transitionDuration,
                addEndListener: _this.handleTransitionAddEnd
            }, decoratedChild);
        };
        /**
         * Ensures repeatedly pressing shift+tab keeps focus inside the Overlay. Moves focus to
         * the `endFocusTrapElement` or the first keyboard-focusable element in the Overlay (excluding
         * the `startFocusTrapElement`), depending on whether the element losing focus is inside the
         * Overlay.
         */ _this.handleStartFocusTrapElementFocus = function(e) {
            var _a;
            if (!_this.props.enforceFocus || _this.isAutoFocusing) return;
            // e.relatedTarget will not be defined if this was a programmatic focus event, as is the
            // case when we call this.bringFocusInsideOverlay() after a user clicked on the backdrop.
            // Otherwise, we're handling a user interaction, and we should wrap around to the last
            // element in this transition group.
            if (e.relatedTarget != null && _this.containerElement.contains(e.relatedTarget) && e.relatedTarget !== _this.endFocusTrapElement) (_a = _this.endFocusTrapElement) === null || _a === void 0 || _a.focus({
                preventScroll: true
            });
        };
        /**
         * Wrap around to the end of the dialog if `enforceFocus` is enabled.
         */ _this.handleStartFocusTrapElementKeyDown = function(e) {
            var _a;
            if (!_this.props.enforceFocus) return;
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable-next-line deprecation/deprecation */ if (e.shiftKey && e.which === _common.Keys.TAB) {
                var lastFocusableElement = _this.getKeyboardFocusableElements().pop();
                if (lastFocusableElement != null) lastFocusableElement.focus();
                else (_a = _this.endFocusTrapElement) === null || _a === void 0 || _a.focus({
                    preventScroll: true
                });
            }
        };
        /**
         * Ensures repeatedly pressing tab keeps focus inside the Overlay. Moves focus to the
         * `startFocusTrapElement` or the last keyboard-focusable element in the Overlay (excluding the
         * `startFocusTrapElement`), depending on whether the element losing focus is inside the
         * Overlay.
         */ _this.handleEndFocusTrapElementFocus = function(e) {
            var _a, _b;
            // No need for this.props.enforceFocus check here because this element is only rendered
            // when that prop is true.
            // During user interactions, e.relatedTarget will be defined, and we should wrap around to the
            // "start focus trap" element.
            // Otherwise, we're handling a programmatic focus event, which can only happen after a user
            // presses shift+tab from the first focusable element in the overlay.
            if (e.relatedTarget != null && _this.containerElement.contains(e.relatedTarget) && e.relatedTarget !== _this.startFocusTrapElement) {
                var firstFocusableElement = _this.getKeyboardFocusableElements().shift();
                // ensure we don't re-focus an already active element by comparing against e.relatedTarget
                if (!_this.isAutoFocusing && firstFocusableElement != null && firstFocusableElement !== e.relatedTarget) firstFocusableElement.focus();
                else (_a = _this.startFocusTrapElement) === null || _a === void 0 || _a.focus({
                    preventScroll: true
                });
            } else {
                var lastFocusableElement = _this.getKeyboardFocusableElements().pop();
                if (lastFocusableElement != null) lastFocusableElement.focus();
                else // Keeps focus within Overlay even if there are no keyboard-focusable children
                (_b = _this.startFocusTrapElement) === null || _b === void 0 || _b.focus({
                    preventScroll: true
                });
            }
        };
        _this.handleTransitionExited = function(node) {
            var _a, _b;
            if (_this.props.shouldReturnFocusOnClose && _this.lastActiveElementBeforeOpened instanceof HTMLElement) _this.lastActiveElementBeforeOpened.focus();
            (_b = (_a = _this.props).onClosed) === null || _b === void 0 || _b.call(_a, node);
        };
        _this.handleBackdropMouseDown = function(e) {
            var _a;
            var _b = _this.props, backdropProps = _b.backdropProps, canOutsideClickClose = _b.canOutsideClickClose, enforceFocus = _b.enforceFocus, onClose = _b.onClose;
            if (canOutsideClickClose) onClose === null || onClose === void 0 || onClose(e);
            if (enforceFocus) _this.bringFocusInsideOverlay();
            (_a = backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.onMouseDown) === null || _a === void 0 || _a.call(backdropProps, e);
        };
        _this.handleDocumentClick = function(e) {
            var _a1 = _this.props, canOutsideClickClose = _a1.canOutsideClickClose, isOpen = _a1.isOpen, onClose = _a1.onClose;
            // get the actual target even in the Shadow DOM
            var eventTarget = e.composed ? e.composedPath()[0] : e.target;
            var stackIndex = Overlay1.openStack.indexOf(_this);
            var isClickInThisOverlayOrDescendant = Overlay1.openStack.slice(stackIndex).some(function(_a) {
                var elem = _a.containerElement;
                // `elem` is the container of backdrop & content, so clicking on that container
                // should not count as being "inside" the overlay.
                return elem && elem.contains(eventTarget) && !elem.isSameNode(eventTarget);
            });
            if (isOpen && !isClickInThisOverlayOrDescendant && canOutsideClickClose) // casting to any because this is a native event
            onClose === null || onClose === void 0 || onClose(e);
        };
        /**
         * When multiple Overlays are open, this event handler is only active for the most recently
         * opened one to avoid Overlays competing with each other for focus.
         */ _this.handleDocumentFocus = function(e) {
            // get the actual target even in the Shadow DOM
            var eventTarget = e.composed ? e.composedPath()[0] : e.target;
            if (_this.props.enforceFocus && _this.containerElement != null && eventTarget instanceof Node && !_this.containerElement.contains(eventTarget)) {
                // prevent default focus behavior (sometimes auto-scrolls the page)
                e.preventDefault();
                e.stopImmediatePropagation();
                _this.bringFocusInsideOverlay();
            }
        };
        _this.handleKeyDown = function(e) {
            var _a = _this.props, canEscapeKeyClose = _a.canEscapeKeyClose, onClose = _a.onClose;
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable-next-line deprecation/deprecation */ if (e.which === _common.Keys.ESCAPE && canEscapeKeyClose) {
                onClose === null || onClose === void 0 || onClose(e);
                // prevent browser-specific escape key behavior (Safari exits fullscreen)
                e.preventDefault();
            }
        };
        _this.handleTransitionAddEnd = function() {
        // no-op
        };
        return _this;
    }
    Overlay1.getDerivedStateFromProps = function(_a) {
        var hasEverOpened = _a.isOpen;
        if (hasEverOpened) return {
            hasEverOpened: hasEverOpened
        };
        return null;
    };
    Overlay1.prototype.render = function() {
        var _a;
        var _b;
        // oh snap! no reason to render anything at all if we're being truly lazy
        if (this.props.lazy && !this.state.hasEverOpened) return null;
        var _c = this.props, autoFocus = _c.autoFocus, children = _c.children, className = _c.className, enforceFocus = _c.enforceFocus, usePortal = _c.usePortal, isOpen = _c.isOpen;
        // TransitionGroup types require single array of children; does not support nested arrays.
        // So we must collapse backdrop and children into one array, and every item must be wrapped in a
        // Transition element (no ReactText allowed).
        var childrenWithTransitions = isOpen ? (_b = _react.Children.map(children, this.maybeRenderChild)) !== null && _b !== void 0 ? _b : [] : [];
        var maybeBackdrop = this.maybeRenderBackdrop();
        if (maybeBackdrop !== null) childrenWithTransitions.unshift(maybeBackdrop);
        if (isOpen && (autoFocus || enforceFocus) && childrenWithTransitions.length > 0) {
            childrenWithTransitions.unshift(this.renderDummyElement("__start", {
                className: _common.Classes.OVERLAY_START_FOCUS_TRAP,
                onFocus: this.handleStartFocusTrapElementFocus,
                onKeyDown: this.handleStartFocusTrapElementKeyDown,
                ref: this.refHandlers.startFocusTrap
            }));
            if (enforceFocus) childrenWithTransitions.push(this.renderDummyElement("__end", {
                className: _common.Classes.OVERLAY_END_FOCUS_TRAP,
                onFocus: this.handleEndFocusTrapElementFocus,
                ref: this.refHandlers.endFocusTrap
            }));
        }
        var containerClasses = _classnamesDefault.default(_common.Classes.OVERLAY, (_a = {}, _a[_common.Classes.OVERLAY_OPEN] = isOpen, _a[_common.Classes.OVERLAY_INLINE] = !usePortal, _a), className);
        var transitionGroup = _react.createElement(_reactTransitionGroup.TransitionGroup, {
            appear: true,
            "aria-live": "polite",
            className: containerClasses,
            component: "div",
            onKeyDown: this.handleKeyDown,
            ref: this.refHandlers.container
        }, childrenWithTransitions);
        if (usePortal) return _react.createElement(_portal.Portal, {
            className: this.props.portalClassName,
            container: this.props.portalContainer
        }, transitionGroup);
        else return transitionGroup;
    };
    Overlay1.prototype.componentDidMount = function() {
        if (this.props.isOpen) this.overlayWillOpen();
    };
    Overlay1.prototype.componentDidUpdate = function(prevProps) {
        if (prevProps.isOpen && !this.props.isOpen) this.overlayWillClose();
        else if (!prevProps.isOpen && this.props.isOpen) this.overlayWillOpen();
    };
    Overlay1.prototype.componentWillUnmount = function() {
        this.overlayWillClose();
    };
    /**
     * @public for testing
     * @internal
     */ Overlay1.prototype.bringFocusInsideOverlay = function() {
        var _this = this;
        // always delay focus manipulation to just before repaint to prevent scroll jumping
        return this.requestAnimationFrame(function() {
            var _a;
            // container ref may be undefined between component mounting and Portal rendering
            // activeElement may be undefined in some rare cases in IE
            if (_this.containerElement == null || document.activeElement == null || !_this.props.isOpen) return;
            var isFocusOutsideModal = !_this.containerElement.contains(document.activeElement);
            if (isFocusOutsideModal) {
                (_a = _this.startFocusTrapElement) === null || _a === void 0 || _a.focus({
                    preventScroll: true
                });
                _this.isAutoFocusing = false;
            }
        });
    };
    Overlay1.prototype.maybeRenderBackdrop = function() {
        var _a = this.props, backdropClassName = _a.backdropClassName, backdropProps = _a.backdropProps, hasBackdrop = _a.hasBackdrop, isOpen = _a.isOpen, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;
        if (hasBackdrop && isOpen) return _react.createElement(_reactTransitionGroup.CSSTransition, {
            classNames: transitionName,
            key: "__backdrop",
            timeout: transitionDuration,
            addEndListener: this.handleTransitionAddEnd
        }, _react.createElement("div", _tslib.__assign({}, backdropProps, {
            className: _classnamesDefault.default(_common.Classes.OVERLAY_BACKDROP, backdropClassName, backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.className),
            onMouseDown: this.handleBackdropMouseDown
        })));
        else return null;
    };
    Overlay1.prototype.renderDummyElement = function(key, props) {
        var _a = this.props, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;
        return _react.createElement(_reactTransitionGroup.CSSTransition, {
            classNames: transitionName,
            key: key,
            addEndListener: this.handleTransitionAddEnd,
            timeout: transitionDuration,
            unmountOnExit: true
        }, _react.createElement("div", _tslib.__assign({
            tabIndex: 0
        }, props)));
    };
    Overlay1.prototype.getKeyboardFocusableElements = function() {
        var focusableElements = this.containerElement !== null ? Array.from(// Order may not be correct if children elements use tabindex values > 0.
        // Selectors derived from this SO question:
        // https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus
        this.containerElement.querySelectorAll([
            'a[href]:not([tabindex="-1"])',
            'button:not([disabled]):not([tabindex="-1"])',
            'details:not([tabindex="-1"])',
            'input:not([disabled]):not([tabindex="-1"])',
            'select:not([disabled]):not([tabindex="-1"])',
            'textarea:not([disabled]):not([tabindex="-1"])',
            '[tabindex]:not([tabindex="-1"])', 
        ].join(","))) : [];
        return focusableElements.filter(function(el) {
            return !el.classList.contains(_common.Classes.OVERLAY_START_FOCUS_TRAP) && !el.classList.contains(_common.Classes.OVERLAY_END_FOCUS_TRAP);
        });
    };
    Overlay1.prototype.overlayWillClose = function() {
        document.removeEventListener("focus", this.handleDocumentFocus, /* useCapture */ true);
        document.removeEventListener("mousedown", this.handleDocumentClick);
        var openStack = Overlay1.openStack;
        var stackIndex = openStack.indexOf(this);
        if (stackIndex !== -1) {
            openStack.splice(stackIndex, 1);
            if (openStack.length > 0) {
                var lastOpenedOverlay = Overlay1.getLastOpened();
                // Only bring focus back to last overlay if it had autoFocus _and_ enforceFocus enabled.
                // If `autoFocus={false}`, it's likely that the overlay never received focus in the first place,
                // so it would be surprising for us to send it there. See https://github.com/palantir/blueprint/issues/4921
                if (lastOpenedOverlay.props.autoFocus && lastOpenedOverlay.props.enforceFocus) {
                    lastOpenedOverlay.bringFocusInsideOverlay();
                    document.addEventListener("focus", lastOpenedOverlay.handleDocumentFocus, /* useCapture */ true);
                }
            }
            if (openStack.filter(function(o) {
                return o.props.usePortal && o.props.hasBackdrop;
            }).length === 0) document.body.classList.remove(_common.Classes.OVERLAY_OPEN);
        }
    };
    Overlay1.prototype.overlayWillOpen = function() {
        var getLastOpened = Overlay1.getLastOpened, openStack = Overlay1.openStack;
        if (openStack.length > 0) document.removeEventListener("focus", getLastOpened().handleDocumentFocus, /* useCapture */ true);
        openStack.push(this);
        if (this.props.autoFocus) {
            this.isAutoFocusing = true;
            this.bringFocusInsideOverlay();
        }
        if (this.props.enforceFocus) // Focus events do not bubble, but setting useCapture allows us to listen in and execute
        // our handler before all others
        document.addEventListener("focus", this.handleDocumentFocus, /* useCapture */ true);
        if (this.props.canOutsideClickClose && !this.props.hasBackdrop) document.addEventListener("mousedown", this.handleDocumentClick);
        if (this.props.hasBackdrop && this.props.usePortal) // add a class to the body to prevent scrolling of content below the overlay
        document.body.classList.add(_common.Classes.OVERLAY_OPEN);
        this.lastActiveElementBeforeOpened = document.activeElement;
    };
    Overlay1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Overlay");
    Overlay1.defaultProps = {
        autoFocus: true,
        backdropProps: {},
        canEscapeKeyClose: true,
        canOutsideClickClose: true,
        enforceFocus: true,
        hasBackdrop: true,
        isOpen: false,
        lazy: true,
        shouldReturnFocusOnClose: true,
        transitionDuration: 300,
        transitionName: _common.Classes.OVERLAY,
        usePortal: true
    };
    Overlay1.openStack = [];
    Overlay1.getLastOpened = function() {
        return Overlay1.openStack[Overlay1.openStack.length - 1];
    };
    return Overlay1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","react-dom":"j6uA9","react-transition-group":"fZSkB","../../common":"6BNPY","../../common/props":"7F9ht","../../common/utils":"8MRas","../portal/portal":"45Axs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fZSkB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CSSTransition", ()=>_csstransitionDefault.default
);
parcelHelpers.export(exports, "ReplaceTransition", ()=>_replaceTransitionDefault.default
);
parcelHelpers.export(exports, "SwitchTransition", ()=>_switchTransitionDefault.default
);
parcelHelpers.export(exports, "TransitionGroup", ()=>_transitionGroupDefault.default
);
parcelHelpers.export(exports, "Transition", ()=>_transitionDefault.default
);
parcelHelpers.export(exports, "config", ()=>_configDefault.default
);
var _csstransition = require("./CSSTransition");
var _csstransitionDefault = parcelHelpers.interopDefault(_csstransition);
var _replaceTransition = require("./ReplaceTransition");
var _replaceTransitionDefault = parcelHelpers.interopDefault(_replaceTransition);
var _switchTransition = require("./SwitchTransition");
var _switchTransitionDefault = parcelHelpers.interopDefault(_switchTransition);
var _transitionGroup = require("./TransitionGroup");
var _transitionGroupDefault = parcelHelpers.interopDefault(_transitionGroup);
var _transition = require("./Transition");
var _transitionDefault = parcelHelpers.interopDefault(_transition);
var _config = require("./config");
var _configDefault = parcelHelpers.interopDefault(_config);

},{"./CSSTransition":"a3gKf","./ReplaceTransition":false,"./SwitchTransition":false,"./TransitionGroup":"5mvFs","./Transition":"cKsrS","./config":"cepoZ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a3gKf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _addClass = require("dom-helpers/addClass");
var _addClassDefault = parcelHelpers.interopDefault(_addClass);
var _removeClass = require("dom-helpers/removeClass");
var _removeClassDefault = parcelHelpers.interopDefault(_removeClass);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _transition = require("./Transition");
var _transitionDefault = parcelHelpers.interopDefault(_transition);
var _propTypes1 = require("./utils/PropTypes");
var _addClass1 = function addClass(node, classes) {
    return node && classes && classes.split(' ').forEach(function(c) {
        return _addClassDefault.default(node, c);
    });
};
var removeClass = function removeClass(node, classes) {
    return node && classes && classes.split(' ').forEach(function(c) {
        return _removeClassDefault.default(node, c);
    });
};
/**
 * A transition component inspired by the excellent
 * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should
 * use it if you're using CSS transitions or animations. It's built upon the
 * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
 * component, so it inherits all of its props.
 *
 * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
 * and `exit` states of the transition. The first class is applied and then a
 * second `*-active` class in order to activate the CSS transition. After the
 * transition, matching `*-done` class names are applied to persist the
 * transition state.
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
 *         <div>
 *           {"I'll receive my-node-* classes"}
 *         </div>
 *       </CSSTransition>
 *       <button type="button" onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the `in` prop is set to `true`, the child component will first receive
 * the class `example-enter`, then the `example-enter-active` will be added in
 * the next tick. `CSSTransition` [forces a
 * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
 * between before adding the `example-enter-active`. This is an important trick
 * because it allows us to transition between `example-enter` and
 * `example-enter-active` even though they were added immediately one after
 * another. Most notably, this is what makes it possible for us to animate
 * _appearance_.
 *
 * ```css
 * .my-node-enter {
 *   opacity: 0;
 * }
 * .my-node-enter-active {
 *   opacity: 1;
 *   transition: opacity 200ms;
 * }
 * .my-node-exit {
 *   opacity: 1;
 * }
 * .my-node-exit-active {
 *   opacity: 0;
 *   transition: opacity 200ms;
 * }
 * ```
 *
 * `*-active` classes represent which styles you want to animate **to**, so it's
 * important to add `transition` declaration only to them, otherwise transitions
 * might not behave as intended! This might not be obvious when the transitions
 * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in
 * the example above (minus `transition`), but it becomes apparent in more
 * complex transitions.
 *
 * **Note**: If you're using the
 * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)
 * prop, make sure to define styles for `.appear-*` classes as well.
 */ var CSSTransition = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(CSSTransition1, _React$Component);
    function CSSTransition1() {
        var _this;
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        _this = _React$Component.call.apply(_React$Component, [
            this
        ].concat(args)) || this;
        _this.appliedClasses = {
            appear: {},
            enter: {},
            exit: {}
        };
        _this.onEnter = function(maybeNode, maybeAppearing) {
            var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
            _this.removeClasses(node, 'exit');
            _this.addClass(node, appearing ? 'appear' : 'enter', 'base');
            if (_this.props.onEnter) _this.props.onEnter(maybeNode, maybeAppearing);
        };
        _this.onEntering = function(maybeNode, maybeAppearing) {
            var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
            var type = appearing ? 'appear' : 'enter';
            _this.addClass(node, type, 'active');
            if (_this.props.onEntering) _this.props.onEntering(maybeNode, maybeAppearing);
        };
        _this.onEntered = function(maybeNode, maybeAppearing) {
            var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
            var type = appearing ? 'appear' : 'enter';
            _this.removeClasses(node, type);
            _this.addClass(node, type, 'done');
            if (_this.props.onEntered) _this.props.onEntered(maybeNode, maybeAppearing);
        };
        _this.onExit = function(maybeNode) {
            var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
            _this.removeClasses(node, 'appear');
            _this.removeClasses(node, 'enter');
            _this.addClass(node, 'exit', 'base');
            if (_this.props.onExit) _this.props.onExit(maybeNode);
        };
        _this.onExiting = function(maybeNode) {
            var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
            _this.addClass(node, 'exit', 'active');
            if (_this.props.onExiting) _this.props.onExiting(maybeNode);
        };
        _this.onExited = function(maybeNode) {
            var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
            _this.removeClasses(node, 'exit');
            _this.addClass(node, 'exit', 'done');
            if (_this.props.onExited) _this.props.onExited(maybeNode);
        };
        _this.resolveArguments = function(maybeNode, maybeAppearing) {
            return _this.props.nodeRef ? [
                _this.props.nodeRef.current,
                maybeNode
            ] // here `maybeNode` is actually `appearing`
             : [
                maybeNode,
                maybeAppearing
            ];
        };
        _this.getClassNames = function(type) {
            var classNames = _this.props.classNames;
            var isStringClassNames = typeof classNames === 'string';
            var prefix = isStringClassNames && classNames ? classNames + "-" : '';
            var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
            var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
            var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
            return {
                baseClassName: baseClassName,
                activeClassName: activeClassName,
                doneClassName: doneClassName
            };
        };
        return _this;
    }
    var _proto = CSSTransition1.prototype;
    _proto.addClass = function addClass(node, type, phase) {
        var className = this.getClassNames(type)[phase + "ClassName"];
        var _this$getClassNames = this.getClassNames('enter'), doneClassName = _this$getClassNames.doneClassName;
        if (type === 'appear' && phase === 'done' && doneClassName) className += " " + doneClassName;
         // This is to force a repaint,
        // which is necessary in order to transition styles when adding a class name.
        if (phase === 'active') /* eslint-disable no-unused-expressions */ node && node.scrollTop;
        if (className) {
            this.appliedClasses[type][phase] = className;
            _addClass1(node, className);
        }
    };
    _proto.removeClasses = function removeClasses(node, type) {
        var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
        this.appliedClasses[type] = {};
        if (baseClassName) removeClass(node, baseClassName);
        if (activeClassName) removeClass(node, activeClassName);
        if (doneClassName) removeClass(node, doneClassName);
    };
    _proto.render = function render() {
        var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "classNames"
        ]);
        return /*#__PURE__*/ _reactDefault.default.createElement(_transitionDefault.default, _extendsDefault.default({}, props, {
            onEnter: this.onEnter,
            onEntered: this.onEntered,
            onEntering: this.onEntering,
            onExit: this.onExit,
            onExiting: this.onExiting,
            onExited: this.onExited
        }));
    };
    return CSSTransition1;
}(_reactDefault.default.Component);
CSSTransition.defaultProps = {
    classNames: ''
};
CSSTransition.propTypes = _extendsDefault.default({}, _transitionDefault.default.propTypes, {
    /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */ classNames: _propTypes1.classNamesShape,
    /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEnter: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEntering: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEntered: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */ onExit: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */ onExiting: _propTypesDefault.default.func,
    /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */ onExited: _propTypesDefault.default.func
});
exports.default = CSSTransition;

},{"@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"adHgr","@babel/runtime/helpers/esm/inheritsLoose":"9u2Z8","prop-types":"7wKI2","dom-helpers/addClass":"7dIIz","dom-helpers/removeClass":"66hgg","react":"21dqq","./Transition":"cKsrS","./utils/PropTypes":"9Zqaa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fTBFS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _extends() {
    _extends = Object.assign || function(target) {
        for(var i = 1; i < arguments.length; i++){
            var source = arguments[i];
            for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
        }
        return target;
    };
    return _extends.apply(this, arguments);
}
exports.default = _extends;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"adHgr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for(i = 0; i < sourceKeys.length; i++){
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
    }
    return target;
}
exports.default = _objectWithoutPropertiesLoose;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9u2Z8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _setPrototypeOfJs = require("./setPrototypeOf.js");
var _setPrototypeOfJsDefault = parcelHelpers.interopDefault(_setPrototypeOfJs);
function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    _setPrototypeOfJsDefault.default(subClass, superClass);
}
exports.default = _inheritsLoose;

},{"./setPrototypeOf.js":"3XDFA","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3XDFA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _setPrototypeOf(o1, p1) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
    };
    return _setPrototypeOf(o1, p1);
}
exports.default = _setPrototypeOf;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7dIIz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _hasClass = require("./hasClass");
var _hasClassDefault = parcelHelpers.interopDefault(_hasClass);
function addClass(element, className) {
    if (element.classList) element.classList.add(className);
    else if (!_hasClassDefault.default(element, className)) {
        if (typeof element.className === 'string') element.className = element.className + " " + className;
        else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
    }
}
exports.default = addClass;

},{"./hasClass":"6sJz4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6sJz4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function hasClass(element, className) {
    if (element.classList) return !!className && element.classList.contains(className);
    return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
exports.default = hasClass;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"66hgg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function replaceClassName(origClass, classToRemove) {
    return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
}
function removeClass(element, className) {
    if (element.classList) element.classList.remove(className);
    else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);
    else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
}
exports.default = removeClass;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cKsrS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "UNMOUNTED", ()=>UNMOUNTED
);
parcelHelpers.export(exports, "EXITED", ()=>EXITED
);
parcelHelpers.export(exports, "ENTERING", ()=>ENTERING
);
parcelHelpers.export(exports, "ENTERED", ()=>ENTERED
);
parcelHelpers.export(exports, "EXITING", ()=>EXITING
);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _reactDom = require("react-dom");
var _reactDomDefault = parcelHelpers.interopDefault(_reactDom);
var _config = require("./config");
var _configDefault = parcelHelpers.interopDefault(_config);
var _propTypes1 = require("./utils/PropTypes");
var _transitionGroupContext = require("./TransitionGroupContext");
var _transitionGroupContextDefault = parcelHelpers.interopDefault(_transitionGroupContext);
var UNMOUNTED = 'unmounted';
var EXITED = 'exited';
var ENTERING = 'entering';
var ENTERED = 'entered';
var EXITING = 'exiting';
/**
 * The Transition component lets you describe a transition from one component
 * state to another _over time_ with a simple declarative API. Most commonly
 * it's used to animate the mounting and unmounting of a component, but can also
 * be used to describe in-place transition states as well.
 *
 * ---
 *
 * **Note**: `Transition` is a platform-agnostic base component. If you're using
 * transitions in CSS, you'll probably want to use
 * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
 * instead. It inherits all the features of `Transition`, but contains
 * additional features necessary to play nice with CSS transitions (hence the
 * name of the component).
 *
 * ---
 *
 * By default the `Transition` component does not alter the behavior of the
 * component it renders, it only tracks "enter" and "exit" states for the
 * components. It's up to you to give meaning and effect to those states. For
 * example we can add styles to a component when it enters or exits:
 *
 * ```jsx
 * import { Transition } from 'react-transition-group';
 *
 * const duration = 300;
 *
 * const defaultStyle = {
 *   transition: `opacity ${duration}ms ease-in-out`,
 *   opacity: 0,
 * }
 *
 * const transitionStyles = {
 *   entering: { opacity: 1 },
 *   entered:  { opacity: 1 },
 *   exiting:  { opacity: 0 },
 *   exited:  { opacity: 0 },
 * };
 *
 * const Fade = ({ in: inProp }) => (
 *   <Transition in={inProp} timeout={duration}>
 *     {state => (
 *       <div style={{
 *         ...defaultStyle,
 *         ...transitionStyles[state]
 *       }}>
 *         I'm a fade Transition!
 *       </div>
 *     )}
 *   </Transition>
 * );
 * ```
 *
 * There are 4 main states a Transition can be in:
 *  - `'entering'`
 *  - `'entered'`
 *  - `'exiting'`
 *  - `'exited'`
 *
 * Transition state is toggled via the `in` prop. When `true` the component
 * begins the "Enter" stage. During this stage, the component will shift from
 * its current transition state, to `'entering'` for the duration of the
 * transition and then to the `'entered'` stage once it's complete. Let's take
 * the following example (we'll use the
 * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
 *
 * ```jsx
 * function App() {
 *   const [inProp, setInProp] = useState(false);
 *   return (
 *     <div>
 *       <Transition in={inProp} timeout={500}>
 *         {state => (
 *           // ...
 *         )}
 *       </Transition>
 *       <button onClick={() => setInProp(true)}>
 *         Click to Enter
 *       </button>
 *     </div>
 *   );
 * }
 * ```
 *
 * When the button is clicked the component will shift to the `'entering'` state
 * and stay there for 500ms (the value of `timeout`) before it finally switches
 * to `'entered'`.
 *
 * When `in` is `false` the same thing happens except the state moves from
 * `'exiting'` to `'exited'`.
 */ var Transition = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(Transition1, _React$Component);
    function Transition1(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context; // In the context of a TransitionGroup all enters are really appears
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
            if (appear) {
                initialStatus = EXITED;
                _this.appearStatus = ENTERING;
            } else initialStatus = ENTERED;
        } else if (props.unmountOnExit || props.mountOnEnter) initialStatus = UNMOUNTED;
        else initialStatus = EXITED;
        _this.state = {
            status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
    }
    Transition1.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) return {
            status: EXITED
        };
        return null;
    } // getSnapshotBeforeUpdate(prevProps) {
    ;
    var _proto = Transition1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
            var status = this.state.status;
            if (this.props.in) {
                if (status !== ENTERING && status !== ENTERED) nextStatus = ENTERING;
            } else if (status === ENTERING || status === ENTERED) nextStatus = EXITING;
        }
        this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
        var timeout = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout;
        if (timeout != null && typeof timeout !== 'number') {
            exit = timeout.exit;
            enter = timeout.enter; // TODO: remove fallback for next major
            appear = timeout.appear !== undefined ? timeout.appear : enter;
        }
        return {
            exit: exit,
            enter: enter,
            appear: appear
        };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) mounting = false;
        if (nextStatus !== null) {
            // nextStatus will always be ENTERING or EXITING.
            this.cancelNextCallback();
            if (nextStatus === ENTERING) this.performEnter(mounting);
            else this.performExit();
        } else if (this.props.unmountOnExit && this.state.status === EXITED) this.setState({
            status: UNMOUNTED
        });
    };
    _proto.performEnter = function performEnter(mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context ? this.context.isMounting : mounting;
        var _ref2 = this.props.nodeRef ? [
            appearing
        ] : [
            _reactDomDefault.default.findDOMNode(this),
            appearing
        ], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
        // if we are mounting and running this it means appear _must_ be set
        if (!mounting && !enter || _configDefault.default.disabled) {
            this.safeSetState({
                status: ENTERED
            }, function() {
                _this2.props.onEntered(maybeNode);
            });
            return;
        }
        this.props.onEnter(maybeNode, maybeAppearing);
        this.safeSetState({
            status: ENTERING
        }, function() {
            _this2.props.onEntering(maybeNode, maybeAppearing);
            _this2.onTransitionEnd(enterTimeout, function() {
                _this2.safeSetState({
                    status: ENTERED
                }, function() {
                    _this2.props.onEntered(maybeNode, maybeAppearing);
                });
            });
        });
    };
    _proto.performExit = function performExit() {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        var maybeNode = this.props.nodeRef ? undefined : _reactDomDefault.default.findDOMNode(this); // no exit animation skip right to EXITED
        if (!exit || _configDefault.default.disabled) {
            this.safeSetState({
                status: EXITED
            }, function() {
                _this3.props.onExited(maybeNode);
            });
            return;
        }
        this.props.onExit(maybeNode);
        this.safeSetState({
            status: EXITING
        }, function() {
            _this3.props.onExiting(maybeNode);
            _this3.onTransitionEnd(timeouts.exit, function() {
                _this3.safeSetState({
                    status: EXITED
                }, function() {
                    _this3.props.onExited(maybeNode);
                });
            });
        });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
            this.nextCallback.cancel();
            this.nextCallback = null;
        }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
        // This shouldn't be necessary, but there are weird race conditions with
        // setState callbacks and unmounting in testing, so always make sure that
        // we can cancel any pending setState callbacks after we unmount.
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
            if (active) {
                active = false;
                _this4.nextCallback = null;
                callback(event);
            }
        };
        this.nextCallback.cancel = function() {
            active = false;
        };
        return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
        this.setNextCallback(handler);
        var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDomDefault.default.findDOMNode(this);
        var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
            setTimeout(this.nextCallback, 0);
            return;
        }
        if (this.props.addEndListener) {
            var _ref3 = this.props.nodeRef ? [
                this.nextCallback
            ] : [
                node,
                this.nextCallback
            ], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
            this.props.addEndListener(maybeNode, maybeNextCallback);
        }
        if (timeout != null) setTimeout(this.nextCallback, timeout);
    };
    _proto.render = function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) return null;
        var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "children",
            "in",
            "mountOnEnter",
            "unmountOnExit",
            "appear",
            "enter",
            "exit",
            "timeout",
            "addEndListener",
            "onEnter",
            "onEntering",
            "onEntered",
            "onExit",
            "onExiting",
            "onExited",
            "nodeRef"
        ]);
        return(/*#__PURE__*/ // allows for nested Transitions
        _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: null
        }, typeof children === 'function' ? children(status, childProps) : _reactDefault.default.cloneElement(_reactDefault.default.Children.only(children), childProps)));
    };
    return Transition1;
}(_reactDefault.default.Component);
Transition.contextType = _transitionGroupContextDefault.default;
Transition.propTypes = {
    /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */ nodeRef: _propTypesDefault.default.shape({
        current: typeof Element === 'undefined' ? _propTypesDefault.default.any : function(propValue, key, componentName, location, propFullName, secret) {
            var value = propValue[key];
            return _propTypesDefault.default.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
        }
    }),
    /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */ children: _propTypesDefault.default.oneOfType([
        _propTypesDefault.default.func.isRequired,
        _propTypesDefault.default.element.isRequired
    ]).isRequired,
    /**
   * Show the component; triggers the enter or exit states
   */ in: _propTypesDefault.default.bool,
    /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */ mountOnEnter: _propTypesDefault.default.bool,
    /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */ unmountOnExit: _propTypesDefault.default.bool,
    /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */ appear: _propTypesDefault.default.bool,
    /**
   * Enable or disable enter transitions.
   */ enter: _propTypesDefault.default.bool,
    /**
   * Enable or disable exit transitions.
   */ exit: _propTypesDefault.default.bool,
    /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */ timeout: function timeout(props) {
        var pt = _propTypes1.timeoutsShape;
        if (!props.addEndListener) pt = pt.isRequired;
        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];
        return pt.apply(void 0, [
            props
        ].concat(args));
    },
    /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */ addEndListener: _propTypesDefault.default.func,
    /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */ onEnter: _propTypesDefault.default.func,
    /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */ onEntering: _propTypesDefault.default.func,
    /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */ onEntered: _propTypesDefault.default.func,
    /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */ onExit: _propTypesDefault.default.func,
    /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */ onExiting: _propTypesDefault.default.func,
    /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */ onExited: _propTypesDefault.default.func
}; // Name the function so it is clearer in the documentation
function noop() {}
Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
exports.default = Transition;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"adHgr","@babel/runtime/helpers/esm/inheritsLoose":"9u2Z8","prop-types":"7wKI2","react":"21dqq","react-dom":"j6uA9","./config":"cepoZ","./utils/PropTypes":"9Zqaa","./TransitionGroupContext":"47LXo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cepoZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = {
    disabled: false
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Zqaa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "timeoutsShape", ()=>timeoutsShape
);
parcelHelpers.export(exports, "classNamesShape", ()=>classNamesShape
);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var timeoutsShape = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.number,
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.number,
        exit: _propTypesDefault.default.number,
        appear: _propTypesDefault.default.number
    }).isRequired
]);
var classNamesShape = _propTypesDefault.default.oneOfType([
    _propTypesDefault.default.string,
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.string,
        exit: _propTypesDefault.default.string,
        active: _propTypesDefault.default.string
    }),
    _propTypesDefault.default.shape({
        enter: _propTypesDefault.default.string,
        enterDone: _propTypesDefault.default.string,
        enterActive: _propTypesDefault.default.string,
        exit: _propTypesDefault.default.string,
        exitDone: _propTypesDefault.default.string,
        exitActive: _propTypesDefault.default.string
    })
]);

},{"prop-types":"7wKI2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"47LXo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
exports.default = _reactDefault.default.createContext(null);

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5mvFs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _objectWithoutPropertiesLoose = require("@babel/runtime/helpers/esm/objectWithoutPropertiesLoose");
var _objectWithoutPropertiesLooseDefault = parcelHelpers.interopDefault(_objectWithoutPropertiesLoose);
var _extends = require("@babel/runtime/helpers/esm/extends");
var _extendsDefault = parcelHelpers.interopDefault(_extends);
var _assertThisInitialized = require("@babel/runtime/helpers/esm/assertThisInitialized");
var _assertThisInitializedDefault = parcelHelpers.interopDefault(_assertThisInitialized);
var _inheritsLoose = require("@babel/runtime/helpers/esm/inheritsLoose");
var _inheritsLooseDefault = parcelHelpers.interopDefault(_inheritsLoose);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _transitionGroupContext = require("./TransitionGroupContext");
var _transitionGroupContextDefault = parcelHelpers.interopDefault(_transitionGroupContext);
var _childMapping = require("./utils/ChildMapping");
var values = Object.values || function(obj) {
    return Object.keys(obj).map(function(k) {
        return obj[k];
    });
};
var defaultProps = {
    component: 'div',
    childFactory: function childFactory(child) {
        return child;
    }
};
/**
 * The `<TransitionGroup>` component manages a set of transition components
 * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
 * components, `<TransitionGroup>` is a state machine for managing the mounting
 * and unmounting of components over time.
 *
 * Consider the example below. As items are removed or added to the TodoList the
 * `in` prop is toggled automatically by the `<TransitionGroup>`.
 *
 * Note that `<TransitionGroup>`  does not define any animation behavior!
 * Exactly _how_ a list item animates is up to the individual transition
 * component. This means you can mix and match animations across different list
 * items.
 */ var TransitionGroup = /*#__PURE__*/ function(_React$Component) {
    _inheritsLooseDefault.default(TransitionGroup1, _React$Component);
    function TransitionGroup1(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitializedDefault.default(_this)); // Initial children should all be entering, dependent on appear
        _this.state = {
            contextValue: {
                isMounting: true
            },
            handleExited: handleExited,
            firstRender: true
        };
        return _this;
    }
    var _proto = TransitionGroup1.prototype;
    _proto.componentDidMount = function componentDidMount() {
        this.mounted = true;
        this.setState({
            contextValue: {
                isMounting: false
            }
        });
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
    };
    TransitionGroup1.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
            children: firstRender ? _childMapping.getInitialChildMapping(nextProps, handleExited) : _childMapping.getNextChildMapping(nextProps, prevChildMapping, handleExited),
            firstRender: false
        };
    } // node is `undefined` when user provided `nodeRef` prop
    ;
    _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = _childMapping.getChildMapping(this.props.children);
        if (child.key in currentChildMapping) return;
        if (child.props.onExited) child.props.onExited(node);
        if (this.mounted) this.setState(function(state) {
            var children = _extendsDefault.default({}, state.children);
            delete children[child.key];
            return {
                children: children
            };
        });
    };
    _proto.render = function render() {
        var _this$props = this.props, Component = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLooseDefault.default(_this$props, [
            "component",
            "childFactory"
        ]);
        var contextValue = this.state.contextValue;
        var children = values(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component === null) return /*#__PURE__*/ _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: contextValue
        }, children);
        return /*#__PURE__*/ _reactDefault.default.createElement(_transitionGroupContextDefault.default.Provider, {
            value: contextValue
        }, /*#__PURE__*/ _reactDefault.default.createElement(Component, props, children));
    };
    return TransitionGroup1;
}(_reactDefault.default.Component);
TransitionGroup.propTypes = {
    /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */ component: _propTypesDefault.default.any,
    /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */ children: _propTypesDefault.default.node,
    /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ appear: _propTypesDefault.default.bool,
    /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ enter: _propTypesDefault.default.bool,
    /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */ exit: _propTypesDefault.default.bool,
    /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */ childFactory: _propTypesDefault.default.func
};
TransitionGroup.defaultProps = defaultProps;
exports.default = TransitionGroup;

},{"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose":"adHgr","@babel/runtime/helpers/esm/extends":"fTBFS","@babel/runtime/helpers/esm/assertThisInitialized":"iy3su","@babel/runtime/helpers/esm/inheritsLoose":"9u2Z8","prop-types":"7wKI2","react":"21dqq","./TransitionGroupContext":"47LXo","./utils/ChildMapping":"8k6ul","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iy3su":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
exports.default = _assertThisInitialized;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8k6ul":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */ parcelHelpers.export(exports, "getChildMapping", ()=>getChildMapping
);
/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */ parcelHelpers.export(exports, "mergeChildMappings", ()=>mergeChildMappings
);
parcelHelpers.export(exports, "getInitialChildMapping", ()=>getInitialChildMapping
);
parcelHelpers.export(exports, "getNextChildMapping", ()=>getNextChildMapping
);
var _react = require("react");
function getChildMapping(children, mapFn) {
    var mapper = function mapper(child) {
        return mapFn && _react.isValidElement(child) ? mapFn(child) : child;
    };
    var result = Object.create(null);
    if (children) _react.Children.map(children, function(c) {
        return c;
    }).forEach(function(child) {
        // run the map function here instead so that the key is the computed one
        result[child.key] = mapper(child);
    });
    return result;
}
function mergeChildMappings(prev, next) {
    prev = prev || {};
    next = next || {};
    function getValueForKey(key) {
        return key in next ? next[key] : prev[key];
    } // For each key of `next`, the list of keys to insert before that key in
    // the combined list
    var nextKeysPending = Object.create(null);
    var pendingKeys = [];
    for(var prevKey in prev){
        if (prevKey in next) {
            if (pendingKeys.length) {
                nextKeysPending[prevKey] = pendingKeys;
                pendingKeys = [];
            }
        } else pendingKeys.push(prevKey);
    }
    var i;
    var childMapping = {};
    for(var nextKey in next){
        if (nextKeysPending[nextKey]) for(i = 0; i < nextKeysPending[nextKey].length; i++){
            var pendingNextKey = nextKeysPending[nextKey][i];
            childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
        childMapping[nextKey] = getValueForKey(nextKey);
    } // Finally, add the keys which didn't appear before any key in `next`
    for(i = 0; i < pendingKeys.length; i++)childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    return childMapping;
}
function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function(child) {
        return _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: true,
            appear: getProp(child, 'appear', props),
            enter: getProp(child, 'enter', props),
            exit: getProp(child, 'exit', props)
        });
    });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children);
    var children = mergeChildMappings(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function(key) {
        var child = children[key];
        if (!_react.isValidElement(child)) return;
        var hasPrev = key in prevChildMapping;
        var hasNext = key in nextChildMapping;
        var prevChild = prevChildMapping[key];
        var isLeaving = _react.isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)
        if (hasNext && (!hasPrev || isLeaving)) // console.log('entering', key)
        children[key] = _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: true,
            exit: getProp(child, 'exit', nextProps),
            enter: getProp(child, 'enter', nextProps)
        });
        else if (!hasNext && hasPrev && !isLeaving) // item is old (exiting)
        // console.log('leaving', key)
        children[key] = _react.cloneElement(child, {
            in: false
        });
        else if (hasNext && hasPrev && _react.isValidElement(prevChild)) // item hasn't changed transition states
        // copy over the last transition props;
        // console.log('unchanged', key)
        children[key] = _react.cloneElement(child, {
            onExited: onExited.bind(null, child),
            in: prevChild.props.in,
            exit: getProp(child, 'exit', nextProps),
            enter: getProp(child, 'enter', nextProps)
        });
    });
    return children;
}

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"45Axs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Portal", ()=>Portal
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _reactDom = require("react-dom");
var _classes = require("../../common/classes");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
/** Detect if `React.createPortal()` API method does not exist. */ var cannotCreatePortal = !_utils.isFunction(_reactDom.createPortal);
var REACT_CONTEXT_TYPES = {
    blueprintPortalClassName: function(obj, key) {
        if (obj[key] != null && typeof obj[key] !== "string") return new Error(_errors.PORTAL_CONTEXT_CLASS_NAME_STRING);
        return undefined;
    }
};
/**
 * This component detaches its contents and re-attaches them to document.body.
 * Use it when you need to circumvent DOM z-stacking (for dialogs, popovers, etc.).
 * Any class names passed to this element will be propagated to the new container element on document.body.
 */ var Portal = /** @class */ function(_super) {
    _tslib.__extends(Portal1, _super);
    function Portal1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.context = {};
        _this.state = {
            hasMounted: false
        };
        _this.portalElement = null;
        return _this;
    }
    Portal1.prototype.render = function() {
        // Only render `children` once this component has mounted in a browser environment, so they are
        // immediately attached to the DOM tree and can do DOM things like measuring or `autoFocus`.
        // See long comment on componentDidMount in https://reactjs.org/docs/portals.html#event-bubbling-through-portals
        if (cannotCreatePortal || typeof document === "undefined" || !this.state.hasMounted || this.portalElement === null) return null;
        else return _reactDom.createPortal(this.props.children, this.portalElement);
    };
    Portal1.prototype.componentDidMount = function() {
        if (!this.props.container) return;
        this.portalElement = this.createContainerElement();
        this.props.container.appendChild(this.portalElement);
        /* eslint-disable-next-line react/no-did-mount-set-state */ this.setState({
            hasMounted: true
        }, this.props.onChildrenMount);
        if (cannotCreatePortal) this.unstableRenderNoPortal();
    };
    Portal1.prototype.componentDidUpdate = function(prevProps) {
        // update className prop on portal DOM element
        if (this.portalElement != null && prevProps.className !== this.props.className) {
            maybeRemoveClass(this.portalElement.classList, prevProps.className);
            maybeAddClass(this.portalElement.classList, this.props.className);
        }
        if (cannotCreatePortal) this.unstableRenderNoPortal();
    };
    Portal1.prototype.componentWillUnmount = function() {
        if (this.portalElement != null) {
            if (cannotCreatePortal) _reactDom.unmountComponentAtNode(this.portalElement);
            this.portalElement.remove();
        }
    };
    Portal1.prototype.createContainerElement = function() {
        var container = document.createElement("div");
        container.classList.add(_classes.PORTAL);
        maybeAddClass(container.classList, this.props.className);
        if (this.context != null) maybeAddClass(container.classList, this.context.blueprintPortalClassName);
        return container;
    };
    Portal1.prototype.unstableRenderNoPortal = function() {
        if (this.portalElement === null) return;
        _reactDom.unstable_renderSubtreeIntoContainer(/* parentComponent */ this, _react.createElement("div", null, this.props.children), this.portalElement);
    };
    Portal1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Portal");
    Portal1.contextTypes = REACT_CONTEXT_TYPES;
    Portal1.defaultProps = {
        container: typeof document !== "undefined" ? document.body : undefined
    };
    return Portal1;
}(_react.Component);
function maybeRemoveClass(classList, className) {
    if (className != null && className !== "") classList.remove.apply(classList, className.split(" "));
}
function maybeAddClass(classList, className) {
    if (className != null && className !== "") classList.add.apply(classList, className.split(" "));
}

},{"tslib":"45hme","react":"21dqq","react-dom":"j6uA9","../../common/classes":"6Ep96","../../common/errors":"7mLY3","../../common/props":"7F9ht","../../common/utils":"8MRas","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kcRK5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeSensor", ()=>ResizeSensor
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _resizeObserver = require("@juggle/resize-observer");
var _react = require("react");
var _reactDom = require("react-dom");
var _common = require("../../common");
var _props = require("../../common/props");
/** `ResizeSensor` requires a single DOM element child and will error otherwise. */ var ResizeSensor = /** @class */ function(_super) {
    _tslib.__extends(ResizeSensor1, _super);
    function ResizeSensor1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.element = null;
        _this.observer = new _resizeObserver.ResizeObserver(function(entries) {
            var _a, _b;
            return (_b = (_a = _this.props).onResize) === null || _b === void 0 ? void 0 : _b.call(_a, entries);
        });
        return _this;
    }
    ResizeSensor1.prototype.render = function() {
        // pass-through render of single child
        return _react.Children.only(this.props.children);
    };
    ResizeSensor1.prototype.componentDidMount = function() {
        this.observeElement();
    };
    ResizeSensor1.prototype.componentDidUpdate = function(prevProps) {
        this.observeElement(this.props.observeParents !== prevProps.observeParents);
    };
    ResizeSensor1.prototype.componentWillUnmount = function() {
        this.observer.disconnect();
    };
    /**
     * Observe the DOM element, if defined and different from the currently
     * observed element. Pass `force` argument to skip element checks and always
     * re-observe.
     */ ResizeSensor1.prototype.observeElement = function(force) {
        if (force === void 0) force = false;
        var element = this.getElement();
        if (!(element instanceof Element)) {
            // stop everything if not defined
            this.observer.disconnect();
            return;
        }
        if (element === this.element && !force) // quit if given same element -- nothing to update (unless forced)
        return;
        else {
            // clear observer list if new element
            this.observer.disconnect();
            // remember element reference for next time
            this.element = element;
        }
        // observer callback is invoked immediately when observing new elements
        this.observer.observe(element);
        if (this.props.observeParents) {
            var parent_1 = element.parentElement;
            while(parent_1 != null){
                this.observer.observe(parent_1);
                parent_1 = parent_1.parentElement;
            }
        }
    };
    ResizeSensor1.prototype.getElement = function() {
        try {
            // using findDOMNode for two reasons:
            // 1. cloning to insert a ref is unwieldy and not performant.
            // 2. ensure that we resolve to an actual DOM node (instead of any JSX ref instance).
            // HACKHACK: see https://github.com/palantir/blueprint/issues/3979
            /* eslint-disable-next-line react/no-find-dom-node */ return _reactDom.findDOMNode(this);
        } catch (_a) {
            // swallow error if findDOMNode is run on unmounted component.
            return null;
        }
    };
    ResizeSensor1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".ResizeSensor");
    return ResizeSensor1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","@juggle/resize-observer":"2PQAi","react":"21dqq","react-dom":"j6uA9","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2PQAi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeObserver", ()=>_resizeObserver.ResizeObserver
);
parcelHelpers.export(exports, "ResizeObserverEntry", ()=>_resizeObserverEntry.ResizeObserverEntry
);
parcelHelpers.export(exports, "ResizeObserverSize", ()=>_resizeObserverSize.ResizeObserverSize
);
var _resizeObserver = require("../ResizeObserver");
var _resizeObserverEntry = require("../ResizeObserverEntry");
var _resizeObserverSize = require("../ResizeObserverSize");

},{"../ResizeObserver":"fp9NI","../ResizeObserverEntry":"hbv3I","../ResizeObserverSize":"5Km0Y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fp9NI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeObserver", ()=>ResizeObserver
);
var _resizeObserverController = require("./ResizeObserverController");
var _element = require("./utils/element");
var ResizeObserver = function() {
    function ResizeObserver1(callback) {
        if (arguments.length === 0) throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
        if (typeof callback !== 'function') throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
        _resizeObserverController.ResizeObserverController.connect(this, callback);
    }
    ResizeObserver1.prototype.observe = function(target, options) {
        if (arguments.length === 0) throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
        if (!_element.isElement(target)) throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
        _resizeObserverController.ResizeObserverController.observe(this, target, options);
    };
    ResizeObserver1.prototype.unobserve = function(target) {
        if (arguments.length === 0) throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
        if (!_element.isElement(target)) throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
        _resizeObserverController.ResizeObserverController.unobserve(this, target);
    };
    ResizeObserver1.prototype.disconnect = function() {
        _resizeObserverController.ResizeObserverController.disconnect(this);
    };
    ResizeObserver1.toString = function() {
        return 'function ResizeObserver () { [polyfill code] }';
    };
    return ResizeObserver1;
}();

},{"./ResizeObserverController":"aR7Kr","./utils/element":"fYEXf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aR7Kr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeObserverController", ()=>ResizeObserverController
);
var _scheduler = require("./utils/scheduler");
var _resizeObservation = require("./ResizeObservation");
var _resizeObserverDetail = require("./ResizeObserverDetail");
var _resizeObservers = require("./utils/resizeObservers");
var observerMap = new WeakMap();
var getObservationIndex = function(observationTargets, target) {
    for(var i = 0; i < observationTargets.length; i += 1){
        if (observationTargets[i].target === target) return i;
    }
    return -1;
};
var ResizeObserverController = function() {
    function ResizeObserverController1() {}
    ResizeObserverController1.connect = function(resizeObserver, callback) {
        var detail = new _resizeObserverDetail.ResizeObserverDetail(resizeObserver, callback);
        observerMap.set(resizeObserver, detail);
    };
    ResizeObserverController1.observe = function(resizeObserver, target, options) {
        var detail = observerMap.get(resizeObserver);
        var firstObservation = detail.observationTargets.length === 0;
        if (getObservationIndex(detail.observationTargets, target) < 0) {
            firstObservation && _resizeObservers.resizeObservers.push(detail);
            detail.observationTargets.push(new _resizeObservation.ResizeObservation(target, options && options.box));
            _scheduler.updateCount(1);
            _scheduler.scheduler.schedule();
        }
    };
    ResizeObserverController1.unobserve = function(resizeObserver, target) {
        var detail = observerMap.get(resizeObserver);
        var index = getObservationIndex(detail.observationTargets, target);
        var lastObservation = detail.observationTargets.length === 1;
        if (index >= 0) {
            lastObservation && _resizeObservers.resizeObservers.splice(_resizeObservers.resizeObservers.indexOf(detail), 1);
            detail.observationTargets.splice(index, 1);
            _scheduler.updateCount(-1);
        }
    };
    ResizeObserverController1.disconnect = function(resizeObserver) {
        var _this = this;
        var detail = observerMap.get(resizeObserver);
        detail.observationTargets.slice().forEach(function(ot) {
            return _this.unobserve(resizeObserver, ot.target);
        });
        detail.activeTargets.splice(0, detail.activeTargets.length);
    };
    return ResizeObserverController1;
}();

},{"./utils/scheduler":"crV2X","./ResizeObservation":"j5Hu6","./ResizeObserverDetail":"46Usx","./utils/resizeObservers":"bMmHK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"crV2X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "scheduler", ()=>scheduler
);
parcelHelpers.export(exports, "updateCount", ()=>updateCount
);
var _process = require("./process");
var _global = require("./global");
var _queueResizeObserver = require("./queueResizeObserver");
var watching = 0;
var isWatching = function() {
    return !!watching;
};
var CATCH_PERIOD = 250;
var observerConfig = {
    attributes: true,
    characterData: true,
    childList: true,
    subtree: true
};
var events = [
    'resize',
    'load',
    'transitionend',
    'animationend',
    'animationstart',
    'animationiteration',
    'keyup',
    'keydown',
    'mouseup',
    'mousedown',
    'mouseover',
    'mouseout',
    'blur',
    'focus'
];
var time = function(timeout) {
    if (timeout === void 0) timeout = 0;
    return Date.now() + timeout;
};
var scheduled = false;
var Scheduler = function() {
    function Scheduler1() {
        var _this = this;
        this.stopped = true;
        this.listener = function() {
            return _this.schedule();
        };
    }
    Scheduler1.prototype.run = function(timeout) {
        var _this = this;
        if (timeout === void 0) timeout = CATCH_PERIOD;
        if (scheduled) return;
        scheduled = true;
        var until = time(timeout);
        _queueResizeObserver.queueResizeObserver(function() {
            var elementsHaveResized = false;
            try {
                elementsHaveResized = _process.process();
            } finally{
                scheduled = false;
                timeout = until - time();
                if (!isWatching()) return;
                if (elementsHaveResized) _this.run(1000);
                else if (timeout > 0) _this.run(timeout);
                else _this.start();
            }
        });
    };
    Scheduler1.prototype.schedule = function() {
        this.stop();
        this.run();
    };
    Scheduler1.prototype.observe = function() {
        var _this = this;
        var cb = function() {
            return _this.observer && _this.observer.observe(document.body, observerConfig);
        };
        document.body ? cb() : _global.global.addEventListener('DOMContentLoaded', cb);
    };
    Scheduler1.prototype.start = function() {
        var _this = this;
        if (this.stopped) {
            this.stopped = false;
            this.observer = new MutationObserver(this.listener);
            this.observe();
            events.forEach(function(name) {
                return _global.global.addEventListener(name, _this.listener, true);
            });
        }
    };
    Scheduler1.prototype.stop = function() {
        var _this = this;
        if (!this.stopped) {
            this.observer && this.observer.disconnect();
            events.forEach(function(name) {
                return _global.global.removeEventListener(name, _this.listener, true);
            });
            this.stopped = true;
        }
    };
    return Scheduler1;
}();
var scheduler = new Scheduler();
var updateCount = function(n) {
    !watching && n > 0 && scheduler.start();
    watching += n;
    !watching && scheduler.stop();
};

},{"./process":"affUf","./global":"culvB","./queueResizeObserver":"bQ2y4","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"affUf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "process", ()=>process
);
var _hasActiveObservations = require("../algorithms/hasActiveObservations");
var _hasSkippedObservations = require("../algorithms/hasSkippedObservations");
var _deliverResizeLoopError = require("../algorithms/deliverResizeLoopError");
var _broadcastActiveObservations = require("../algorithms/broadcastActiveObservations");
var _gatherActiveObservationsAtDepth = require("../algorithms/gatherActiveObservationsAtDepth");
var process = function() {
    var depth = 0;
    _gatherActiveObservationsAtDepth.gatherActiveObservationsAtDepth(depth);
    while(_hasActiveObservations.hasActiveObservations()){
        depth = _broadcastActiveObservations.broadcastActiveObservations();
        _gatherActiveObservationsAtDepth.gatherActiveObservationsAtDepth(depth);
    }
    if (_hasSkippedObservations.hasSkippedObservations()) _deliverResizeLoopError.deliverResizeLoopError();
    return depth > 0;
};

},{"../algorithms/hasActiveObservations":"5pYPo","../algorithms/hasSkippedObservations":"lXPzu","../algorithms/deliverResizeLoopError":"g2RSW","../algorithms/broadcastActiveObservations":"fEflG","../algorithms/gatherActiveObservationsAtDepth":"aF1Qb","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5pYPo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hasActiveObservations", ()=>hasActiveObservations
);
var _resizeObservers = require("../utils/resizeObservers");
var hasActiveObservations = function() {
    return _resizeObservers.resizeObservers.some(function(ro) {
        return ro.activeTargets.length > 0;
    });
};

},{"../utils/resizeObservers":"bMmHK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bMmHK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "resizeObservers", ()=>resizeObservers
);
var resizeObservers = [];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lXPzu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hasSkippedObservations", ()=>hasSkippedObservations
);
var _resizeObservers = require("../utils/resizeObservers");
var hasSkippedObservations = function() {
    return _resizeObservers.resizeObservers.some(function(ro) {
        return ro.skippedTargets.length > 0;
    });
};

},{"../utils/resizeObservers":"bMmHK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g2RSW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "deliverResizeLoopError", ()=>deliverResizeLoopError
);
var msg = 'ResizeObserver loop completed with undelivered notifications.';
var deliverResizeLoopError = function() {
    var event;
    if (typeof ErrorEvent === 'function') event = new ErrorEvent('error', {
        message: msg
    });
    else {
        event = document.createEvent('Event');
        event.initEvent('error', false, false);
        event.message = msg;
    }
    window.dispatchEvent(event);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fEflG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "broadcastActiveObservations", ()=>broadcastActiveObservations
);
var _resizeObservers = require("../utils/resizeObservers");
var _resizeObserverEntry = require("../ResizeObserverEntry");
var _calculateDepthForNode = require("./calculateDepthForNode");
var _calculateBoxSize = require("./calculateBoxSize");
var broadcastActiveObservations = function() {
    var shallowestDepth = Infinity;
    var callbacks = [];
    _resizeObservers.resizeObservers.forEach(function processObserver(ro) {
        if (ro.activeTargets.length === 0) return;
        var entries = [];
        ro.activeTargets.forEach(function processTarget(ot) {
            var entry = new _resizeObserverEntry.ResizeObserverEntry(ot.target);
            var targetDepth = _calculateDepthForNode.calculateDepthForNode(ot.target);
            entries.push(entry);
            ot.lastReportedSize = _calculateBoxSize.calculateBoxSize(ot.target, ot.observedBox);
            if (targetDepth < shallowestDepth) shallowestDepth = targetDepth;
        });
        callbacks.push(function resizeObserverCallback() {
            ro.callback.call(ro.observer, entries, ro.observer);
        });
        ro.activeTargets.splice(0, ro.activeTargets.length);
    });
    for(var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++){
        var callback = callbacks_1[_i];
        callback();
    }
    return shallowestDepth;
};

},{"../utils/resizeObservers":"bMmHK","../ResizeObserverEntry":"hbv3I","./calculateDepthForNode":"kpcjo","./calculateBoxSize":"5700d","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hbv3I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeObserverEntry", ()=>ResizeObserverEntry
);
var _calculateBoxSize = require("./algorithms/calculateBoxSize");
var _freeze = require("./utils/freeze");
var ResizeObserverEntry = function() {
    function ResizeObserverEntry1(target) {
        var boxes = _calculateBoxSize.calculateBoxSizes(target);
        this.target = target;
        this.contentRect = boxes.contentRect;
        this.borderBoxSize = _freeze.freeze([
            boxes.borderBoxSize
        ]);
        this.contentBoxSize = _freeze.freeze([
            boxes.contentBoxSize
        ]);
        this.devicePixelContentBoxSize = _freeze.freeze([
            boxes.devicePixelContentBoxSize
        ]);
    }
    return ResizeObserverEntry1;
}();

},{"./algorithms/calculateBoxSize":"5700d","./utils/freeze":"hHRAz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5700d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calculateBoxSize", ()=>calculateBoxSize
);
parcelHelpers.export(exports, "calculateBoxSizes", ()=>calculateBoxSizes
);
var _resizeObserverBoxOptions = require("../ResizeObserverBoxOptions");
var _resizeObserverSize = require("../ResizeObserverSize");
var _domrectReadOnly = require("../DOMRectReadOnly");
var _element = require("../utils/element");
var _freeze = require("../utils/freeze");
var _global = require("../utils/global");
var cache = new WeakMap();
var scrollRegexp = /auto|scroll/;
var verticalRegexp = /^tb|vertical/;
var IE = /msie|trident/i.test(_global.global.navigator && _global.global.navigator.userAgent);
var parseDimension = function(pixel) {
    return parseFloat(pixel || '0');
};
var size = function(inlineSize, blockSize, switchSizes) {
    if (inlineSize === void 0) inlineSize = 0;
    if (blockSize === void 0) blockSize = 0;
    if (switchSizes === void 0) switchSizes = false;
    return new _resizeObserverSize.ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
};
var zeroBoxes = _freeze.freeze({
    devicePixelContentBoxSize: size(),
    borderBoxSize: size(),
    contentBoxSize: size(),
    contentRect: new _domrectReadOnly.DOMRectReadOnly(0, 0, 0, 0)
});
var calculateBoxSizes = function(target, forceRecalculation) {
    if (forceRecalculation === void 0) forceRecalculation = false;
    if (cache.has(target) && !forceRecalculation) return cache.get(target);
    if (_element.isHidden(target)) {
        cache.set(target, zeroBoxes);
        return zeroBoxes;
    }
    var cs = getComputedStyle(target);
    var svg = _element.isSVG(target) && target.ownerSVGElement && target.getBBox();
    var removePadding = !IE && cs.boxSizing === 'border-box';
    var switchSizes = verticalRegexp.test(cs.writingMode || '');
    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');
    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');
    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
    var horizontalPadding = paddingLeft + paddingRight;
    var verticalPadding = paddingTop + paddingBottom;
    var horizontalBorderArea = borderLeft + borderRight;
    var verticalBorderArea = borderTop + borderBottom;
    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
    var boxes = _freeze.freeze({
        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
        contentBoxSize: size(contentWidth, contentHeight, switchSizes),
        contentRect: new _domrectReadOnly.DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
    });
    cache.set(target, boxes);
    return boxes;
};
var calculateBoxSize = function(target, observedBox, forceRecalculation) {
    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
    switch(observedBox){
        case _resizeObserverBoxOptions.ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
            return devicePixelContentBoxSize;
        case _resizeObserverBoxOptions.ResizeObserverBoxOptions.BORDER_BOX:
            return borderBoxSize;
        default:
            return contentBoxSize;
    }
};

},{"../ResizeObserverBoxOptions":"dNYRq","../ResizeObserverSize":"5Km0Y","../DOMRectReadOnly":"6N7Pa","../utils/element":"fYEXf","../utils/freeze":"hHRAz","../utils/global":"culvB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dNYRq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeObserverBoxOptions", ()=>ResizeObserverBoxOptions
);
var ResizeObserverBoxOptions;
(function(ResizeObserverBoxOptions1) {
    ResizeObserverBoxOptions1["BORDER_BOX"] = "border-box";
    ResizeObserverBoxOptions1["CONTENT_BOX"] = "content-box";
    ResizeObserverBoxOptions1["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Km0Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeObserverSize", ()=>ResizeObserverSize
);
var _freeze = require("./utils/freeze");
var ResizeObserverSize = function() {
    function ResizeObserverSize1(inlineSize, blockSize) {
        this.inlineSize = inlineSize;
        this.blockSize = blockSize;
        _freeze.freeze(this);
    }
    return ResizeObserverSize1;
}();

},{"./utils/freeze":"hHRAz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hHRAz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "freeze", ()=>freeze
);
var freeze = function(obj) {
    return Object.freeze(obj);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6N7Pa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DOMRectReadOnly", ()=>DOMRectReadOnly
);
var _freeze = require("./utils/freeze");
var DOMRectReadOnly = function() {
    function DOMRectReadOnly1(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.top = this.y;
        this.left = this.x;
        this.bottom = this.top + this.height;
        this.right = this.left + this.width;
        return _freeze.freeze(this);
    }
    DOMRectReadOnly1.prototype.toJSON = function() {
        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
        return {
            x: x,
            y: y,
            top: top,
            right: right,
            bottom: bottom,
            left: left,
            width: width,
            height: height
        };
    };
    DOMRectReadOnly1.fromRect = function(rectangle) {
        return new DOMRectReadOnly1(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
    };
    return DOMRectReadOnly1;
}();

},{"./utils/freeze":"hHRAz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fYEXf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSVG", ()=>isSVG
);
parcelHelpers.export(exports, "isHidden", ()=>isHidden
);
parcelHelpers.export(exports, "isElement", ()=>isElement
);
parcelHelpers.export(exports, "isReplacedElement", ()=>isReplacedElement
);
var isSVG = function(target) {
    return target instanceof SVGElement && 'getBBox' in target;
};
var isHidden = function(target) {
    if (isSVG(target)) {
        var _a = target.getBBox(), width = _a.width, height = _a.height;
        return !width && !height;
    }
    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
    return !(offsetWidth || offsetHeight || target.getClientRects().length);
};
var isElement = function(obj) {
    var _a, _b;
    if (obj instanceof Element) return true;
    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;
    return !!(scope && obj instanceof scope.Element);
};
var isReplacedElement = function(target) {
    switch(target.tagName){
        case 'INPUT':
            if (target.type !== 'image') break;
        case 'VIDEO':
        case 'AUDIO':
        case 'EMBED':
        case 'OBJECT':
        case 'CANVAS':
        case 'IFRAME':
        case 'IMG':
            return true;
    }
    return false;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"culvB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "global", ()=>global
);
var global = typeof window !== 'undefined' ? window : {};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kpcjo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calculateDepthForNode", ()=>calculateDepthForNode
);
var _element = require("../utils/element");
var calculateDepthForNode = function(node) {
    if (_element.isHidden(node)) return Infinity;
    var depth = 0;
    var parent = node.parentNode;
    while(parent){
        depth += 1;
        parent = parent.parentNode;
    }
    return depth;
};

},{"../utils/element":"fYEXf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aF1Qb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "gatherActiveObservationsAtDepth", ()=>gatherActiveObservationsAtDepth
);
var _resizeObservers = require("../utils/resizeObservers");
var _calculateDepthForNode = require("./calculateDepthForNode");
var gatherActiveObservationsAtDepth = function(depth) {
    _resizeObservers.resizeObservers.forEach(function processObserver(ro) {
        ro.activeTargets.splice(0, ro.activeTargets.length);
        ro.skippedTargets.splice(0, ro.skippedTargets.length);
        ro.observationTargets.forEach(function processTarget(ot) {
            if (ot.isActive()) {
                if (_calculateDepthForNode.calculateDepthForNode(ot.target) > depth) ro.activeTargets.push(ot);
                else ro.skippedTargets.push(ot);
            }
        });
    });
};

},{"../utils/resizeObservers":"bMmHK","./calculateDepthForNode":"kpcjo","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bQ2y4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "queueResizeObserver", ()=>queueResizeObserver
);
var _queueMicroTask = require("./queueMicroTask");
var queueResizeObserver = function(cb) {
    _queueMicroTask.queueMicroTask(function ResizeObserver() {
        requestAnimationFrame(cb);
    });
};

},{"./queueMicroTask":"5Yzv8","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Yzv8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "queueMicroTask", ()=>queueMicroTask
);
var trigger;
var callbacks = [];
var notify = function() {
    return callbacks.splice(0).forEach(function(cb) {
        return cb();
    });
};
var queueMicroTask = function(callback) {
    if (!trigger) {
        var toggle_1 = 0;
        var el_1 = document.createTextNode('');
        var config = {
            characterData: true
        };
        new MutationObserver(function() {
            return notify();
        }).observe(el_1, config);
        trigger = function() {
            el_1.textContent = "" + (toggle_1 ? toggle_1-- : toggle_1++);
        };
    }
    callbacks.push(callback);
    trigger();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j5Hu6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeObservation", ()=>ResizeObservation
);
var _resizeObserverBoxOptions = require("./ResizeObserverBoxOptions");
var _calculateBoxSize = require("./algorithms/calculateBoxSize");
var _element = require("./utils/element");
var skipNotifyOnElement = function(target) {
    return !_element.isSVG(target) && !_element.isReplacedElement(target) && getComputedStyle(target).display === 'inline';
};
var ResizeObservation = function() {
    function ResizeObservation1(target, observedBox) {
        this.target = target;
        this.observedBox = observedBox || _resizeObserverBoxOptions.ResizeObserverBoxOptions.CONTENT_BOX;
        this.lastReportedSize = {
            inlineSize: 0,
            blockSize: 0
        };
    }
    ResizeObservation1.prototype.isActive = function() {
        var size = _calculateBoxSize.calculateBoxSize(this.target, this.observedBox, true);
        if (skipNotifyOnElement(this.target)) this.lastReportedSize = size;
        if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) return true;
        return false;
    };
    return ResizeObservation1;
}();

},{"./ResizeObserverBoxOptions":"dNYRq","./algorithms/calculateBoxSize":"5700d","./utils/element":"fYEXf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"46Usx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeObserverDetail", ()=>ResizeObserverDetail
);
var ResizeObserverDetail = function() {
    function ResizeObserverDetail1(resizeObserver, callback) {
        this.activeTargets = [];
        this.skippedTargets = [];
        this.observationTargets = [];
        this.observer = resizeObserver;
        this.callback = callback;
    }
    return ResizeObserverDetail1;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"avrl0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tooltip", ()=>Tooltip
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
// eslint-disable-next-line import/no-cycle
var _popover = require("../popover/popover");
/** @deprecated use { Tooltip2 } from "@blueprintjs/popover2" */ var Tooltip = /** @class */ function(_super) {
    _tslib.__extends(Tooltip1, _super);
    function Tooltip1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // eslint-disable-next-line deprecation/deprecation
        _this.popover = null;
        return _this;
    }
    Tooltip1.prototype.render = function() {
        var _a;
        var _this = this;
        var _b = this.props, children = _b.children, intent = _b.intent, popoverClassName = _b.popoverClassName, restProps = _tslib.__rest(_b, [
            "children",
            "intent",
            "popoverClassName"
        ]);
        var classes = _classnamesDefault.default(_common.Classes.TOOLTIP, (_a = {}, _a[_common.Classes.MINIMAL] = this.props.minimal, _a), _common.Classes.intentClass(intent), popoverClassName);
        return /* eslint-disable deprecation/deprecation */ _react.createElement(_popover.Popover, _tslib.__assign({
            interactionKind: _popover.PopoverInteractionKind.HOVER_TARGET_ONLY,
            modifiers: {
                arrow: {
                    enabled: !this.props.minimal
                }
            }
        }, restProps, {
            autoFocus: false,
            canEscapeKeyClose: false,
            enforceFocus: false,
            lazy: true,
            popoverClassName: classes,
            portalContainer: this.props.portalContainer,
            ref: function(ref) {
                return _this.popover = ref;
            }
        }), children);
    };
    Tooltip1.prototype.reposition = function() {
        if (this.popover != null) this.popover.reposition();
    };
    Tooltip1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Tooltip");
    Tooltip1.defaultProps = {
        hoverCloseDelay: 0,
        hoverOpenDelay: 100,
        minimal: false,
        transitionDuration: 100
    };
    return Tooltip1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../popover/popover":"kIaY0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gM9K9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PopoverArrow", ()=>PopoverArrow
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _react = require("react");
var _classes = require("../../common/classes");
var _props = require("../../common/props");
var _popperUtils = require("./popperUtils");
// these paths come from the Core Kit Sketch file
// https://github.com/palantir/blueprint/blob/develop/resources/sketch/Core%20Kit.sketch
var SVG_SHADOW_PATH = "M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z";
var SVG_ARROW_PATH = "M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z";
/** Modifier helper function to compute arrow rotate() transform */ function getArrowAngle(placement) {
    if (placement == null) return 0;
    // can only be top/left/bottom/right - auto is resolved internally
    switch(_popperUtils.getPosition(placement)){
        case "top":
            return -90;
        case "left":
            return 180;
        case "bottom":
            return 90;
        default:
            return 0;
    }
}
var PopoverArrow = function(_a) {
    var _b = _a.arrowProps, ref = _b.ref, style = _b.style, placement = _a.placement;
    return _react.createElement("div", {
        className: _classes.POPOVER_ARROW,
        ref: ref,
        style: style.left == null || isNaN(+style.left) ? {} : style
    }, _react.createElement("svg", {
        viewBox: "0 0 30 30",
        style: {
            transform: "rotate(".concat(getArrowAngle(placement), "deg)")
        }
    }, _react.createElement("path", {
        className: _classes.POPOVER_ARROW + "-border",
        d: SVG_SHADOW_PATH
    }), _react.createElement("path", {
        className: _classes.POPOVER_ARROW + "-fill",
        d: SVG_ARROW_PATH
    })));
};
PopoverArrow.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".PopoverArrow");

},{"react":"21dqq","../../common/classes":"6Ep96","../../common/props":"7F9ht","./popperUtils":"aQnfM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aQnfM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // Popper placement utils
// ======================
/** Converts a full placement to one of the four positions by stripping text after the `-`. */ parcelHelpers.export(exports, "getPosition", ()=>getPosition
);
/** Returns true if position is left or right. */ parcelHelpers.export(exports, "isVerticalPosition", ()=>isVerticalPosition
);
/** Returns the opposite position. */ parcelHelpers.export(exports, "getOppositePosition", ()=>getOppositePosition
);
/** Returns the CSS alignment keyword corresponding to given placement. */ parcelHelpers.export(exports, "getAlignment", ()=>getAlignment
);
// Popper modifiers
// ================
/** Modifier helper function to compute popper transform-origin based on arrow position */ parcelHelpers.export(exports, "getTransformOrigin", ()=>getTransformOrigin
);
parcelHelpers.export(exports, "arrowOffsetModifier", ()=>arrowOffsetModifier
);
function getPosition(placement) {
    return placement.split("-")[0];
}
function isVerticalPosition(side) {
    return [
        "left",
        "right"
    ].indexOf(side) !== -1;
}
function getOppositePosition(side) {
    switch(side){
        case "top":
            return "bottom";
        case "left":
            return "right";
        case "bottom":
            return "top";
        default:
            return "left";
    }
}
function getAlignment(placement) {
    var align = placement.split("-")[1];
    switch(align){
        case "start":
            return "left";
        case "end":
            return "right";
        default:
            return "center";
    }
}
function getTransformOrigin(data) {
    var position = getPosition(data.placement);
    if (data.arrowElement == null) return isVerticalPosition(position) ? "".concat(getOppositePosition(position), " ").concat(getAlignment(position)) : "".concat(getAlignment(position), " ").concat(getOppositePosition(position));
    else {
        var arrowSizeShift = data.arrowElement.clientHeight / 2;
        var arrow = data.offsets.arrow;
        // can use keyword for dimension without the arrow, to ease computation burden.
        // move origin by half arrow's height to keep it centered.
        return isVerticalPosition(position) ? "".concat(getOppositePosition(position), " ").concat(arrow.top + arrowSizeShift, "px") : "".concat(arrow.left + arrowSizeShift, "px ").concat(getOppositePosition(position));
    }
}
// additional space between arrow and edge of target
var ARROW_SPACING = 4;
var arrowOffsetModifier = function(data) {
    if (data.arrowElement == null) return data;
    // our arrows have equal width and height
    var arrowSize = data.arrowElement.clientWidth;
    // this logic borrowed from original Popper arrow modifier itself
    var position = getPosition(data.placement);
    var isVertical = isVerticalPosition(position);
    var len = isVertical ? "width" : "height";
    var offsetSide = isVertical ? "left" : "top";
    var arrowOffsetSize = Math.round(arrowSize / 2 / Math.sqrt(2));
    // offset popover by arrow size, offset arrow in the opposite direction
    if (position === "top" || position === "left") {
        // the "up & back" directions require negative popper offsets
        data.offsets.popper[offsetSide] -= arrowOffsetSize + ARROW_SPACING;
        // can only use left/top on arrow so gotta get clever with 100% + X
        data.offsets.arrow[offsetSide] = data.offsets.popper[len] - arrowSize + arrowOffsetSize;
    } else {
        data.offsets.popper[offsetSide] += arrowOffsetSize + ARROW_SPACING;
        data.offsets.arrow[offsetSide] = -arrowOffsetSize;
    }
    return data;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"73S1l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Convert a position to a placement.
 *
 * @param position the position to convert
 */ parcelHelpers.export(exports, "positionToPlacement", ()=>positionToPlacement
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _position = require("../../common/position");
function positionToPlacement(position) {
    /* istanbul ignore next */ switch(position){
        case _position.Position.TOP_LEFT:
            return "top-start";
        case _position.Position.TOP:
            return "top";
        case _position.Position.TOP_RIGHT:
            return "top-end";
        case _position.Position.RIGHT_TOP:
            return "right-start";
        case _position.Position.RIGHT:
            return "right";
        case _position.Position.RIGHT_BOTTOM:
            return "right-end";
        case _position.Position.BOTTOM_RIGHT:
            return "bottom-end";
        case _position.Position.BOTTOM:
            return "bottom";
        case _position.Position.BOTTOM_LEFT:
            return "bottom-start";
        case _position.Position.LEFT_BOTTOM:
            return "left-end";
        case _position.Position.LEFT:
            return "left";
        case _position.Position.LEFT_TOP:
            return "left-start";
        case "auto":
        case "auto-start":
        case "auto-end":
            // Return the string unchanged.
            return position;
        default:
            return assertNever(position);
    }
}
/* istanbul ignore next */ function assertNever(x) {
    throw new Error("Unexpected position: " + x);
}

},{"../../common/position":"gwedn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aYDC9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Alert", ()=>Alert
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _buttons = require("../button/buttons");
var _dialog = require("../dialog/dialog");
var _icon = require("../icon/icon");
var Alert = /** @class */ function(_super) {
    _tslib.__extends(Alert1, _super);
    function Alert1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleCancel = function(evt) {
            return _this.internalHandleCallbacks(false, evt);
        };
        _this.handleConfirm = function(evt) {
            return _this.internalHandleCallbacks(true, evt);
        };
        return _this;
    }
    Alert1.prototype.render = function() {
        var _a = this.props, canEscapeKeyCancel = _a.canEscapeKeyCancel, canOutsideClickCancel = _a.canOutsideClickCancel, children = _a.children, className = _a.className, icon = _a.icon, intent = _a.intent, loading = _a.loading, cancelButtonText = _a.cancelButtonText, confirmButtonText = _a.confirmButtonText, onClose = _a.onClose, overlayProps = _tslib.__rest(_a, [
            "canEscapeKeyCancel",
            "canOutsideClickCancel",
            "children",
            "className",
            "icon",
            "intent",
            "loading",
            "cancelButtonText",
            "confirmButtonText",
            "onClose"
        ]);
        return _react.createElement(_dialog.Dialog, _tslib.__assign({}, overlayProps, {
            className: _classnamesDefault.default(_common.Classes.ALERT, className),
            canEscapeKeyClose: canEscapeKeyCancel,
            canOutsideClickClose: canOutsideClickCancel,
            onClose: this.handleCancel,
            portalContainer: this.props.portalContainer
        }), _react.createElement("div", {
            className: _common.Classes.ALERT_BODY
        }, _react.createElement(_icon.Icon, {
            icon: icon,
            size: 40,
            intent: intent
        }), _react.createElement("div", {
            className: _common.Classes.ALERT_CONTENTS
        }, children)), _react.createElement("div", {
            className: _common.Classes.ALERT_FOOTER
        }, _react.createElement(_buttons.Button, {
            loading: loading,
            intent: intent,
            text: confirmButtonText,
            onClick: this.handleConfirm
        }), cancelButtonText && _react.createElement(_buttons.Button, {
            text: cancelButtonText,
            disabled: loading,
            onClick: this.handleCancel
        })));
    };
    Alert1.prototype.validateProps = function(props) {
        if (props.onClose == null && props.cancelButtonText == null !== (props.onCancel == null)) console.warn(_errors.ALERT_WARN_CANCEL_PROPS);
        var hasCancelHandler = props.onCancel != null || props.onClose != null;
        if (props.canEscapeKeyCancel && !hasCancelHandler) console.warn(_errors.ALERT_WARN_CANCEL_ESCAPE_KEY);
        if (props.canOutsideClickCancel && !hasCancelHandler) console.warn(_errors.ALERT_WARN_CANCEL_OUTSIDE_CLICK);
    };
    Alert1.prototype.internalHandleCallbacks = function(confirmed, evt) {
        var _a;
        var _b = this.props, onCancel = _b.onCancel, onClose = _b.onClose, onConfirm = _b.onConfirm;
        (_a = confirmed ? onConfirm : onCancel) === null || _a === void 0 || _a(evt);
        onClose === null || onClose === void 0 || onClose(confirmed, evt);
    };
    Alert1.defaultProps = {
        canEscapeKeyCancel: false,
        canOutsideClickCancel: false,
        confirmButtonText: "OK",
        isOpen: false,
        loading: false
    };
    Alert1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".Alert");
    return Alert1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../button/buttons":"lDi9s","../dialog/dialog":"aVitu","../icon/icon":"7dRdu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lDi9s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Button", ()=>Button
);
parcelHelpers.export(exports, "AnchorButton", ()=>AnchorButton
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
// HACKHACK: these components should go in separate files
/* eslint-disable max-classes-per-file */ var _react = require("react");
var _props = require("../../common/props");
var _refs = require("../../common/refs");
var _abstractButton = require("./abstractButton");
var Button = /** @class */ function(_super) {
    _tslib.__extends(Button1, _super);
    function Button1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // need to keep this ref so that we can access it in AbstractButton#handleKeyUp
        _this.buttonRef = null;
        _this.handleRef = _refs.refHandler(_this, "buttonRef", _this.props.elementRef);
        return _this;
    }
    Button1.prototype.render = function() {
        return _react.createElement("button", _tslib.__assign({
            type: "button",
            ref: this.handleRef
        }, _props.removeNonHTMLProps(this.props), this.getCommonButtonProps()), this.renderChildren());
    };
    Button1.prototype.componentDidUpdate = function(prevProps) {
        if (prevProps.elementRef !== this.props.elementRef) {
            _refs.setRef(prevProps.elementRef, null);
            this.handleRef = _refs.refHandler(this, "buttonRef", this.props.elementRef);
            _refs.setRef(this.props.elementRef, this.buttonRef);
        }
    };
    Button1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Button");
    return Button1;
}(_abstractButton.AbstractButton);
var AnchorButton = /** @class */ function(_super) {
    _tslib.__extends(AnchorButton1, _super);
    function AnchorButton1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // need to keep this ref so that we can access it in AbstractButton#handleKeyUp
        _this.buttonRef = null;
        _this.handleRef = _refs.refHandler(_this, "buttonRef", _this.props.elementRef);
        return _this;
    }
    AnchorButton1.prototype.render = function() {
        var _a = this.props, href = _a.href, _b = _a.tabIndex, tabIndex = _b === void 0 ? 0 : _b;
        var commonProps = this.getCommonButtonProps();
        return _react.createElement("a", _tslib.__assign({
            role: "button",
            ref: this.handleRef
        }, _props.removeNonHTMLProps(this.props), commonProps, {
            href: commonProps.disabled ? undefined : href,
            tabIndex: commonProps.disabled ? -1 : tabIndex
        }), this.renderChildren());
    };
    AnchorButton1.prototype.componentDidUpdate = function(prevProps) {
        if (prevProps.elementRef !== this.props.elementRef) {
            _refs.setRef(prevProps.elementRef, null);
            this.handleRef = _refs.refHandler(this, "buttonRef", this.props.elementRef);
            _refs.setRef(this.props.elementRef, this.buttonRef);
        }
    };
    AnchorButton1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".AnchorButton");
    return AnchorButton1;
}(_abstractButton.AbstractButton);

},{"tslib":"45hme","react":"21dqq","../../common/props":"7F9ht","../../common/refs":"cGLry","./abstractButton":"lt7Wn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lt7Wn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AbstractButton", ()=>AbstractButton
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _icon = require("../icon/icon");
var _spinner = require("../spinner/spinner");
var AbstractButton = /** @class */ function(_super) {
    _tslib.__extends(AbstractButton1, _super);
    function AbstractButton1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isActive: false
        };
        // we're casting as `any` to get around a somewhat opaque safeInvoke error
        // that "Type argument candidate 'KeyboardEvent<T>' is not a valid type
        // argument because it is not a supertype of candidate
        // 'KeyboardEvent<HTMLElement>'."
        _this.handleKeyDown = function(e) {
            var _a, _b;
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable deprecation/deprecation */ if (_common.Keys.isKeyboardClick(e.which)) {
                e.preventDefault();
                if (e.which !== _this.currentKeyDown) _this.setState({
                    isActive: true
                });
            }
            _this.currentKeyDown = e.which;
            (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleKeyUp = function(e) {
            var _a, _b, _c;
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable deprecation/deprecation */ if (_common.Keys.isKeyboardClick(e.which)) {
                _this.setState({
                    isActive: false
                });
                (_a = _this.buttonRef) === null || _a === void 0 || _a.click();
            }
            _this.currentKeyDown = undefined;
            (_c = (_b = _this.props).onKeyUp) === null || _c === void 0 || _c.call(_b, e);
        };
        _this.handleBlur = function(e) {
            var _a, _b;
            if (_this.state.isActive) _this.setState({
                isActive: false
            });
            (_b = (_a = _this.props).onBlur) === null || _b === void 0 || _b.call(_a, e);
        };
        return _this;
    }
    AbstractButton1.prototype.getCommonButtonProps = function() {
        var _a;
        var _b = this.props, active = _b.active, alignText = _b.alignText, fill = _b.fill, large = _b.large, loading = _b.loading, outlined = _b.outlined, minimal = _b.minimal, small = _b.small, tabIndex = _b.tabIndex;
        var disabled = this.props.disabled || loading;
        var className = _classnamesDefault.default(_common.Classes.BUTTON, (_a = {}, _a[_common.Classes.ACTIVE] = !disabled && (active || this.state.isActive), _a[_common.Classes.DISABLED] = disabled, _a[_common.Classes.FILL] = fill, _a[_common.Classes.LARGE] = large, _a[_common.Classes.LOADING] = loading, _a[_common.Classes.MINIMAL] = minimal, _a[_common.Classes.OUTLINED] = outlined, _a[_common.Classes.SMALL] = small, _a), _common.Classes.alignmentClass(alignText), _common.Classes.intentClass(this.props.intent), this.props.className);
        return {
            className: className,
            disabled: disabled,
            onBlur: this.handleBlur,
            onClick: disabled ? undefined : this.props.onClick,
            onKeyDown: this.handleKeyDown,
            onKeyUp: this.handleKeyUp,
            tabIndex: disabled ? -1 : tabIndex
        };
    };
    AbstractButton1.prototype.renderChildren = function() {
        var _a = this.props, children = _a.children, icon = _a.icon, loading = _a.loading, rightIcon = _a.rightIcon, text = _a.text;
        var maybeHasText = !_common.Utils.isReactNodeEmpty(text) || !_common.Utils.isReactNodeEmpty(children);
        return [
            loading && _react.createElement(_spinner.Spinner, {
                key: "loading",
                className: _common.Classes.BUTTON_SPINNER,
                size: _icon.IconSize.LARGE
            }),
            // The icon is purely decorative if text is provided
            _react.createElement(_icon.Icon, {
                key: "leftIcon",
                icon: icon,
                "aria-hidden": maybeHasText,
                tabIndex: maybeHasText ? -1 : undefined
            }),
            maybeHasText && _react.createElement("span", {
                key: "text",
                className: _common.Classes.BUTTON_TEXT
            }, text, children),
            _react.createElement(_icon.Icon, {
                key: "rightIcon",
                icon: rightIcon
            }), 
        ];
    };
    return AbstractButton1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../icon/icon":"7dRdu","../spinner/spinner":"6ziR3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7dRdu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconSize", ()=>IconSize
);
parcelHelpers.export(exports, "Icon", ()=>Icon
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _icons = require("@blueprintjs/icons");
var _common = require("../../common");
var IconSize;
(function(IconSize1) {
    IconSize1[IconSize1["STANDARD"] = 16] = "STANDARD";
    IconSize1[IconSize1["LARGE"] = 20] = "LARGE";
})(IconSize || (IconSize = {}));
var Icon = /** @class */ function(_super) {
    _tslib.__extends(Icon1, _super);
    function Icon1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Icon1.prototype.render = function() {
        var icon = this.props.icon;
        if (icon == null || typeof icon === "boolean") return null;
        else if (typeof icon !== "string") return icon;
        var _a = this.props, className = _a.className, color = _a.color, htmlTitle = _a.htmlTitle, // eslint-disable-next-line deprecation/deprecation
        iconSize = _a.iconSize, intent = _a.intent, _b = _a.size, size = _b === void 0 ? iconSize !== null && iconSize !== void 0 ? iconSize : IconSize.STANDARD : _b, title = _a.title, _c = _a.tagName, tagName = _c === void 0 ? "span" : _c, htmlprops = _tslib.__rest(_a, [
            "className",
            "color",
            "htmlTitle",
            "iconSize",
            "intent",
            "size",
            "title",
            "tagName"
        ]);
        // choose which pixel grid is most appropriate for given icon size
        var pixelGridSize = size >= IconSize.LARGE ? IconSize.LARGE : IconSize.STANDARD;
        // render path elements, or nothing if icon name is unknown.
        var paths = this.renderSvgPaths(pixelGridSize, icon);
        var classes = _classnamesDefault.default(_common.Classes.ICON, _common.Classes.iconClass(icon), _common.Classes.intentClass(intent), className);
        var viewBox = "0 0 ".concat(pixelGridSize, " ").concat(pixelGridSize);
        return _react.createElement(tagName, _tslib.__assign(_tslib.__assign({}, htmlprops), {
            "aria-hidden": title ? undefined : true,
            className: classes,
            title: htmlTitle
        }), _react.createElement("svg", {
            fill: color,
            "data-icon": icon,
            width: size,
            height: size,
            viewBox: viewBox
        }, title && _react.createElement("desc", null, title), paths));
    };
    /** Render `<path>` elements for the given icon name. Returns `null` if name is unknown. */ Icon1.prototype.renderSvgPaths = function(pathsSize, iconName) {
        var svgPathsRecord = pathsSize === IconSize.STANDARD ? _icons.IconSvgPaths16 : _icons.IconSvgPaths20;
        var paths = svgPathsRecord[_icons.iconNameToPathsRecordKey(iconName)];
        if (paths == null) return null;
        return paths.map(function(path, i) {
            return _react.createElement("path", {
                key: i,
                d: path,
                fillRule: "evenodd"
            });
        });
    };
    Icon1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".Icon");
    return Icon1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","@blueprintjs/icons":"95FHa","../../common":"6BNPY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"95FHa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ parcelHelpers.export(exports, "IconSvgPaths16", ()=>_iconSvgPaths.IconSvgPaths16
);
parcelHelpers.export(exports, "IconSvgPaths20", ()=>_iconSvgPaths.IconSvgPaths20
);
parcelHelpers.export(exports, "iconNameToPathsRecordKey", ()=>_iconSvgPaths.iconNameToPathsRecordKey
);
parcelHelpers.export(exports, "getIconContentString", ()=>_iconCodepoints.getIconContentString
);
parcelHelpers.export(exports, "IconCodepoints", ()=>_iconCodepoints.IconCodepoints
);
parcelHelpers.export(exports, "IconNames", ()=>_iconNames.IconNames
);
var _iconSvgPaths = require("./iconSvgPaths");
var _iconCodepoints = require("./iconCodepoints");
var _iconNames = require("./iconNames");

},{"./iconSvgPaths":"gk4kh","./iconCodepoints":false,"./iconNames":false,"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gk4kh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconSvgPaths16", ()=>_paths
);
parcelHelpers.export(exports, "IconSvgPaths20", ()=>_paths1
);
/**
 * Type safe string literal conversion of snake-case icon names to PascalCase icon names,
 * useful for indexing into the SVG paths record to extract a single icon's SVG path definition.
 */ parcelHelpers.export(exports, "iconNameToPathsRecordKey", ()=>iconNameToPathsRecordKey
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _changeCase = require("change-case");
var _paths = require("./generated/16px/paths");
var _paths1 = require("./generated/20px/paths");
function iconNameToPathsRecordKey(name) {
    return _changeCase.pascalCase(name);
}

},{"change-case":"61eMe","./generated/16px/paths":"5d4zO","./generated/20px/paths":"k6PFu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"61eMe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _camelCase = require("camel-case");
parcelHelpers.exportAll(_camelCase, exports);
var _capitalCase = require("capital-case");
parcelHelpers.exportAll(_capitalCase, exports);
var _constantCase = require("constant-case");
parcelHelpers.exportAll(_constantCase, exports);
var _dotCase = require("dot-case");
parcelHelpers.exportAll(_dotCase, exports);
var _headerCase = require("header-case");
parcelHelpers.exportAll(_headerCase, exports);
var _noCase = require("no-case");
parcelHelpers.exportAll(_noCase, exports);
var _paramCase = require("param-case");
parcelHelpers.exportAll(_paramCase, exports);
var _pascalCase = require("pascal-case");
parcelHelpers.exportAll(_pascalCase, exports);
var _pathCase = require("path-case");
parcelHelpers.exportAll(_pathCase, exports);
var _sentenceCase = require("sentence-case");
parcelHelpers.exportAll(_sentenceCase, exports);
var _snakeCase = require("snake-case");
parcelHelpers.exportAll(_snakeCase, exports);

},{"camel-case":"61lyl","capital-case":"64Os9","constant-case":"jM6kW","dot-case":"1Rvk7","header-case":"pyd4j","no-case":"iZjfl","param-case":"f5Yis","pascal-case":"fK96n","path-case":"gUbTp","sentence-case":"9efn7","snake-case":"9OwAv","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"61lyl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "camelCaseTransform", ()=>camelCaseTransform
);
parcelHelpers.export(exports, "camelCaseTransformMerge", ()=>camelCaseTransformMerge
);
parcelHelpers.export(exports, "camelCase", ()=>camelCase
);
var _tslib = require("tslib");
var _pascalCase = require("pascal-case");
function camelCaseTransform(input, index) {
    if (index === 0) return input.toLowerCase();
    return _pascalCase.pascalCaseTransform(input, index);
}
function camelCaseTransformMerge(input, index) {
    if (index === 0) return input.toLowerCase();
    return _pascalCase.pascalCaseTransformMerge(input);
}
function camelCase(input, options) {
    if (options === void 0) options = {};
    return _pascalCase.pascalCase(input, _tslib.__assign({
        transform: camelCaseTransform
    }, options));
}

},{"tslib":"lRdW5","pascal-case":"fK96n","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lRdW5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends
);
parcelHelpers.export(exports, "__assign", ()=>__assign
);
parcelHelpers.export(exports, "__rest", ()=>__rest
);
parcelHelpers.export(exports, "__decorate", ()=>__decorate
);
parcelHelpers.export(exports, "__param", ()=>__param
);
parcelHelpers.export(exports, "__metadata", ()=>__metadata
);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter
);
parcelHelpers.export(exports, "__generator", ()=>__generator
);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding
);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar
);
parcelHelpers.export(exports, "__values", ()=>__values
);
parcelHelpers.export(exports, "__read", ()=>__read
);
/** @deprecated */ parcelHelpers.export(exports, "__spread", ()=>__spread
);
/** @deprecated */ parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays
);
parcelHelpers.export(exports, "__spreadArray", ()=>__spreadArray
);
parcelHelpers.export(exports, "__await", ()=>__await
);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator
);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator
);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues
);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject
);
parcelHelpers.export(exports, "__importStar", ()=>__importStar
);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault
);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet
);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet
);
parcelHelpers.export(exports, "__classPrivateFieldIn", ()=>__classPrivateFieldIn
);
/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d1, b1) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d1, b1);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) desc = {
        enumerable: true,
        get: function() {
            return m[k];
        }
    };
    Object.defineProperty(o, k2, desc);
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: n === "return"
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v1) {
        Promise.resolve(v1).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}
function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fK96n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pascalCaseTransform", ()=>pascalCaseTransform
);
parcelHelpers.export(exports, "pascalCaseTransformMerge", ()=>pascalCaseTransformMerge
);
parcelHelpers.export(exports, "pascalCase", ()=>pascalCase
);
var _tslib = require("tslib");
var _noCase = require("no-case");
function pascalCaseTransform(input, index) {
    var firstChar = input.charAt(0);
    var lowerChars = input.substr(1).toLowerCase();
    if (index > 0 && firstChar >= "0" && firstChar <= "9") return "_" + firstChar + lowerChars;
    return "" + firstChar.toUpperCase() + lowerChars;
}
function pascalCaseTransformMerge(input) {
    return input.charAt(0).toUpperCase() + input.slice(1).toLowerCase();
}
function pascalCase(input, options) {
    if (options === void 0) options = {};
    return _noCase.noCase(input, _tslib.__assign({
        delimiter: "",
        transform: pascalCaseTransform
    }, options));
}

},{"tslib":"lRdW5","no-case":"iZjfl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iZjfl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Normalize the string into something other libraries can manipulate easier.
 */ parcelHelpers.export(exports, "noCase", ()=>noCase
);
var _lowerCase = require("lower-case");
// Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").
var DEFAULT_SPLIT_REGEXP = [
    /([a-z0-9])([A-Z])/g,
    /([A-Z])([A-Z][a-z])/g
];
// Remove all non-word characters.
var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
function noCase(input, options) {
    if (options === void 0) options = {};
    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? _lowerCase.lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;
    var result = replace(replace(input, splitRegexp, "$1\0$2"), stripRegexp, "\0");
    var start = 0;
    var end = result.length;
    // Trim the delimiter from around the output string.
    while(result.charAt(start) === "\0")start++;
    while(result.charAt(end - 1) === "\0")end--;
    // Transform each token independently.
    return result.slice(start, end).split("\0").map(transform).join(delimiter);
}
/**
 * Replace `re` in the input string with the replacement value.
 */ function replace(input1, re1, value) {
    if (re1 instanceof RegExp) return input1.replace(re1, value);
    return re1.reduce(function(input, re) {
        return input.replace(re, value);
    }, input1);
}

},{"lower-case":"jUDQU","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jUDQU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Localized lower case.
 */ parcelHelpers.export(exports, "localeLowerCase", ()=>localeLowerCase
);
/**
 * Lower case as a function.
 */ parcelHelpers.export(exports, "lowerCase", ()=>lowerCase
);
/**
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 */ var SUPPORTED_LOCALE = {
    tr: {
        regexp: /\u0130|\u0049|\u0049\u0307/g,
        map: {
            İ: "\u0069",
            I: "\u0131",
            İ: "\u0069"
        }
    },
    az: {
        regexp: /\u0130/g,
        map: {
            İ: "\u0069",
            I: "\u0131",
            İ: "\u0069"
        }
    },
    lt: {
        regexp: /\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,
        map: {
            I: "\u0069\u0307",
            J: "\u006A\u0307",
            Į: "\u012F\u0307",
            Ì: "\u0069\u0307\u0300",
            Í: "\u0069\u0307\u0301",
            Ĩ: "\u0069\u0307\u0303"
        }
    }
};
function localeLowerCase(str, locale) {
    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];
    if (lang) return lowerCase(str.replace(lang.regexp, function(m) {
        return lang.map[m];
    }));
    return lowerCase(str);
}
function lowerCase(str) {
    return str.toLowerCase();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"64Os9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "capitalCaseTransform", ()=>capitalCaseTransform
);
parcelHelpers.export(exports, "capitalCase", ()=>capitalCase
);
var _tslib = require("tslib");
var _noCase = require("no-case");
var _upperCaseFirst = require("upper-case-first");
function capitalCaseTransform(input) {
    return _upperCaseFirst.upperCaseFirst(input.toLowerCase());
}
function capitalCase(input, options) {
    if (options === void 0) options = {};
    return _noCase.noCase(input, _tslib.__assign({
        delimiter: " ",
        transform: capitalCaseTransform
    }, options));
}

},{"tslib":"lRdW5","no-case":"iZjfl","upper-case-first":"3JR0D","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3JR0D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Upper case the first character of an input string.
 */ parcelHelpers.export(exports, "upperCaseFirst", ()=>upperCaseFirst
);
function upperCaseFirst(input) {
    return input.charAt(0).toUpperCase() + input.substr(1);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jM6kW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "constantCase", ()=>constantCase
);
var _tslib = require("tslib");
var _noCase = require("no-case");
var _upperCase = require("upper-case");
function constantCase(input, options) {
    if (options === void 0) options = {};
    return _noCase.noCase(input, _tslib.__assign({
        delimiter: "_",
        transform: _upperCase.upperCase
    }, options));
}

},{"tslib":"lRdW5","no-case":"iZjfl","upper-case":"3C421","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3C421":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Localized upper case.
 */ parcelHelpers.export(exports, "localeUpperCase", ()=>localeUpperCase
);
/**
 * Upper case as a function.
 */ parcelHelpers.export(exports, "upperCase", ()=>upperCase
);
/**
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 */ var SUPPORTED_LOCALE = {
    tr: {
        regexp: /[\u0069]/g,
        map: {
            i: "\u0130"
        }
    },
    az: {
        regexp: /[\u0069]/g,
        map: {
            i: "\u0130"
        }
    },
    lt: {
        regexp: /[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,
        map: {
            i̇: "\u0049",
            j̇: "\u004A",
            į̇: "\u012E",
            i̇̀: "\u00CC",
            i̇́: "\u00CD",
            i̇̃: "\u0128"
        }
    }
};
function localeUpperCase(str, locale) {
    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];
    if (lang) return upperCase(str.replace(lang.regexp, function(m) {
        return lang.map[m];
    }));
    return upperCase(str);
}
function upperCase(str) {
    return str.toUpperCase();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Rvk7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "dotCase", ()=>dotCase
);
var _tslib = require("tslib");
var _noCase = require("no-case");
function dotCase(input, options) {
    if (options === void 0) options = {};
    return _noCase.noCase(input, _tslib.__assign({
        delimiter: "."
    }, options));
}

},{"tslib":"lRdW5","no-case":"iZjfl","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"pyd4j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "headerCase", ()=>headerCase
);
var _tslib = require("tslib");
var _capitalCase = require("capital-case");
function headerCase(input, options) {
    if (options === void 0) options = {};
    return _capitalCase.capitalCase(input, _tslib.__assign({
        delimiter: "-"
    }, options));
}

},{"tslib":"lRdW5","capital-case":"64Os9","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f5Yis":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "paramCase", ()=>paramCase
);
var _tslib = require("tslib");
var _dotCase = require("dot-case");
function paramCase(input, options) {
    if (options === void 0) options = {};
    return _dotCase.dotCase(input, _tslib.__assign({
        delimiter: "-"
    }, options));
}

},{"tslib":"lRdW5","dot-case":"1Rvk7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gUbTp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "pathCase", ()=>pathCase
);
var _tslib = require("tslib");
var _dotCase = require("dot-case");
function pathCase(input, options) {
    if (options === void 0) options = {};
    return _dotCase.dotCase(input, _tslib.__assign({
        delimiter: "/"
    }, options));
}

},{"tslib":"lRdW5","dot-case":"1Rvk7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9efn7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "sentenceCaseTransform", ()=>sentenceCaseTransform
);
parcelHelpers.export(exports, "sentenceCase", ()=>sentenceCase
);
var _tslib = require("tslib");
var _noCase = require("no-case");
var _upperCaseFirst = require("upper-case-first");
function sentenceCaseTransform(input, index) {
    var result = input.toLowerCase();
    if (index === 0) return _upperCaseFirst.upperCaseFirst(result);
    return result;
}
function sentenceCase(input, options) {
    if (options === void 0) options = {};
    return _noCase.noCase(input, _tslib.__assign({
        delimiter: " ",
        transform: sentenceCaseTransform
    }, options));
}

},{"tslib":"lRdW5","no-case":"iZjfl","upper-case-first":"3JR0D","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9OwAv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "snakeCase", ()=>snakeCase
);
var _tslib = require("tslib");
var _dotCase = require("dot-case");
function snakeCase(input, options) {
    if (options === void 0) options = {};
    return _dotCase.dotCase(input, _tslib.__assign({
        delimiter: "_"
    }, options));
}

},{"tslib":"lRdW5","dot-case":"1Rvk7","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5d4zO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Add", ()=>_addDefault.default
);
parcelHelpers.export(exports, "AddClip", ()=>_addClipDefault.default
);
parcelHelpers.export(exports, "AddColumnLeft", ()=>_addColumnLeftDefault.default
);
parcelHelpers.export(exports, "AddColumnRight", ()=>_addColumnRightDefault.default
);
parcelHelpers.export(exports, "AddLocation", ()=>_addLocationDefault.default
);
parcelHelpers.export(exports, "AddRowBottom", ()=>_addRowBottomDefault.default
);
parcelHelpers.export(exports, "AddRowTop", ()=>_addRowTopDefault.default
);
parcelHelpers.export(exports, "AddToArtifact", ()=>_addToArtifactDefault.default
);
parcelHelpers.export(exports, "AddToFolder", ()=>_addToFolderDefault.default
);
parcelHelpers.export(exports, "Airplane", ()=>_airplaneDefault.default
);
parcelHelpers.export(exports, "AlignCenter", ()=>_alignCenterDefault.default
);
parcelHelpers.export(exports, "AlignJustify", ()=>_alignJustifyDefault.default
);
parcelHelpers.export(exports, "AlignLeft", ()=>_alignLeftDefault.default
);
parcelHelpers.export(exports, "AlignRight", ()=>_alignRightDefault.default
);
parcelHelpers.export(exports, "AlignmentBottom", ()=>_alignmentBottomDefault.default
);
parcelHelpers.export(exports, "AlignmentHorizontalCenter", ()=>_alignmentHorizontalCenterDefault.default
);
parcelHelpers.export(exports, "AlignmentLeft", ()=>_alignmentLeftDefault.default
);
parcelHelpers.export(exports, "AlignmentRight", ()=>_alignmentRightDefault.default
);
parcelHelpers.export(exports, "AlignmentTop", ()=>_alignmentTopDefault.default
);
parcelHelpers.export(exports, "AlignmentVerticalCenter", ()=>_alignmentVerticalCenterDefault.default
);
parcelHelpers.export(exports, "Annotation", ()=>_annotationDefault.default
);
parcelHelpers.export(exports, "Antenna", ()=>_antennaDefault.default
);
parcelHelpers.export(exports, "AppHeader", ()=>_appHeaderDefault.default
);
parcelHelpers.export(exports, "Application", ()=>_applicationDefault.default
);
parcelHelpers.export(exports, "Applications", ()=>_applicationsDefault.default
);
parcelHelpers.export(exports, "Archive", ()=>_archiveDefault.default
);
parcelHelpers.export(exports, "AreaOfInterest", ()=>_areaOfInterestDefault.default
);
parcelHelpers.export(exports, "Array", ()=>_arrayDefault.default
);
parcelHelpers.export(exports, "ArrayBoolean", ()=>_arrayBooleanDefault.default
);
parcelHelpers.export(exports, "ArrayDate", ()=>_arrayDateDefault.default
);
parcelHelpers.export(exports, "ArrayNumeric", ()=>_arrayNumericDefault.default
);
parcelHelpers.export(exports, "ArrayString", ()=>_arrayStringDefault.default
);
parcelHelpers.export(exports, "ArrayTimestamp", ()=>_arrayTimestampDefault.default
);
parcelHelpers.export(exports, "ArrowBottomLeft", ()=>_arrowBottomLeftDefault.default
);
parcelHelpers.export(exports, "ArrowBottomRight", ()=>_arrowBottomRightDefault.default
);
parcelHelpers.export(exports, "ArrowDown", ()=>_arrowDownDefault.default
);
parcelHelpers.export(exports, "ArrowLeft", ()=>_arrowLeftDefault.default
);
parcelHelpers.export(exports, "ArrowRight", ()=>_arrowRightDefault.default
);
parcelHelpers.export(exports, "ArrowTopLeft", ()=>_arrowTopLeftDefault.default
);
parcelHelpers.export(exports, "ArrowTopRight", ()=>_arrowTopRightDefault.default
);
parcelHelpers.export(exports, "ArrowUp", ()=>_arrowUpDefault.default
);
parcelHelpers.export(exports, "ArrowsHorizontal", ()=>_arrowsHorizontalDefault.default
);
parcelHelpers.export(exports, "ArrowsVertical", ()=>_arrowsVerticalDefault.default
);
parcelHelpers.export(exports, "Asterisk", ()=>_asteriskDefault.default
);
parcelHelpers.export(exports, "AutomaticUpdates", ()=>_automaticUpdatesDefault.default
);
parcelHelpers.export(exports, "Backlink", ()=>_backlinkDefault.default
);
parcelHelpers.export(exports, "Badge", ()=>_badgeDefault.default
);
parcelHelpers.export(exports, "BanCircle", ()=>_banCircleDefault.default
);
parcelHelpers.export(exports, "BankAccount", ()=>_bankAccountDefault.default
);
parcelHelpers.export(exports, "Barcode", ()=>_barcodeDefault.default
);
parcelHelpers.export(exports, "Blank", ()=>_blankDefault.default
);
parcelHelpers.export(exports, "BlockedPerson", ()=>_blockedPersonDefault.default
);
parcelHelpers.export(exports, "Bold", ()=>_boldDefault.default
);
parcelHelpers.export(exports, "Book", ()=>_bookDefault.default
);
parcelHelpers.export(exports, "Bookmark", ()=>_bookmarkDefault.default
);
parcelHelpers.export(exports, "Box", ()=>_boxDefault.default
);
parcelHelpers.export(exports, "Briefcase", ()=>_briefcaseDefault.default
);
parcelHelpers.export(exports, "BringData", ()=>_bringDataDefault.default
);
parcelHelpers.export(exports, "Buggy", ()=>_buggyDefault.default
);
parcelHelpers.export(exports, "Build", ()=>_buildDefault.default
);
parcelHelpers.export(exports, "Calculator", ()=>_calculatorDefault.default
);
parcelHelpers.export(exports, "Calendar", ()=>_calendarDefault.default
);
parcelHelpers.export(exports, "Camera", ()=>_cameraDefault.default
);
parcelHelpers.export(exports, "CaretDown", ()=>_caretDownDefault.default
);
parcelHelpers.export(exports, "CaretLeft", ()=>_caretLeftDefault.default
);
parcelHelpers.export(exports, "CaretRight", ()=>_caretRightDefault.default
);
parcelHelpers.export(exports, "CaretUp", ()=>_caretUpDefault.default
);
parcelHelpers.export(exports, "CargoShip", ()=>_cargoShipDefault.default
);
parcelHelpers.export(exports, "CellTower", ()=>_cellTowerDefault.default
);
parcelHelpers.export(exports, "Changes", ()=>_changesDefault.default
);
parcelHelpers.export(exports, "Chart", ()=>_chartDefault.default
);
parcelHelpers.export(exports, "Chat", ()=>_chatDefault.default
);
parcelHelpers.export(exports, "ChevronBackward", ()=>_chevronBackwardDefault.default
);
parcelHelpers.export(exports, "ChevronDown", ()=>_chevronDownDefault.default
);
parcelHelpers.export(exports, "ChevronForward", ()=>_chevronForwardDefault.default
);
parcelHelpers.export(exports, "ChevronLeft", ()=>_chevronLeftDefault.default
);
parcelHelpers.export(exports, "ChevronRight", ()=>_chevronRightDefault.default
);
parcelHelpers.export(exports, "ChevronUp", ()=>_chevronUpDefault.default
);
parcelHelpers.export(exports, "Circle", ()=>_circleDefault.default
);
parcelHelpers.export(exports, "CircleArrowDown", ()=>_circleArrowDownDefault.default
);
parcelHelpers.export(exports, "CircleArrowLeft", ()=>_circleArrowLeftDefault.default
);
parcelHelpers.export(exports, "CircleArrowRight", ()=>_circleArrowRightDefault.default
);
parcelHelpers.export(exports, "CircleArrowUp", ()=>_circleArrowUpDefault.default
);
parcelHelpers.export(exports, "Citation", ()=>_citationDefault.default
);
parcelHelpers.export(exports, "Clean", ()=>_cleanDefault.default
);
parcelHelpers.export(exports, "Clip", ()=>_clipDefault.default
);
parcelHelpers.export(exports, "Clipboard", ()=>_clipboardDefault.default
);
parcelHelpers.export(exports, "Cloud", ()=>_cloudDefault.default
);
parcelHelpers.export(exports, "CloudDownload", ()=>_cloudDownloadDefault.default
);
parcelHelpers.export(exports, "CloudUpload", ()=>_cloudUploadDefault.default
);
parcelHelpers.export(exports, "Code", ()=>_codeDefault.default
);
parcelHelpers.export(exports, "CodeBlock", ()=>_codeBlockDefault.default
);
parcelHelpers.export(exports, "Cog", ()=>_cogDefault.default
);
parcelHelpers.export(exports, "CollapseAll", ()=>_collapseAllDefault.default
);
parcelHelpers.export(exports, "ColorFill", ()=>_colorFillDefault.default
);
parcelHelpers.export(exports, "ColumnLayout", ()=>_columnLayoutDefault.default
);
parcelHelpers.export(exports, "Comment", ()=>_commentDefault.default
);
parcelHelpers.export(exports, "Comparison", ()=>_comparisonDefault.default
);
parcelHelpers.export(exports, "Compass", ()=>_compassDefault.default
);
parcelHelpers.export(exports, "Compressed", ()=>_compressedDefault.default
);
parcelHelpers.export(exports, "Confirm", ()=>_confirmDefault.default
);
parcelHelpers.export(exports, "Console", ()=>_consoleDefault.default
);
parcelHelpers.export(exports, "Contrast", ()=>_contrastDefault.default
);
parcelHelpers.export(exports, "Control", ()=>_controlDefault.default
);
parcelHelpers.export(exports, "CreditCard", ()=>_creditCardDefault.default
);
parcelHelpers.export(exports, "Cross", ()=>_crossDefault.default
);
parcelHelpers.export(exports, "Crown", ()=>_crownDefault.default
);
parcelHelpers.export(exports, "Cube", ()=>_cubeDefault.default
);
parcelHelpers.export(exports, "CubeAdd", ()=>_cubeAddDefault.default
);
parcelHelpers.export(exports, "CubeRemove", ()=>_cubeRemoveDefault.default
);
parcelHelpers.export(exports, "CurvedRangeChart", ()=>_curvedRangeChartDefault.default
);
parcelHelpers.export(exports, "Cut", ()=>_cutDefault.default
);
parcelHelpers.export(exports, "Cycle", ()=>_cycleDefault.default
);
parcelHelpers.export(exports, "Dashboard", ()=>_dashboardDefault.default
);
parcelHelpers.export(exports, "DataConnection", ()=>_dataConnectionDefault.default
);
parcelHelpers.export(exports, "DataLineage", ()=>_dataLineageDefault.default
);
parcelHelpers.export(exports, "Database", ()=>_databaseDefault.default
);
parcelHelpers.export(exports, "Delete", ()=>_deleteDefault.default
);
parcelHelpers.export(exports, "Delta", ()=>_deltaDefault.default
);
parcelHelpers.export(exports, "DeriveColumn", ()=>_deriveColumnDefault.default
);
parcelHelpers.export(exports, "Desktop", ()=>_desktopDefault.default
);
parcelHelpers.export(exports, "Diagnosis", ()=>_diagnosisDefault.default
);
parcelHelpers.export(exports, "DiagramTree", ()=>_diagramTreeDefault.default
);
parcelHelpers.export(exports, "DirectionLeft", ()=>_directionLeftDefault.default
);
parcelHelpers.export(exports, "DirectionRight", ()=>_directionRightDefault.default
);
parcelHelpers.export(exports, "Disable", ()=>_disableDefault.default
);
parcelHelpers.export(exports, "Divide", ()=>_divideDefault.default
);
parcelHelpers.export(exports, "Document", ()=>_documentDefault.default
);
parcelHelpers.export(exports, "DocumentOpen", ()=>_documentOpenDefault.default
);
parcelHelpers.export(exports, "DocumentShare", ()=>_documentShareDefault.default
);
parcelHelpers.export(exports, "Dollar", ()=>_dollarDefault.default
);
parcelHelpers.export(exports, "Dot", ()=>_dotDefault.default
);
parcelHelpers.export(exports, "DoubleCaretHorizontal", ()=>_doubleCaretHorizontalDefault.default
);
parcelHelpers.export(exports, "DoubleCaretVertical", ()=>_doubleCaretVerticalDefault.default
);
parcelHelpers.export(exports, "DoubleChevronDown", ()=>_doubleChevronDownDefault.default
);
parcelHelpers.export(exports, "DoubleChevronLeft", ()=>_doubleChevronLeftDefault.default
);
parcelHelpers.export(exports, "DoubleChevronRight", ()=>_doubleChevronRightDefault.default
);
parcelHelpers.export(exports, "DoubleChevronUp", ()=>_doubleChevronUpDefault.default
);
parcelHelpers.export(exports, "DoughnutChart", ()=>_doughnutChartDefault.default
);
parcelHelpers.export(exports, "Download", ()=>_downloadDefault.default
);
parcelHelpers.export(exports, "DragHandleHorizontal", ()=>_dragHandleHorizontalDefault.default
);
parcelHelpers.export(exports, "DragHandleVertical", ()=>_dragHandleVerticalDefault.default
);
parcelHelpers.export(exports, "Draw", ()=>_drawDefault.default
);
parcelHelpers.export(exports, "DrawerLeft", ()=>_drawerLeftDefault.default
);
parcelHelpers.export(exports, "DrawerLeftFilled", ()=>_drawerLeftFilledDefault.default
);
parcelHelpers.export(exports, "DrawerRight", ()=>_drawerRightDefault.default
);
parcelHelpers.export(exports, "DrawerRightFilled", ()=>_drawerRightFilledDefault.default
);
parcelHelpers.export(exports, "DriveTime", ()=>_driveTimeDefault.default
);
parcelHelpers.export(exports, "Duplicate", ()=>_duplicateDefault.default
);
parcelHelpers.export(exports, "Edit", ()=>_editDefault.default
);
parcelHelpers.export(exports, "Eject", ()=>_ejectDefault.default
);
parcelHelpers.export(exports, "Emoji", ()=>_emojiDefault.default
);
parcelHelpers.export(exports, "Endorsed", ()=>_endorsedDefault.default
);
parcelHelpers.export(exports, "Envelope", ()=>_envelopeDefault.default
);
parcelHelpers.export(exports, "Equals", ()=>_equalsDefault.default
);
parcelHelpers.export(exports, "Eraser", ()=>_eraserDefault.default
);
parcelHelpers.export(exports, "Error", ()=>_errorDefault.default
);
parcelHelpers.export(exports, "Euro", ()=>_euroDefault.default
);
parcelHelpers.export(exports, "Exchange", ()=>_exchangeDefault.default
);
parcelHelpers.export(exports, "ExcludeRow", ()=>_excludeRowDefault.default
);
parcelHelpers.export(exports, "ExpandAll", ()=>_expandAllDefault.default
);
parcelHelpers.export(exports, "Export", ()=>_exportDefault.default
);
parcelHelpers.export(exports, "EyeOff", ()=>_eyeOffDefault.default
);
parcelHelpers.export(exports, "EyeOn", ()=>_eyeOnDefault.default
);
parcelHelpers.export(exports, "EyeOpen", ()=>_eyeOpenDefault.default
);
parcelHelpers.export(exports, "FastBackward", ()=>_fastBackwardDefault.default
);
parcelHelpers.export(exports, "FastForward", ()=>_fastForwardDefault.default
);
parcelHelpers.export(exports, "Feed", ()=>_feedDefault.default
);
parcelHelpers.export(exports, "FeedSubscribed", ()=>_feedSubscribedDefault.default
);
parcelHelpers.export(exports, "Film", ()=>_filmDefault.default
);
parcelHelpers.export(exports, "Filter", ()=>_filterDefault.default
);
parcelHelpers.export(exports, "FilterKeep", ()=>_filterKeepDefault.default
);
parcelHelpers.export(exports, "FilterList", ()=>_filterListDefault.default
);
parcelHelpers.export(exports, "FilterOpen", ()=>_filterOpenDefault.default
);
parcelHelpers.export(exports, "FilterRemove", ()=>_filterRemoveDefault.default
);
parcelHelpers.export(exports, "Flag", ()=>_flagDefault.default
);
parcelHelpers.export(exports, "Flame", ()=>_flameDefault.default
);
parcelHelpers.export(exports, "Flash", ()=>_flashDefault.default
);
parcelHelpers.export(exports, "FloppyDisk", ()=>_floppyDiskDefault.default
);
parcelHelpers.export(exports, "FlowBranch", ()=>_flowBranchDefault.default
);
parcelHelpers.export(exports, "FlowEnd", ()=>_flowEndDefault.default
);
parcelHelpers.export(exports, "FlowLinear", ()=>_flowLinearDefault.default
);
parcelHelpers.export(exports, "FlowReview", ()=>_flowReviewDefault.default
);
parcelHelpers.export(exports, "FlowReviewBranch", ()=>_flowReviewBranchDefault.default
);
parcelHelpers.export(exports, "Flows", ()=>_flowsDefault.default
);
parcelHelpers.export(exports, "FolderClose", ()=>_folderCloseDefault.default
);
parcelHelpers.export(exports, "FolderNew", ()=>_folderNewDefault.default
);
parcelHelpers.export(exports, "FolderOpen", ()=>_folderOpenDefault.default
);
parcelHelpers.export(exports, "FolderShared", ()=>_folderSharedDefault.default
);
parcelHelpers.export(exports, "FolderSharedOpen", ()=>_folderSharedOpenDefault.default
);
parcelHelpers.export(exports, "Follower", ()=>_followerDefault.default
);
parcelHelpers.export(exports, "Following", ()=>_followingDefault.default
);
parcelHelpers.export(exports, "Font", ()=>_fontDefault.default
);
parcelHelpers.export(exports, "Fork", ()=>_forkDefault.default
);
parcelHelpers.export(exports, "Form", ()=>_formDefault.default
);
parcelHelpers.export(exports, "Fuel", ()=>_fuelDefault.default
);
parcelHelpers.export(exports, "FullCircle", ()=>_fullCircleDefault.default
);
parcelHelpers.export(exports, "FullStackedChart", ()=>_fullStackedChartDefault.default
);
parcelHelpers.export(exports, "Fullscreen", ()=>_fullscreenDefault.default
);
parcelHelpers.export(exports, "Function", ()=>_functionDefault.default
);
parcelHelpers.export(exports, "GanttChart", ()=>_ganttChartDefault.default
);
parcelHelpers.export(exports, "Geofence", ()=>_geofenceDefault.default
);
parcelHelpers.export(exports, "Geolocation", ()=>_geolocationDefault.default
);
parcelHelpers.export(exports, "Geosearch", ()=>_geosearchDefault.default
);
parcelHelpers.export(exports, "GitBranch", ()=>_gitBranchDefault.default
);
parcelHelpers.export(exports, "GitCommit", ()=>_gitCommitDefault.default
);
parcelHelpers.export(exports, "GitMerge", ()=>_gitMergeDefault.default
);
parcelHelpers.export(exports, "GitNewBranch", ()=>_gitNewBranchDefault.default
);
parcelHelpers.export(exports, "GitPull", ()=>_gitPullDefault.default
);
parcelHelpers.export(exports, "GitPush", ()=>_gitPushDefault.default
);
parcelHelpers.export(exports, "GitRepo", ()=>_gitRepoDefault.default
);
parcelHelpers.export(exports, "Glass", ()=>_glassDefault.default
);
parcelHelpers.export(exports, "Globe", ()=>_globeDefault.default
);
parcelHelpers.export(exports, "GlobeNetwork", ()=>_globeNetworkDefault.default
);
parcelHelpers.export(exports, "Graph", ()=>_graphDefault.default
);
parcelHelpers.export(exports, "GraphRemove", ()=>_graphRemoveDefault.default
);
parcelHelpers.export(exports, "GreaterThan", ()=>_greaterThanDefault.default
);
parcelHelpers.export(exports, "GreaterThanOrEqualTo", ()=>_greaterThanOrEqualToDefault.default
);
parcelHelpers.export(exports, "Grid", ()=>_gridDefault.default
);
parcelHelpers.export(exports, "GridView", ()=>_gridViewDefault.default
);
parcelHelpers.export(exports, "GroupObjects", ()=>_groupObjectsDefault.default
);
parcelHelpers.export(exports, "GroupedBarChart", ()=>_groupedBarChartDefault.default
);
parcelHelpers.export(exports, "Hand", ()=>_handDefault.default
);
parcelHelpers.export(exports, "HandDown", ()=>_handDownDefault.default
);
parcelHelpers.export(exports, "HandLeft", ()=>_handLeftDefault.default
);
parcelHelpers.export(exports, "HandRight", ()=>_handRightDefault.default
);
parcelHelpers.export(exports, "HandUp", ()=>_handUpDefault.default
);
parcelHelpers.export(exports, "Hat", ()=>_hatDefault.default
);
parcelHelpers.export(exports, "Header", ()=>_headerDefault.default
);
parcelHelpers.export(exports, "HeaderOne", ()=>_headerOneDefault.default
);
parcelHelpers.export(exports, "HeaderThree", ()=>_headerThreeDefault.default
);
parcelHelpers.export(exports, "HeaderTwo", ()=>_headerTwoDefault.default
);
parcelHelpers.export(exports, "Headset", ()=>_headsetDefault.default
);
parcelHelpers.export(exports, "Heart", ()=>_heartDefault.default
);
parcelHelpers.export(exports, "HeartBroken", ()=>_heartBrokenDefault.default
);
parcelHelpers.export(exports, "HeatGrid", ()=>_heatGridDefault.default
);
parcelHelpers.export(exports, "Heatmap", ()=>_heatmapDefault.default
);
parcelHelpers.export(exports, "Helicopter", ()=>_helicopterDefault.default
);
parcelHelpers.export(exports, "Help", ()=>_helpDefault.default
);
parcelHelpers.export(exports, "HelperManagement", ()=>_helperManagementDefault.default
);
parcelHelpers.export(exports, "HighPriority", ()=>_highPriorityDefault.default
);
parcelHelpers.export(exports, "Highlight", ()=>_highlightDefault.default
);
parcelHelpers.export(exports, "History", ()=>_historyDefault.default
);
parcelHelpers.export(exports, "Home", ()=>_homeDefault.default
);
parcelHelpers.export(exports, "HorizontalBarChart", ()=>_horizontalBarChartDefault.default
);
parcelHelpers.export(exports, "HorizontalBarChartAsc", ()=>_horizontalBarChartAscDefault.default
);
parcelHelpers.export(exports, "HorizontalBarChartDesc", ()=>_horizontalBarChartDescDefault.default
);
parcelHelpers.export(exports, "HorizontalDistribution", ()=>_horizontalDistributionDefault.default
);
parcelHelpers.export(exports, "HorizontalInbetween", ()=>_horizontalInbetweenDefault.default
);
parcelHelpers.export(exports, "Hurricane", ()=>_hurricaneDefault.default
);
parcelHelpers.export(exports, "IdNumber", ()=>_idNumberDefault.default
);
parcelHelpers.export(exports, "ImageRotateLeft", ()=>_imageRotateLeftDefault.default
);
parcelHelpers.export(exports, "ImageRotateRight", ()=>_imageRotateRightDefault.default
);
parcelHelpers.export(exports, "Import", ()=>_importDefault.default
);
parcelHelpers.export(exports, "Inbox", ()=>_inboxDefault.default
);
parcelHelpers.export(exports, "InboxFiltered", ()=>_inboxFilteredDefault.default
);
parcelHelpers.export(exports, "InboxGeo", ()=>_inboxGeoDefault.default
);
parcelHelpers.export(exports, "InboxSearch", ()=>_inboxSearchDefault.default
);
parcelHelpers.export(exports, "InboxUpdate", ()=>_inboxUpdateDefault.default
);
parcelHelpers.export(exports, "InfoSign", ()=>_infoSignDefault.default
);
parcelHelpers.export(exports, "Inheritance", ()=>_inheritanceDefault.default
);
parcelHelpers.export(exports, "InheritedGroup", ()=>_inheritedGroupDefault.default
);
parcelHelpers.export(exports, "InnerJoin", ()=>_innerJoinDefault.default
);
parcelHelpers.export(exports, "Insert", ()=>_insertDefault.default
);
parcelHelpers.export(exports, "Intersection", ()=>_intersectionDefault.default
);
parcelHelpers.export(exports, "IpAddress", ()=>_ipAddressDefault.default
);
parcelHelpers.export(exports, "Issue", ()=>_issueDefault.default
);
parcelHelpers.export(exports, "IssueClosed", ()=>_issueClosedDefault.default
);
parcelHelpers.export(exports, "IssueNew", ()=>_issueNewDefault.default
);
parcelHelpers.export(exports, "Italic", ()=>_italicDefault.default
);
parcelHelpers.export(exports, "JoinTable", ()=>_joinTableDefault.default
);
parcelHelpers.export(exports, "Key", ()=>_keyDefault.default
);
parcelHelpers.export(exports, "KeyBackspace", ()=>_keyBackspaceDefault.default
);
parcelHelpers.export(exports, "KeyCommand", ()=>_keyCommandDefault.default
);
parcelHelpers.export(exports, "KeyControl", ()=>_keyControlDefault.default
);
parcelHelpers.export(exports, "KeyDelete", ()=>_keyDeleteDefault.default
);
parcelHelpers.export(exports, "KeyEnter", ()=>_keyEnterDefault.default
);
parcelHelpers.export(exports, "KeyEscape", ()=>_keyEscapeDefault.default
);
parcelHelpers.export(exports, "KeyOption", ()=>_keyOptionDefault.default
);
parcelHelpers.export(exports, "KeyShift", ()=>_keyShiftDefault.default
);
parcelHelpers.export(exports, "KeyTab", ()=>_keyTabDefault.default
);
parcelHelpers.export(exports, "KnownVehicle", ()=>_knownVehicleDefault.default
);
parcelHelpers.export(exports, "LabTest", ()=>_labTestDefault.default
);
parcelHelpers.export(exports, "Label", ()=>_labelDefault.default
);
parcelHelpers.export(exports, "Layer", ()=>_layerDefault.default
);
parcelHelpers.export(exports, "LayerOutline", ()=>_layerOutlineDefault.default
);
parcelHelpers.export(exports, "Layers", ()=>_layersDefault.default
);
parcelHelpers.export(exports, "Layout", ()=>_layoutDefault.default
);
parcelHelpers.export(exports, "LayoutAuto", ()=>_layoutAutoDefault.default
);
parcelHelpers.export(exports, "LayoutBalloon", ()=>_layoutBalloonDefault.default
);
parcelHelpers.export(exports, "LayoutCircle", ()=>_layoutCircleDefault.default
);
parcelHelpers.export(exports, "LayoutGrid", ()=>_layoutGridDefault.default
);
parcelHelpers.export(exports, "LayoutGroupBy", ()=>_layoutGroupByDefault.default
);
parcelHelpers.export(exports, "LayoutHierarchy", ()=>_layoutHierarchyDefault.default
);
parcelHelpers.export(exports, "LayoutLinear", ()=>_layoutLinearDefault.default
);
parcelHelpers.export(exports, "LayoutSkewGrid", ()=>_layoutSkewGridDefault.default
);
parcelHelpers.export(exports, "LayoutSortedClusters", ()=>_layoutSortedClustersDefault.default
);
parcelHelpers.export(exports, "Learning", ()=>_learningDefault.default
);
parcelHelpers.export(exports, "LeftJoin", ()=>_leftJoinDefault.default
);
parcelHelpers.export(exports, "LessThan", ()=>_lessThanDefault.default
);
parcelHelpers.export(exports, "LessThanOrEqualTo", ()=>_lessThanOrEqualToDefault.default
);
parcelHelpers.export(exports, "Lifesaver", ()=>_lifesaverDefault.default
);
parcelHelpers.export(exports, "Lightbulb", ()=>_lightbulbDefault.default
);
parcelHelpers.export(exports, "Lightning", ()=>_lightningDefault.default
);
parcelHelpers.export(exports, "Link", ()=>_linkDefault.default
);
parcelHelpers.export(exports, "List", ()=>_listDefault.default
);
parcelHelpers.export(exports, "ListColumns", ()=>_listColumnsDefault.default
);
parcelHelpers.export(exports, "ListDetailView", ()=>_listDetailViewDefault.default
);
parcelHelpers.export(exports, "Locate", ()=>_locateDefault.default
);
parcelHelpers.export(exports, "Lock", ()=>_lockDefault.default
);
parcelHelpers.export(exports, "LogIn", ()=>_logInDefault.default
);
parcelHelpers.export(exports, "LogOut", ()=>_logOutDefault.default
);
parcelHelpers.export(exports, "Manual", ()=>_manualDefault.default
);
parcelHelpers.export(exports, "ManuallyEnteredData", ()=>_manuallyEnteredDataDefault.default
);
parcelHelpers.export(exports, "ManyToMany", ()=>_manyToManyDefault.default
);
parcelHelpers.export(exports, "ManyToOne", ()=>_manyToOneDefault.default
);
parcelHelpers.export(exports, "Map", ()=>_mapDefault.default
);
parcelHelpers.export(exports, "MapCreate", ()=>_mapCreateDefault.default
);
parcelHelpers.export(exports, "MapMarker", ()=>_mapMarkerDefault.default
);
parcelHelpers.export(exports, "Maximize", ()=>_maximizeDefault.default
);
parcelHelpers.export(exports, "Media", ()=>_mediaDefault.default
);
parcelHelpers.export(exports, "Menu", ()=>_menuDefault.default
);
parcelHelpers.export(exports, "MenuClosed", ()=>_menuClosedDefault.default
);
parcelHelpers.export(exports, "MenuOpen", ()=>_menuOpenDefault.default
);
parcelHelpers.export(exports, "MergeColumns", ()=>_mergeColumnsDefault.default
);
parcelHelpers.export(exports, "MergeLinks", ()=>_mergeLinksDefault.default
);
parcelHelpers.export(exports, "Minimize", ()=>_minimizeDefault.default
);
parcelHelpers.export(exports, "Minus", ()=>_minusDefault.default
);
parcelHelpers.export(exports, "MobilePhone", ()=>_mobilePhoneDefault.default
);
parcelHelpers.export(exports, "MobileVideo", ()=>_mobileVideoDefault.default
);
parcelHelpers.export(exports, "Modal", ()=>_modalDefault.default
);
parcelHelpers.export(exports, "ModalFilled", ()=>_modalFilledDefault.default
);
parcelHelpers.export(exports, "Moon", ()=>_moonDefault.default
);
parcelHelpers.export(exports, "More", ()=>_moreDefault.default
);
parcelHelpers.export(exports, "Mountain", ()=>_mountainDefault.default
);
parcelHelpers.export(exports, "Move", ()=>_moveDefault.default
);
parcelHelpers.export(exports, "Mugshot", ()=>_mugshotDefault.default
);
parcelHelpers.export(exports, "MultiSelect", ()=>_multiSelectDefault.default
);
parcelHelpers.export(exports, "Music", ()=>_musicDefault.default
);
parcelHelpers.export(exports, "Nest", ()=>_nestDefault.default
);
parcelHelpers.export(exports, "NewDrawing", ()=>_newDrawingDefault.default
);
parcelHelpers.export(exports, "NewGridItem", ()=>_newGridItemDefault.default
);
parcelHelpers.export(exports, "NewLayer", ()=>_newLayerDefault.default
);
parcelHelpers.export(exports, "NewLayers", ()=>_newLayersDefault.default
);
parcelHelpers.export(exports, "NewLink", ()=>_newLinkDefault.default
);
parcelHelpers.export(exports, "NewObject", ()=>_newObjectDefault.default
);
parcelHelpers.export(exports, "NewPerson", ()=>_newPersonDefault.default
);
parcelHelpers.export(exports, "NewPrescription", ()=>_newPrescriptionDefault.default
);
parcelHelpers.export(exports, "NewTextBox", ()=>_newTextBoxDefault.default
);
parcelHelpers.export(exports, "Ninja", ()=>_ninjaDefault.default
);
parcelHelpers.export(exports, "NotEqualTo", ()=>_notEqualToDefault.default
);
parcelHelpers.export(exports, "Notifications", ()=>_notificationsDefault.default
);
parcelHelpers.export(exports, "NotificationsSnooze", ()=>_notificationsSnoozeDefault.default
);
parcelHelpers.export(exports, "NotificationsUpdated", ()=>_notificationsUpdatedDefault.default
);
parcelHelpers.export(exports, "NumberedList", ()=>_numberedListDefault.default
);
parcelHelpers.export(exports, "Numerical", ()=>_numericalDefault.default
);
parcelHelpers.export(exports, "Office", ()=>_officeDefault.default
);
parcelHelpers.export(exports, "Offline", ()=>_offlineDefault.default
);
parcelHelpers.export(exports, "OilField", ()=>_oilFieldDefault.default
);
parcelHelpers.export(exports, "OneColumn", ()=>_oneColumnDefault.default
);
parcelHelpers.export(exports, "OneToMany", ()=>_oneToManyDefault.default
);
parcelHelpers.export(exports, "OneToOne", ()=>_oneToOneDefault.default
);
parcelHelpers.export(exports, "OpenApplication", ()=>_openApplicationDefault.default
);
parcelHelpers.export(exports, "Outdated", ()=>_outdatedDefault.default
);
parcelHelpers.export(exports, "PageLayout", ()=>_pageLayoutDefault.default
);
parcelHelpers.export(exports, "PanelStats", ()=>_panelStatsDefault.default
);
parcelHelpers.export(exports, "PanelTable", ()=>_panelTableDefault.default
);
parcelHelpers.export(exports, "Paperclip", ()=>_paperclipDefault.default
);
parcelHelpers.export(exports, "Paragraph", ()=>_paragraphDefault.default
);
parcelHelpers.export(exports, "Path", ()=>_pathDefault.default
);
parcelHelpers.export(exports, "PathSearch", ()=>_pathSearchDefault.default
);
parcelHelpers.export(exports, "Pause", ()=>_pauseDefault.default
);
parcelHelpers.export(exports, "People", ()=>_peopleDefault.default
);
parcelHelpers.export(exports, "Percentage", ()=>_percentageDefault.default
);
parcelHelpers.export(exports, "Person", ()=>_personDefault.default
);
parcelHelpers.export(exports, "Phone", ()=>_phoneDefault.default
);
parcelHelpers.export(exports, "PieChart", ()=>_pieChartDefault.default
);
parcelHelpers.export(exports, "Pin", ()=>_pinDefault.default
);
parcelHelpers.export(exports, "Pivot", ()=>_pivotDefault.default
);
parcelHelpers.export(exports, "PivotTable", ()=>_pivotTableDefault.default
);
parcelHelpers.export(exports, "Play", ()=>_playDefault.default
);
parcelHelpers.export(exports, "Playbook", ()=>_playbookDefault.default
);
parcelHelpers.export(exports, "Plus", ()=>_plusDefault.default
);
parcelHelpers.export(exports, "PolygonFilter", ()=>_polygonFilterDefault.default
);
parcelHelpers.export(exports, "Power", ()=>_powerDefault.default
);
parcelHelpers.export(exports, "PredictiveAnalysis", ()=>_predictiveAnalysisDefault.default
);
parcelHelpers.export(exports, "Prescription", ()=>_prescriptionDefault.default
);
parcelHelpers.export(exports, "Presentation", ()=>_presentationDefault.default
);
parcelHelpers.export(exports, "Print", ()=>_printDefault.default
);
parcelHelpers.export(exports, "Projects", ()=>_projectsDefault.default
);
parcelHelpers.export(exports, "Properties", ()=>_propertiesDefault.default
);
parcelHelpers.export(exports, "Property", ()=>_propertyDefault.default
);
parcelHelpers.export(exports, "PublishFunction", ()=>_publishFunctionDefault.default
);
parcelHelpers.export(exports, "Pulse", ()=>_pulseDefault.default
);
parcelHelpers.export(exports, "Rain", ()=>_rainDefault.default
);
parcelHelpers.export(exports, "Random", ()=>_randomDefault.default
);
parcelHelpers.export(exports, "Record", ()=>_recordDefault.default
);
parcelHelpers.export(exports, "RectHeight", ()=>_rectHeightDefault.default
);
parcelHelpers.export(exports, "RectWidth", ()=>_rectWidthDefault.default
);
parcelHelpers.export(exports, "Rectangle", ()=>_rectangleDefault.default
);
parcelHelpers.export(exports, "Redo", ()=>_redoDefault.default
);
parcelHelpers.export(exports, "Refresh", ()=>_refreshDefault.default
);
parcelHelpers.export(exports, "RegressionChart", ()=>_regressionChartDefault.default
);
parcelHelpers.export(exports, "Remove", ()=>_removeDefault.default
);
parcelHelpers.export(exports, "RemoveColumn", ()=>_removeColumnDefault.default
);
parcelHelpers.export(exports, "RemoveColumnLeft", ()=>_removeColumnLeftDefault.default
);
parcelHelpers.export(exports, "RemoveColumnRight", ()=>_removeColumnRightDefault.default
);
parcelHelpers.export(exports, "RemoveRowBottom", ()=>_removeRowBottomDefault.default
);
parcelHelpers.export(exports, "RemoveRowTop", ()=>_removeRowTopDefault.default
);
parcelHelpers.export(exports, "Repeat", ()=>_repeatDefault.default
);
parcelHelpers.export(exports, "Reset", ()=>_resetDefault.default
);
parcelHelpers.export(exports, "Resolve", ()=>_resolveDefault.default
);
parcelHelpers.export(exports, "Rig", ()=>_rigDefault.default
);
parcelHelpers.export(exports, "RightJoin", ()=>_rightJoinDefault.default
);
parcelHelpers.export(exports, "Ring", ()=>_ringDefault.default
);
parcelHelpers.export(exports, "Rocket", ()=>_rocketDefault.default
);
parcelHelpers.export(exports, "RocketSlant", ()=>_rocketSlantDefault.default
);
parcelHelpers.export(exports, "RotateDocument", ()=>_rotateDocumentDefault.default
);
parcelHelpers.export(exports, "RotatePage", ()=>_rotatePageDefault.default
);
parcelHelpers.export(exports, "Route", ()=>_routeDefault.default
);
parcelHelpers.export(exports, "Satellite", ()=>_satelliteDefault.default
);
parcelHelpers.export(exports, "Saved", ()=>_savedDefault.default
);
parcelHelpers.export(exports, "ScatterPlot", ()=>_scatterPlotDefault.default
);
parcelHelpers.export(exports, "Search", ()=>_searchDefault.default
);
parcelHelpers.export(exports, "SearchAround", ()=>_searchAroundDefault.default
);
parcelHelpers.export(exports, "SearchTemplate", ()=>_searchTemplateDefault.default
);
parcelHelpers.export(exports, "SearchText", ()=>_searchTextDefault.default
);
parcelHelpers.export(exports, "SegmentedControl", ()=>_segmentedControlDefault.default
);
parcelHelpers.export(exports, "Select", ()=>_selectDefault.default
);
parcelHelpers.export(exports, "Selection", ()=>_selectionDefault.default
);
parcelHelpers.export(exports, "SendMessage", ()=>_sendMessageDefault.default
);
parcelHelpers.export(exports, "SendTo", ()=>_sendToDefault.default
);
parcelHelpers.export(exports, "SendToGraph", ()=>_sendToGraphDefault.default
);
parcelHelpers.export(exports, "SendToMap", ()=>_sendToMapDefault.default
);
parcelHelpers.export(exports, "SeriesAdd", ()=>_seriesAddDefault.default
);
parcelHelpers.export(exports, "SeriesConfiguration", ()=>_seriesConfigurationDefault.default
);
parcelHelpers.export(exports, "SeriesDerived", ()=>_seriesDerivedDefault.default
);
parcelHelpers.export(exports, "SeriesFiltered", ()=>_seriesFilteredDefault.default
);
parcelHelpers.export(exports, "SeriesSearch", ()=>_seriesSearchDefault.default
);
parcelHelpers.export(exports, "Settings", ()=>_settingsDefault.default
);
parcelHelpers.export(exports, "Shapes", ()=>_shapesDefault.default
);
parcelHelpers.export(exports, "Share", ()=>_shareDefault.default
);
parcelHelpers.export(exports, "SharedFilter", ()=>_sharedFilterDefault.default
);
parcelHelpers.export(exports, "Shield", ()=>_shieldDefault.default
);
parcelHelpers.export(exports, "Ship", ()=>_shipDefault.default
);
parcelHelpers.export(exports, "Shop", ()=>_shopDefault.default
);
parcelHelpers.export(exports, "ShoppingCart", ()=>_shoppingCartDefault.default
);
parcelHelpers.export(exports, "SignalSearch", ()=>_signalSearchDefault.default
);
parcelHelpers.export(exports, "SimCard", ()=>_simCardDefault.default
);
parcelHelpers.export(exports, "Slash", ()=>_slashDefault.default
);
parcelHelpers.export(exports, "SmallCross", ()=>_smallCrossDefault.default
);
parcelHelpers.export(exports, "SmallMinus", ()=>_smallMinusDefault.default
);
parcelHelpers.export(exports, "SmallPlus", ()=>_smallPlusDefault.default
);
parcelHelpers.export(exports, "SmallSquare", ()=>_smallSquareDefault.default
);
parcelHelpers.export(exports, "SmallTick", ()=>_smallTickDefault.default
);
parcelHelpers.export(exports, "Snowflake", ()=>_snowflakeDefault.default
);
parcelHelpers.export(exports, "SocialMedia", ()=>_socialMediaDefault.default
);
parcelHelpers.export(exports, "Sort", ()=>_sortDefault.default
);
parcelHelpers.export(exports, "SortAlphabetical", ()=>_sortAlphabeticalDefault.default
);
parcelHelpers.export(exports, "SortAlphabeticalDesc", ()=>_sortAlphabeticalDescDefault.default
);
parcelHelpers.export(exports, "SortAsc", ()=>_sortAscDefault.default
);
parcelHelpers.export(exports, "SortDesc", ()=>_sortDescDefault.default
);
parcelHelpers.export(exports, "SortNumerical", ()=>_sortNumericalDefault.default
);
parcelHelpers.export(exports, "SortNumericalDesc", ()=>_sortNumericalDescDefault.default
);
parcelHelpers.export(exports, "SplitColumns", ()=>_splitColumnsDefault.default
);
parcelHelpers.export(exports, "Square", ()=>_squareDefault.default
);
parcelHelpers.export(exports, "StackedChart", ()=>_stackedChartDefault.default
);
parcelHelpers.export(exports, "StadiumGeometry", ()=>_stadiumGeometryDefault.default
);
parcelHelpers.export(exports, "Star", ()=>_starDefault.default
);
parcelHelpers.export(exports, "StarEmpty", ()=>_starEmptyDefault.default
);
parcelHelpers.export(exports, "StepBackward", ()=>_stepBackwardDefault.default
);
parcelHelpers.export(exports, "StepChart", ()=>_stepChartDefault.default
);
parcelHelpers.export(exports, "StepForward", ()=>_stepForwardDefault.default
);
parcelHelpers.export(exports, "Stop", ()=>_stopDefault.default
);
parcelHelpers.export(exports, "Stopwatch", ()=>_stopwatchDefault.default
);
parcelHelpers.export(exports, "Strikethrough", ()=>_strikethroughDefault.default
);
parcelHelpers.export(exports, "Style", ()=>_styleDefault.default
);
parcelHelpers.export(exports, "SwapHorizontal", ()=>_swapHorizontalDefault.default
);
parcelHelpers.export(exports, "SwapVertical", ()=>_swapVerticalDefault.default
);
parcelHelpers.export(exports, "Switch", ()=>_switchDefault.default
);
parcelHelpers.export(exports, "SymbolCircle", ()=>_symbolCircleDefault.default
);
parcelHelpers.export(exports, "SymbolCross", ()=>_symbolCrossDefault.default
);
parcelHelpers.export(exports, "SymbolDiamond", ()=>_symbolDiamondDefault.default
);
parcelHelpers.export(exports, "SymbolRectangle", ()=>_symbolRectangleDefault.default
);
parcelHelpers.export(exports, "SymbolSquare", ()=>_symbolSquareDefault.default
);
parcelHelpers.export(exports, "SymbolTriangleDown", ()=>_symbolTriangleDownDefault.default
);
parcelHelpers.export(exports, "SymbolTriangleUp", ()=>_symbolTriangleUpDefault.default
);
parcelHelpers.export(exports, "Syringe", ()=>_syringeDefault.default
);
parcelHelpers.export(exports, "Tag", ()=>_tagDefault.default
);
parcelHelpers.export(exports, "TakeAction", ()=>_takeActionDefault.default
);
parcelHelpers.export(exports, "Tank", ()=>_tankDefault.default
);
parcelHelpers.export(exports, "Target", ()=>_targetDefault.default
);
parcelHelpers.export(exports, "Taxi", ()=>_taxiDefault.default
);
parcelHelpers.export(exports, "Temperature", ()=>_temperatureDefault.default
);
parcelHelpers.export(exports, "TextHighlight", ()=>_textHighlightDefault.default
);
parcelHelpers.export(exports, "Th", ()=>_thDefault.default
);
parcelHelpers.export(exports, "ThDerived", ()=>_thDerivedDefault.default
);
parcelHelpers.export(exports, "ThDisconnect", ()=>_thDisconnectDefault.default
);
parcelHelpers.export(exports, "ThFiltered", ()=>_thFilteredDefault.default
);
parcelHelpers.export(exports, "ThList", ()=>_thListDefault.default
);
parcelHelpers.export(exports, "ThirdParty", ()=>_thirdPartyDefault.default
);
parcelHelpers.export(exports, "ThumbsDown", ()=>_thumbsDownDefault.default
);
parcelHelpers.export(exports, "ThumbsUp", ()=>_thumbsUpDefault.default
);
parcelHelpers.export(exports, "Tick", ()=>_tickDefault.default
);
parcelHelpers.export(exports, "TickCircle", ()=>_tickCircleDefault.default
);
parcelHelpers.export(exports, "Time", ()=>_timeDefault.default
);
parcelHelpers.export(exports, "TimelineAreaChart", ()=>_timelineAreaChartDefault.default
);
parcelHelpers.export(exports, "TimelineBarChart", ()=>_timelineBarChartDefault.default
);
parcelHelpers.export(exports, "TimelineEvents", ()=>_timelineEventsDefault.default
);
parcelHelpers.export(exports, "TimelineLineChart", ()=>_timelineLineChartDefault.default
);
parcelHelpers.export(exports, "Tint", ()=>_tintDefault.default
);
parcelHelpers.export(exports, "Torch", ()=>_torchDefault.default
);
parcelHelpers.export(exports, "Tractor", ()=>_tractorDefault.default
);
parcelHelpers.export(exports, "Train", ()=>_trainDefault.default
);
parcelHelpers.export(exports, "Translate", ()=>_translateDefault.default
);
parcelHelpers.export(exports, "Trash", ()=>_trashDefault.default
);
parcelHelpers.export(exports, "Tree", ()=>_treeDefault.default
);
parcelHelpers.export(exports, "TrendingDown", ()=>_trendingDownDefault.default
);
parcelHelpers.export(exports, "TrendingUp", ()=>_trendingUpDefault.default
);
parcelHelpers.export(exports, "Truck", ()=>_truckDefault.default
);
parcelHelpers.export(exports, "TwoColumns", ()=>_twoColumnsDefault.default
);
parcelHelpers.export(exports, "Unarchive", ()=>_unarchiveDefault.default
);
parcelHelpers.export(exports, "Underline", ()=>_underlineDefault.default
);
parcelHelpers.export(exports, "Undo", ()=>_undoDefault.default
);
parcelHelpers.export(exports, "UngroupObjects", ()=>_ungroupObjectsDefault.default
);
parcelHelpers.export(exports, "UnknownVehicle", ()=>_unknownVehicleDefault.default
);
parcelHelpers.export(exports, "Unlock", ()=>_unlockDefault.default
);
parcelHelpers.export(exports, "Unpin", ()=>_unpinDefault.default
);
parcelHelpers.export(exports, "Unresolve", ()=>_unresolveDefault.default
);
parcelHelpers.export(exports, "Updated", ()=>_updatedDefault.default
);
parcelHelpers.export(exports, "Upload", ()=>_uploadDefault.default
);
parcelHelpers.export(exports, "User", ()=>_userDefault.default
);
parcelHelpers.export(exports, "Variable", ()=>_variableDefault.default
);
parcelHelpers.export(exports, "VerticalBarChartAsc", ()=>_verticalBarChartAscDefault.default
);
parcelHelpers.export(exports, "VerticalBarChartDesc", ()=>_verticalBarChartDescDefault.default
);
parcelHelpers.export(exports, "VerticalDistribution", ()=>_verticalDistributionDefault.default
);
parcelHelpers.export(exports, "VerticalInbetween", ()=>_verticalInbetweenDefault.default
);
parcelHelpers.export(exports, "Video", ()=>_videoDefault.default
);
parcelHelpers.export(exports, "Virus", ()=>_virusDefault.default
);
parcelHelpers.export(exports, "VolumeDown", ()=>_volumeDownDefault.default
);
parcelHelpers.export(exports, "VolumeOff", ()=>_volumeOffDefault.default
);
parcelHelpers.export(exports, "VolumeUp", ()=>_volumeUpDefault.default
);
parcelHelpers.export(exports, "Walk", ()=>_walkDefault.default
);
parcelHelpers.export(exports, "WarningSign", ()=>_warningSignDefault.default
);
parcelHelpers.export(exports, "WaterfallChart", ()=>_waterfallChartDefault.default
);
parcelHelpers.export(exports, "Waves", ()=>_wavesDefault.default
);
parcelHelpers.export(exports, "Widget", ()=>_widgetDefault.default
);
parcelHelpers.export(exports, "WidgetButton", ()=>_widgetButtonDefault.default
);
parcelHelpers.export(exports, "WidgetFooter", ()=>_widgetFooterDefault.default
);
parcelHelpers.export(exports, "WidgetHeader", ()=>_widgetHeaderDefault.default
);
parcelHelpers.export(exports, "Wind", ()=>_windDefault.default
);
parcelHelpers.export(exports, "Wrench", ()=>_wrenchDefault.default
);
parcelHelpers.export(exports, "ZoomIn", ()=>_zoomInDefault.default
);
parcelHelpers.export(exports, "ZoomOut", ()=>_zoomOutDefault.default
);
parcelHelpers.export(exports, "ZoomToFit", ()=>_zoomToFitDefault.default
);
var _add = require("./add");
var _addDefault = parcelHelpers.interopDefault(_add);
var _addClip = require("./add-clip");
var _addClipDefault = parcelHelpers.interopDefault(_addClip);
var _addColumnLeft = require("./add-column-left");
var _addColumnLeftDefault = parcelHelpers.interopDefault(_addColumnLeft);
var _addColumnRight = require("./add-column-right");
var _addColumnRightDefault = parcelHelpers.interopDefault(_addColumnRight);
var _addLocation = require("./add-location");
var _addLocationDefault = parcelHelpers.interopDefault(_addLocation);
var _addRowBottom = require("./add-row-bottom");
var _addRowBottomDefault = parcelHelpers.interopDefault(_addRowBottom);
var _addRowTop = require("./add-row-top");
var _addRowTopDefault = parcelHelpers.interopDefault(_addRowTop);
var _addToArtifact = require("./add-to-artifact");
var _addToArtifactDefault = parcelHelpers.interopDefault(_addToArtifact);
var _addToFolder = require("./add-to-folder");
var _addToFolderDefault = parcelHelpers.interopDefault(_addToFolder);
var _airplane = require("./airplane");
var _airplaneDefault = parcelHelpers.interopDefault(_airplane);
var _alignCenter = require("./align-center");
var _alignCenterDefault = parcelHelpers.interopDefault(_alignCenter);
var _alignJustify = require("./align-justify");
var _alignJustifyDefault = parcelHelpers.interopDefault(_alignJustify);
var _alignLeft = require("./align-left");
var _alignLeftDefault = parcelHelpers.interopDefault(_alignLeft);
var _alignRight = require("./align-right");
var _alignRightDefault = parcelHelpers.interopDefault(_alignRight);
var _alignmentBottom = require("./alignment-bottom");
var _alignmentBottomDefault = parcelHelpers.interopDefault(_alignmentBottom);
var _alignmentHorizontalCenter = require("./alignment-horizontal-center");
var _alignmentHorizontalCenterDefault = parcelHelpers.interopDefault(_alignmentHorizontalCenter);
var _alignmentLeft = require("./alignment-left");
var _alignmentLeftDefault = parcelHelpers.interopDefault(_alignmentLeft);
var _alignmentRight = require("./alignment-right");
var _alignmentRightDefault = parcelHelpers.interopDefault(_alignmentRight);
var _alignmentTop = require("./alignment-top");
var _alignmentTopDefault = parcelHelpers.interopDefault(_alignmentTop);
var _alignmentVerticalCenter = require("./alignment-vertical-center");
var _alignmentVerticalCenterDefault = parcelHelpers.interopDefault(_alignmentVerticalCenter);
var _annotation = require("./annotation");
var _annotationDefault = parcelHelpers.interopDefault(_annotation);
var _antenna = require("./antenna");
var _antennaDefault = parcelHelpers.interopDefault(_antenna);
var _appHeader = require("./app-header");
var _appHeaderDefault = parcelHelpers.interopDefault(_appHeader);
var _application = require("./application");
var _applicationDefault = parcelHelpers.interopDefault(_application);
var _applications = require("./applications");
var _applicationsDefault = parcelHelpers.interopDefault(_applications);
var _archive = require("./archive");
var _archiveDefault = parcelHelpers.interopDefault(_archive);
var _areaOfInterest = require("./area-of-interest");
var _areaOfInterestDefault = parcelHelpers.interopDefault(_areaOfInterest);
var _array = require("./array");
var _arrayDefault = parcelHelpers.interopDefault(_array);
var _arrayBoolean = require("./array-boolean");
var _arrayBooleanDefault = parcelHelpers.interopDefault(_arrayBoolean);
var _arrayDate = require("./array-date");
var _arrayDateDefault = parcelHelpers.interopDefault(_arrayDate);
var _arrayNumeric = require("./array-numeric");
var _arrayNumericDefault = parcelHelpers.interopDefault(_arrayNumeric);
var _arrayString = require("./array-string");
var _arrayStringDefault = parcelHelpers.interopDefault(_arrayString);
var _arrayTimestamp = require("./array-timestamp");
var _arrayTimestampDefault = parcelHelpers.interopDefault(_arrayTimestamp);
var _arrowBottomLeft = require("./arrow-bottom-left");
var _arrowBottomLeftDefault = parcelHelpers.interopDefault(_arrowBottomLeft);
var _arrowBottomRight = require("./arrow-bottom-right");
var _arrowBottomRightDefault = parcelHelpers.interopDefault(_arrowBottomRight);
var _arrowDown = require("./arrow-down");
var _arrowDownDefault = parcelHelpers.interopDefault(_arrowDown);
var _arrowLeft = require("./arrow-left");
var _arrowLeftDefault = parcelHelpers.interopDefault(_arrowLeft);
var _arrowRight = require("./arrow-right");
var _arrowRightDefault = parcelHelpers.interopDefault(_arrowRight);
var _arrowTopLeft = require("./arrow-top-left");
var _arrowTopLeftDefault = parcelHelpers.interopDefault(_arrowTopLeft);
var _arrowTopRight = require("./arrow-top-right");
var _arrowTopRightDefault = parcelHelpers.interopDefault(_arrowTopRight);
var _arrowUp = require("./arrow-up");
var _arrowUpDefault = parcelHelpers.interopDefault(_arrowUp);
var _arrowsHorizontal = require("./arrows-horizontal");
var _arrowsHorizontalDefault = parcelHelpers.interopDefault(_arrowsHorizontal);
var _arrowsVertical = require("./arrows-vertical");
var _arrowsVerticalDefault = parcelHelpers.interopDefault(_arrowsVertical);
var _asterisk = require("./asterisk");
var _asteriskDefault = parcelHelpers.interopDefault(_asterisk);
var _automaticUpdates = require("./automatic-updates");
var _automaticUpdatesDefault = parcelHelpers.interopDefault(_automaticUpdates);
var _backlink = require("./backlink");
var _backlinkDefault = parcelHelpers.interopDefault(_backlink);
var _badge = require("./badge");
var _badgeDefault = parcelHelpers.interopDefault(_badge);
var _banCircle = require("./ban-circle");
var _banCircleDefault = parcelHelpers.interopDefault(_banCircle);
var _bankAccount = require("./bank-account");
var _bankAccountDefault = parcelHelpers.interopDefault(_bankAccount);
var _barcode = require("./barcode");
var _barcodeDefault = parcelHelpers.interopDefault(_barcode);
var _blank = require("./blank");
var _blankDefault = parcelHelpers.interopDefault(_blank);
var _blockedPerson = require("./blocked-person");
var _blockedPersonDefault = parcelHelpers.interopDefault(_blockedPerson);
var _bold = require("./bold");
var _boldDefault = parcelHelpers.interopDefault(_bold);
var _book = require("./book");
var _bookDefault = parcelHelpers.interopDefault(_book);
var _bookmark = require("./bookmark");
var _bookmarkDefault = parcelHelpers.interopDefault(_bookmark);
var _box = require("./box");
var _boxDefault = parcelHelpers.interopDefault(_box);
var _briefcase = require("./briefcase");
var _briefcaseDefault = parcelHelpers.interopDefault(_briefcase);
var _bringData = require("./bring-data");
var _bringDataDefault = parcelHelpers.interopDefault(_bringData);
var _buggy = require("./buggy");
var _buggyDefault = parcelHelpers.interopDefault(_buggy);
var _build = require("./build");
var _buildDefault = parcelHelpers.interopDefault(_build);
var _calculator = require("./calculator");
var _calculatorDefault = parcelHelpers.interopDefault(_calculator);
var _calendar = require("./calendar");
var _calendarDefault = parcelHelpers.interopDefault(_calendar);
var _camera = require("./camera");
var _cameraDefault = parcelHelpers.interopDefault(_camera);
var _caretDown = require("./caret-down");
var _caretDownDefault = parcelHelpers.interopDefault(_caretDown);
var _caretLeft = require("./caret-left");
var _caretLeftDefault = parcelHelpers.interopDefault(_caretLeft);
var _caretRight = require("./caret-right");
var _caretRightDefault = parcelHelpers.interopDefault(_caretRight);
var _caretUp = require("./caret-up");
var _caretUpDefault = parcelHelpers.interopDefault(_caretUp);
var _cargoShip = require("./cargo-ship");
var _cargoShipDefault = parcelHelpers.interopDefault(_cargoShip);
var _cellTower = require("./cell-tower");
var _cellTowerDefault = parcelHelpers.interopDefault(_cellTower);
var _changes = require("./changes");
var _changesDefault = parcelHelpers.interopDefault(_changes);
var _chart = require("./chart");
var _chartDefault = parcelHelpers.interopDefault(_chart);
var _chat = require("./chat");
var _chatDefault = parcelHelpers.interopDefault(_chat);
var _chevronBackward = require("./chevron-backward");
var _chevronBackwardDefault = parcelHelpers.interopDefault(_chevronBackward);
var _chevronDown = require("./chevron-down");
var _chevronDownDefault = parcelHelpers.interopDefault(_chevronDown);
var _chevronForward = require("./chevron-forward");
var _chevronForwardDefault = parcelHelpers.interopDefault(_chevronForward);
var _chevronLeft = require("./chevron-left");
var _chevronLeftDefault = parcelHelpers.interopDefault(_chevronLeft);
var _chevronRight = require("./chevron-right");
var _chevronRightDefault = parcelHelpers.interopDefault(_chevronRight);
var _chevronUp = require("./chevron-up");
var _chevronUpDefault = parcelHelpers.interopDefault(_chevronUp);
var _circle = require("./circle");
var _circleDefault = parcelHelpers.interopDefault(_circle);
var _circleArrowDown = require("./circle-arrow-down");
var _circleArrowDownDefault = parcelHelpers.interopDefault(_circleArrowDown);
var _circleArrowLeft = require("./circle-arrow-left");
var _circleArrowLeftDefault = parcelHelpers.interopDefault(_circleArrowLeft);
var _circleArrowRight = require("./circle-arrow-right");
var _circleArrowRightDefault = parcelHelpers.interopDefault(_circleArrowRight);
var _circleArrowUp = require("./circle-arrow-up");
var _circleArrowUpDefault = parcelHelpers.interopDefault(_circleArrowUp);
var _citation = require("./citation");
var _citationDefault = parcelHelpers.interopDefault(_citation);
var _clean = require("./clean");
var _cleanDefault = parcelHelpers.interopDefault(_clean);
var _clip = require("./clip");
var _clipDefault = parcelHelpers.interopDefault(_clip);
var _clipboard = require("./clipboard");
var _clipboardDefault = parcelHelpers.interopDefault(_clipboard);
var _cloud = require("./cloud");
var _cloudDefault = parcelHelpers.interopDefault(_cloud);
var _cloudDownload = require("./cloud-download");
var _cloudDownloadDefault = parcelHelpers.interopDefault(_cloudDownload);
var _cloudUpload = require("./cloud-upload");
var _cloudUploadDefault = parcelHelpers.interopDefault(_cloudUpload);
var _code = require("./code");
var _codeDefault = parcelHelpers.interopDefault(_code);
var _codeBlock = require("./code-block");
var _codeBlockDefault = parcelHelpers.interopDefault(_codeBlock);
var _cog = require("./cog");
var _cogDefault = parcelHelpers.interopDefault(_cog);
var _collapseAll = require("./collapse-all");
var _collapseAllDefault = parcelHelpers.interopDefault(_collapseAll);
var _colorFill = require("./color-fill");
var _colorFillDefault = parcelHelpers.interopDefault(_colorFill);
var _columnLayout = require("./column-layout");
var _columnLayoutDefault = parcelHelpers.interopDefault(_columnLayout);
var _comment = require("./comment");
var _commentDefault = parcelHelpers.interopDefault(_comment);
var _comparison = require("./comparison");
var _comparisonDefault = parcelHelpers.interopDefault(_comparison);
var _compass = require("./compass");
var _compassDefault = parcelHelpers.interopDefault(_compass);
var _compressed = require("./compressed");
var _compressedDefault = parcelHelpers.interopDefault(_compressed);
var _confirm = require("./confirm");
var _confirmDefault = parcelHelpers.interopDefault(_confirm);
var _console = require("./console");
var _consoleDefault = parcelHelpers.interopDefault(_console);
var _contrast = require("./contrast");
var _contrastDefault = parcelHelpers.interopDefault(_contrast);
var _control = require("./control");
var _controlDefault = parcelHelpers.interopDefault(_control);
var _creditCard = require("./credit-card");
var _creditCardDefault = parcelHelpers.interopDefault(_creditCard);
var _cross = require("./cross");
var _crossDefault = parcelHelpers.interopDefault(_cross);
var _crown = require("./crown");
var _crownDefault = parcelHelpers.interopDefault(_crown);
var _cube = require("./cube");
var _cubeDefault = parcelHelpers.interopDefault(_cube);
var _cubeAdd = require("./cube-add");
var _cubeAddDefault = parcelHelpers.interopDefault(_cubeAdd);
var _cubeRemove = require("./cube-remove");
var _cubeRemoveDefault = parcelHelpers.interopDefault(_cubeRemove);
var _curvedRangeChart = require("./curved-range-chart");
var _curvedRangeChartDefault = parcelHelpers.interopDefault(_curvedRangeChart);
var _cut = require("./cut");
var _cutDefault = parcelHelpers.interopDefault(_cut);
var _cycle = require("./cycle");
var _cycleDefault = parcelHelpers.interopDefault(_cycle);
var _dashboard = require("./dashboard");
var _dashboardDefault = parcelHelpers.interopDefault(_dashboard);
var _dataConnection = require("./data-connection");
var _dataConnectionDefault = parcelHelpers.interopDefault(_dataConnection);
var _dataLineage = require("./data-lineage");
var _dataLineageDefault = parcelHelpers.interopDefault(_dataLineage);
var _database = require("./database");
var _databaseDefault = parcelHelpers.interopDefault(_database);
var _delete = require("./delete");
var _deleteDefault = parcelHelpers.interopDefault(_delete);
var _delta = require("./delta");
var _deltaDefault = parcelHelpers.interopDefault(_delta);
var _deriveColumn = require("./derive-column");
var _deriveColumnDefault = parcelHelpers.interopDefault(_deriveColumn);
var _desktop = require("./desktop");
var _desktopDefault = parcelHelpers.interopDefault(_desktop);
var _diagnosis = require("./diagnosis");
var _diagnosisDefault = parcelHelpers.interopDefault(_diagnosis);
var _diagramTree = require("./diagram-tree");
var _diagramTreeDefault = parcelHelpers.interopDefault(_diagramTree);
var _directionLeft = require("./direction-left");
var _directionLeftDefault = parcelHelpers.interopDefault(_directionLeft);
var _directionRight = require("./direction-right");
var _directionRightDefault = parcelHelpers.interopDefault(_directionRight);
var _disable = require("./disable");
var _disableDefault = parcelHelpers.interopDefault(_disable);
var _divide = require("./divide");
var _divideDefault = parcelHelpers.interopDefault(_divide);
var _document = require("./document");
var _documentDefault = parcelHelpers.interopDefault(_document);
var _documentOpen = require("./document-open");
var _documentOpenDefault = parcelHelpers.interopDefault(_documentOpen);
var _documentShare = require("./document-share");
var _documentShareDefault = parcelHelpers.interopDefault(_documentShare);
var _dollar = require("./dollar");
var _dollarDefault = parcelHelpers.interopDefault(_dollar);
var _dot = require("./dot");
var _dotDefault = parcelHelpers.interopDefault(_dot);
var _doubleCaretHorizontal = require("./double-caret-horizontal");
var _doubleCaretHorizontalDefault = parcelHelpers.interopDefault(_doubleCaretHorizontal);
var _doubleCaretVertical = require("./double-caret-vertical");
var _doubleCaretVerticalDefault = parcelHelpers.interopDefault(_doubleCaretVertical);
var _doubleChevronDown = require("./double-chevron-down");
var _doubleChevronDownDefault = parcelHelpers.interopDefault(_doubleChevronDown);
var _doubleChevronLeft = require("./double-chevron-left");
var _doubleChevronLeftDefault = parcelHelpers.interopDefault(_doubleChevronLeft);
var _doubleChevronRight = require("./double-chevron-right");
var _doubleChevronRightDefault = parcelHelpers.interopDefault(_doubleChevronRight);
var _doubleChevronUp = require("./double-chevron-up");
var _doubleChevronUpDefault = parcelHelpers.interopDefault(_doubleChevronUp);
var _doughnutChart = require("./doughnut-chart");
var _doughnutChartDefault = parcelHelpers.interopDefault(_doughnutChart);
var _download = require("./download");
var _downloadDefault = parcelHelpers.interopDefault(_download);
var _dragHandleHorizontal = require("./drag-handle-horizontal");
var _dragHandleHorizontalDefault = parcelHelpers.interopDefault(_dragHandleHorizontal);
var _dragHandleVertical = require("./drag-handle-vertical");
var _dragHandleVerticalDefault = parcelHelpers.interopDefault(_dragHandleVertical);
var _draw = require("./draw");
var _drawDefault = parcelHelpers.interopDefault(_draw);
var _drawerLeft = require("./drawer-left");
var _drawerLeftDefault = parcelHelpers.interopDefault(_drawerLeft);
var _drawerLeftFilled = require("./drawer-left-filled");
var _drawerLeftFilledDefault = parcelHelpers.interopDefault(_drawerLeftFilled);
var _drawerRight = require("./drawer-right");
var _drawerRightDefault = parcelHelpers.interopDefault(_drawerRight);
var _drawerRightFilled = require("./drawer-right-filled");
var _drawerRightFilledDefault = parcelHelpers.interopDefault(_drawerRightFilled);
var _driveTime = require("./drive-time");
var _driveTimeDefault = parcelHelpers.interopDefault(_driveTime);
var _duplicate = require("./duplicate");
var _duplicateDefault = parcelHelpers.interopDefault(_duplicate);
var _edit = require("./edit");
var _editDefault = parcelHelpers.interopDefault(_edit);
var _eject = require("./eject");
var _ejectDefault = parcelHelpers.interopDefault(_eject);
var _emoji = require("./emoji");
var _emojiDefault = parcelHelpers.interopDefault(_emoji);
var _endorsed = require("./endorsed");
var _endorsedDefault = parcelHelpers.interopDefault(_endorsed);
var _envelope = require("./envelope");
var _envelopeDefault = parcelHelpers.interopDefault(_envelope);
var _equals = require("./equals");
var _equalsDefault = parcelHelpers.interopDefault(_equals);
var _eraser = require("./eraser");
var _eraserDefault = parcelHelpers.interopDefault(_eraser);
var _error = require("./error");
var _errorDefault = parcelHelpers.interopDefault(_error);
var _euro = require("./euro");
var _euroDefault = parcelHelpers.interopDefault(_euro);
var _exchange = require("./exchange");
var _exchangeDefault = parcelHelpers.interopDefault(_exchange);
var _excludeRow = require("./exclude-row");
var _excludeRowDefault = parcelHelpers.interopDefault(_excludeRow);
var _expandAll = require("./expand-all");
var _expandAllDefault = parcelHelpers.interopDefault(_expandAll);
var _export = require("./export");
var _exportDefault = parcelHelpers.interopDefault(_export);
var _eyeOff = require("./eye-off");
var _eyeOffDefault = parcelHelpers.interopDefault(_eyeOff);
var _eyeOn = require("./eye-on");
var _eyeOnDefault = parcelHelpers.interopDefault(_eyeOn);
var _eyeOpen = require("./eye-open");
var _eyeOpenDefault = parcelHelpers.interopDefault(_eyeOpen);
var _fastBackward = require("./fast-backward");
var _fastBackwardDefault = parcelHelpers.interopDefault(_fastBackward);
var _fastForward = require("./fast-forward");
var _fastForwardDefault = parcelHelpers.interopDefault(_fastForward);
var _feed = require("./feed");
var _feedDefault = parcelHelpers.interopDefault(_feed);
var _feedSubscribed = require("./feed-subscribed");
var _feedSubscribedDefault = parcelHelpers.interopDefault(_feedSubscribed);
var _film = require("./film");
var _filmDefault = parcelHelpers.interopDefault(_film);
var _filter = require("./filter");
var _filterDefault = parcelHelpers.interopDefault(_filter);
var _filterKeep = require("./filter-keep");
var _filterKeepDefault = parcelHelpers.interopDefault(_filterKeep);
var _filterList = require("./filter-list");
var _filterListDefault = parcelHelpers.interopDefault(_filterList);
var _filterOpen = require("./filter-open");
var _filterOpenDefault = parcelHelpers.interopDefault(_filterOpen);
var _filterRemove = require("./filter-remove");
var _filterRemoveDefault = parcelHelpers.interopDefault(_filterRemove);
var _flag = require("./flag");
var _flagDefault = parcelHelpers.interopDefault(_flag);
var _flame = require("./flame");
var _flameDefault = parcelHelpers.interopDefault(_flame);
var _flash = require("./flash");
var _flashDefault = parcelHelpers.interopDefault(_flash);
var _floppyDisk = require("./floppy-disk");
var _floppyDiskDefault = parcelHelpers.interopDefault(_floppyDisk);
var _flowBranch = require("./flow-branch");
var _flowBranchDefault = parcelHelpers.interopDefault(_flowBranch);
var _flowEnd = require("./flow-end");
var _flowEndDefault = parcelHelpers.interopDefault(_flowEnd);
var _flowLinear = require("./flow-linear");
var _flowLinearDefault = parcelHelpers.interopDefault(_flowLinear);
var _flowReview = require("./flow-review");
var _flowReviewDefault = parcelHelpers.interopDefault(_flowReview);
var _flowReviewBranch = require("./flow-review-branch");
var _flowReviewBranchDefault = parcelHelpers.interopDefault(_flowReviewBranch);
var _flows = require("./flows");
var _flowsDefault = parcelHelpers.interopDefault(_flows);
var _folderClose = require("./folder-close");
var _folderCloseDefault = parcelHelpers.interopDefault(_folderClose);
var _folderNew = require("./folder-new");
var _folderNewDefault = parcelHelpers.interopDefault(_folderNew);
var _folderOpen = require("./folder-open");
var _folderOpenDefault = parcelHelpers.interopDefault(_folderOpen);
var _folderShared = require("./folder-shared");
var _folderSharedDefault = parcelHelpers.interopDefault(_folderShared);
var _folderSharedOpen = require("./folder-shared-open");
var _folderSharedOpenDefault = parcelHelpers.interopDefault(_folderSharedOpen);
var _follower = require("./follower");
var _followerDefault = parcelHelpers.interopDefault(_follower);
var _following = require("./following");
var _followingDefault = parcelHelpers.interopDefault(_following);
var _font = require("./font");
var _fontDefault = parcelHelpers.interopDefault(_font);
var _fork = require("./fork");
var _forkDefault = parcelHelpers.interopDefault(_fork);
var _form = require("./form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _fuel = require("./fuel");
var _fuelDefault = parcelHelpers.interopDefault(_fuel);
var _fullCircle = require("./full-circle");
var _fullCircleDefault = parcelHelpers.interopDefault(_fullCircle);
var _fullStackedChart = require("./full-stacked-chart");
var _fullStackedChartDefault = parcelHelpers.interopDefault(_fullStackedChart);
var _fullscreen = require("./fullscreen");
var _fullscreenDefault = parcelHelpers.interopDefault(_fullscreen);
var _function = require("./function");
var _functionDefault = parcelHelpers.interopDefault(_function);
var _ganttChart = require("./gantt-chart");
var _ganttChartDefault = parcelHelpers.interopDefault(_ganttChart);
var _geofence = require("./geofence");
var _geofenceDefault = parcelHelpers.interopDefault(_geofence);
var _geolocation = require("./geolocation");
var _geolocationDefault = parcelHelpers.interopDefault(_geolocation);
var _geosearch = require("./geosearch");
var _geosearchDefault = parcelHelpers.interopDefault(_geosearch);
var _gitBranch = require("./git-branch");
var _gitBranchDefault = parcelHelpers.interopDefault(_gitBranch);
var _gitCommit = require("./git-commit");
var _gitCommitDefault = parcelHelpers.interopDefault(_gitCommit);
var _gitMerge = require("./git-merge");
var _gitMergeDefault = parcelHelpers.interopDefault(_gitMerge);
var _gitNewBranch = require("./git-new-branch");
var _gitNewBranchDefault = parcelHelpers.interopDefault(_gitNewBranch);
var _gitPull = require("./git-pull");
var _gitPullDefault = parcelHelpers.interopDefault(_gitPull);
var _gitPush = require("./git-push");
var _gitPushDefault = parcelHelpers.interopDefault(_gitPush);
var _gitRepo = require("./git-repo");
var _gitRepoDefault = parcelHelpers.interopDefault(_gitRepo);
var _glass = require("./glass");
var _glassDefault = parcelHelpers.interopDefault(_glass);
var _globe = require("./globe");
var _globeDefault = parcelHelpers.interopDefault(_globe);
var _globeNetwork = require("./globe-network");
var _globeNetworkDefault = parcelHelpers.interopDefault(_globeNetwork);
var _graph = require("./graph");
var _graphDefault = parcelHelpers.interopDefault(_graph);
var _graphRemove = require("./graph-remove");
var _graphRemoveDefault = parcelHelpers.interopDefault(_graphRemove);
var _greaterThan = require("./greater-than");
var _greaterThanDefault = parcelHelpers.interopDefault(_greaterThan);
var _greaterThanOrEqualTo = require("./greater-than-or-equal-to");
var _greaterThanOrEqualToDefault = parcelHelpers.interopDefault(_greaterThanOrEqualTo);
var _grid = require("./grid");
var _gridDefault = parcelHelpers.interopDefault(_grid);
var _gridView = require("./grid-view");
var _gridViewDefault = parcelHelpers.interopDefault(_gridView);
var _groupObjects = require("./group-objects");
var _groupObjectsDefault = parcelHelpers.interopDefault(_groupObjects);
var _groupedBarChart = require("./grouped-bar-chart");
var _groupedBarChartDefault = parcelHelpers.interopDefault(_groupedBarChart);
var _hand = require("./hand");
var _handDefault = parcelHelpers.interopDefault(_hand);
var _handDown = require("./hand-down");
var _handDownDefault = parcelHelpers.interopDefault(_handDown);
var _handLeft = require("./hand-left");
var _handLeftDefault = parcelHelpers.interopDefault(_handLeft);
var _handRight = require("./hand-right");
var _handRightDefault = parcelHelpers.interopDefault(_handRight);
var _handUp = require("./hand-up");
var _handUpDefault = parcelHelpers.interopDefault(_handUp);
var _hat = require("./hat");
var _hatDefault = parcelHelpers.interopDefault(_hat);
var _header = require("./header");
var _headerDefault = parcelHelpers.interopDefault(_header);
var _headerOne = require("./header-one");
var _headerOneDefault = parcelHelpers.interopDefault(_headerOne);
var _headerThree = require("./header-three");
var _headerThreeDefault = parcelHelpers.interopDefault(_headerThree);
var _headerTwo = require("./header-two");
var _headerTwoDefault = parcelHelpers.interopDefault(_headerTwo);
var _headset = require("./headset");
var _headsetDefault = parcelHelpers.interopDefault(_headset);
var _heart = require("./heart");
var _heartDefault = parcelHelpers.interopDefault(_heart);
var _heartBroken = require("./heart-broken");
var _heartBrokenDefault = parcelHelpers.interopDefault(_heartBroken);
var _heatGrid = require("./heat-grid");
var _heatGridDefault = parcelHelpers.interopDefault(_heatGrid);
var _heatmap = require("./heatmap");
var _heatmapDefault = parcelHelpers.interopDefault(_heatmap);
var _helicopter = require("./helicopter");
var _helicopterDefault = parcelHelpers.interopDefault(_helicopter);
var _help = require("./help");
var _helpDefault = parcelHelpers.interopDefault(_help);
var _helperManagement = require("./helper-management");
var _helperManagementDefault = parcelHelpers.interopDefault(_helperManagement);
var _highPriority = require("./high-priority");
var _highPriorityDefault = parcelHelpers.interopDefault(_highPriority);
var _highlight = require("./highlight");
var _highlightDefault = parcelHelpers.interopDefault(_highlight);
var _history = require("./history");
var _historyDefault = parcelHelpers.interopDefault(_history);
var _home = require("./home");
var _homeDefault = parcelHelpers.interopDefault(_home);
var _horizontalBarChart = require("./horizontal-bar-chart");
var _horizontalBarChartDefault = parcelHelpers.interopDefault(_horizontalBarChart);
var _horizontalBarChartAsc = require("./horizontal-bar-chart-asc");
var _horizontalBarChartAscDefault = parcelHelpers.interopDefault(_horizontalBarChartAsc);
var _horizontalBarChartDesc = require("./horizontal-bar-chart-desc");
var _horizontalBarChartDescDefault = parcelHelpers.interopDefault(_horizontalBarChartDesc);
var _horizontalDistribution = require("./horizontal-distribution");
var _horizontalDistributionDefault = parcelHelpers.interopDefault(_horizontalDistribution);
var _horizontalInbetween = require("./horizontal-inbetween");
var _horizontalInbetweenDefault = parcelHelpers.interopDefault(_horizontalInbetween);
var _hurricane = require("./hurricane");
var _hurricaneDefault = parcelHelpers.interopDefault(_hurricane);
var _idNumber = require("./id-number");
var _idNumberDefault = parcelHelpers.interopDefault(_idNumber);
var _imageRotateLeft = require("./image-rotate-left");
var _imageRotateLeftDefault = parcelHelpers.interopDefault(_imageRotateLeft);
var _imageRotateRight = require("./image-rotate-right");
var _imageRotateRightDefault = parcelHelpers.interopDefault(_imageRotateRight);
var _import = require("./import");
var _importDefault = parcelHelpers.interopDefault(_import);
var _inbox = require("./inbox");
var _inboxDefault = parcelHelpers.interopDefault(_inbox);
var _inboxFiltered = require("./inbox-filtered");
var _inboxFilteredDefault = parcelHelpers.interopDefault(_inboxFiltered);
var _inboxGeo = require("./inbox-geo");
var _inboxGeoDefault = parcelHelpers.interopDefault(_inboxGeo);
var _inboxSearch = require("./inbox-search");
var _inboxSearchDefault = parcelHelpers.interopDefault(_inboxSearch);
var _inboxUpdate = require("./inbox-update");
var _inboxUpdateDefault = parcelHelpers.interopDefault(_inboxUpdate);
var _infoSign = require("./info-sign");
var _infoSignDefault = parcelHelpers.interopDefault(_infoSign);
var _inheritance = require("./inheritance");
var _inheritanceDefault = parcelHelpers.interopDefault(_inheritance);
var _inheritedGroup = require("./inherited-group");
var _inheritedGroupDefault = parcelHelpers.interopDefault(_inheritedGroup);
var _innerJoin = require("./inner-join");
var _innerJoinDefault = parcelHelpers.interopDefault(_innerJoin);
var _insert = require("./insert");
var _insertDefault = parcelHelpers.interopDefault(_insert);
var _intersection = require("./intersection");
var _intersectionDefault = parcelHelpers.interopDefault(_intersection);
var _ipAddress = require("./ip-address");
var _ipAddressDefault = parcelHelpers.interopDefault(_ipAddress);
var _issue = require("./issue");
var _issueDefault = parcelHelpers.interopDefault(_issue);
var _issueClosed = require("./issue-closed");
var _issueClosedDefault = parcelHelpers.interopDefault(_issueClosed);
var _issueNew = require("./issue-new");
var _issueNewDefault = parcelHelpers.interopDefault(_issueNew);
var _italic = require("./italic");
var _italicDefault = parcelHelpers.interopDefault(_italic);
var _joinTable = require("./join-table");
var _joinTableDefault = parcelHelpers.interopDefault(_joinTable);
var _key = require("./key");
var _keyDefault = parcelHelpers.interopDefault(_key);
var _keyBackspace = require("./key-backspace");
var _keyBackspaceDefault = parcelHelpers.interopDefault(_keyBackspace);
var _keyCommand = require("./key-command");
var _keyCommandDefault = parcelHelpers.interopDefault(_keyCommand);
var _keyControl = require("./key-control");
var _keyControlDefault = parcelHelpers.interopDefault(_keyControl);
var _keyDelete = require("./key-delete");
var _keyDeleteDefault = parcelHelpers.interopDefault(_keyDelete);
var _keyEnter = require("./key-enter");
var _keyEnterDefault = parcelHelpers.interopDefault(_keyEnter);
var _keyEscape = require("./key-escape");
var _keyEscapeDefault = parcelHelpers.interopDefault(_keyEscape);
var _keyOption = require("./key-option");
var _keyOptionDefault = parcelHelpers.interopDefault(_keyOption);
var _keyShift = require("./key-shift");
var _keyShiftDefault = parcelHelpers.interopDefault(_keyShift);
var _keyTab = require("./key-tab");
var _keyTabDefault = parcelHelpers.interopDefault(_keyTab);
var _knownVehicle = require("./known-vehicle");
var _knownVehicleDefault = parcelHelpers.interopDefault(_knownVehicle);
var _labTest = require("./lab-test");
var _labTestDefault = parcelHelpers.interopDefault(_labTest);
var _label = require("./label");
var _labelDefault = parcelHelpers.interopDefault(_label);
var _layer = require("./layer");
var _layerDefault = parcelHelpers.interopDefault(_layer);
var _layerOutline = require("./layer-outline");
var _layerOutlineDefault = parcelHelpers.interopDefault(_layerOutline);
var _layers = require("./layers");
var _layersDefault = parcelHelpers.interopDefault(_layers);
var _layout = require("./layout");
var _layoutDefault = parcelHelpers.interopDefault(_layout);
var _layoutAuto = require("./layout-auto");
var _layoutAutoDefault = parcelHelpers.interopDefault(_layoutAuto);
var _layoutBalloon = require("./layout-balloon");
var _layoutBalloonDefault = parcelHelpers.interopDefault(_layoutBalloon);
var _layoutCircle = require("./layout-circle");
var _layoutCircleDefault = parcelHelpers.interopDefault(_layoutCircle);
var _layoutGrid = require("./layout-grid");
var _layoutGridDefault = parcelHelpers.interopDefault(_layoutGrid);
var _layoutGroupBy = require("./layout-group-by");
var _layoutGroupByDefault = parcelHelpers.interopDefault(_layoutGroupBy);
var _layoutHierarchy = require("./layout-hierarchy");
var _layoutHierarchyDefault = parcelHelpers.interopDefault(_layoutHierarchy);
var _layoutLinear = require("./layout-linear");
var _layoutLinearDefault = parcelHelpers.interopDefault(_layoutLinear);
var _layoutSkewGrid = require("./layout-skew-grid");
var _layoutSkewGridDefault = parcelHelpers.interopDefault(_layoutSkewGrid);
var _layoutSortedClusters = require("./layout-sorted-clusters");
var _layoutSortedClustersDefault = parcelHelpers.interopDefault(_layoutSortedClusters);
var _learning = require("./learning");
var _learningDefault = parcelHelpers.interopDefault(_learning);
var _leftJoin = require("./left-join");
var _leftJoinDefault = parcelHelpers.interopDefault(_leftJoin);
var _lessThan = require("./less-than");
var _lessThanDefault = parcelHelpers.interopDefault(_lessThan);
var _lessThanOrEqualTo = require("./less-than-or-equal-to");
var _lessThanOrEqualToDefault = parcelHelpers.interopDefault(_lessThanOrEqualTo);
var _lifesaver = require("./lifesaver");
var _lifesaverDefault = parcelHelpers.interopDefault(_lifesaver);
var _lightbulb = require("./lightbulb");
var _lightbulbDefault = parcelHelpers.interopDefault(_lightbulb);
var _lightning = require("./lightning");
var _lightningDefault = parcelHelpers.interopDefault(_lightning);
var _link = require("./link");
var _linkDefault = parcelHelpers.interopDefault(_link);
var _list = require("./list");
var _listDefault = parcelHelpers.interopDefault(_list);
var _listColumns = require("./list-columns");
var _listColumnsDefault = parcelHelpers.interopDefault(_listColumns);
var _listDetailView = require("./list-detail-view");
var _listDetailViewDefault = parcelHelpers.interopDefault(_listDetailView);
var _locate = require("./locate");
var _locateDefault = parcelHelpers.interopDefault(_locate);
var _lock = require("./lock");
var _lockDefault = parcelHelpers.interopDefault(_lock);
var _logIn = require("./log-in");
var _logInDefault = parcelHelpers.interopDefault(_logIn);
var _logOut = require("./log-out");
var _logOutDefault = parcelHelpers.interopDefault(_logOut);
var _manual = require("./manual");
var _manualDefault = parcelHelpers.interopDefault(_manual);
var _manuallyEnteredData = require("./manually-entered-data");
var _manuallyEnteredDataDefault = parcelHelpers.interopDefault(_manuallyEnteredData);
var _manyToMany = require("./many-to-many");
var _manyToManyDefault = parcelHelpers.interopDefault(_manyToMany);
var _manyToOne = require("./many-to-one");
var _manyToOneDefault = parcelHelpers.interopDefault(_manyToOne);
var _map = require("./map");
var _mapDefault = parcelHelpers.interopDefault(_map);
var _mapCreate = require("./map-create");
var _mapCreateDefault = parcelHelpers.interopDefault(_mapCreate);
var _mapMarker = require("./map-marker");
var _mapMarkerDefault = parcelHelpers.interopDefault(_mapMarker);
var _maximize = require("./maximize");
var _maximizeDefault = parcelHelpers.interopDefault(_maximize);
var _media = require("./media");
var _mediaDefault = parcelHelpers.interopDefault(_media);
var _menu = require("./menu");
var _menuDefault = parcelHelpers.interopDefault(_menu);
var _menuClosed = require("./menu-closed");
var _menuClosedDefault = parcelHelpers.interopDefault(_menuClosed);
var _menuOpen = require("./menu-open");
var _menuOpenDefault = parcelHelpers.interopDefault(_menuOpen);
var _mergeColumns = require("./merge-columns");
var _mergeColumnsDefault = parcelHelpers.interopDefault(_mergeColumns);
var _mergeLinks = require("./merge-links");
var _mergeLinksDefault = parcelHelpers.interopDefault(_mergeLinks);
var _minimize = require("./minimize");
var _minimizeDefault = parcelHelpers.interopDefault(_minimize);
var _minus = require("./minus");
var _minusDefault = parcelHelpers.interopDefault(_minus);
var _mobilePhone = require("./mobile-phone");
var _mobilePhoneDefault = parcelHelpers.interopDefault(_mobilePhone);
var _mobileVideo = require("./mobile-video");
var _mobileVideoDefault = parcelHelpers.interopDefault(_mobileVideo);
var _modal = require("./modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
var _modalFilled = require("./modal-filled");
var _modalFilledDefault = parcelHelpers.interopDefault(_modalFilled);
var _moon = require("./moon");
var _moonDefault = parcelHelpers.interopDefault(_moon);
var _more = require("./more");
var _moreDefault = parcelHelpers.interopDefault(_more);
var _mountain = require("./mountain");
var _mountainDefault = parcelHelpers.interopDefault(_mountain);
var _move = require("./move");
var _moveDefault = parcelHelpers.interopDefault(_move);
var _mugshot = require("./mugshot");
var _mugshotDefault = parcelHelpers.interopDefault(_mugshot);
var _multiSelect = require("./multi-select");
var _multiSelectDefault = parcelHelpers.interopDefault(_multiSelect);
var _music = require("./music");
var _musicDefault = parcelHelpers.interopDefault(_music);
var _nest = require("./nest");
var _nestDefault = parcelHelpers.interopDefault(_nest);
var _newDrawing = require("./new-drawing");
var _newDrawingDefault = parcelHelpers.interopDefault(_newDrawing);
var _newGridItem = require("./new-grid-item");
var _newGridItemDefault = parcelHelpers.interopDefault(_newGridItem);
var _newLayer = require("./new-layer");
var _newLayerDefault = parcelHelpers.interopDefault(_newLayer);
var _newLayers = require("./new-layers");
var _newLayersDefault = parcelHelpers.interopDefault(_newLayers);
var _newLink = require("./new-link");
var _newLinkDefault = parcelHelpers.interopDefault(_newLink);
var _newObject = require("./new-object");
var _newObjectDefault = parcelHelpers.interopDefault(_newObject);
var _newPerson = require("./new-person");
var _newPersonDefault = parcelHelpers.interopDefault(_newPerson);
var _newPrescription = require("./new-prescription");
var _newPrescriptionDefault = parcelHelpers.interopDefault(_newPrescription);
var _newTextBox = require("./new-text-box");
var _newTextBoxDefault = parcelHelpers.interopDefault(_newTextBox);
var _ninja = require("./ninja");
var _ninjaDefault = parcelHelpers.interopDefault(_ninja);
var _notEqualTo = require("./not-equal-to");
var _notEqualToDefault = parcelHelpers.interopDefault(_notEqualTo);
var _notifications = require("./notifications");
var _notificationsDefault = parcelHelpers.interopDefault(_notifications);
var _notificationsSnooze = require("./notifications-snooze");
var _notificationsSnoozeDefault = parcelHelpers.interopDefault(_notificationsSnooze);
var _notificationsUpdated = require("./notifications-updated");
var _notificationsUpdatedDefault = parcelHelpers.interopDefault(_notificationsUpdated);
var _numberedList = require("./numbered-list");
var _numberedListDefault = parcelHelpers.interopDefault(_numberedList);
var _numerical = require("./numerical");
var _numericalDefault = parcelHelpers.interopDefault(_numerical);
var _office = require("./office");
var _officeDefault = parcelHelpers.interopDefault(_office);
var _offline = require("./offline");
var _offlineDefault = parcelHelpers.interopDefault(_offline);
var _oilField = require("./oil-field");
var _oilFieldDefault = parcelHelpers.interopDefault(_oilField);
var _oneColumn = require("./one-column");
var _oneColumnDefault = parcelHelpers.interopDefault(_oneColumn);
var _oneToMany = require("./one-to-many");
var _oneToManyDefault = parcelHelpers.interopDefault(_oneToMany);
var _oneToOne = require("./one-to-one");
var _oneToOneDefault = parcelHelpers.interopDefault(_oneToOne);
var _openApplication = require("./open-application");
var _openApplicationDefault = parcelHelpers.interopDefault(_openApplication);
var _outdated = require("./outdated");
var _outdatedDefault = parcelHelpers.interopDefault(_outdated);
var _pageLayout = require("./page-layout");
var _pageLayoutDefault = parcelHelpers.interopDefault(_pageLayout);
var _panelStats = require("./panel-stats");
var _panelStatsDefault = parcelHelpers.interopDefault(_panelStats);
var _panelTable = require("./panel-table");
var _panelTableDefault = parcelHelpers.interopDefault(_panelTable);
var _paperclip = require("./paperclip");
var _paperclipDefault = parcelHelpers.interopDefault(_paperclip);
var _paragraph = require("./paragraph");
var _paragraphDefault = parcelHelpers.interopDefault(_paragraph);
var _path = require("./path");
var _pathDefault = parcelHelpers.interopDefault(_path);
var _pathSearch = require("./path-search");
var _pathSearchDefault = parcelHelpers.interopDefault(_pathSearch);
var _pause = require("./pause");
var _pauseDefault = parcelHelpers.interopDefault(_pause);
var _people = require("./people");
var _peopleDefault = parcelHelpers.interopDefault(_people);
var _percentage = require("./percentage");
var _percentageDefault = parcelHelpers.interopDefault(_percentage);
var _person = require("./person");
var _personDefault = parcelHelpers.interopDefault(_person);
var _phone = require("./phone");
var _phoneDefault = parcelHelpers.interopDefault(_phone);
var _pieChart = require("./pie-chart");
var _pieChartDefault = parcelHelpers.interopDefault(_pieChart);
var _pin = require("./pin");
var _pinDefault = parcelHelpers.interopDefault(_pin);
var _pivot = require("./pivot");
var _pivotDefault = parcelHelpers.interopDefault(_pivot);
var _pivotTable = require("./pivot-table");
var _pivotTableDefault = parcelHelpers.interopDefault(_pivotTable);
var _play = require("./play");
var _playDefault = parcelHelpers.interopDefault(_play);
var _playbook = require("./playbook");
var _playbookDefault = parcelHelpers.interopDefault(_playbook);
var _plus = require("./plus");
var _plusDefault = parcelHelpers.interopDefault(_plus);
var _polygonFilter = require("./polygon-filter");
var _polygonFilterDefault = parcelHelpers.interopDefault(_polygonFilter);
var _power = require("./power");
var _powerDefault = parcelHelpers.interopDefault(_power);
var _predictiveAnalysis = require("./predictive-analysis");
var _predictiveAnalysisDefault = parcelHelpers.interopDefault(_predictiveAnalysis);
var _prescription = require("./prescription");
var _prescriptionDefault = parcelHelpers.interopDefault(_prescription);
var _presentation = require("./presentation");
var _presentationDefault = parcelHelpers.interopDefault(_presentation);
var _print = require("./print");
var _printDefault = parcelHelpers.interopDefault(_print);
var _projects = require("./projects");
var _projectsDefault = parcelHelpers.interopDefault(_projects);
var _properties = require("./properties");
var _propertiesDefault = parcelHelpers.interopDefault(_properties);
var _property = require("./property");
var _propertyDefault = parcelHelpers.interopDefault(_property);
var _publishFunction = require("./publish-function");
var _publishFunctionDefault = parcelHelpers.interopDefault(_publishFunction);
var _pulse = require("./pulse");
var _pulseDefault = parcelHelpers.interopDefault(_pulse);
var _rain = require("./rain");
var _rainDefault = parcelHelpers.interopDefault(_rain);
var _random = require("./random");
var _randomDefault = parcelHelpers.interopDefault(_random);
var _record = require("./record");
var _recordDefault = parcelHelpers.interopDefault(_record);
var _rectHeight = require("./rect-height");
var _rectHeightDefault = parcelHelpers.interopDefault(_rectHeight);
var _rectWidth = require("./rect-width");
var _rectWidthDefault = parcelHelpers.interopDefault(_rectWidth);
var _rectangle = require("./rectangle");
var _rectangleDefault = parcelHelpers.interopDefault(_rectangle);
var _redo = require("./redo");
var _redoDefault = parcelHelpers.interopDefault(_redo);
var _refresh = require("./refresh");
var _refreshDefault = parcelHelpers.interopDefault(_refresh);
var _regressionChart = require("./regression-chart");
var _regressionChartDefault = parcelHelpers.interopDefault(_regressionChart);
var _remove = require("./remove");
var _removeDefault = parcelHelpers.interopDefault(_remove);
var _removeColumn = require("./remove-column");
var _removeColumnDefault = parcelHelpers.interopDefault(_removeColumn);
var _removeColumnLeft = require("./remove-column-left");
var _removeColumnLeftDefault = parcelHelpers.interopDefault(_removeColumnLeft);
var _removeColumnRight = require("./remove-column-right");
var _removeColumnRightDefault = parcelHelpers.interopDefault(_removeColumnRight);
var _removeRowBottom = require("./remove-row-bottom");
var _removeRowBottomDefault = parcelHelpers.interopDefault(_removeRowBottom);
var _removeRowTop = require("./remove-row-top");
var _removeRowTopDefault = parcelHelpers.interopDefault(_removeRowTop);
var _repeat = require("./repeat");
var _repeatDefault = parcelHelpers.interopDefault(_repeat);
var _reset = require("./reset");
var _resetDefault = parcelHelpers.interopDefault(_reset);
var _resolve = require("./resolve");
var _resolveDefault = parcelHelpers.interopDefault(_resolve);
var _rig = require("./rig");
var _rigDefault = parcelHelpers.interopDefault(_rig);
var _rightJoin = require("./right-join");
var _rightJoinDefault = parcelHelpers.interopDefault(_rightJoin);
var _ring = require("./ring");
var _ringDefault = parcelHelpers.interopDefault(_ring);
var _rocket = require("./rocket");
var _rocketDefault = parcelHelpers.interopDefault(_rocket);
var _rocketSlant = require("./rocket-slant");
var _rocketSlantDefault = parcelHelpers.interopDefault(_rocketSlant);
var _rotateDocument = require("./rotate-document");
var _rotateDocumentDefault = parcelHelpers.interopDefault(_rotateDocument);
var _rotatePage = require("./rotate-page");
var _rotatePageDefault = parcelHelpers.interopDefault(_rotatePage);
var _route = require("./route");
var _routeDefault = parcelHelpers.interopDefault(_route);
var _satellite = require("./satellite");
var _satelliteDefault = parcelHelpers.interopDefault(_satellite);
var _saved = require("./saved");
var _savedDefault = parcelHelpers.interopDefault(_saved);
var _scatterPlot = require("./scatter-plot");
var _scatterPlotDefault = parcelHelpers.interopDefault(_scatterPlot);
var _search = require("./search");
var _searchDefault = parcelHelpers.interopDefault(_search);
var _searchAround = require("./search-around");
var _searchAroundDefault = parcelHelpers.interopDefault(_searchAround);
var _searchTemplate = require("./search-template");
var _searchTemplateDefault = parcelHelpers.interopDefault(_searchTemplate);
var _searchText = require("./search-text");
var _searchTextDefault = parcelHelpers.interopDefault(_searchText);
var _segmentedControl = require("./segmented-control");
var _segmentedControlDefault = parcelHelpers.interopDefault(_segmentedControl);
var _select = require("./select");
var _selectDefault = parcelHelpers.interopDefault(_select);
var _selection = require("./selection");
var _selectionDefault = parcelHelpers.interopDefault(_selection);
var _sendMessage = require("./send-message");
var _sendMessageDefault = parcelHelpers.interopDefault(_sendMessage);
var _sendTo = require("./send-to");
var _sendToDefault = parcelHelpers.interopDefault(_sendTo);
var _sendToGraph = require("./send-to-graph");
var _sendToGraphDefault = parcelHelpers.interopDefault(_sendToGraph);
var _sendToMap = require("./send-to-map");
var _sendToMapDefault = parcelHelpers.interopDefault(_sendToMap);
var _seriesAdd = require("./series-add");
var _seriesAddDefault = parcelHelpers.interopDefault(_seriesAdd);
var _seriesConfiguration = require("./series-configuration");
var _seriesConfigurationDefault = parcelHelpers.interopDefault(_seriesConfiguration);
var _seriesDerived = require("./series-derived");
var _seriesDerivedDefault = parcelHelpers.interopDefault(_seriesDerived);
var _seriesFiltered = require("./series-filtered");
var _seriesFilteredDefault = parcelHelpers.interopDefault(_seriesFiltered);
var _seriesSearch = require("./series-search");
var _seriesSearchDefault = parcelHelpers.interopDefault(_seriesSearch);
var _settings = require("./settings");
var _settingsDefault = parcelHelpers.interopDefault(_settings);
var _shapes = require("./shapes");
var _shapesDefault = parcelHelpers.interopDefault(_shapes);
var _share = require("./share");
var _shareDefault = parcelHelpers.interopDefault(_share);
var _sharedFilter = require("./shared-filter");
var _sharedFilterDefault = parcelHelpers.interopDefault(_sharedFilter);
var _shield = require("./shield");
var _shieldDefault = parcelHelpers.interopDefault(_shield);
var _ship = require("./ship");
var _shipDefault = parcelHelpers.interopDefault(_ship);
var _shop = require("./shop");
var _shopDefault = parcelHelpers.interopDefault(_shop);
var _shoppingCart = require("./shopping-cart");
var _shoppingCartDefault = parcelHelpers.interopDefault(_shoppingCart);
var _signalSearch = require("./signal-search");
var _signalSearchDefault = parcelHelpers.interopDefault(_signalSearch);
var _simCard = require("./sim-card");
var _simCardDefault = parcelHelpers.interopDefault(_simCard);
var _slash = require("./slash");
var _slashDefault = parcelHelpers.interopDefault(_slash);
var _smallCross = require("./small-cross");
var _smallCrossDefault = parcelHelpers.interopDefault(_smallCross);
var _smallMinus = require("./small-minus");
var _smallMinusDefault = parcelHelpers.interopDefault(_smallMinus);
var _smallPlus = require("./small-plus");
var _smallPlusDefault = parcelHelpers.interopDefault(_smallPlus);
var _smallSquare = require("./small-square");
var _smallSquareDefault = parcelHelpers.interopDefault(_smallSquare);
var _smallTick = require("./small-tick");
var _smallTickDefault = parcelHelpers.interopDefault(_smallTick);
var _snowflake = require("./snowflake");
var _snowflakeDefault = parcelHelpers.interopDefault(_snowflake);
var _socialMedia = require("./social-media");
var _socialMediaDefault = parcelHelpers.interopDefault(_socialMedia);
var _sort = require("./sort");
var _sortDefault = parcelHelpers.interopDefault(_sort);
var _sortAlphabetical = require("./sort-alphabetical");
var _sortAlphabeticalDefault = parcelHelpers.interopDefault(_sortAlphabetical);
var _sortAlphabeticalDesc = require("./sort-alphabetical-desc");
var _sortAlphabeticalDescDefault = parcelHelpers.interopDefault(_sortAlphabeticalDesc);
var _sortAsc = require("./sort-asc");
var _sortAscDefault = parcelHelpers.interopDefault(_sortAsc);
var _sortDesc = require("./sort-desc");
var _sortDescDefault = parcelHelpers.interopDefault(_sortDesc);
var _sortNumerical = require("./sort-numerical");
var _sortNumericalDefault = parcelHelpers.interopDefault(_sortNumerical);
var _sortNumericalDesc = require("./sort-numerical-desc");
var _sortNumericalDescDefault = parcelHelpers.interopDefault(_sortNumericalDesc);
var _splitColumns = require("./split-columns");
var _splitColumnsDefault = parcelHelpers.interopDefault(_splitColumns);
var _square = require("./square");
var _squareDefault = parcelHelpers.interopDefault(_square);
var _stackedChart = require("./stacked-chart");
var _stackedChartDefault = parcelHelpers.interopDefault(_stackedChart);
var _stadiumGeometry = require("./stadium-geometry");
var _stadiumGeometryDefault = parcelHelpers.interopDefault(_stadiumGeometry);
var _star = require("./star");
var _starDefault = parcelHelpers.interopDefault(_star);
var _starEmpty = require("./star-empty");
var _starEmptyDefault = parcelHelpers.interopDefault(_starEmpty);
var _stepBackward = require("./step-backward");
var _stepBackwardDefault = parcelHelpers.interopDefault(_stepBackward);
var _stepChart = require("./step-chart");
var _stepChartDefault = parcelHelpers.interopDefault(_stepChart);
var _stepForward = require("./step-forward");
var _stepForwardDefault = parcelHelpers.interopDefault(_stepForward);
var _stop = require("./stop");
var _stopDefault = parcelHelpers.interopDefault(_stop);
var _stopwatch = require("./stopwatch");
var _stopwatchDefault = parcelHelpers.interopDefault(_stopwatch);
var _strikethrough = require("./strikethrough");
var _strikethroughDefault = parcelHelpers.interopDefault(_strikethrough);
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _swapHorizontal = require("./swap-horizontal");
var _swapHorizontalDefault = parcelHelpers.interopDefault(_swapHorizontal);
var _swapVertical = require("./swap-vertical");
var _swapVerticalDefault = parcelHelpers.interopDefault(_swapVertical);
var _switch = require("./switch");
var _switchDefault = parcelHelpers.interopDefault(_switch);
var _symbolCircle = require("./symbol-circle");
var _symbolCircleDefault = parcelHelpers.interopDefault(_symbolCircle);
var _symbolCross = require("./symbol-cross");
var _symbolCrossDefault = parcelHelpers.interopDefault(_symbolCross);
var _symbolDiamond = require("./symbol-diamond");
var _symbolDiamondDefault = parcelHelpers.interopDefault(_symbolDiamond);
var _symbolRectangle = require("./symbol-rectangle");
var _symbolRectangleDefault = parcelHelpers.interopDefault(_symbolRectangle);
var _symbolSquare = require("./symbol-square");
var _symbolSquareDefault = parcelHelpers.interopDefault(_symbolSquare);
var _symbolTriangleDown = require("./symbol-triangle-down");
var _symbolTriangleDownDefault = parcelHelpers.interopDefault(_symbolTriangleDown);
var _symbolTriangleUp = require("./symbol-triangle-up");
var _symbolTriangleUpDefault = parcelHelpers.interopDefault(_symbolTriangleUp);
var _syringe = require("./syringe");
var _syringeDefault = parcelHelpers.interopDefault(_syringe);
var _tag = require("./tag");
var _tagDefault = parcelHelpers.interopDefault(_tag);
var _takeAction = require("./take-action");
var _takeActionDefault = parcelHelpers.interopDefault(_takeAction);
var _tank = require("./tank");
var _tankDefault = parcelHelpers.interopDefault(_tank);
var _target = require("./target");
var _targetDefault = parcelHelpers.interopDefault(_target);
var _taxi = require("./taxi");
var _taxiDefault = parcelHelpers.interopDefault(_taxi);
var _temperature = require("./temperature");
var _temperatureDefault = parcelHelpers.interopDefault(_temperature);
var _textHighlight = require("./text-highlight");
var _textHighlightDefault = parcelHelpers.interopDefault(_textHighlight);
var _th = require("./th");
var _thDefault = parcelHelpers.interopDefault(_th);
var _thDerived = require("./th-derived");
var _thDerivedDefault = parcelHelpers.interopDefault(_thDerived);
var _thDisconnect = require("./th-disconnect");
var _thDisconnectDefault = parcelHelpers.interopDefault(_thDisconnect);
var _thFiltered = require("./th-filtered");
var _thFilteredDefault = parcelHelpers.interopDefault(_thFiltered);
var _thList = require("./th-list");
var _thListDefault = parcelHelpers.interopDefault(_thList);
var _thirdParty = require("./third-party");
var _thirdPartyDefault = parcelHelpers.interopDefault(_thirdParty);
var _thumbsDown = require("./thumbs-down");
var _thumbsDownDefault = parcelHelpers.interopDefault(_thumbsDown);
var _thumbsUp = require("./thumbs-up");
var _thumbsUpDefault = parcelHelpers.interopDefault(_thumbsUp);
var _tick = require("./tick");
var _tickDefault = parcelHelpers.interopDefault(_tick);
var _tickCircle = require("./tick-circle");
var _tickCircleDefault = parcelHelpers.interopDefault(_tickCircle);
var _time = require("./time");
var _timeDefault = parcelHelpers.interopDefault(_time);
var _timelineAreaChart = require("./timeline-area-chart");
var _timelineAreaChartDefault = parcelHelpers.interopDefault(_timelineAreaChart);
var _timelineBarChart = require("./timeline-bar-chart");
var _timelineBarChartDefault = parcelHelpers.interopDefault(_timelineBarChart);
var _timelineEvents = require("./timeline-events");
var _timelineEventsDefault = parcelHelpers.interopDefault(_timelineEvents);
var _timelineLineChart = require("./timeline-line-chart");
var _timelineLineChartDefault = parcelHelpers.interopDefault(_timelineLineChart);
var _tint = require("./tint");
var _tintDefault = parcelHelpers.interopDefault(_tint);
var _torch = require("./torch");
var _torchDefault = parcelHelpers.interopDefault(_torch);
var _tractor = require("./tractor");
var _tractorDefault = parcelHelpers.interopDefault(_tractor);
var _train = require("./train");
var _trainDefault = parcelHelpers.interopDefault(_train);
var _translate = require("./translate");
var _translateDefault = parcelHelpers.interopDefault(_translate);
var _trash = require("./trash");
var _trashDefault = parcelHelpers.interopDefault(_trash);
var _tree = require("./tree");
var _treeDefault = parcelHelpers.interopDefault(_tree);
var _trendingDown = require("./trending-down");
var _trendingDownDefault = parcelHelpers.interopDefault(_trendingDown);
var _trendingUp = require("./trending-up");
var _trendingUpDefault = parcelHelpers.interopDefault(_trendingUp);
var _truck = require("./truck");
var _truckDefault = parcelHelpers.interopDefault(_truck);
var _twoColumns = require("./two-columns");
var _twoColumnsDefault = parcelHelpers.interopDefault(_twoColumns);
var _unarchive = require("./unarchive");
var _unarchiveDefault = parcelHelpers.interopDefault(_unarchive);
var _underline = require("./underline");
var _underlineDefault = parcelHelpers.interopDefault(_underline);
var _undo = require("./undo");
var _undoDefault = parcelHelpers.interopDefault(_undo);
var _ungroupObjects = require("./ungroup-objects");
var _ungroupObjectsDefault = parcelHelpers.interopDefault(_ungroupObjects);
var _unknownVehicle = require("./unknown-vehicle");
var _unknownVehicleDefault = parcelHelpers.interopDefault(_unknownVehicle);
var _unlock = require("./unlock");
var _unlockDefault = parcelHelpers.interopDefault(_unlock);
var _unpin = require("./unpin");
var _unpinDefault = parcelHelpers.interopDefault(_unpin);
var _unresolve = require("./unresolve");
var _unresolveDefault = parcelHelpers.interopDefault(_unresolve);
var _updated = require("./updated");
var _updatedDefault = parcelHelpers.interopDefault(_updated);
var _upload = require("./upload");
var _uploadDefault = parcelHelpers.interopDefault(_upload);
var _user = require("./user");
var _userDefault = parcelHelpers.interopDefault(_user);
var _variable = require("./variable");
var _variableDefault = parcelHelpers.interopDefault(_variable);
var _verticalBarChartAsc = require("./vertical-bar-chart-asc");
var _verticalBarChartAscDefault = parcelHelpers.interopDefault(_verticalBarChartAsc);
var _verticalBarChartDesc = require("./vertical-bar-chart-desc");
var _verticalBarChartDescDefault = parcelHelpers.interopDefault(_verticalBarChartDesc);
var _verticalDistribution = require("./vertical-distribution");
var _verticalDistributionDefault = parcelHelpers.interopDefault(_verticalDistribution);
var _verticalInbetween = require("./vertical-inbetween");
var _verticalInbetweenDefault = parcelHelpers.interopDefault(_verticalInbetween);
var _video = require("./video");
var _videoDefault = parcelHelpers.interopDefault(_video);
var _virus = require("./virus");
var _virusDefault = parcelHelpers.interopDefault(_virus);
var _volumeDown = require("./volume-down");
var _volumeDownDefault = parcelHelpers.interopDefault(_volumeDown);
var _volumeOff = require("./volume-off");
var _volumeOffDefault = parcelHelpers.interopDefault(_volumeOff);
var _volumeUp = require("./volume-up");
var _volumeUpDefault = parcelHelpers.interopDefault(_volumeUp);
var _walk = require("./walk");
var _walkDefault = parcelHelpers.interopDefault(_walk);
var _warningSign = require("./warning-sign");
var _warningSignDefault = parcelHelpers.interopDefault(_warningSign);
var _waterfallChart = require("./waterfall-chart");
var _waterfallChartDefault = parcelHelpers.interopDefault(_waterfallChart);
var _waves = require("./waves");
var _wavesDefault = parcelHelpers.interopDefault(_waves);
var _widget = require("./widget");
var _widgetDefault = parcelHelpers.interopDefault(_widget);
var _widgetButton = require("./widget-button");
var _widgetButtonDefault = parcelHelpers.interopDefault(_widgetButton);
var _widgetFooter = require("./widget-footer");
var _widgetFooterDefault = parcelHelpers.interopDefault(_widgetFooter);
var _widgetHeader = require("./widget-header");
var _widgetHeaderDefault = parcelHelpers.interopDefault(_widgetHeader);
var _wind = require("./wind");
var _windDefault = parcelHelpers.interopDefault(_wind);
var _wrench = require("./wrench");
var _wrenchDefault = parcelHelpers.interopDefault(_wrench);
var _zoomIn = require("./zoom-in");
var _zoomInDefault = parcelHelpers.interopDefault(_zoomIn);
var _zoomOut = require("./zoom-out");
var _zoomOutDefault = parcelHelpers.interopDefault(_zoomOut);
var _zoomToFit = require("./zoom-to-fit");
var _zoomToFitDefault = parcelHelpers.interopDefault(_zoomToFit);

},{"./add":"ieunK","./add-clip":"T9MBd","./add-column-left":"55UE4","./add-column-right":"kDfP2","./add-location":"kbpcF","./add-row-bottom":"4JdTS","./add-row-top":"37Igp","./add-to-artifact":"7W8vx","./add-to-folder":"6TysO","./airplane":"4Zb4A","./align-center":"jMc4T","./align-justify":"hL1as","./align-left":"hch4J","./align-right":"7QFv7","./alignment-bottom":"lMAja","./alignment-horizontal-center":"l7CKR","./alignment-left":"fF7wr","./alignment-right":"cSbUt","./alignment-top":"atdDS","./alignment-vertical-center":"1KOJP","./annotation":"jpHTT","./antenna":"alc9d","./app-header":"9vmV6","./application":"3rsCl","./applications":"aOVQf","./archive":"jJ2EC","./area-of-interest":"cQ3In","./array":"7PJbu","./array-boolean":"5jQsq","./array-date":"gLFip","./array-numeric":"hZzYB","./array-string":"hVQrm","./array-timestamp":"k3zfV","./arrow-bottom-left":"hZMD2","./arrow-bottom-right":"g2gV9","./arrow-down":"lyiK1","./arrow-left":"atXsK","./arrow-right":"jrvlB","./arrow-top-left":"2Hu0T","./arrow-top-right":"8DG7b","./arrow-up":"bMWMm","./arrows-horizontal":"hnkNV","./arrows-vertical":"bvAZ5","./asterisk":"irat7","./automatic-updates":"fyI11","./backlink":"pHAZR","./badge":"7Xuge","./ban-circle":"dWfbK","./bank-account":"7ExvR","./barcode":"5989x","./blank":"gZb5V","./blocked-person":"9RSIL","./bold":"fmCaf","./book":"iQKpZ","./bookmark":"1ANjB","./box":"d5T2y","./briefcase":"g3qsH","./bring-data":"5RM7w","./buggy":"hGJYU","./build":"bEipu","./calculator":"9d4KT","./calendar":"dfagg","./camera":"4jjvx","./caret-down":"lGXcj","./caret-left":"6rtl2","./caret-right":"49Nz1","./caret-up":"h0zNi","./cargo-ship":"g5M4b","./cell-tower":"gVRbh","./changes":"cNk85","./chart":"3adlR","./chat":"dlC9v","./chevron-backward":"f4YpG","./chevron-down":"i1RfT","./chevron-forward":"3UAEY","./chevron-left":"cMEwB","./chevron-right":"jDCkE","./chevron-up":"j9pzh","./circle":"hsk7j","./circle-arrow-down":"6zlhn","./circle-arrow-left":"6osFN","./circle-arrow-right":"dM0Ho","./circle-arrow-up":"hOCLg","./citation":"6N4L3","./clean":"bkOHA","./clip":"gqzUt","./clipboard":"fcTFE","./cloud":"8eil3","./cloud-download":"6iccg","./cloud-upload":"hZFNs","./code":"2cxYi","./code-block":"49yXd","./cog":"1yEP9","./collapse-all":"fhEO7","./color-fill":"53Q5H","./column-layout":"1DMKe","./comment":"iiZBE","./comparison":"cMLev","./compass":"3Spwi","./compressed":"hYC5y","./confirm":"jhJtL","./console":"ahNYH","./contrast":"dU2Cx","./control":"amVdJ","./credit-card":"jI4WL","./cross":"01rSF","./crown":"3GxNT","./cube":"cQHpX","./cube-add":"9JcBu","./cube-remove":"kZ3Fv","./curved-range-chart":"ela5G","./cut":"7wmpl","./cycle":"gWofA","./dashboard":"ioIjL","./data-connection":"10fOk","./data-lineage":"brJrp","./database":"9Y7Xd","./delete":"dVJbf","./delta":"jjn50","./derive-column":"dxrbw","./desktop":"2YjRd","./diagnosis":"2YIVi","./diagram-tree":"aNsgh","./direction-left":"81CPH","./direction-right":"cdzgS","./disable":"7N1de","./divide":"etQxP","./document":"1k5nU","./document-open":"l35t1","./document-share":"8MjCZ","./dollar":"7smPp","./dot":"b7fPN","./double-caret-horizontal":"lq2OL","./double-caret-vertical":"dQ8Na","./double-chevron-down":"aidRm","./double-chevron-left":"3csKO","./double-chevron-right":"fVm6Y","./double-chevron-up":"jD6c9","./doughnut-chart":"l5OjT","./download":"K95N8","./drag-handle-horizontal":"lTP0e","./drag-handle-vertical":"5wR1G","./draw":"1FdRp","./drawer-left":"4XjZM","./drawer-left-filled":"jZASl","./drawer-right":"iwz1K","./drawer-right-filled":"j0S3S","./drive-time":"aTu9j","./duplicate":"muYcs","./edit":"kGIga","./eject":"R0Gsk","./emoji":"gKRXg","./endorsed":"jYm52","./envelope":"jHuTU","./equals":"c0nHQ","./eraser":"4PuqW","./error":"Q1AOz","./euro":"dMSD6","./exchange":"9uro7","./exclude-row":"iNWHh","./expand-all":"89uHN","./export":"jLPCm","./eye-off":"aVFJP","./eye-on":"emkcS","./eye-open":"1XwXT","./fast-backward":"gaMz3","./fast-forward":"7yd1W","./feed":"5vNpO","./feed-subscribed":"5i8WQ","./film":"b8eoe","./filter":"blIct","./filter-keep":"02hMs","./filter-list":"5XXBB","./filter-open":"fnji3","./filter-remove":"gnweY","./flag":"1CyWu","./flame":"8oq6U","./flash":"2VZcn","./floppy-disk":"gzlNr","./flow-branch":"a9f8p","./flow-end":"4Evsr","./flow-linear":"9ZBJU","./flow-review":"7K0Io","./flow-review-branch":"4kPLS","./flows":"gBAl0","./folder-close":"h7Wx4","./folder-new":"8s24g","./folder-open":"7SycN","./folder-shared":"79Cyn","./folder-shared-open":"krPCd","./follower":"6PBsT","./following":"cf09r","./font":"UGmrs","./fork":"iWt9P","./form":"fEt7t","./fuel":"lJpeq","./full-circle":"irqA1","./full-stacked-chart":"gzYJG","./fullscreen":"4ET2g","./function":"dCRb5","./gantt-chart":"jXUYl","./geofence":"4YGp8","./geolocation":"1FyHS","./geosearch":"fKD7d","./git-branch":"loAUk","./git-commit":"5KJ0v","./git-merge":"93G5z","./git-new-branch":"fbRmd","./git-pull":"bMQcg","./git-push":"9pEDi","./git-repo":"8OKh7","./glass":"iRNQn","./globe":"4cLoV","./globe-network":"88ens","./graph":"3qILM","./graph-remove":"A4jNb","./greater-than":"405x9","./greater-than-or-equal-to":"2qci8","./grid":"1TKLS","./grid-view":"ehxNs","./group-objects":"6SGwe","./grouped-bar-chart":"hQESQ","./hand":"11C90","./hand-down":"8Nfls","./hand-left":"4gi87","./hand-right":"bcv1G","./hand-up":"ioy4a","./hat":"kwOr1","./header":"dfQ37","./header-one":"dpVOq","./header-three":"iCYPV","./header-two":"iDOCH","./headset":"lj5rc","./heart":"1MlXm","./heart-broken":"iYwwx","./heat-grid":"58zyJ","./heatmap":"fHTYM","./helicopter":"wo7wv","./help":"cccHj","./helper-management":"hzOsn","./high-priority":"OR5aq","./highlight":"ebfoI","./history":"8pemr","./home":"kXLDf","./horizontal-bar-chart":"dTGzi","./horizontal-bar-chart-asc":"l53Nm","./horizontal-bar-chart-desc":"brtco","./horizontal-distribution":"b2pBV","./horizontal-inbetween":"cKDsP","./hurricane":"4x0In","./id-number":"5uzhi","./image-rotate-left":"laRm0","./image-rotate-right":"fP5BM","./import":"27EXP","./inbox":"aI9To","./inbox-filtered":"gwIgL","./inbox-geo":"6MIud","./inbox-search":"iHxm8","./inbox-update":"fxzFD","./info-sign":"1ojJL","./inheritance":"bdyFQ","./inherited-group":"2tBLI","./inner-join":"4inTH","./insert":"cRsu8","./intersection":"1ngmb","./ip-address":"gLkoS","./issue":"hg2Co","./issue-closed":"3NktF","./issue-new":"4310u","./italic":"gc1J6","./join-table":"vvIq5","./key":"jNKLE","./key-backspace":"jdZ0B","./key-command":"4r6Cw","./key-control":"25I0L","./key-delete":"9PpC4","./key-enter":"cDmiz","./key-escape":"areJl","./key-option":"8euOV","./key-shift":"8zAex","./key-tab":"iGGXM","./known-vehicle":"3B7Bh","./lab-test":"f14RI","./label":"ad0LZ","./layer":"hbu54","./layer-outline":"jyQJX","./layers":"edMgz","./layout":"eQT5T","./layout-auto":"fZzAc","./layout-balloon":"0231b","./layout-circle":"lAHym","./layout-grid":"idSO8","./layout-group-by":"5LRB2","./layout-hierarchy":"iuSpX","./layout-linear":"g4khm","./layout-skew-grid":"dfCRd","./layout-sorted-clusters":"4d0Cf","./learning":"jQWpk","./left-join":"3r5yn","./less-than":"4pGB6","./less-than-or-equal-to":"6wT3I","./lifesaver":"8sHlK","./lightbulb":"gALyx","./lightning":"g1gUt","./link":"18TC0","./list":"bi1rk","./list-columns":"b8EwH","./list-detail-view":"5hGF7","./locate":"fmQSd","./lock":"eGPK4","./log-in":"kaadF","./log-out":"6ri3Z","./manual":"5jTcf","./manually-entered-data":"fxea7","./many-to-many":"dXESS","./many-to-one":"hOFdf","./map":"aVh15","./map-create":"gIbzP","./map-marker":"chrlf","./maximize":"7vkOX","./media":"5Tstg","./menu":"UQzXI","./menu-closed":"71Tli","./menu-open":"fN3kB","./merge-columns":"8hsEa","./merge-links":"5zFSx","./minimize":"hXXwr","./minus":"5oRbB","./mobile-phone":"3XOnt","./mobile-video":"cWMNc","./modal":"lbJwt","./modal-filled":"bq0Rl","./moon":"3pnru","./more":"i4TP2","./mountain":"6k4zc","./move":"9mR8S","./mugshot":"7M2U5","./multi-select":"17Fhv","./music":"F0U6Q","./nest":"2eilr","./new-drawing":"h05oN","./new-grid-item":"d7LeY","./new-layer":"kYsv4","./new-layers":"ea5il","./new-link":"kJUDM","./new-object":"bLQrF","./new-person":"cb9dd","./new-prescription":"1NdR0","./new-text-box":"9rdpa","./ninja":"5Uu2k","./not-equal-to":"7VPcP","./notifications":"1CXj0","./notifications-snooze":"6NpR8","./notifications-updated":"hDjmi","./numbered-list":"gWMWf","./numerical":"6PjjT","./office":"fwXQb","./offline":"dL3v9","./oil-field":"c9p3s","./one-column":"1314K","./one-to-many":"9esAx","./one-to-one":"kgO1i","./open-application":"givgi","./outdated":"9MNbD","./page-layout":"25k5o","./panel-stats":"fxflF","./panel-table":"fKLxO","./paperclip":"lhz2s","./paragraph":"8OX4Z","./path":"3Gu7Z","./path-search":"em20Q","./pause":"jooyD","./people":"6ihAo","./percentage":"i8nV4","./person":"a5I42","./phone":"jwxgj","./pie-chart":"fAeqp","./pin":"kc9Ip","./pivot":"bzn2S","./pivot-table":"4ixQw","./play":"ja6Z1","./playbook":"dnxFq","./plus":"blIiY","./polygon-filter":"kugGL","./power":"evPyA","./predictive-analysis":"73UfC","./prescription":"7iO1G","./presentation":"lp0jl","./print":"7Nlm5","./projects":"alP2a","./properties":"l05Kd","./property":"bJXVg","./publish-function":"9VFi1","./pulse":"kPMGN","./rain":"kEZuM","./random":"eIc98","./record":"i6wdV","./rect-height":"3e7El","./rect-width":"aIEN7","./rectangle":"kDP7s","./redo":"cyWZp","./refresh":"5wQaA","./regression-chart":"hkepW","./remove":"6WlXD","./remove-column":"5JwsE","./remove-column-left":"chN3F","./remove-column-right":"6qQ21","./remove-row-bottom":"5Re0u","./remove-row-top":"fHg6Q","./repeat":"e9iU0","./reset":"jinwh","./resolve":"lxOjk","./rig":"khLVm","./right-join":"2G6UQ","./ring":"bqcX2","./rocket":"4KrYK","./rocket-slant":"4fBU3","./rotate-document":"3LjKq","./rotate-page":"fLDY1","./route":"kW2b9","./satellite":"brDxQ","./saved":"afqqr","./scatter-plot":"aEFxz","./search":"5WZms","./search-around":"ixylZ","./search-template":"4DI4x","./search-text":"9XYeK","./segmented-control":"1FYtu","./select":"hu1IC","./selection":"1H3pX","./send-message":"lVqQw","./send-to":"b0HHu","./send-to-graph":"jFkVa","./send-to-map":"5nt5n","./series-add":"gNCFN","./series-configuration":"LYYCi","./series-derived":"3nDjy","./series-filtered":"43NWp","./series-search":"7dwg4","./settings":"1wpgl","./shapes":"GqbD0","./share":"jaHca","./shared-filter":"2Oe0L","./shield":"9EGhg","./ship":"9dcRI","./shop":"186hP","./shopping-cart":"9CGJ7","./signal-search":"fB9Zo","./sim-card":"43DEK","./slash":"dTXdl","./small-cross":"4Y6RO","./small-minus":"9b5vI","./small-plus":"28F5E","./small-square":"b686G","./small-tick":"5rTlq","./snowflake":"dnfY1","./social-media":"7vm6m","./sort":"aTJBv","./sort-alphabetical":"eHa9T","./sort-alphabetical-desc":"4tvXe","./sort-asc":"eTfD6","./sort-desc":"96HWN","./sort-numerical":"jefSj","./sort-numerical-desc":"kVqhW","./split-columns":"6eaDj","./square":"ilj2L","./stacked-chart":"25Yyh","./stadium-geometry":"emn6t","./star":"4iU5h","./star-empty":"6l3TN","./step-backward":"3XZgb","./step-chart":"gVkm1","./step-forward":"1r1NJ","./stop":"hh5h8","./stopwatch":"jRoY1","./strikethrough":"2oCkR","./style":"5NZn0","./swap-horizontal":"39PdH","./swap-vertical":"7rdWG","./switch":"67Pt1","./symbol-circle":"iZUMt","./symbol-cross":"62pcn","./symbol-diamond":"WXOaP","./symbol-rectangle":"8BKwa","./symbol-square":"h6gDL","./symbol-triangle-down":"lgj9a","./symbol-triangle-up":"3WsMB","./syringe":"9hwq6","./tag":"iKIfF","./take-action":"3mR0s","./tank":"04ZKF","./target":"fssLH","./taxi":"gXkf8","./temperature":"1KPbN","./text-highlight":"gvPI4","./th":"8U3ho","./th-derived":"0SAbi","./th-disconnect":"2OdST","./th-filtered":"luhDh","./th-list":"3dzXG","./third-party":"02Ij1","./thumbs-down":"izjXa","./thumbs-up":"aTJlm","./tick":"h5kzC","./tick-circle":"1TOl2","./time":"bnCNT","./timeline-area-chart":"a3b4U","./timeline-bar-chart":"fyGhD","./timeline-events":"82LfE","./timeline-line-chart":"5q0YF","./tint":"gV1Ur","./torch":"2kTUk","./tractor":"iMPEV","./train":"d6Vsi","./translate":"iIoAl","./trash":"jgUO4","./tree":"4laet","./trending-down":"6cDaZ","./trending-up":"4Zxsd","./truck":"aL5UU","./two-columns":"RouqC","./unarchive":"1qRKH","./underline":"NuUej","./undo":"8eX3N","./ungroup-objects":"bEE73","./unknown-vehicle":"kjUnK","./unlock":"4Bv68","./unpin":"eDD6n","./unresolve":"4MJsz","./updated":"lJ5Cp","./upload":"eWKeq","./user":"eo6qi","./variable":"gi499","./vertical-bar-chart-asc":"lyOz9","./vertical-bar-chart-desc":"igs0B","./vertical-distribution":"7QYn2","./vertical-inbetween":"dgxXM","./video":"38At0","./virus":"3JOQi","./volume-down":"9vQ4u","./volume-off":"8NNXD","./volume-up":"EjTcc","./walk":"3HT3w","./warning-sign":"7UaJj","./waterfall-chart":"gRox5","./waves":"20aNS","./widget":"4pvGF","./widget-button":"8i76E","./widget-footer":"gvkzO","./widget-header":"7cZ9x","./wind":"eYTDw","./wrench":"jSOWw","./zoom-in":"fo9cb","./zoom-out":"gEPJv","./zoom-to-fit":"jWf0F","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ieunK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.99 6.99h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"T9MBd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 0a1 1 0 00-1 1v2H9a1 1 0 000 2h2v2a1 1 0 102 0V5h2a1 1 0 100-2h-2V1a1 1 0 00-1-1zM0 4a1 1 0 011-1h3.5a1 1 0 010 2H2v2a1 1 0 01-2 0V4zm1 12a1 1 0 01-1-1v-3a1 1 0 112 0v2h2.5a1 1 0 110 2H1zm11 0a1 1 0 001-1v-3a1 1 0 10-2 0v2H9a1 1 0 100 2h3zm-5.5-4a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"55UE4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 14H2V2h8v12zm4 0h-3V2h3v12zM4 9h1v1c0 .55.45 1 1 1s1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1H7V6c0-.55-.45-1-1-1s-1 .45-1 1v1H4c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kDfP2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 9h1v1c0 .55.45 1 1 1s1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V6c0-.55-.45-1-1-1s-1 .45-1 1v1H8c-.55 0-1 .45-1 1s.45 1 1 1zm7-9H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 14H2V2h3v12zm9 0H6V2h8v12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kbpcF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0a1 1 0 110 2 6 6 0 106 6 1 1 0 012 0 8 8 0 11-8-8zm0 5a3 3 0 110 6 3 3 0 010-6zm5-5a1 1 0 011 1v.999L15 2a1 1 0 010 2h-1v1a1 1 0 01-2 0V4h-1a1 1 0 010-2h1V1a1 1 0 011-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4JdTS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 11h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1H9V8c0-.55-.45-1-1-1s-1 .45-1 1v1H6c-.55 0-1 .45-1 1s.45 1 1 1zm9-11H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V6h12v8zm0-9H2V2h12v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"37Igp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2v-3h12v3zm0-4H2V2h12v8zM6 7h1v1c0 .55.45 1 1 1s1-.45 1-1V7h1c.55 0 1-.45 1-1s-.45-1-1-1H9V4c0-.55-.45-1-1-1s-1 .45-1 1v1H6c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7W8vx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 4.01h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1 0-.56-.45-1-1-1zm-13 2h6c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm8 6H1c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1 0-.56-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1 0-.56-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6TysO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M.01 7V5H16v7c0 .55-.45 1-1 1H9.005v-2.99C8.974 8.332 7.644 7 5.996 7H.01zM15 2H7.416L5.706.29a.996.996 0 00-.71-.29H1C.45 0 0 .45 0 1v3h15.99V3c.01-.55-.44-1-.99-1zM5.997 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.589L.3 14.29a1.003 1.003 0 001.42 1.42l3.287-3.29v1.59c0 .55.45 1 1 1 .549 0 .999-.45.999-1v-4A1.02 1.02 0 005.996 9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Zb4A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 1.5A1.498 1.498 0 0013.44.44L9.91 3.97 2 1 1 3l5.93 3.95L3.88 10H1l-1 1 3 2 2 3 1-1v-2.88l3.05-3.05L13 15l2-1-2.97-7.91 3.53-3.53c.27-.27.44-.65.44-1.06z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jMc4T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 4c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H4zM1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm13 10H2c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm1-6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-5 5c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1h4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hL1as":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 12.98H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-14-10h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1 0 .56.45 1 1 1zm14 4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-3H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0 6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hch4J":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 13H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 3h8c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 12h4c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7QFv7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 12.98H3c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm-14-10h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1 0 .56.45 1 1 1zm14 1H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0 6h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1zm0-3H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lMAja":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 12h3c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm5 2H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h3c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l7CKR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 7h-1V6c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v1H7V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4H1c-.55 0-1 .45-1 1s.45 1 1 1h1v4c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V9h2v1c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fF7wr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 9H5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zM1 0C.45 0 0 .45 0 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm13 2H5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cSbUt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 9H7c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm4-9c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-4 2H2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"atdDS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM6 4H3c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm7 0h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1KOJP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 2H9V1c0-.55-.45-1-1-1S7 .45 7 1v1H3c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4v2H6c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1H9V7h4c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jpHTT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.52 2.77c.3-.29.48-.7.48-1.15C16 .73 15.27 0 14.38 0c-.45 0-.85.18-1.15.48l-1.34 1.34 2.3 2.3 1.33-1.35zM7.4 10.9l6.21-6.21-2.3-2.3L5.1 8.6l2.3 2.3zM14 14H2V2h6.34l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5.66l-2 2V14zM3 13l3.58-1.29-2.29-2.27L3 13z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"alc9d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.673 10.758a1.396 1.396 0 01.093.234c.127.442.012.932-.362 1.212-.441.332-1.075.246-1.349-.233a8 8 0 1114.014-.225c-.259.488-.889.594-1.341.277-.382-.269-.513-.755-.4-1.2a1.259 1.259 0 01.085-.238 6 6 0 10-10.74.173zm2.464-1.862a1.783 1.783 0 01.076.404c.03.415-.096.831-.43 1.078-.444.328-1.08.237-1.314-.264a5.003 5.003 0 01-.24-.62l-.004-.011a5 5 0 119.574-.08l-.003.011c-.063.213-.14.422-.23.625-.226.504-.861.606-1.31.285-.338-.241-.47-.654-.448-1.07a1.737 1.737 0 01.07-.405 2.99 2.99 0 00-.216-2.233 3 3 0 00-5.525 2.28zM8 7a1 1 0 011 1v3.586l2.707 2.707a1 1 0 01-1.414 1.414L8 13.414l-2.293 2.293a1 1 0 01-1.414-1.414L7 11.586V8a1 1 0 011-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9vmV6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h14zM6 4a1 1 0 00-1.993-.117L4 4v8a1 1 0 001.993.117L6 12V9h4v3a1 1 0 001.993.117L12 12V4a1 1 0 00-1.993-.117L10 4v3H6V4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3rsCl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.5 7h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zM15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm-1 12H2V5h12v8zM3.5 9h4c.28 0 .5-.22.5-.5S7.78 8 7.5 8h-4c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aOVQf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.5 11h2c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-2c-.28 0-.5.22-.5.5s.22.5.5.5zm0-2h5c.28 0 .5-.22.5-.5S8.78 8 8.5 8h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM11 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 10H2V7h8v7zm5-14H5c-.55 0-1 .45-1 1v2h2V2h8v7h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM3.5 13h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jJ2EC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.382 0a1 1 0 01.894.553L16 4v11a1 1 0 01-1 1H1a1 1 0 01-1-1V4L1.724.553A1 1 0 012.618 0h10.764zM8 6c-.55 0-1 .45-1 1v2.59l-.29-.29-.081-.076A.97.97 0 006 9a1.003 1.003 0 00-.71 1.71l2 2 .096.084c.168.13.38.206.614.206.28 0 .53-.11.71-.29l2-2 .084-.096A1.003 1.003 0 009.29 9.29l-.29.3V7l-.007-.116A1.004 1.004 0 008 6zm5-4H3L2 4h12l-1-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cQ3In":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 3.664C4 1.644 5.793 0 8 0s3.993 1.643 4 3.664C12 5.692 8 11 8 11S4 5.692 4 3.664zM6 4a2 2 0 104.001-.001A2 2 0 006 4zm7.504 6.269l-2.68-1.609.021-.033c.34-.538.688-1.115 1-1.687l3.67 2.202a1 1 0 01.266 1.482l-4 5A1 1 0 0111 16H5a1 1 0 01-.78-.376l-4-5a1 1 0 01.266-1.482l3.67-2.202a30.46 30.46 0 00.999 1.687l.021.033-2.68 1.609 2.985 3.73h5.038l2.985-3.73z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7PJbu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm4 7a1 1 0 110 2 1 1 0 010-2zM5 7a1 1 0 110 2 1 1 0 010-2zm6 0a1 1 0 110 2 1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5jQsq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm7 6a1 1 0 01.993.883L12 7v2a1 1 0 01-.883.993L11 10H5a1 1 0 01-.993-.883L4 9V7a1 1 0 01.883-.993L5 6h6zm0 1H8v2h3V7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gLFip":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm6.5 4a.5.5 0 01.5.5V5a1 1 0 01.993.883L12 6v5a1 1 0 01-.883.993L11 12H5a1 1 0 01-.993-.883L4 11V6a1 1 0 01.883-.993L5 5v-.5a.5.5 0 011 0V5h4v-.5a.5.5 0 01.5-.5zm.5 3H5v4h6V7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hZzYB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm6.904 5c.256 0 .483.037.68.112a1.343 1.343 0 01.812.788c.072.184.108.385.108.604 0 .23-.05.441-.152.636a1.314 1.314 0 01-.456.492v.016l.08.04c.055.031.111.072.168.124.085.077.163.172.232.284a1.673 1.673 0 01.24.872c0 .25-.043.477-.128.68a1.518 1.518 0 01-.896.852 1.937 1.937 0 01-.68.116c-.427 0-.792-.101-1.096-.304a1.362 1.362 0 01-.584-.864c-.01-.053.01-.088.064-.104l.696-.16.033-.002c.03.002.051.022.063.058.059.16.155.296.288.408.133.112.312.168.536.168.256 0 .453-.076.592-.228a.827.827 0 00.208-.58c0-.277-.08-.495-.24-.652-.16-.157-.376-.236-.648-.236h-.232l-.035-.005c-.03-.01-.045-.035-.045-.075v-.632l.005-.035c.01-.03.035-.045.075-.045h.216l.138-.009a.734.734 0 00.438-.207c.144-.144.216-.336.216-.576a.745.745 0 00-.192-.532c-.128-.136-.307-.204-.536-.204-.203 0-.363.05-.48.152a.815.815 0 00-.248.408c-.016.048-.048.067-.096.056l-.68-.16-.034-.012c-.028-.016-.038-.044-.03-.084a1.347 1.347 0 01.516-.828c.136-.104.296-.185.48-.244A1.98 1.98 0 0110.904 5zm-6.152.088l.035.005c.03.01.045.035.045.075v5.28l-.005.035c-.01.03-.035.045-.075.045h-.736l-.035-.005c-.03-.01-.045-.035-.045-.075V6.16H3.92l-.832.584-.032.016C3.02 6.773 3 6.751 3 6.696V5.88l.006-.04a.157.157 0 01.05-.072l.872-.632.04-.027a.236.236 0 01.104-.021h.68zM7.344 5c.256 0 .483.04.68.12.197.08.364.188.5.324s.24.296.312.48c.072.184.108.383.108.596 0 .245-.045.47-.136.676-.09.205-.216.404-.376.596l-1.584 1.92v.016h2.016l.035.005c.03.01.045.035.045.075v.64l-.005.035c-.01.03-.035.045-.075.045H5.808l-.035-.005c-.03-.01-.045-.035-.045-.075v-.6l.004-.04a.132.132 0 01.036-.064l1.92-2.392.1-.133a1.95 1.95 0 00.156-.267.985.985 0 00.096-.432.736.736 0 00-.188-.512c-.125-.139-.303-.208-.532-.208-.219 0-.39.061-.512.184a.826.826 0 00-.224.496c-.01.053-.04.075-.088.064L5.792 6.4l-.034-.012c-.028-.016-.038-.044-.03-.084a1.425 1.425 0 01.94-1.192A1.88 1.88 0 017.344 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hVQrm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm1.61 5c.514 0 .962.212 1.343.637.382.425.573.997.573 1.716 0 .838-.258 1.588-.773 2.252-.514.663-1.327 1.2-2.437 1.609v-.465l.233-.095a3.09 3.09 0 001.274-1.017c.366-.505.55-1.03.55-1.577a.478.478 0 00-.057-.26c-.018-.037-.043-.056-.074-.056s-.08.025-.149.075c-.198.142-.446.214-.744.214-.36 0-.675-.145-.944-.433A1.453 1.453 0 014 6.572c0-.422.155-.79.465-1.102.31-.313.692-.47 1.144-.47zm4.474 0c.514 0 .963.212 1.344.637.381.425.572.997.572 1.716 0 .838-.257 1.588-.772 2.252-.515.663-1.327 1.2-2.437 1.609v-.465l.233-.095a3.09 3.09 0 001.274-1.017c.366-.505.549-1.03.549-1.577a.478.478 0 00-.056-.26c-.019-.037-.044-.056-.075-.056-.03 0-.08.025-.149.075-.198.142-.446.214-.744.214-.36 0-.674-.145-.944-.433a1.453 1.453 0 01-.405-1.028c0-.422.155-.79.466-1.102.31-.313.691-.47 1.144-.47z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k3zfV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm4 3a5 5 0 110 10A5 5 0 018 3zm0 1a4 4 0 100 8 4 4 0 000-8zm2.354 1.646a.5.5 0 01.057.638l-.057.07-2 2a.5.5 0 01-.638.057l-.07-.057-1-1a.5.5 0 01.638-.765l.07.057.646.647 1.646-1.647a.5.5 0 01.708 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hZMD2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 3a1.003 1.003 0 00-1.71-.71L4 10.59V6c0-.55-.45-1-1-1s-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1H5.41l8.29-8.29c.19-.18.3-.43.3-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g2gV9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 5c-.55 0-1 .45-1 1v4.59l-8.29-8.3a1.003 1.003 0 00-1.42 1.42l8.3 8.29H6c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lyiK1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 8c-.3 0-.5.1-.7.3L9 11.6V2c0-.5-.4-1-1-1s-1 .5-1 1v9.6L3.7 8.3C3.5 8.1 3.3 8 3 8c-.5 0-1 .5-1 1 0 .3.1.5.3.7l5 5c.2.2.4.3.7.3s.5-.1.7-.3l5-5c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"atXsK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.99 6.99H4.41L7.7 3.7a1.003 1.003 0 00-1.42-1.42l-5 5a1.014 1.014 0 000 1.42l5 5a1.003 1.003 0 001.42-1.42L4.41 8.99H14c.55 0 1-.45 1-1s-.46-1-1.01-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jrvlB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.7 7.29l-5-5a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l3.29 3.29H1.99c-.55 0-1 .45-1 1s.45 1 1 1h9.59l-3.29 3.29a1.003 1.003 0 001.42 1.42l5-5c.18-.18.29-.43.29-.71s-.12-.52-.3-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Hu0T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.71 12.29L5.41 4H10c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V5.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8DG7b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 2H6c-.55 0-1 .45-1 1s.45 1 1 1h4.59L2.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L12 5.41V10c0 .55.45 1 1 1s1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bMWMm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.7 6.3l-5-5C8.5 1.1 8.3 1 8 1s-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L7 4.4V14c0 .6.4 1 1 1s1-.4 1-1V4.4l3.3 3.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hnkNV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.7 7.3l-4-4c-.2-.2-.4-.3-.7-.3-.6 0-1 .5-1 1 0 .3.1.5.3.7L12.6 7H3.4l2.3-2.3c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1-.3 0-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7s.1.5.3.7l4 4c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7L3.4 9h9.2l-2.3 2.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l4-4c.2-.2.3-.4.3-.7s-.1-.5-.3-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bvAZ5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 10c-.3 0-.5.1-.7.3L9 12.6V3.4l2.3 2.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7l-4-4C8.5.1 8.3 0 8 0s-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L7 3.4v9.2l-2.3-2.3c-.2-.2-.4-.3-.7-.3-.5 0-1 .4-1 1 0 .3.1.5.3.7l4 4c.2.2.4.3.7.3s.5-.1.7-.3l4-4c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"irat7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.54 11.18l.01-.02L9.8 8l4.75-3.17-.01-.02c.27-.17.46-.46.46-.81 0-.55-.45-1-1-1-.21 0-.39.08-.54.18l-.01-.02L9 6.13V1c0-.55-.45-1-1-1S7 .45 7 1v5.13L2.55 3.17l-.01.01A.969.969 0 002 3c-.55 0-1 .45-1 1 0 .35.19.64.46.82l-.01.01L6.2 8l-4.75 3.17.01.02c-.27.17-.46.46-.46.81 0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02L7 9.87V15c0 .55.45 1 1 1s1-.45 1-1V9.87l4.45 2.96.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1 0-.35-.19-.64-.46-.82z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fyI11":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 14c-3.31 0-6-2.69-6-6 0-1.77.78-3.36 2-4.46V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1h1.74A7.95 7.95 0 000 8c0 4.42 3.58 8 8 8 .55 0 1-.45 1-1s-.45-1-1-1zM8 2a5.9 5.9 0 012.95.81l1.47-1.47A7.893 7.893 0 008 0c-.55 0-1 .45-1 1s.45 1 1 1zm2.71 6.71l5-5a1.003 1.003 0 00-1.42-1.42L10 6.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29s.53-.11.71-.29zM16 8c0-.55-.06-1.08-.16-1.6l-1.87 1.87A5.966 5.966 0 0112 12.45V11c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-1.74A7.95 7.95 0 0016 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"pHAZR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 10a1 1 0 110 2h-.585l2.292 2.293a1 1 0 01-1.32 1.497l-.094-.083L12 13.415V14a1 1 0 11-2 0l.003-3.075.012-.1.012-.059.033-.108.034-.081.052-.098.067-.096.08-.09a1.01 1.01 0 01.112-.097l.11-.071.143-.065.076-.024.091-.02.116-.014L14 10zM6.036 6.136l-3.45 3.45-.117.127a2 2 0 002.818 2.818l.127-.117 3.45-3.449a4 4 0 01-.885 3.704l-.15.16-1 1A4 4 0 011.02 8.33l.15-.16 1-1a3.998 3.998 0 013.865-1.035zm4.671-1.843a1 1 0 01.083 1.32l-.083.094-5 5a1 1 0 01-1.497-1.32l.083-.094 5-5a1 1 0 011.414 0zm3.121-3.121a4 4 0 01.151 5.497l-.15.16-1 1a3.998 3.998 0 01-3.864 1.036l3.45-3.45.116-.128a2 2 0 00-2.818-2.818l-.127.117-3.45 3.45A4 4 0 017.02 2.33l.15-.16 1-1a4 4 0 015.657 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Xuge":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.36 4.59c-.15-1.13.5-2.01 1.1-2.87L13.43.53c-1.72.88-4.12.65-5.63-.53-1.51 1.18-3.91 1.41-5.63.52l-1.03 1.2c.61.86 1.25 1.74 1.1 2.87-.3 2.29-2.45 4.17-1.32 6.68.45 1.14 1.44 1.9 2.72 2.2 1.56.36 3.52.72 4.16 2.53.64-1.81 2.6-2.16 4.16-2.54 1.28-.3 2.27-1.06 2.72-2.2 1.12-2.5-1.03-4.38-1.32-6.67z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dWfbK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3 9H5c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7ExvR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 00-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5989x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 14h2V2H0v12zm6 0h1V2H6v12zm2 0h1V2H8v12zm-5 0h2V2H3v12zM15 2v12h1V2h-1zm-5 12h1V2h-1v12zm2 0h2V2h-2v12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gZb5V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var p = [];
exports.default = p;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9RSIL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.39 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.07-.01-.13-.02-.2.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.13-.39.27-.06.43-.36.5-.63.01-.03.03-.08.05-.12C8.18 7.8 6.94 6.04 6.94 4c0-.32.04-.62.09-.92-.17-.03-.35-.08-.51-.08-.65 0-1.37.2-1.88.59-.5.38-.87.92-1.05 1.51-.04.14-.07.27-.09.41-.09.48-.14 1.23-.14 1.74v.06c-.19.08-.36.27-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.12 15.5.03 16 .03 16h12.96s.15-.5-.22-1.36c-.37-.85-2.18-1.42-3.38-1.95zM11.97 0C9.75 0 7.94 1.79 7.94 4s1.8 4 4.03 4S16 6.21 16 4s-1.8-4-4.03-4zM9.96 4c0-1.1.9-2 2.01-2 .37 0 .72.11 1.02.28l-2.75 2.73c-.17-.3-.28-.64-.28-1.01zm2.01 2c-.37 0-.72-.11-1.02-.28l2.75-2.73c.18.3.28.64.28 1.01.01 1.1-.9 2-2.01 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fmCaf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.7 7c.2-.4.3-1 .3-1.5v-.4V5c0-.1 0-.2-.1-.3v-.1C11.4 3.1 10.1 2 8.5 2H4c-.5 0-1 .4-1 1v10c0 .5.4 1 1 1h5c2.2 0 4-1.8 4-4 0-1.2-.5-2.3-1.3-3zM6 5h2c.6 0 1 .4 1 1s-.4 1-1 1H6V5zm3 6H6V9h3c.6 0 1 .4 1 1s-.4 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iQKpZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 1v14c0 .55.45 1 1 1h1V0H3c-.55 0-1 .45-1 1zm11-1h-1v7l-2-2-2 2V0H5v16h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1ANjB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.2.01h-.15C11.03.01 11.02 0 11 0H5c-.02 0-.03.01-.05.01H4.8c-.44 0-.8.37-.8.82v14.75c0 .45.25.56.57.24l2.87-2.94c.31-.32.82-.32 1.13 0l2.87 2.94c.31.32.57.21.57-.24V.83C12 .38 11.64.01 11.2.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d5T2y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 10h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1zm9.93-4.37v-.02L13.94.63C13.78.26 13.42 0 13 0H3c-.42 0-.78.26-.93.63L.08 5.61l-.01.02C.03 5.74 0 5.87 0 6v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.13-.03-.26-.07-.37zM9 2h3.32l1.2 3H9V2zM3.68 2H7v3H2.48l1.2-3zM14 14H2V7h12v7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g3qsH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 3.98h-3v-2c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v4h3v-1h2v1h6v-1h2v1h3v-4c0-.55-.45-1-1-1zm-5 0H6v-1h4v1zm3 7h-2v-1H5v1H3v-1H0v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-4h-3v1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5RM7w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 14a1 1 0 010 2H2a1 1 0 010-2h12zM7.995 3.005c.55 0 1 .45 1 .999v5.584l1.29-1.288a1.002 1.002 0 011.42 1.419l-3 2.996a1.015 1.015 0 01-1.42 0l-3-2.997A1.002 1.002 0 015.705 8.3l1.29 1.29V4.013c0-.55.45-1.009 1-1.009zM14 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zM8 0a1 1 0 110 2 1 1 0 010-2zM5 0a1 1 0 110 2 1 1 0 010-2zM2 0a1 1 0 110 2 1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hGJYU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.928.629A1 1 0 0012.89.006l-9 1a1 1 0 00-.747.48L.431 6.005A.5.5 0 000 6.5v3a.5.5 0 00.5.5h2.798c.341 0 .672.116.938.329l1.952 1.561A.5.5 0 006.5 12H10a.5.5 0 00.4-.2l.9-1.2a1.5 1.5 0 011.2-.6h3a.5.5 0 00.5-.5v-4a.5.5 0 00-.308-.462L13.928.628zM12.36 2.094l-.006-.016-3.166.352 1.121 3.083 2.052-3.419zm.467 1.166l-1.649 2.748 2.51-.594-.861-2.154zM9.603 6.496L8.166 2.543l-3.563.396L2.766 6H3.5a.5.5 0 01.367.16L6.218 8.7h1.914l1.452-2.177a.5.5 0 01.019-.027zM2.5 16a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm11 0a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bEipu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.39 12.41L7.7 6l1.07-1.1c.34-.34-.12-.63.12-1.26.88-2.17 3.41-2.35 3.41-2.35s.36-.37.71-.72C9.74-.81 7.53.53 6.54 1.4L3.12 4.9l-.71.72c-.39.4-.39 1.05 0 1.45l-.7.72c-.39-.4-1.02-.4-1.41 0s-.39 1.05 0 1.45l1.41 1.45c.39.4 1.02.4 1.41 0s.39-1.05 0-1.45l.71-.72c.39.4 1.02.4 1.41 0l.8-.82 6.39 7.67c.82.82 2.14.82 2.96 0 .81-.82.81-2.15 0-2.96z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9d4KT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM6 14H4v-2h2v2zm0-3H4V9h2v2zm0-3H4V6h2v2zm3 6H7v-2h2v2zm0-3H7V9h2v2zm0-3H7V6h2v2zm3 6h-2V9h2v5zm0-6h-2V6h2v2zm0-3H4V2h8v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dfagg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 3c.6 0 1-.5 1-1V1c0-.6-.4-1-1-1s-1 .4-1 1v1c0 .5.4 1 1 1zm3-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H6v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h13c.6 0 1-.4 1-1V2c0-.6-.5-1-1-1zM5 13H2v-3h3v3zm0-4H2V6h3v3zm4 4H6v-3h3v3zm0-4H6V6h3v3zm4 4h-3v-3h3v3zm0-4h-3V6h3v3zM4 3c.6 0 1-.5 1-1V1c0-.6-.4-1-1-1S3 .4 3 1v1c0 .5.4 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4jjvx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 3h-2.59L10.7 1.29A.956.956 0 0010 1H6c-.28 0-.53.11-.71.29L3.59 3H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h2.56c1.1 1.22 2.67 2 4.44 2s3.34-.78 4.44-2H15c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM3 6H1V5h2v1zm5 6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lGXcj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6rtl2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.5 4c-.13 0-.24.05-.33.13l-4 3.5c-.1.09-.17.22-.17.37s.07.28.17.37l4 3.5a.495.495 0 00.83-.37v-7c0-.28-.22-.5-.5-.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"49Nz1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 8c0-.15-.07-.28-.17-.37l-4-3.5A.495.495 0 006 4.5v7a.495.495 0 00.83.37l4-3.5c.1-.09.17-.22.17-.37z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h0zNi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.87 9.17s.01 0 0 0l-3.5-4C8.28 5.07 8.15 5 8 5s-.28.07-.37.17l-3.5 4a.495.495 0 00.37.83h7a.495.495 0 00.37-.83z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g5M4b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 1h3a1 1 0 011 1v2h-4V1zM2.25 4a.25.25 0 00-.25.25V9H.883a.5.5 0 00-.429.757l1.072 1.787c.207.344.477.638.791.87A9.76 9.76 0 011 12.5a.5.5 0 000 1c2.067 0 3.414-.543 4.161-.917.55.373 1.505.917 2.839.917 1.32 0 2.27-.533 2.822-.905l.004.002c.196.105.48.24.856.374.75.268 1.857.529 3.318.529a.5.5 0 000-1c-.326 0-.63-.014-.916-.039.47-.328.848-.79 1.07-1.347l.572-1.428A.5.5 0 0015.26 9H4V4.25A.25.25 0 003.75 4h-1.5zm2.714 9.56a.5.5 0 01.527.033c.455.325 1.277.907 2.509.907s2.054-.582 2.51-.907a.5.5 0 01.579-.001l.006.004.036.023c.034.022.09.055.168.097.154.082.394.197.72.313.649.232 1.642.471 2.981.471a.5.5 0 010 1c-1.46 0-2.568-.261-3.318-.53a6.316 6.316 0 01-.856-.373l-.004-.002c-.552.372-1.502.905-2.822.905-1.334 0-2.289-.544-2.839-.917-.747.374-2.094.917-4.161.917a.5.5 0 010-1c2.129 0 3.384-.63 3.964-.94zM14 5h-4v3h3a1 1 0 001-1V5zM5 2a1 1 0 011-1h3v3H5V2zm4 3H5v2a1 1 0 001 1h3V5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gVRbh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.97 6.76c-.01-.05-.04-.08-.06-.13-.02-.05-.03-.1-.05-.15.08-.14.14-.3.14-.48 0-.55-.45-1-1-1s-1 .45-1 1c0 .18.06.34.14.48-.03.05-.03.1-.05.15-.02.05-.05.08-.06.13l-2 8c-.13.54.19 1.08.73 1.21a.995.995 0 001.21-.73L7.53 13h.94l.56 2.24a1 1 0 001.94-.48l-2-8zM3.72 1.7C4.1 1.3 4.09.67 3.7.28S2.67-.09 2.28.3c-3.05 3.12-3.05 8.28 0 11.4a.996.996 0 101.43-1.39c-2.28-2.35-2.28-6.27.01-8.61zM11.6 3.2c-.44-.33-1.07-.24-1.4.2-.33.44-.24 1.07.2 1.4.43.32.53 1.96-.04 2.43-.42.35-.48.98-.13 1.41.35.42.98.48 1.41.13 1.59-1.33 1.39-4.5-.04-5.57z",
    "M13.72.3c-.39-.4-1.02-.4-1.41-.02s-.41 1.02-.03 1.42c2.29 2.34 2.29 6.26 0 8.6-.39.39-.38 1.03.02 1.41s1.03.38 1.41-.02c3.05-3.11 3.05-8.27.01-11.39zM5.4 7.23c-.57-.47-.47-2.11-.04-2.43.44-.33.53-.96.2-1.4s-.96-.53-1.4-.2c-1.44 1.07-1.63 4.24-.04 5.57.42.35 1.05.3 1.41-.13.35-.42.29-1.06-.13-1.41z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cNk85":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.29 7.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L13 7.59V1c0-.55-.45-1-1-1s-1 .45-1 1v6.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42zM14.5 13h-13c-.83 0-1.5.67-1.5 1.5S.67 16 1.5 16h13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5zM1 5c.28 0 .53-.11.71-.29L3 3.41V10c0 .55.45 1 1 1s1-.45 1-1V3.41L6.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C4.53.11 4.28 0 4 0s-.53.11-.71.29l-3 3A1.003 1.003 0 001 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3adlR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V9.4L0 11v4zm6-5.5V15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-5l-1 1-3-1.5zM13 7l-1 1v7c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V7.88c-.26.07-.58.12-1 .12-1.96 0-2-1-2-1zm2-6h-3c-.55 0-1 .45-1 1s.45 1 1 1h.59L8.8 6.78 5.45 5.11v.01C5.31 5.05 5.16 5 5 5s-.31.05-.44.11V5.1l-4 2v.01C.23 7.28 0 7.61 0 8c0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L5 7.12 8.55 8.9v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L14 4.41V5c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dlC9v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 10c-1.1 0-2-.9-2-2V3H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1v2a1.003 1.003 0 001.71.71L5.41 13H10c.55 0 1-.45 1-1v-1.17l-.83-.83H6zm9-10H6c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f4YpG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L6 6.59V4c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1s1-.45 1-1V9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L7.41 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i1RfT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3UAEY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 3c-.55 0-1 .45-1 1v2.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L7.59 8 4.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L9 9.41V12c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cMEwB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jDCkE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j9pzh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.71 9.29l-4-4C8.53 5.11 8.28 5 8 5s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 7.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hsk7j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm0 14c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6zlhn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 7c-.28 0-.53.11-.71.29L9 8.59V5c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 7zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6osFN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 7H7.41L8.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C4.11 7.47 4 7.72 4 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L7.41 9H11c.55 0 1-.45 1-1s-.45-1-1-1zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dM0Ho":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.71 4.29a1.003 1.003 0 00-1.42 1.42L8.59 7H5c-.55 0-1 .45-1 1s.45 1 1 1h3.59L7.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hOCLg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.71 4.29C8.53 4.11 8.28 4 8 4s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L7 7.41V11c0 .55.45 1 1 1s1-.45 1-1V7.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6N4L3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.02 5c0-1.66-1.34-3-3-3s-3 1.34-3 3a2.996 2.996 0 003.6 2.94C12.1 9.76 11.14 11 10.02 11c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5-3.13 5-7 0-.2-.02-.39-.04-.58.01-.14.04-.28.04-.42zm-11-3c-1.66 0-3 1.34-3 3a2.996 2.996 0 003.6 2.94C4.1 9.76 3.14 11 2.02 11c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5-3.13 5-7 0-.2-.02-.39-.04-.58.01-.14.04-.28.04-.42 0-1.66-1.35-3-3-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bkOHA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 8l-1.2 2.796-2.8 1.2 2.8 1.197L12 16l1.2-2.807L16 12l-2.8-1.204zM5 0L3.5 3.5 0 4.995 3.5 6.5 5 10l1.5-3.5L10 5 6.5 3.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gqzUt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 1a1 1 0 011-1h4a1 1 0 010 2H2v3a1 1 0 01-2 0V1zm1 15a1 1 0 01-1-1v-4a1 1 0 112 0v3h3a1 1 0 110 2H1zm14 0a1 1 0 001-1v-4a1 1 0 10-2 0v3h-3a1 1 0 100 2h4zm0-16a1 1 0 011 1v4a1 1 0 11-2 0V2h-3a1 1 0 110-2h4zM8 11a3 3 0 100-6 3 3 0 000 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fcTFE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 2c0-.55-.45-1-1-1h.22C9.88.4 9.24 0 8.5 0S7.12.4 6.78 1H7c-.55 0-1 .45-1 1v1h5V2zm2 0h-1v2H5V2H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8eil3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 6c-.03 0-.07 0-.1.01A5 5 0 002 7c0 .11.01.22.02.33A3.51 3.51 0 000 10.5C0 12.43 1.57 14 3.5 14H12c2.21 0 4-1.79 4-4s-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6iccg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 11c-.28 0-.53.11-.71.29L9 12.59V8c0-.55-.45-1-1-1s-1 .45-1 1v4.59L5.71 11.3A.965.965 0 005 11a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 11zm1-7c-.03 0-.07 0-.1.01A5 5 0 002 5c0 .11.01.22.02.33A3.51 3.51 0 000 8.5c0 1.41.84 2.61 2.03 3.17C2.2 10.17 3.46 9 5 9c.06 0 .13.02.19.02C5.07 8.7 5 8.36 5 8c0-1.66 1.34-3 3-3s3 1.34 3 3c0 .36-.07.7-.19 1.02.06 0 .13-.02.19-.02 1.48 0 2.7 1.07 2.95 2.47A3.964 3.964 0 0016 8c0-2.21-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hZFNs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.71 7.29C8.53 7.11 8.28 7 8 7s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L7 10.41V15c0 .55.45 1 1 1s1-.45 1-1v-4.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM12 4c-.03 0-.07 0-.1.01A5 5 0 002 5c0 .11.01.22.02.33a3.495 3.495 0 00.07 6.37c-.05-.23-.09-.46-.09-.7 0-.83.34-1.58.88-2.12l3-3a2.993 2.993 0 014.24 0l3 3c.54.54.88 1.29.88 2.12 0 .16-.02.32-.05.47C15.17 10.78 16 9.5 16 8c0-2.21-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2cxYi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.71 7.29l-3-3a1.003 1.003 0 00-1.42 1.42L13.59 8l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM5 5a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L2.41 8 4.7 5.71c.19-.18.3-.43.3-.71zm4-3c-.48 0-.87.35-.96.81l-2 10c-.01.06-.04.12-.04.19 0 .55.45 1 1 1 .48 0 .87-.35.96-.81l2-10c.01-.06.04-.12.04-.19 0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"49yXd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 3h-2V2c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1H7V2c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-8.29 8.29a1.003 1.003 0 01-1.42 1.42l-3-3C2.11 9.53 2 9.28 2 9s.11-.53.29-.71l3-3a1.003 1.003 0 011.42 1.42L4.41 9l2.3 2.29zm7-1.58l-3 3a1.003 1.003 0 01-1.42-1.42L11.59 9l-2.3-2.29a1.003 1.003 0 011.42-1.42l3 3c.18.18.29.43.29.71s-.11.53-.29.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1yEP9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.19 6.39h-1.85c-.11-.37-.27-.71-.45-1.04l1.36-1.36c.31-.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 00-1.13 0l-1.36 1.36c-.33-.17-.67-.33-1.04-.44V.79c0-.44-.36-.8-.8-.8h-1.6c-.44 0-.8.36-.8.8v1.86c-.39.12-.75.28-1.1.47l-1.3-1.3c-.3-.3-.79-.3-1.09 0L1.82 2.91c-.3.3-.3.79 0 1.09l1.3 1.3c-.2.34-.36.7-.48 1.09H.79c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.85c.11.37.27.71.45 1.04l-1.36 1.36c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.13 0l1.36-1.36c.33.18.67.33 1.04.44v1.86c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.8v-1.86c.39-.12.75-.28 1.1-.47l1.3 1.3c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.79 0-1.09l-1.3-1.3c.19-.35.36-.71.48-1.1h1.85c.44 0 .8-.36.8-.8v-1.6a.816.816 0 00-.81-.79zm-7.2 4.6c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fhEO7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.29 6.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L8 4.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4zm1.42 2.58C8.53 9.11 8.28 9 8 9s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 11.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"53Q5H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.093 7c.017-.05.036-.1.058-.15.106-.248.225-.397.263-.436L7 2.828 11.172 7H3.093zM6.5 13c1 0 2.5-1 3-1.5l3.086-3.086L14 7l-1.414-1.414-4.172-4.172L7 0 5.586 1.414 2 5c-.5.5-1 1.5-1 2.5s.5 2 1 2.5l2 2c.5.5 1.5 1 2.5 1zm7-4l1.125 1.667c.238.353.375.666.375 1 0 .666-.375 1.333-1.5 1.333s-1.5-.667-1.5-1.333c0-.334.137-.647.375-1L13.5 9zM0 15a1 1 0 011-1h14a1 1 0 110 2H1a1 1 0 01-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1DMKe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 13H2V3h2v10zm3 0H5V3h2v10zm7 0H8V3h6v10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iiZBE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 1H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h2v3a1.003 1.003 0 001.71.71L8.41 12H14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM3.5 8C2.67 8 2 7.33 2 6.5S2.67 5 3.5 5 5 5.67 5 6.5 4.33 8 3.5 8zm4 0C6.67 8 6 7.33 6 6.5S6.67 5 7.5 5 9 5.67 9 6.5 8.33 8 7.5 8zm4 0c-.83 0-1.5-.67-1.5-1.5S10.67 5 11.5 5s1.5.67 1.5 1.5S12.33 8 11.5 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cMLev":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.99-.01c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1v-14c0-.55-.45-1-1-1zm-3 3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm10 0h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-4v-2h4v2zm0 3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-4v-2h4v2zm-10-3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Spwi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 8c0 .14-.03.27-.08.39l-3 6.99c-.15.37-.51.62-.92.62s-.77-.25-.92-.61l-3-6.99a1.006 1.006 0 010-.79l3-6.99C7.23.25 7.59 0 8 0s.77.25.92.61l3 6.99c.05.13.08.26.08.4zM8 3.54L6.09 8h3.82L8 3.54z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hYC5y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.93 5.63v-.02L13.94.63C13.78.26 13.42 0 13 0H3c-.42 0-.78.26-.93.63L.08 5.61l-.01.02C.03 5.74 0 5.87 0 6v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.13-.03-.26-.07-.37zM9 2h3.32l1.2 3H9V2zM3.68 2H7v3H2.48l1.2-3zM14 14H2V7h5v2.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L9 9.59V7h5v7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jhJtL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.7 4.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 00-1.42-1.42l-4.29 4.3L8.7 4.29zm5.22 3.01c.03.23.07.45.07.69 0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6c.81 0 1.59.17 2.3.46l1.5-1.5A7.998 7.998 0 00-.01 7.99c0 4.42 3.58 8 8 8s8-3.58 8-8c0-.83-.13-1.64-.36-2.39l-1.71 1.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ahNYH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 15H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h14c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zM14 5H2v8h12V5zM4 6c.28 0 .53.11.71.29l2 2c.18.18.29.43.29.71s-.11.53-.29.71l-2 2a1.003 1.003 0 01-1.42-1.42L4.59 9l-1.3-1.29A1.003 1.003 0 014 6zm5 4h3c.55 0 1 .45 1 1s-.45 1-1 1H9c-.55 0-1-.45-1-1s.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dU2Cx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.2 6.4h-1.44c-.13-.47-.32-.92-.56-1.34L14.26 4c.31-.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 00-1.13 0L10.94 2.8c-.42-.24-.86-.42-1.34-.56V.8c0-.44-.36-.8-.8-.8H7.2c-.44 0-.8.36-.8.8v1.44c-.5.14-.96.34-1.4.59l-1-1c-.3-.3-.79-.3-1.09 0L1.83 2.91c-.3.3-.3.79 0 1.09l1 1c-.25.44-.45.9-.59 1.4H.8c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.44c.13.47.32.92.56 1.34L1.74 12c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.13 0l1.06-1.06c.42.24.86.42 1.34.56v1.44c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.8v-1.44c.5-.14.96-.33 1.4-.59l1 1c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.79 0-1.09l-1-1c.25-.43.45-.9.59-1.4h1.44c.44 0 .8-.36.8-.8V7.2a.818.818 0 00-.81-.8zM8 12c-2.21 0-4-1.79-4-4s1.79-4 4-4v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"amVdJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 8H8v5h5V8zm0-5H8v4h5V3zm2-3H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V2h12v12zM7 3H3v10h4V3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jI4WL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.99 2.95h-14c-.55 0-1 .45-1 1v1h16v-1c0-.55-.45-1-1-1zm-15 10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-6h-16v6zm5.5-2h5c.28 0 .5.22.5.5s-.22.5-.5.5h-5c-.28 0-.5-.22-.5-.5s.23-.5.5-.5zm-3 0h1c.28 0 .5.22.5.5s-.22.5-.5.5h-1c-.28 0-.5-.22-.5-.5s.23-.5.5-.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"01rSF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L8 6.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L9.41 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3GxNT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 6l3 2 3-4 3 4 3-2-1 6H3L2 6zm6-5a1 1 0 110 2 1 1 0 010-2zM1 3a1 1 0 110 2 1 1 0 010-2zm14 0a1 1 0 110 2 1 1 0 010-2zM3 13h10v2H3v-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cQHpX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.194 3.54L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l5.698 3.255zm.75.71a1 1 0 01.056.33v6.84a1 1 0 01-.504.868L8.5 15.714V8.277l6.444-4.027zm-13.888 0L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9JcBu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 2h1a1 1 0 010 2h-1v1a1 1 0 01-2 0V4h-1a1 1 0 010-2h1V1a1 1 0 012 0v1zM9.136.65a3.001 3.001 0 00.992 5.222c.018.058.038.115.059.172L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l.64.365zM15 7.235v4.184a1 1 0 01-.504.868L8.5 15.714V8.277l2.187-1.367A2.994 2.994 0 0013 8c.768 0 1.47-.289 2-.764zM1.056 4.25L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kZ3Fv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.365 5.933L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l.64.365a3.001 3.001 0 001.228 5.283zM15 6v5.42a1 1 0 01-.504.868L8.5 15.714V8.277L12.143 6H15zM1.056 4.25L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33zM11 2h4a1 1 0 010 2h-4a1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ela5G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 12H3.12l1.81-1.39c1.73 1.01 5.53-.03 9.08-2.61l-1.22-1.5C10.3 8.3 7.86 9.37 6.65 9.29L14.3 3.4l-.6-.8-7.83 6.03c-.01-1.07 1.8-3.19 4.47-5.13L9.12 2C5.38 4.7 3.34 8.1 4.25 9.87L2 11.6V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7wmpl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 2s.71-1.29 0-2L8.66 5.07l1.05 1.32L13 2zm.07 8c-.42 0-.82.09-1.18.26L3.31 0c-.69.71 0 2 0 2l3.68 5.02-2.77 3.24A2.996 2.996 0 000 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-.46-.11-.89-.29-1.27L8.1 8.54l2.33 3.19c-.18.39-.29.82-.29 1.27 0 1.66 1.31 3 2.93 3S16 14.66 16 13s-1.31-3-2.93-3zM3 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm10.07 0c-.54 0-.98-.45-.98-1s.44-1 .98-1 .98.45.98 1-.44 1-.98 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gWofA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 9a3 3 0 110 6 3 3 0 010-6zM3 9a3 3 0 110 6 3 3 0 010-6zm6.169-5.27l.087.09 1.51 1.746 1.589.549a1 1 0 01.65 1.16l-.032.112a1 1 0 01-1.159.65l-.112-.032-1.843-.636a1 1 0 01-.337-.198l-.092-.093-.959-1.109L7.041 7.5l1.691 1.819a1 1 0 01.26.556L9 10v3a1 1 0 01-1.993.117L7 13l-.001-2.608-2.056-2.211a1 1 0 01-.081-1.264l.082-.1 2.825-3.026a1 1 0 011.4-.061zM13 10.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm-10 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zM11 1a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ioIjL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM4 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-2c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-2 6c0 1.1.9 2 2 2s2-.9 2-2c0-.53-2-5-2-5s-2 4.47-2 5zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm4-9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"10fOk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 9.52c.889.641 2.308 1.133 4.003 1.354L5 11a5.994 5.994 0 002.664 4.988c-.217.008-.44.012-.664.012-3.215 0-5.846-.85-5.993-1.906L1 14V9.52zM11 6c2.762 0 5 2.238 5 5s-2.238 5-5 5-5-2.238-5-5 2.238-5 5-5zm1 1l-4 5h2.5l-.5 3 4-5h-2.5l.5-3zm1-3.48v1.822a6.002 6.002 0 00-7.9 4.556l-.248-.03c-2.168-.28-3.733-.966-3.845-1.774L1 8V3.52C2.22 4.4 4.44 5 7 5s4.78-.6 6-1.48zM7 0c3.31 0 6 .9 6 2s-2.69 2-6 2c-3.32 0-6-.9-6-2s2.68-2 6-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"brJrp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.067 0C.477 0 0 .478 0 1.067V3.2c0 .59.478 1.067 1.067 1.067h2.24a5.342 5.342 0 002.9 3.734 5.337 5.337 0 00-2.9 3.733h-2.24C.477 11.733 0 12.21 0 12.8v2.133C0 15.523.478 16 1.067 16H6.4c.59 0 1.067-.478 1.067-1.067V12.8c0-.59-.478-1.067-1.067-1.067H4.401a4.27 4.27 0 013.92-3.194l.212-.006V9.6c0 .59.478 1.067 1.067 1.067h5.333c.59 0 1.067-.478 1.067-1.067V6.4c0-.59-.478-1.067-1.067-1.067H9.6c-.59 0-1.067.478-1.067 1.067v1.067a4.268 4.268 0 01-4.132-3.2H6.4c.59 0 1.067-.478 1.067-1.067V1.067C7.467.477 6.989 0 6.4 0H1.067z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Y7Xd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 4c3.31 0 6-.9 6-2s-2.69-2-6-2C4.68 0 2 .9 2 2s2.68 2 6 2zm-6-.48V8c0 1.1 2.69 2 6 2s6-.9 6-2V3.52C12.78 4.4 10.56 5 8 5s-4.78-.6-6-1.48zm0 6V14c0 1.1 2.69 2 6 2s6-.9 6-2V9.52C12.78 10.4 10.56 11 8 11s-4.78-.6-6-1.48z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dVJbf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.99 4.99a1.003 1.003 0 00-1.71-.71l-2.29 2.3L5.7 4.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2.29 2.29-2.29 2.29A1.003 1.003 0 005.7 11.7l2.29-2.29 2.29 2.29a1.003 1.003 0 001.42-1.42L9.41 7.99 11.7 5.7c.18-.18.29-.43.29-.71zm-4-5c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jjn50":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0L0 16h16L8 0zM7 5l5 10H2L7 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dxrbw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.08 6.67h-.84c.24-.92.56-1.6.96-2.03.24-.27.48-.4.71-.4.05 0 .08.01.11.04s.04.06.04.1c0 .04-.03.11-.1.21-.06.1-.1.2-.1.29 0 .13.05.24.15.33.1.09.23.14.39.14.17 0 .31-.06.42-.17A.58.58 0 008 4.73c0-.22-.09-.39-.26-.53-.17-.13-.44-.2-.81-.2-.59 0-1.12.16-1.59.48-.48.32-.93.85-1.36 1.59-.15.26-.29.42-.42.49s-.35.11-.64.1l-.19.65h.81l-1.19 4.37c-.2.72-.33 1.16-.4 1.33-.1.24-.26.45-.46.62-.08.07-.18.1-.3.1-.03 0-.06-.01-.08-.03l-.03-.04c0-.02.03-.06.09-.11.06-.06.09-.14.09-.26 0-.13-.05-.23-.14-.32a.6.6 0 00-.4-.13c-.21 0-.38.05-.51.16s-.21.25-.21.4c0 .16.08.3.23.42.16.12.4.18.74.18.53 0 .99-.13 1.4-.39.41-.26.76-.65 1.07-1.19.3-.54.62-1.4.94-2.59l.68-2.53h.82l.2-.63zM15 0H8c-.55 0-1 .45-1 1v2h2V2h5v12H9v-1H7v2c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM8.3 9.94c.18.52.33.89.46 1.13.13.24.28.4.44.51.17.1.37.16.62.16.24 0 .49-.08.74-.25.33-.21.66-.58 1.01-1.09l-.21-.11c-.23.31-.41.5-.52.57a.44.44 0 01-.26.07c-.12 0-.24-.07-.36-.21-.2-.24-.46-.91-.8-2 .3-.49.55-.81.75-.96.15-.11.3-.16.47-.16.06 0 .17.02.34.06.16.04.31.06.43.06.17 0 .31-.06.43-.17.1-.11.16-.25.16-.43 0-.19-.06-.33-.17-.44-.12-.11-.28-.16-.49-.16-.19 0-.37.04-.54.13-.17.09-.39.27-.65.56-.2.21-.48.58-.87 1.11-.15-.66-.41-1.26-.78-1.81l-2.05.33-.04.21c.15-.03.28-.04.39-.04.2 0 .37.08.5.25.21.26.5 1.03.88 2.33-.29.37-.49.61-.6.72-.18.18-.33.3-.44.36-.09.04-.19.07-.3.07-.09 0-.23-.04-.42-.13a.866.866 0 00-.36-.09c-.2 0-.36.06-.49.18a.59.59 0 00-.19.46c0 .17.06.32.18.43.12.11.28.16.48.16.2 0 .38-.04.55-.11.17-.08.39-.24.65-.49.24-.27.6-.66 1.06-1.21z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2YjRd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1v10c0 .55.45 1 1 1h4.75l-.5 2H4c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1h-1.25l-.5-2H15c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 10H2V2h12v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2YIVi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.2 1a1 1 0 01.117 1.993L3.2 3H3v3a2 2 0 001.85 1.995L5 8a2 2 0 001.995-1.85L7 6V3h-.2a1 1 0 01-.993-.883L5.8 2a1 1 0 01.883-.993L6.8 1H8a1 1 0 01.993.883L9 2v4a4.002 4.002 0 01-3.007 3.876v.007L6 10a3 3 0 005.995.176L12 10V7.792a2.5 2.5 0 112 0V10a5 5 0 01-10 0c0-.042.003-.084.008-.125A4 4 0 011.005 6.2L1 6V2a1 1 0 01.883-.993L2 1h1.2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aNsgh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 8v3h-2V9H9v2H7V9H3v2H1V8a1 1 0 011-1h5V5h2v2h5a1 1 0 011 1zM1 12h2a1 1 0 011 1v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a1 1 0 011-1zm12 0h2a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1zm-6 0h2a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1v-2a1 1 0 011-1zM7 0h2a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1V1a1 1 0 011-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"81CPH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 1.99l-16 6 16 6-4-6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cdzgS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 7.99l-16-6 4 6-4 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7N1de":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm-6 8c0-3.31 2.69-6 6-6 1.3 0 2.49.42 3.47 1.12l-8.35 8.35c-.7-.98-1.12-2.17-1.12-3.47zm6 6c-1.3 0-2.49-.42-3.47-1.12l8.35-8.35c.7.98 1.12 2.17 1.12 3.47 0 3.32-2.68 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"etQxP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 5a1 1 0 11-2 0 1 1 0 012 0zM5 7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1H5zm3 5a1 1 0 100-2 1 1 0 000 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1k5nU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l35t1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 12c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1h1.59L1.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L6 10.41V12zm4-12H4c-.55 0-1 .45-1 1v4h2V2h4v4h4v8H5.24l-1.8 1.8c.16.12.35.2.56.2h10c.55 0 1-.45 1-1V5l-5-5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8MjCZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 14H2V2h4v4h1c0-.83.36-1.55.91-2.09l-.03-.03.9-.9C8.3 2.45 8 1.77 8 1L7 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V8.22c-.53.48-1.23.78-2 .78v5zm5-14h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 3.41V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7smPp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.83 9.51c-.1-.3-.25-.58-.45-.84s-.45-.49-.75-.7c-.3-.2-.65-.36-1.05-.48-.16-.04-.43-.11-.8-.2-.35-.09-.73-.18-1.12-.28-.39-.1-.74-.19-1.06-.27-.31-.08-.49-.12-.54-.13-.43-.12-.78-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72.14-.19.32-.34.54-.46.22-.11.46-.19.72-.24.26-.05.52-.08.77-.08.74 0 1.35.15 1.83.46.48.3.75.83.81 1.56h2.14c0-.6-.13-1.13-.38-1.58-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7-.24-.06-.49-.1-.75-.14V1c0-.55-.45-1-1-1s-1 .45-1 1v1.08c-.23.03-.46.07-.68.13-.54.13-1.02.34-1.44.61-.42.28-.76.63-1.02 1.05-.26.43-.39.93-.39 1.5 0 .3.04.59.13.88.09.29.23.56.44.82.21.26.48.49.83.7.35.21.79.38 1.31.51.85.21 1.56.38 2.14.52.58.13 1.08.28 1.52.42.25.09.48.23.69.44.21.21.32.53.32.97 0 .21-.05.42-.14.63-.09.21-.24.39-.45.55-.21.16-.47.29-.81.39-.33.1-.73.15-1.2.15-.43 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.16-.31-.24-.68-.24-1.12H3c.01.71.15 1.32.43 1.84.27.52.64.94 1.1 1.27.46.33.99.58 1.61.74.27.07.56.12.85.16V15c0 .55.45 1 1 1s1-.45 1-1v-1.05c.3-.03.61-.08.9-.15.58-.13 1.1-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.31-.05-.61-.15-.91z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b7fPN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 5a3 3 0 100 6 3 3 0 100-6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lq2OL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.71 7.29l-3-3A1.003 1.003 0 009 5v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM6 4c-.28 0-.53.11-.71.29l-3 3C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l3 3A1.003 1.003 0 007 11V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dQ8Na":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 7h6a1.003 1.003 0 00.71-1.71l-3-3C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-3 3A1.003 1.003 0 005 7zm6 2H5a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aidRm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.29 8.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L8 6.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4zM12 8c-.28 0-.53.11-.71.29L8 11.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3csKO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L9.41 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fVm6Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 00-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jD6c9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 8c.28 0 .53-.11.71-.29L8 4.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-4 4A1.003 1.003 0 004 8zm4.71-.71C8.53 7.11 8.28 7 8 7s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l5OjT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.86 7h4.05C15.45 3.39 12.61.52 9 .07v4.07A4 4 0 0111.86 7zM12 8c0 2.21-1.79 4-4 4s-4-1.79-4-4 1.79-4 4-4V0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8h-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"K95N8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM11.7 9.7l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-3-3A1.003 1.003 0 015.7 8.28l1.29 1.29V3.99c0-.55.45-1 1-1s1 .45 1 1v5.59l1.29-1.29a1.003 1.003 0 011.71.71c0 .27-.11.52-.29.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lTP0e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm8-2c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-4-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5wR1G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-6c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4 8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1FdRp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.9 11c-.3 0-.5.1-.7.3l-3 3c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1zm-1-1v-.2l-1-5c-.1-.3-.3-.6-.6-.7l-11-4-.3.3 5.8 5.8c.2-.1.4-.2.6-.2.8 0 1.5.7 1.5 1.5S8.3 9 7.4 9s-1.5-.7-1.5-1.5c0-.2.1-.4.2-.6L.3 1.1l-.3.3 4 11c.1.3.4.6.7.6l5 1h.2c.3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4XjZM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 0a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h6zM6 2H2v12h4V2zm2 5h4.59L11.3 5.71A.965.965 0 0111 5a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42L12.59 9H8V7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jZASl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 0h6a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1zm7 7h4.59L11.3 5.71A.965.965 0 0111 5a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42L12.59 9H8V7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iwz1K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 011 1v14a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1h6zm-1 2h-4v12h4V2zM8 7H3.41L4.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 9H8V7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j0S3S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 0h6a1 1 0 011 1v14a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1zM8 7H3.41L4.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 9H8V7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aTu9j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.12 4.76h-1.05l-.76-2.12c-.19-.53-.76-1.08-1.27-1.24 0 0-1.32-.4-4.04-.4-2.72 0-4.04.4-4.04.4-.5.16-1.07.71-1.26 1.24l-.77 2.12H.88c-.48 0-.88.42-.88.94s.4.94.88.94h.38L1 7c-.03.69 0 1.44 0 2v5c0 .66.38 1 1 1s1-.34 1-1v-1h10v1c0 .66.38 1 1 1s1-.34 1-1V9c0-.56-.01-1.37 0-2l-.26-.37h.38c.48 0 .88-.42.88-.93 0-.52-.4-.94-.88-.94zM5 10H3V8h2v2zm8 0h-2V8h2v2zm0-4H3c-.18 0-.06-.82 0-1l.73-1.63C3.79 3.19 3.82 3 4 3h8c.18 0 .21.19.27.37L13 5c.06.18.18 1 0 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"muYcs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H5c-.55 0-1 .45-1 1v2h2V2h8v7h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 10H2V6h8v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kGIga":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"R0Gsk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 9h8a1.003 1.003 0 00.71-1.71l-4-4C8.53 3.11 8.28 3 8 3s-.53.11-.71.29l-4 4A1.003 1.003 0 004 9zm8 1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gKRXg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0a8 8 0 110 16A8 8 0 018 0zm0 1a7 7 0 100 14A7 7 0 008 1zM4 8c.228 2.262 2 4 4 4 1.938 0 3.77-1.738 3.984-3.8L12 8h1c-.128 2.888-2.317 5-5 5a5 5 0 01-4.995-4.783L3 8h1zm2-3a1 1 0 110 2 1 1 0 010-2zm4 0a1 1 0 110 2 1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jYm52":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.86 7.5l-.81-1.42V4.5c0-.36-.19-.68-.49-.87l-1.37-.8-.81-1.41c-.19-.31-.51-.49-.86-.49H9.89L8.5.14a.948.948 0 00-1 0l-1.39.8H4.52a1 1 0 00-.86.49l-.8 1.37-1.44.83c-.3.19-.49.51-.49.87v1.65l-.8 1.37c-.08.15-.13.32-.13.49s.05.34.14.49l.8 1.37v1.65c0 .36.19.68.49.87l1.42.81.8 1.37c.19.31.51.49.86.49H6.1l1.39.8c.15.09.32.14.48.14s.34-.05.49-.14l1.39-.8h1.63a1 1 0 00.86-.49l.81-1.41 1.37-.8c.3-.19.49-.51.49-.87V9.93l.81-1.42a.89.89 0 00.04-1.01zm-4.12-.82l-4.01 4.01c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-2-2c-.18-.19-.3-.44-.3-.71a1.003 1.003 0 011.71-.71l1.3 1.3 3.3-3.3a1.003 1.003 0 011.71.71.95.95 0 01-.29.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jHuTU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 3.06v9.88L4.94 8 0 3.06zM14.94 2H1.06L8 8.94 14.94 2zm-6.41 8.53c-.14.14-.32.22-.53.22s-.39-.08-.53-.22L6 9.06 1.06 14h13.88L10 9.06l-1.47 1.47zM11.06 8L16 12.94V3.06L11.06 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c0nHQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 5h10a1 1 0 010 2H3a1 1 0 110-2zm0 4h10a1 1 0 010 2H3a1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4PuqW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.06 13.91l7.63-7.44c.41-.4.41-1.05 0-1.45L10.86.3c-.41-.4-1.08-.4-1.49 0L.31 9.13c-.41.4-.41 1.05 0 1.45l5.58 5.44h8.12v-.01c.55 0 1-.45 1-1s-.45-1-1-1H7.96l.1-.1zm-2.17.06L1.67 9.85l4.22-4.11 4.22 4.11-4.22 4.12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Q1AOz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13h-2v-2h2v2zm0-3h-2v-7h2v7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dMSD6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.52 3.18c.51-.27 1.12-.4 1.83-.4.48 0 .91.06 1.27.18.37.12.68.29.96.51.18.14.3.33.44.51l1.53-1.53c-.12-.11-.23-.22-.36-.32a5.61 5.61 0 00-1.74-.83c-.66-.2-1.36-.3-2.1-.3-.99 0-1.88.18-2.66.53-.79.35-1.45.82-2 1.41-.55.58-.96 1.27-1.26 2.06H2c-.55 0-1 .45-1 1s.45 1 1 1h.04c-.01.17-.04.33-.04.5 0 .17.03.33.04.5H2c-.55 0-1 .45-1 1s.45 1 1 1h.43c0 .01 0 .02.01.02a6.2 6.2 0 001.25 2.07 5.77 5.77 0 002 1.4c.78.34 1.67.51 2.66.51.81 0 1.54-.12 2.21-.36.67-.24 1.25-.59 1.75-1.03l.03-.03-1.55-1.33c-.01.01-.02.03-.03.04-.29.3-.63.53-1.02.69-.4.17-.85.25-1.37.25-.71 0-1.32-.13-1.83-.4s-.93-.62-1.25-1.07c-.19-.24-.34-.49-.46-.76H9c.55 0 1-.45 1-1s-.45-1-1-1H4.35c-.01-.17-.03-.33-.03-.5 0-.17.02-.34.03-.5H10c.55 0 1-.45 1-1s-.45-1-1-1H4.83c.13-.27.27-.52.44-.76.32-.44.74-.8 1.25-1.06zM14 8.98v0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9uro7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.99 5.99c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zm4.15 1.86a.495.495 0 10.7-.7L5.7 5.99h5.79c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H5.7l1.15-1.15a.495.495 0 10-.7-.7l-2 2c-.1.09-.16.21-.16.35s.06.26.15.35l2 2.01zm7.85-1.86c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zM9.85 8.14a.533.533 0 00-.36-.15.495.495 0 00-.35.85l1.15 1.15h-5.8c-.28 0-.5.22-.5.5s.22.5.5.5h5.79l-1.15 1.15a.495.495 0 10.7.7l2-2c.09-.09.15-.22.15-.35s-.06-.26-.15-.35l-1.98-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iNWHh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 10a1.003 1.003 0 001.71.71L3 9.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 8 5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L3 6.59l-1.29-1.3A1.003 1.003 0 00.29 6.71L1.59 8 .29 9.29C.11 9.47 0 9.72 0 10zm1-7h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 10H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-1-7H9c-1.1 0-2 .9-2 2s.9 2 2 2h5c1.1 0 2-.9 2-2s-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"89uHN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 7c.28 0 .53-.11.71-.29L8 3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-4 4A1.003 1.003 0 004 7zm8 2c-.28 0-.53.11-.71.29L8 12.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jLPCm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 6c.28 0 .53-.11.71-.29L7 3.41V11c0 .55.45 1 1 1s1-.45 1-1V3.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53.11 8.28 0 8 0s-.53.11-.71.29l-4 4A1.003 1.003 0 004 6zm11 5c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aVFJP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 7.97v-.02-.01-.02-.02a.672.672 0 00-.17-.36c-.49-.63-1.07-1.2-1.65-1.72l-3.16 2.26a2.978 2.978 0 01-2.98 2.9c-.31 0-.6-.06-.88-.15L5.09 12.3c.44.19.9.36 1.37.47.97.23 1.94.24 2.92.05.88-.17 1.74-.54 2.53-.98 1.25-.7 2.39-1.67 3.38-2.75.18-.2.37-.41.53-.62.09-.1.15-.22.17-.36v-.02-.02-.01-.02-.03c.01-.02.01-.03.01-.04zm-.43-4.17c.25-.18.43-.46.43-.8 0-.55-.45-1-1-1-.22 0-.41.08-.57.2l-.01-.01-2.67 1.91c-.69-.38-1.41-.69-2.17-.87a6.8 6.8 0 00-2.91-.05c-.88.18-1.74.54-2.53.99-1.25.7-2.39 1.67-3.38 2.75-.18.2-.37.41-.53.62-.23.29-.23.63-.01.92.51.66 1.11 1.25 1.73 1.79.18.16.38.29.56.44l-2.09 1.5.01.01c-.25.18-.43.46-.43.8 0 .55.45 1 1 1 .22 0 .41-.08.57-.2l.01.01 14-10-.01-.01zm-10.41 5a3.03 3.03 0 01-.11-.8 2.99 2.99 0 012.99-2.98c.62 0 1.19.21 1.66.53L5.16 8.8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"emkcS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.29 6.7c.18.18.43.29.71.29s.53-.11.71-.29l4-4c.17-.18.29-.43.29-.7a1.003 1.003 0 00-1.71-.71L11 4.58 9.71 3.29A.997.997 0 009 3c-.55 0-1 .44-1 1a1 1 0 00.3.7l1.99 2zM16 7.96v-.02-.01-.02-.02a.64.64 0 00-.17-.36c-.3-.4-.65-.76-1-1.12l-1.7 1.7c-.55.55-1.3.88-2.13.88-.06 0-.11-.01-.17-.02C10.42 10.15 9.32 11 8.01 11A3.005 3.005 0 016.4 5.46c-.24-.43-.39-.93-.39-1.46 0-.26.04-.5.1-.74-.7.2-1.37.5-2.01.86-1.26.7-2.4 1.68-3.4 2.77-.18.21-.36.41-.53.63-.22.29-.22.64 0 .93.51.67 1.12 1.27 1.73 1.81 1.33 1.17 2.85 2.15 4.53 2.55.97.23 1.95.24 2.92.05.89-.18 1.74-.54 2.54-.99 1.25-.71 2.4-1.69 3.39-2.78.18-.2.37-.41.54-.63.09-.1.15-.23.17-.37v-.02-.02-.01-.02-.03c.01-.01.01-.02.01-.03zM8.01 9c.48 0 .87-.35.96-.81a.55.55 0 01-.07-.09l-.02.01L7.8 7.03c-.45.1-.79.48-.79.96 0 .56.45 1.01 1 1.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1XwXT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.002 7.003a1.003 1.003 0 000 2.005 1.003 1.003 0 000-2.005zm7.988.972v-.02-.01-.02-.02a.675.675 0 00-.17-.36c-.509-.673-1.118-1.264-1.737-1.806-1.328-1.173-2.846-2.155-4.523-2.546a6.702 6.702 0 00-2.925-.06c-.889.18-1.738.541-2.546.992C2.84 4.837 1.692 5.81.694 6.902c-.18.211-.36.411-.53.632a.742.742 0 000 .932c.51.672 1.119 1.264 1.738 1.805 1.328 1.173 2.846 2.156 4.523 2.547.968.23 1.947.24 2.925.04.889-.18 1.738-.542 2.546-.993 1.248-.712 2.397-1.684 3.395-2.777.18-.2.37-.411.54-.632.09-.1.149-.23.169-.36v-.02-.02-.01-.02-.03c0-.01-.01-.01-.01-.02zm-7.988 3.038a2.998 2.998 0 01-2.995-3.008 2.998 2.998 0 012.995-3.008 2.998 2.998 0 012.996 3.008 2.998 2.998 0 01-2.996 3.008z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gaMz3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 3c-.24 0-.44.09-.62.23l-.01-.01L9 6.72V4c0-.55-.45-1-1-1-.24 0-.44.09-.62.23v-.01l-5 4 .01.01C2.16 7.41 2 7.68 2 8s.16.59.38.77v.01l5 4 .01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V9.28l4.38 3.5.01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7yd1W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 8c0-.32-.16-.59-.38-.77l.01-.01-5-4-.01.01A.987.987 0 009 3c-.55 0-1 .45-1 1v2.72l-4.38-3.5v.01A.987.987 0 003 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01L8 9.28V12c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01 5-4-.01-.01c.22-.18.38-.45.38-.77z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5vNpO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.99 11.99c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zm1-4c-.55 0-1 .45-1 1s.45 1 1 1c1.66 0 3 1.34 3 3 0 .55.45 1 1 1s1-.45 1-1c0-2.76-2.24-5-5-5zm0-4c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7 3.13 7 7 0 .55.45 1 1 1s1-.45 1-1a9 9 0 00-9-9zm0-4c-.55 0-1 .45-1 1s.45 1 1 1c6.08 0 11 4.92 11 11 0 .55.45 1 1 1s1-.45 1-1c0-7.18-5.82-13-13-13z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5i8WQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 2c1.06 0 2.08.16 3.06.45.13-.71.52-1.32 1.05-1.76C5.82.25 4.44 0 3 0c-.55 0-1 .45-1 1s.45 1 1 1zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm8.32-6.33a.99.99 0 001.4 0l3.98-3.98c.19-.18.3-.42.3-.7 0-.55-.45-.99-1-.99-.28 0-.52.11-.7.29l-3.28 3.28-1.29-1.29a.99.99 0 00-.7-.29 1 1 0 00-1 .99c0 .27.11.52.29.7l2 1.99zm3.73.53l-.93.93-.02-.02c-.17.17-.35.33-.56.45C13.47 9.16 14 11.02 14 13c0 .55.45 1 1 1s1-.45 1-1c0-2.5-.73-4.82-1.95-6.8zM3 8c-.55 0-1 .45-1 1s.45 1 1 1c1.66 0 3 1.34 3 3 0 .55.45 1 1 1s1-.45 1-1c0-2.76-2.24-5-5-5zm5.91-.91l-.03.03-2-2 .03-.03c-.11-.11-.23-.2-.33-.33A8.9 8.9 0 003 4c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7 3.13 7 7 0 .55.45 1 1 1s1-.45 1-1c0-1.87-.57-3.61-1.55-5.06-.61-.11-1.13-.42-1.54-.85z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b8eoe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1h-5v2H6V1H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h5v-2h4v2h5c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 13H2v-2h2v2zm0-3H2V8h2v2zm0-3H2V5h2v2zm0-3H2V2h2v2zm6 6H6V5h4v5zm4 3h-2v-2h2v2zm0-3h-2V8h2v2zm0-3h-2V5h2v2zm0-3h-2V2h2v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"blIct":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.99.99h-12a1.003 1.003 0 00-.71 1.71l4.71 4.71V14a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V7.41L14.7 2.7a1.003 1.003 0 00-.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"02hMs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 10c-.28 0-.53.11-.71.29L12 12.59l-1.29-1.29A.965.965 0 0010 11a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0015 10zm-3-8c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5XXBB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 8c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1h-5c-.55 0-1 .45-1 1zm3-6c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7zm3 8h-5c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0 3h-5c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fnji3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.707 10.293a1 1 0 010 1.414l-3 3c-.63.63-1.707.184-1.707-.707V8c0-.89 1.077-1.337 1.707-.707l3 3zM12 2c0 .28-.11.53-.29.7L8 6.41V10c0 .28-.11.53-.29.71l-2 2A1.003 1.003 0 014 12V6.41L.29 2.71A1.003 1.003 0 011 1h10c.55 0 1 .45 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gnweY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7zm2.41 10l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L13 10.59 11.71 9.3A.965.965 0 0011 9a1.003 1.003 0 00-.71 1.71l1.3 1.29-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l1.29-1.3 1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L14.41 12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1CyWu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.99 2.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1s1-.45 1-1v-11c0-.55-.45-1-1-1zm0-3c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm2 3.03v7.23c2.07-2.11 5.92 1.75 9 0V3.02c-3 2.07-6.94-2.03-9 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8oq6U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.217 0c0 1.368.368 2.462 1.104 3.282C12.774 5.197 14 7.385 14 9.846c0 2.735-1.472 4.786-4.415 6.154 2.165-2.4 1.84-3.385-.368-6.4-2.342 1.2-1.967 2-1.592 3.6-.786 0-1.5 0-1.875-.4 0 .547.898 2 1.464 3.2-2.943-.82-6.092-5.744-4.988-6.154.736-.273 1.594-.137 2.575.41C3.575 5.333 5.047 1.915 9.217 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2VZcn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 8c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1zm4-4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S7 .45 7 1v2c0 .55.45 1 1 1zM3.79 5.21a1.003 1.003 0 001.42-1.42l-1.5-1.5a1.003 1.003 0 00-1.42 1.42l1.5 1.5zm.71 5.29c-.28 0-.53.11-.71.29l-1.5 1.5a1.003 1.003 0 001.42 1.42l1.5-1.5a1.003 1.003 0 00-.71-1.71zm7-5c.28 0 .53-.11.71-.29l1.5-1.5a1.003 1.003 0 00-1.42-1.42l-1.5 1.5a1.003 1.003 0 00.71 1.71zm.71 5.29a1.003 1.003 0 00-1.42 1.42l1.5 1.5a1.003 1.003 0 001.42-1.42l-1.5-1.5zM15 7h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1zM8 5C6.34 5 5 6.34 5 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm0 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0 3c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gzlNr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.71 2.29l-2-2A.997.997 0 0013 0h-1v6H4V0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.28-.11-.53-.29-.71zM14 15H2V9c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v6zM11 1H9v4h2V1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a9f8p":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.643 6.595c.22.418.344.894.344 1.399 0 .439-.094.855-.263 1.231l3.265 3.462-.002-1.75a.973.973 0 01.314-.68.99.99 0 011.388.048c.186.2.316.46.3.715l-.009 4.03a.959.959 0 01-.3.68.972.972 0 01-.698.266l-4.053.002a.97.97 0 01-.679-.314 1.031 1.031 0 01.05-1.42.972.972 0 01.698-.266l1.7-.001-3.305-3.35a2.998 2.998 0 01-4.228-1.653H.999a1 1 0 010-2h4.166a2.998 2.998 0 014.06-1.735l3.449-3.268-1.745.002a.979.979 0 01-.631-1.692c.199-.186.459-.316.713-.3l4.025.009c.247.008.493.1.679.3.186.2.274.451.265.7l.002 4.046a.972.972 0 01-.313.68 1.03 1.03 0 01-1.42-.05.973.973 0 01-.266-.7V3.295l-3.34 3.301z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Evsr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.702 7.31c.176.176.293.41.293.684a.976.976 0 01-.283.695c-1.888 1.91-2.892 2.918-3.011 3.027-.179.164-.42.284-.693.284a.995.995 0 01-.997-.985c0-.274.112-.541.292-.72.12-.12.624-.551 1.514-1.293H.98c-.536 0-.975-.47-.975-1.008 0-.537.439-.996.975-.996h5.837c-.895-.752-1.4-1.187-1.514-1.304a1.03 1.03 0 01-.292-.705C5.01 4.45 5.464 4 6 4c.272 0 .52.108.695.294A535.7 535.7 0 009.702 7.31zM13 11.002c-1.657 0-3-1.347-3-3.008a3.004 3.004 0 013-3.007c1.657 0 3 1.346 3 3.007a3.004 3.004 0 01-3 3.008z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9ZBJU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.16 9.002H.977C.44 9.002 0 8.532 0 7.994c0-.537.44-.99.978-.99h3.18A3.01 3.01 0 016.995 5a3.01 3.01 0 012.839 2.004h2.98c-.898-.756-1.404-1.193-1.518-1.31a1.03 1.03 0 01-.293-.705c0-.538.454-.989.992-.989.274 0 .521.108.697.294.118.124 1.122 1.13 3.014 3.016a.96.96 0 01.293.684.975.975 0 01-.284.695l-3.018 3.027a.974.974 0 01-.694.284c-.553 0-1-.447-1-.985 0-.274.117-.545.293-.72l1.518-1.293H9.833A3.01 3.01 0 016.996 11 3.01 3.01 0 014.16 9.002z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7K0Io":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.175 7.004a3.003 3.003 0 012.83-2.001c1.305 0 2.416.835 2.83 2.001h1.985c-.896-.756-1.401-1.193-1.515-1.31a1.03 1.03 0 01-.292-.705c0-.538.453-.989.99-.989a.95.95 0 01.696.294c.117.124 1.12 1.13 3.008 3.016.176.176.293.41.293.684a.976.976 0 01-.283.695l-3.013 3.027a.995.995 0 01-1.691-.702c0-.273.116-.544.292-.72l1.515-1.292h-1.98a3.003 3.003 0 01-2.835 2.016A3.003 3.003 0 015.17 9.002H3.18l1.515 1.292c.176.176.292.447.292.72a.995.995 0 01-1.69.702L.282 8.69A.976.976 0 010 7.994c0-.273.117-.508.293-.684A535.858 535.858 0 003.3 4.294.95.95 0 013.997 4c.537 0 .99.45.99.989 0 .273-.12.528-.292.705-.114.117-.62.554-1.515 1.31h1.995z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4kPLS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.392 10.647A3.002 3.002 0 016.16 8.995H3.37l1.338 1.318c.172.178.287.41.282.683-.01.536-.524.995-.99.995-.465 0-.63-.187-.747-.294L.281 8.682A.956.956 0 010 7.994a.971.971 0 01.294-.687l3.01-3.028a.973.973 0 01.697-.27c.536.01.998.485.989 1.021a.971.971 0 01-.295.687L3.37 6.997h2.79a3.002 3.002 0 014.106-1.716l2.416-2.277-1.732.004a.99.99 0 01-.679-.329.978.978 0 01.05-1.378c.199-.186.459-.315.714-.3l4.012.005c.248.009.493.1.68.3.185.2.273.45.264.699L15.99 6.05a.973.973 0 01-.314.679 1.03 1.03 0 01-1.421-.048.971.971 0 01-.265-.699V4.29L11.65 6.602c.219.416.343.89.343 1.394 0 .451-.1.88-.279 1.263L14 11.68l-.004-1.73a.982.982 0 01.323-.68.978.978 0 011.378.049c.187.2.316.46.3.714l-.004 4.011a.983.983 0 01-.3.691.972.972 0 01-.7.265l-4.046-.001a.987.987 0 01-.679-.326 1.017 1.017 0 01.048-1.41.972.972 0 01.699-.265h1.693l-2.315-2.35z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gBAl0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.5 6a2.5 2.5 0 00-2.45 2h-1.3L5.74 4l-.75.75L8.25 8h-3.3a2.5 2.5 0 100 1h3.3l-3.26 3.25.75.75 4.01-4h1.3a2.5 2.5 0 102.45-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h7Wx4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M-.01 14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7h-16v7zm15-10H7.41L5.7 2.3a.965.965 0 00-.71-.3h-4c-.55 0-1 .45-1 1v3h16V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8s24g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.165 7a3.003 3.003 0 002.827 2 3.003 3.003 0 002.827-2H16v7c0 .55-.45 1-1 1H1.01c-.55 0-1-.45-1-1V7h10.155zM8.76 6H0V3c0-.55.45-1 1-1h1.998c.28 0 .53.11.71.29L5.417 4h2.578c0 .768.29 1.469.765 2zm6.23-3c.55 0 1 .45 1 1s-.45 1-1 1h-.999v1c0 .55-.45 1-1 1-.549 0-.998-.45-.998-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 .999-1 .55 0 1 .45 1 1v1h.999z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7SycN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.06 6.69c.14-.4.5-.69.94-.69h11V5c0-.55-.45-1-1-1H6.41l-1.7-1.71A.997.997 0 004 2H1c-.55 0-1 .45-1 1v9.84l2.05-6.15h.01zM16 8c0-.55-.45-1-1-1H4a.99.99 0 00-.94.69l-2 6c-.04.09-.06.2-.06.31 0 .55.45 1 1 1h11c.44 0 .81-.29.94-.69l2-6c.04-.09.06-.2.06-.31z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"79Cyn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.76 5.98c-.47-.53-.77-1.22-.77-1.99h-.58L5.7 2.29a.965.965 0 00-.71-.3h-4c-.55 0-1 .45-1 1v3h8.76l.01-.01zm6.23-2.99h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.3a.99.99 0 00-.29.7 1.003 1.003 0 001.71.71l3.29-3.29V8c0 .55.45 1 1 1s1-.45 1-1V4c0-.56-.45-1.01-1-1.01zm-1.98 7.23l-.9.9-.01-.01c-.54.55-1.28.89-2.11.89-1.66 0-3-1.34-3-3 0-.77.3-1.47.78-2H-.01v7c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.18c-.31.11-.65.18-1 .18-.76-.01-1.45-.31-1.98-.78z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"krPCd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.02 10.22l-.9.9-.01-.01c-.54.55-1.28.89-2.11.89-1.66 0-3-1.34-3-3 0-.77.3-1.47.78-2H4a.99.99 0 00-.94.69l-2 6c-.04.09-.06.2-.06.31 0 .55.45 1 1 1h11c.44 0 .81-.29.94-.69l1.11-3.32c-.01 0-.03.01-.05.01-.77 0-1.45-.3-1.98-.78zM2.06 6.69c.14-.4.5-.69.94-.69h5.76l.01-.01C8.3 5.46 8 4.77 8 4H6.41l-1.7-1.71A.997.997 0 004 2H1c-.55 0-1 .45-1 1v9.84l2.05-6.15h.01zM15 3h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 6.41V8c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6PBsT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.37 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.06-.01-.12-.01-.19.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.12-.39.28-.06.44-.36.5-.63.06-.11.19-.39.16-.7-.04-.4-.2-.59-.38-.67v-.07c0-.52-.05-1.26-.14-1.74a2.72 2.72 0 00-.09-.43 3.02 3.02 0 00-1.04-1.51C7.87 3.2 7.15 3 6.5 3c-.64 0-1.36.2-1.87.59-.5.38-.87.92-1.05 1.51-.04.13-.07.27-.09.4-.09.49-.14 1.24-.14 1.75v.06c-.19.07-.36.26-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.13 15.5.02 16 .02 16h12.96s.15-.5-.22-1.36c-.38-.85-2.19-1.42-3.39-1.95zm6.33-10.4l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9.99c-.55 0-1 .45-1 1s.45 1 1 1h2.58l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cf09r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.37 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.06-.01-.12-.01-.19.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.12-.39.28-.06.44-.36.5-.63.06-.11.19-.39.16-.7-.04-.4-.2-.59-.38-.67v-.07c0-.52-.05-1.26-.14-1.74a2.72 2.72 0 00-.09-.43 3.02 3.02 0 00-1.04-1.51C7.87 3.2 7.15 3 6.5 3c-.64 0-1.36.2-1.87.59-.5.38-.87.92-1.05 1.51-.04.13-.07.27-.09.4-.09.49-.14 1.24-.14 1.75v.06c-.19.07-.36.26-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.13 15.5.02 16 .02 16h12.96s.15-.5-.22-1.36c-.38-.85-2.19-1.42-3.39-1.95zM14.99 2h-2.58l.29-.29A1.003 1.003 0 0011.28.29l-2 2c-.17.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L12.41 4h2.58c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"UGmrs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.93 14.67L8.94.67h-.01C8.79.28 8.43 0 8 0s-.79.28-.93.67h-.01l-5 14h.01c-.04.1-.07.21-.07.33 0 .55.45 1 1 1 .43 0 .79-.28.93-.67h.01L5.49 11h5.02l1.55 4.34h.01c.14.38.5.66.93.66.55 0 1-.45 1-1 0-.12-.03-.23-.07-.33zM6.2 9L8 3.97 9.8 9H6.2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iWt9P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.7 9.29a1.003 1.003 0 00-1.42 1.42l.29.29H11.4l-5-5h6.17l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.29.29H.99c-.55 0-1 .45-1 1s.45 1 1 1h2.59l6.71 6.71c.18.18.43.29.71.29h1.59l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71l-2.02-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fEt7t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 11v2h2v-2H2zM1 9h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1zm9-6h5c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1zM6 1a1.003 1.003 0 01.71 1.71l-3 4C3.53 6.89 3.28 7 3 7s-.53-.11-.71-.29l-2-2a1.003 1.003 0 011.42-1.42L3 4.59l2.29-3.3C5.47 1.11 5.72 1 6 1zm4 10h5c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lJpeq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.949 1H0v2h2c.31 0 .6.161.762.426l1.965 3.193-1.352 1.08A1 1 0 003 8.482V13.9c0 .607.448 1.1 1 1.1h11c.552 0 1-.492 1-1.1V2s0-1-1-1H9c-.5 0-1 .5-1 1v2L6.388 5.29 4.455 2.35A3 3 0 001.95 1zM14 3v1h-4V3h4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"irqA1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0a8 8 0 100 16A8 8 0 108 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gzYJG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 12h1c.55 0 1-.45 1-1V8h-3v3c0 .55.45 1 1 1zM10 2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3h3V2zm0 4H7v3h3V6zm5-4c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v2h3V2zm0 3h-3v2h3V5zM5 5H2v3h3V5zm-2 7h1c.55 0 1-.45 1-1V9H2v2c0 .55.45 1 1 1zm12 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM5 2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h3V2zm3 10h1c.55 0 1-.45 1-1v-1H7v1c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ET2g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.41 2H5c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v4c0 .55.45 1 1 1s1-.45 1-1V3.41L5.29 6.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L3.41 2zM6 9c-.28 0-.53.11-.71.29L2 12.59V11c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.41l3.29-3.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1zm9 1c-.55 0-1 .45-1 1v1.59L10.71 9.3A.965.965 0 0010 9a1.003 1.003 0 00-.71 1.71l3.3 3.29H11c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm0-10h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 3.41V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dCRb5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.12 4.74H6.98c.33-1.29.75-2.24 1.28-2.84.33-.37.64-.56.95-.56.06 0 .11.02.15.05.04.04.06.09.06.15 0 .05-.04.15-.13.29-.09.14-.13.28-.13.4 0 .18.07.33.2.46.14.13.31.19.52.19.22 0 .41-.08.56-.23.15-.16.23-.37.23-.63 0-.3-.11-.55-.34-.74C10.1 1.09 9.74 1 9.24 1c-.78 0-1.49.22-2.12.67-.64.45-1.24 1.2-1.81 2.23-.2.36-.38.59-.56.69-.18.1-.46.15-.85.15l-.26.9h1.08l-1.59 6.12c-.27 1.01-.44 1.63-.54 1.86-.14.34-.34.63-.62.87-.11.1-.24.15-.4.15a.15.15 0 01-.11-.04l-.04-.05c0-.03.04-.08.12-.16.08-.08.12-.2.12-.36 0-.18-.06-.33-.19-.44-.12-.12-.3-.18-.54-.18-.28 0-.51.08-.68.23-.16.14-.25.32-.25.53 0 .22.1.42.31.59.21.17.53.25.97.25.7 0 1.32-.18 1.87-.54.54-.36 1.02-.92 1.42-1.67.41-.75.82-1.96 1.25-3.63l.91-3.54h1.1l.29-.89zm5.43 1.52c.2-.15.41-.23.62-.23.08 0 .23.03.45.09s.41.09.57.09c.23 0 .42-.08.57-.23.16-.16.24-.36.24-.61 0-.26-.08-.47-.23-.62-.15-.15-.37-.23-.66-.23-.25 0-.5.06-.72.18-.23.12-.51.38-.86.78-.26.3-.64.81-1.15 1.55-.2-.91-.55-1.75-1.05-2.51l-2.72.46-.06.29c.2-.04.37-.06.51-.06.27 0 .49.11.67.34.28.36.67 1.45 1.17 3.26-.39.52-.66.85-.8 1.01-.24.26-.44.42-.59.5-.12.06-.25.09-.41.09-.11 0-.3-.06-.56-.18-.18-.08-.34-.12-.48-.12-.27 0-.48.08-.66.25-.17.17-.26.38-.26.64 0 .25.08.44.24.6.16.15.37.23.64.23.26 0 .5-.05.73-.16.23-.11.52-.34.86-.69.35-.35.82-.9 1.43-1.67.23.73.44 1.25.61 1.58s.37.57.59.71c.22.15.5.22.83.22.32 0 .65-.11.98-.34.44-.3.88-.81 1.34-1.53l-.26-.15c-.31.43-.54.7-.69.8-.1.07-.22.1-.35.1-.16 0-.32-.1-.48-.3-.27-.34-.62-1.27-1.06-2.8.4-.68.73-1.13 1-1.34z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jXUYl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 10c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1zM6 7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1zm9 5H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM4 5h3c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4YGp8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 9c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1v-1.59l-3.29 3.3A1.003 1.003 0 010 15c0-.28.11-.53.3-.71L3.59 11H2c-.55 0-1-.45-1-1s.45-1 1-1zM9.088.004l.097.013.097.024.057.018.1.042.054.029.095.061.052.04 6 5 .05.046.076.08.053.07.06.095.051.11c.056.141.079.294.067.446l-.014.105-.037.143-.035.087-.043.083-4 7-.034.056-.059.08-.038.044-.096.092-.114.082-.116.062-.086.034-.109.03-.1.017-.069.006H8.83c.088-.25.144-.515.163-.79L9 13v-3a3 3 0 00-2.824-2.995L6 7H3c-.351 0-.689.06-1.002.171L2 5l.002-.07.013-.1.015-.073.025-.085.043-.104.056-.101.045-.066.079-.093.084-.078.083-.062 6-4 .07-.043.12-.056.111-.036.108-.022.083-.01h.031c.046-.002.083 0 .12.003z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1FyHS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M-.01 6.66l7.34 2 2 7.33 6.66-16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fKD7d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.82 12.4h.66c.23 0 .36-.17.36-.4v-1.48l.19-.18c-.27.03-.55.06-.83.06-.28 0-.56-.03-.84-.07.02.04.05.08.07.13V12c0 .23.15.4.39.4zM6.4 15.1A5.51 5.51 0 01.9 9.6c0-.49.06-.98.18-1.43.03 0 .05-.01.08-.01h.08v.44c0 .19.17.34.36.34.03 0 .07-.01.1-.01l.71.7c.07.07.19.07.26 0s.07-.19 0-.26l-.7-.72c0-.02.03-.03.03-.05v-.11c0-.15.08-.2.23-.33h.42c.08 0 .15-.01.22-.04h.02c.02-.02.03-.02.04-.04.01-.01.01-.01.02-.01l.02-.01.9-.9c-.13-.26-.24-.52-.34-.8h-.5v-.43c0-.01.05.05.04-.08h.31c-.03-.13-.06-.26-.08-.39h-.57c.16-.12.34-.24.51-.36-.02-.23-.04-.46-.04-.7 0-.12.01-.23.02-.34A6.385 6.385 0 000 9.6C0 13.13 2.87 16 6.4 16c3.1 0 5.67-2.22 6.26-5.15l-.78-.88c-.21 2.85-2.58 5.13-5.48 5.13zm-1.7-2.93v-.28h.12c.23 0 .39-.19.39-.42v-.54s.01-.01 0-.01L3.77 9.45h-.62c-.23 0-.38.19-.38.42v1.6c0 .23.14.42.38.42h.26v1.61c0 .23.22.41.45.41s.45-.18.45-.41v-.97H4.3c.24 0 .4-.13.4-.36zm11.07-2.34l-2.94-2.94c.11-.17.21-.34.3-.52.01-.03.03-.06.04-.09.08-.18.16-.36.22-.55v-.01c.06-.19.1-.38.14-.58.01-.05.01-.09.02-.14.03-.2.05-.4.05-.61a4.4 4.4 0 00-4.4-4.4C6.77 0 4.8 1.97 4.8 4.4s1.97 4.4 4.4 4.4c.21 0 .41-.02.61-.05.04 0 .09-.01.14-.02.2-.03.39-.08.58-.14h.01c.19-.06.37-.14.55-.22.03-.01.06-.03.09-.04.18-.09.35-.19.52-.3l2.94 2.94a.8.8 0 00.57.23c.44 0 .8-.36.8-.8a.895.895 0 00-.24-.57zM9.2 7.6C7.43 7.6 6 6.17 6 4.4c0-1.77 1.43-3.2 3.2-3.2s3.2 1.43 3.2 3.2c0 1.77-1.43 3.2-3.2 3.2zm1.54 4.26v-.52c0-.09-.1-.17-.19-.17s-.19.07-.19.17v.52c0 .09.1.17.19.17s.19-.07.19-.17z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"loAUk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 1c-1.66 0-3 1.34-3 3 0 1.25.76 2.32 1.85 2.77A2.02 2.02 0 019 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.92 0 3.52-1.35 3.91-3.15A2.996 2.996 0 0012 1zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5KJ0v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 7h-3.14c-.45-1.72-2-3-3.86-3S4.59 5.28 4.14 7H1c-.55 0-1 .45-1 1s.45 1 1 1h3.14c.45 1.72 2 3 3.86 3s3.41-1.28 3.86-3H15c.55 0 1-.45 1-1s-.45-1-1-1zm-7 3c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"93G5z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 6c-1.3 0-2.4.84-2.82 2H9c-1.62 0-3-.96-3.63-2.34C6.33 5.16 7 4.16 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.81v4.37C1.84 10.6 1 11.7 1 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V8.43A5.89 5.89 0 009 10h.18A2.996 2.996 0 0015 9c0-1.66-1.34-3-3-3zm-8 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fbRmd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3.18 4.8C10.51 7.51 9.82 8 9 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.9 0 3.49-1.33 3.89-3.11-.29.07-.58.11-.89.11-.41 0-.8-.08-1.18-.2zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bMQcg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 1C1.34 1 0 2.34 0 4c0 1.3.84 2.4 2 2.82v3.37C.84 10.6 0 11.7 0 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V6.82C5.16 6.4 6 5.3 6 4c0-1.66-1.34-3-3-3zm0 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm11 5.18V6c0-1.66-1.34-3-3-3H9.41l1.29-1.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-3 3C6.11 3.47 6 3.72 6 4c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L9.41 5H11c.55 0 1 .45 1 1v4.18A2.996 2.996 0 0013 16c1.66 0 3-1.34 3-3 0-1.3-.84-2.4-2-2.82zM13 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9pEDi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 6h1V5H4v1zm9 3c0-.28-.11-.53-.29-.71l-3-3C9.53 5.11 9.28 5 9 5s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L8 8.41V15c0 .55.45 1 1 1s1-.45 1-1V8.41l1.29 1.29c.18.19.43.3.71.3.55 0 1-.45 1-1zM5 3H4v1h1V3zm10-3H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h5v-2H2v-1h4v-1H3V2h11v9h-2v1h2v1h-2v2h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8OKh7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 9H4v1h1V9zm10-9H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h3v1l2-1 2 1v-1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM4 13H2v-1h2v1zm10 0H8v-1h6v1zm0-2H3V2h11v9zM5 3H4v1h1V3zm0 4H4v1h1V7zm0-2H4v1h1V5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iRNQn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 0v4c0 2.97 2.16 5.43 5 5.91V14H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1H9V9.91c2.84-.48 5-2.94 5-5.91V0H2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4cLoV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.45 7.83c-.26 0-.41.21-.41.46v1.75c0 .26.16.46.41.46h.29v1.77c0 .25.24.45.49.45s.49-.2.49-.45V11.2h-.01c.26 0 .44-.14.44-.4v-.3h.14c.26 0 .43-.2.43-.46v-.59s.01-.01 0-.01l-1.58-1.6h-.69zM8.51 3.9h.22c.06 0 .12-.01.12-.07 0-.06-.05-.07-.12-.07h-.22c-.06 0-.12.01-.12.07.01.06.06.07.12.07zm-2.33-.05c.07-.07.07-.19 0-.26l-.5-.5a.187.187 0 00-.26 0c-.07.07-.07.19 0 .26l.5.5c.07.07.19.07.26 0zm3.06.89c.07 0 .14-.06.14-.12v-.31c0-.07-.07-.12-.14-.12s-.14.06-.14.12v.31c0 .07.07.12.14.12zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-.55.1-1.07.23-1.57h.11v.47c0 .2.18.37.39.37.03 0 .08-.01.11-.02l.78.77c.08.08.2.08.28 0 .08-.08.08-.2 0-.28l-.75-.78c0-.02.04-.04.04-.06v-.12c0-.16.09-.22.25-.36h.46c.09 0 .17-.01.24-.05h.02c.02-.01.03-.02.05-.03.01-.01.01-.01.02-.01l.02-.02 1.59-1.58c.18-.18.18-.46 0-.64s-.47-.15-.65.03l-.3.34h-.57v-.48c0-.01.05.05.05-.09h.64c.12 0 .22-.09.22-.21s-.1-.21-.22-.21H4.1c.18-.15.34-.31.54-.44l.01-.01c.21-.14.45-.25.68-.37.15-.07.29-.15.44-.21.17-.07.35-.11.53-.17.18-.05.35-.12.53-.16a6.05 6.05 0 013.47.35c.05.02.1.05.16.08.25.11.48.24.71.39.25.16.49.34.71.55H10.6s0-.03-.01-.03c-.04 0-.09 0-.13.03l-.51.51a.17.17 0 000 .23c.06.06.17.06.23 0l.42-.44.01-.02h.25c0 .14-.07.09-.07.12v.07c0 .22-.15.37-.36.37h-.38c-.19 0-.38.21-.38.4v.17h-.1c-.12 0-.2.06-.2.18v.25h-.23c-.17 0-.3.11-.3.28 0 .17.13.26.3.26.07 0 .14.03.19-.11l.04.01.49-.46h.17l.39.37c.03.03.08.02.12-.01.03-.03.03-.12 0-.15l-.32-.35h.23l.09.12c.18.18.48.17.66-.01l.09-.1h.4c.02 0 .08.05.08.05v.24l-.05-.01h-.36c-.11 0-.21.1-.21.21 0 .11.09.21.21.21h.41v.15c-.14.21-.24.42-.45.42h-.94v-.01l-.44-.44a.47.47 0 00-.66 0l-.42.43v.01H8.6c-.26 0-.49.21-.49.46v.92c0 .26.23.45.49.45h.9c.34.14.57.35.72.69v1.68c0 .26.17.44.42.44h.72c.26 0 .4-.18.4-.44V9l.89-.86.03-.02.02-.01h.03c.07-.08.15-.19.15-.31v-.91c0-.18-.16-.32-.31-.46H13c.01.28.21.42.46.42h.42c.08.37.12.76.12 1.15 0 3.31-2.69 6-6 6zm4.54-4.27c-.1 0-.21.08-.21.18v.57c0 .1.11.18.21.18.1 0 .21-.08.21-.18v-.57c0-.1-.11-.18-.21-.18zM8.37 3.19c0-.25-.2-.42-.46-.42h-.54c-.25 0-.42.18-.42.43 0 .03-.1.04.05.08v.47c0 .15.06.27.21.27s.21-.12.21-.27v-.14h.5c.24 0 .45-.16.45-.42z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"88ens":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm5.17 5h-2.44c-.21-1.11-.51-2.03-.91-2.69 1.43.46 2.61 1.43 3.35 2.69zM10 8c0 .73-.05 1.39-.12 2H6.12C6.05 9.39 6 8.73 6 8s.05-1.39.12-2h3.76c.07.61.12 1.27.12 2zM8 2c.67 0 1.36 1.1 1.73 3H6.27C6.64 3.1 7.33 2 8 2zm-1.82.31c-.4.66-.71 1.58-.91 2.69H2.83a6.025 6.025 0 013.35-2.69zM2 8c0-.7.13-1.37.35-2h2.76C5.04 6.62 5 7.28 5 8s.04 1.38.11 2H2.35C2.13 9.37 2 8.7 2 8zm.83 3h2.44c.21 1.11.51 2.03.91 2.69A6.025 6.025 0 012.83 11zM8 14c-.67 0-1.36-1.1-1.73-3h3.46c-.37 1.9-1.06 3-1.73 3zm1.82-.31c.4-.66.7-1.58.91-2.69h2.44a6.025 6.025 0 01-3.35 2.69zM13.65 10h-2.76c.07-.62.11-1.28.11-2s-.04-1.38-.11-2h2.76c.22.63.35 1.3.35 2s-.13 1.37-.35 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3qILM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 3c-1.06 0-1.92.83-1.99 1.88l-1.93.97A2.95 2.95 0 008 5c-.56 0-1.08.16-1.52.43L3.97 3.34C3.98 3.23 4 3.12 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.24 0 .47-.05.68-.13l2.51 2.09C5.08 7.29 5 7.63 5 8c0 .96.46 1.81 1.16 2.35l-.56 1.69c-.91.19-1.6.99-1.6 1.96 0 1.1.9 2 2 2s2-.9 2-2c0-.51-.2-.97-.51-1.32l.56-1.69A2.99 2.99 0 0011 8c0-.12-.02-.24-.04-.36l1.94-.97c.32.21.69.33 1.1.33 1.1 0 2-.9 2-2s-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"A4jNb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.89 8.11l-.01.01-.38-.38-.38.38-.02-.02c-.54.55-1.27.9-2.1.9-1.66 0-3-1.34-3-3 0-.83.35-1.56.9-2.1l-.02-.02.38-.38-.38-.38.01-.01C7.35 2.57 7 1.83 7 1c0-.34.07-.65.17-.96A8.004 8.004 0 000 8c0 4.42 3.58 8 8 8 4.14 0 7.54-3.14 7.96-7.17-.31.1-.62.17-.96.17-.83 0-1.57-.35-2.11-.89zm1.02-4.61l1.79-1.79c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-1.79 1.8L10.71.3A.965.965 0 0010 0a1.003 1.003 0 00-.71 1.71l1.79 1.79-1.79 1.79a1.003 1.003 0 001.42 1.42l1.79-1.79 1.79 1.79a1.003 1.003 0 001.42-1.42l-1.8-1.79z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"405x9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.713 5.958a1 1 0 01.574-1.916l10 3c.95.285.95 1.63 0 1.916l-10 3a1 1 0 01-.574-1.916L9.52 8 2.713 5.958z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2qci8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.713 3.958a1 1 0 01.574-1.916l10 3c.95.285.95 1.63 0 1.916l-10 3a1 1 0 01-.574-1.916L9.52 6 2.713 3.958zM3 12h10a1 1 0 010 2H3a1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1TKLS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 9c.55 0 1-.45 1-1s-.45-1-1-1h-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1H9V1c0-.55-.45-1-1-1S7 .45 7 1v1H4V1c0-.55-.45-1-1-1S2 .45 2 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v3H1c-.55 0-1 .45-1 1s.45 1 1 1h1v3H1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h3v1c0 .55.45 1 1 1s1-.45 1-1v-1h3v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V9h1zm-8 3H4V9h3v3zm0-5H4V4h3v3zm5 5H9V9h3v3zm0-5H9V4h3v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ehxNs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 1v6h7V0H1C.45 0 0 .45 0 1zm0 14c0 .55.45 1 1 1h6V9H0v6zM15 0H9v7h7V1c0-.55-.45-1-1-1zM9 16h6c.55 0 1-.45 1-1V9H9v7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6SGwe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-3H5C2.24 3 0 5.24 0 8s2.24 5 5 5h6c2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 9H5c-2.21 0-4-1.79-4-4s1.79-4 4-4h6c2.21 0 4 1.79 4 4s-1.79 4-4 4zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hQESQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 12c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1zm3 0c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1zm2 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-9-1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1zm-3 0c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1v9c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"11C90":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 5c0-.55-.45-1-1-1-.41 0-.76.24-.91.59v.01s0 .01-.01.01L11.57 8h-.36l.78-4.84C12 3.11 12 3.05 12 3a1 1 0 00-1.99-.16v.01L9.18 8H9V1c0-.55-.45-1-1-1S7 .45 7 1v7h-.09l-.93-5.18A1 1 0 005 2c-.55 0-1 .45-1 1 0 .05 0 .11.01.16L5.26 11h-.04L2.83 7.44C2.65 7.18 2.35 7 2 7c-.55 0-1 .45-1 1 0 .17.04.33.12.47l3 5.69h.01v.01A5.002 5.002 0 0013 11v-.59l1.93-5.05c.05-.11.07-.23.07-.36z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Nfls":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.72 7.87c-1.54-.67-2.99-2.68-3.7-3.95C10.11 1.95 9.93 0 6.14 0 4.05 0 2.71.61 1.92 2.12 1.27 3.36 1 5.21 1 7.83v.79c0 .65.6 1.18 1.35 1.18.34 0 .64-.11.88-.29.17.48.68.84 1.29.84.41 0 .78-.16 1.03-.42.23.37.67.63 1.19.63.57 0 1.05-.31 1.25-.74l.01.63v4.05c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V7.9c.58.41 1.55 1.21 2.47 1.29 1.57.14 1.82-1.07 1.25-1.32z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4gi87":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.08 4.97c-1.26-.71-3.27-2.15-3.95-3.7C7.88.7 6.67.96 6.81 2.52c.09.93.89 1.9 1.3 2.48H1.5C.67 5 0 5.67 0 6.5S.67 8 1.5 8h4.05l.63.01c-.44.2-.75.69-.75 1.25 0 .52.26.96.63 1.19-.26.25-.42.61-.42 1.03 0 .61.35 1.12.84 1.29-.18.24-.29.54-.29.88 0 .75.54 1.35 1.19 1.35h.79c2.62 0 4.47-.28 5.71-.92 1.51-.79 2.12-2.14 2.12-4.22 0-3.79-1.95-3.97-3.92-4.89z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bcv1G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.5 5H7.89c.41-.58 1.21-1.55 1.3-2.47C9.34.97 8.12.71 7.87 1.28c-.67 1.54-2.68 2.99-3.95 3.7C1.95 5.89 0 6.07 0 9.86c0 2.09.61 3.43 2.12 4.22 1.24.65 3.09.92 5.71.92h.79c.65 0 1.18-.6 1.18-1.35 0-.34-.11-.64-.29-.88.48-.17.84-.68.84-1.29 0-.41-.16-.78-.42-1.03.37-.23.63-.67.63-1.19 0-.57-.31-1.05-.74-1.25l.63-.01h4.05c.83 0 1.5-.67 1.5-1.5S15.33 5 14.5 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ioy4a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.65 6.19c-.34 0-.64.11-.88.29-.17-.48-.68-.84-1.29-.84-.41 0-.78.16-1.03.42-.23-.37-.67-.63-1.19-.63-.57 0-1.05.31-1.25.74L8 5.55V1.5C8 .67 7.33 0 6.5 0S5 .67 5 1.5v6.61c-.58-.41-1.55-1.21-2.48-1.3C.96 6.67.7 7.88 1.28 8.13c1.54.67 2.99 2.68 3.7 3.95C5.89 14.05 6.07 16 9.86 16c2.09 0 3.43-.61 4.22-2.12.64-1.24.92-3.09.92-5.71v-.79c0-.65-.6-1.19-1.35-1.19z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kwOr1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 10c.495 0 .933.379.993.882L16 11v.505c0 1.461-3.524 2.45-7.707 2.493L8 14c-4.31 0-8-1-8-2.495V11c0-.561.466-1 1-1 .895 0 3 1 7 1l.381-.003C12.135 10.937 14.134 10 15 10zm-4-8c1.13 0 2.02 2.153 2.671 6.46-1.063.266-2.644.652-4.887.727l-.403.01L8 9.2c-2.664 0-4.488-.444-5.673-.74C2.98 4.153 3.87 2 5 2c2 0 1.329 2 3 2s1-2 3-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dfQ37":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 1c-.55 0-1 .45-1 1v5H4V2c0-.55-.45-1-1-1s-1 .45-1 1v12c0 .55.45 1 1 1s1-.45 1-1V9h8v5c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dpVOq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.06 8c-.04.23-.12.44-.25.61-.13.17-.29.3-.48.41-.18.11-.39.18-.62.23-.23.04-.46.07-.71.07v1.03h1.74V16H15V8h-.94zM7 0c-.56 0-1 .45-1 1v4H2V1c0-.55-.45-1-1-1-.56 0-1 .45-1 1v10c0 .55.45 1 1 1 .56 0 1-.45 1-1V7h4v4c0 .55.45 1 1 1 .56 0 1-.45 1-1V1c0-.54-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iCYPV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 0C.44 0 0 .45 0 1v10c0 .54.45 1 1 1 .56 0 1-.45 1-1V7h4v4c0 .54.45 1 1 1 .56 0 1-.45 1-1V1c0-.54-.45-1-1-1-.56 0-1 .45-1 1v4H2V1c0-.54-.45-1-1-1zm13.71 11.72c.41.08.72.3.95.65.23.35.34.77.34 1.27 0 .37-.07.7-.2.97-.14.29-.32.54-.55.74-.23.2-.5.36-.8.47-.3.11-.62.16-.96.16-.41 0-.77-.06-1.08-.19-.31-.12-.56-.31-.77-.54-.21-.24-.36-.52-.47-.85-.11-.33-.16-.7-.17-1.1h1.14c-.01.47.09.86.32 1.17.23.31.57.47 1.02.47.39 0 .71-.12.97-.36s.39-.58.39-1.02c0-.3-.05-.53-.16-.71-.11-.17-.25-.31-.43-.4-.17-.09-.37-.15-.59-.17-.22-.02-.44-.03-.67-.02v-.93c.19.01.38 0 .57-.04.19-.03.36-.1.51-.19.14-.09.26-.22.35-.38.09-.16.14-.36.14-.59 0-.33-.1-.59-.31-.79-.2-.2-.47-.3-.79-.3-.21 0-.38.04-.53.13-.15.09-.27.21-.37.36-.1.15-.17.32-.22.51-.05.19-.07.38-.06.58h-1.15c.01-.38.08-.72.19-1.04.11-.32.27-.6.47-.83.19-.23.44-.42.72-.55.28-.13.6-.2.96-.2.28 0 .55.04.82.13.27.08.51.21.72.38.21.17.38.38.51.64s.19.56.19.9c0 .39-.08.73-.24 1.02-.16.29-.42.5-.76.63v.02z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iDOCH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.17 13.93c-.17.15-.33.29-.46.44-.13.16-.22.32-.27.49h3.55V16H11c.01-.65.16-1.22.44-1.71s.67-.91 1.17-1.27c.24-.18.49-.36.75-.54.25-.18.49-.36.71-.57.21-.2.39-.42.53-.65.14-.24.21-.51.22-.82 0-.14-.02-.29-.05-.45-.03-.16-.09-.31-.18-.45a1.13 1.13 0 00-.37-.35c-.16-.09-.37-.14-.63-.14-.24 0-.43.05-.59.15-.16.1-.29.24-.38.42-.1.17-.17.38-.21.62-.05.24-.07.5-.08.77h-1.19c0-.43.05-.83.16-1.2s.27-.69.49-.96c.21-.25.48-.46.79-.62.31-.15.67-.23 1.07-.23.45 0 .82.08 1.11.23.3.16.55.36.73.6.19.24.32.5.39.79.08.28.12.54.12.79 0 .31-.04.6-.13.85s-.22.49-.37.7c-.15.21-.32.41-.52.59s-.4.35-.61.51l-.63.45c-.21.14-.39.28-.57.42zM0 1c0-.55.44-1 1-1 .55 0 1 .46 1 1v10c0 .55-.44 1-1 1-.55 0-1-.46-1-1V1zm6 0c0-.55.44-1 1-1 .55 0 1 .46 1 1v10c0 .55-.44 1-1 1-.55 0-1-.46-1-1V1zM2 5h4v2H2V5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lj5rc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.85 6.34C14.18 2.72 11.37 0 8 0S1.82 2.72 1.15 6.34C.47 6.9 0 8.1 0 9.5 0 11.43.9 13 2 13c0 1.1.9 2 2 2h2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1H4c-.55 0-1-.45-1-1 .55 0 1-.45 1-1V7c0-.45-.3-.81-.71-.94C3.97 3.7 5.81 2 8 2s4.03 1.7 4.71 4.06c-.41.13-.71.49-.71.94v5c0 .55.45 1 1 1h1c1.1 0 2-1.57 2-3.5 0-1.4-.47-2.6-1.15-3.16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1MlXm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 5.095c0-2.255-1.88-4.083-4.2-4.083-1.682 0-3.13.964-3.8 2.352a4.206 4.206 0 00-3.8-2.352C1.88 1.012 0 2.84 0 5.095c0 .066.007.13.01.194H.004c.001.047.01.096.014.143l.013.142c.07.8.321 1.663.824 2.573C2.073 10.354 4.232 12.018 8 15c3.767-2.982 5.926-4.647 7.144-6.854.501-.905.752-1.766.823-2.562.007-.055.012-.11.016-.164.003-.043.012-.088.013-.13h-.006c.003-.066.01-.13.01-.195z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iYwwx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.71 8.87L6.17 6.55l.02-.01A.906.906 0 016 6c0-.07.03-.13.04-.19h-.02l.78-3.92C6.09 1.34 5.19 1 4.2 1 1.88 1 0 2.83 0 5.09c0 .07.01.13.01.19H0c0 .05.01.1.01.14 0 .05.01.1.01.14.07.8.32 1.66.82 2.57 1.07 1.94 2.88 3.47 5.86 5.84l-.68-2.74h.02C6.03 11.16 6 11.08 6 11c0-.28.11-.53.29-.71l1.42-1.42zM16 5.09C16 2.83 14.12 1 11.8 1c-1.2 0-2.27.5-3.04 1.28l-.7 3.51 1.77 2.66-.01.01c.1.15.18.33.18.54 0 .28-.11.53-.29.71l-1.6 1.6.75 3.01c3.23-2.56 5.16-4.15 6.28-6.18.5-.91.75-1.77.82-2.56.01-.05.01-.11.02-.16 0-.04.01-.09.01-.13h-.01c.01-.07.02-.14.02-.2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"58zyJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 10h5V7H0v3zm1-2h3v1H1V8zm14-5h-4v3h5V4c0-.55-.45-1-1-1zm0 2h-3V4h3v1zM0 4v2h5V3H1c-.55 0-1 .45-1 1zm0 9c0 .55.45 1 1 1h4v-3H0v2zm6-7h4V3H6v3zm0 8h4v-3H6v3zm1-2h2v1H7v-1zm4 2h4c.55 0 1-.45 1-1v-2h-5v3zm0-4h5V7h-5v3zm-5 0h4V7H6v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fHTYM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm11-7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm3 4.5A2.5 2.5 0 0013.5 6c-.98 0-1.82.57-2.23 1.39-.6-.78-1.51-1.3-2.56-1.36.18-.49.29-.99.29-1.53C9 2.01 6.99 0 4.5 0S0 2.01 0 4.5 2.01 9 4.5 9c.19 0 .37-.03.56-.06-.03.19-.06.37-.06.56C5 11.43 6.57 13 8.5 13c1.63 0 2.98-1.11 3.37-2.62.44.38 1 .62 1.63.62A2.5 2.5 0 0016 8.5zM14.5 13c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"wo7wv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M.5 2a.5.5 0 01.5.5V4h7V3H2.5a.5.5 0 010-1h13a.5.5 0 010 1H10v1h1c2.26 0 4 1.79 4 4 0 1.87-1.247 3.44-3 3.878V13h.382l1.894-.947a.5.5 0 11.448.894L12.618 14H4.5a.5.5 0 010-1H7v-2.306C5.749 9.736 5 8.368 5 7L1 6v1.5a.5.5 0 01-1 0v-5A.5.5 0 01.5 2zM8 11.316V13h3v-1a6.73 6.73 0 01-3-.684zM11 5v3h3a3 3 0 00-3-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cccHj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hzOsn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 5h-2v2h2V5zm0 6h-2v2h2v-2zm0-3h-2v2h2V8zm2-8H1C.4 0 0 .4 0 1v14c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V1c0-.6-.4-1-1-1zm-1 14H2V2h12v12zm-7-3H5v2h2v-2zm3 0H8v2h2v-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"OR5aq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 14v2H7v-2h2zm1-14L9 12H7L6 0h4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ebfoI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.12 11.07l2-2.02.71.71 4-4.04L10.17 0l-4 4.04.71.71-2 2.02 4.24 4.3zM2 12.97h4c.28 0 .53-.11.71-.3l1-1.01-3.42-3.45-3 3.03c-.18.18-.29.44-.29.72 0 .55.45 1.01 1 1.01zm13 1.01H1c-.55 0-1 .45-1 1.01S.45 16 1 16h14c.55 0 1-.45 1-1.01s-.45-1.01-1-1.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8pemr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 3c-.55 0-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L9 7.59V4c0-.55-.45-1-1-1zm0-3a7.95 7.95 0 00-6 2.74V1c0-.55-.45-1-1-1S0 .45 0 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.54C4.64 2.78 6.23 2 8 2c3.31 0 6 2.69 6 6 0 2.61-1.67 4.81-4 5.63v-.01c-.63.23-1.29.38-2 .38-3.31 0-6-2.69-6-6 0-.55-.45-1-1-1s-1 .45-1 1c0 4.42 3.58 8 8 8 .34 0 .67-.03 1-.07.02 0 .04-.01.06-.01C12.98 15.4 16 12.06 16 8c0-4.42-3.58-8-8-8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kXLDf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 10v5c0 .55.45 1 1 1h3v-5h4v5h3c.55 0 1-.45 1-1v-5L8 4l-6 6zm13.71-2.71L14 5.59V2c0-.55-.45-1-1-1s-1 .45-1 1v1.59L8.71.29C8.53.11 8.28 0 8 0s-.53.11-.71.29l-7 7a1.003 1.003 0 001.42 1.42L8 2.41l6.29 6.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dTGzi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 5h7c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zM1 1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1zm14 6H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-6 5H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l53Nm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 3h5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 4h7c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 11h10c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"brtco":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM8 9H1c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm-2 4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm5-8H1c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b2pBV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm13 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-5 2H7c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cKDsP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 16V0h1a1 1 0 011 1v14a1 1 0 01-1 1H0zM15 0h1v16h-1a1 1 0 01-1-1V1a1 1 0 011-1zM6.707 6.707a1 1 0 00-1.414-1.414l-2 2a1 1 0 000 1.414l2 2a1 1 0 001.414-1.414L5.414 8l1.293-1.293zm4-1.414a1 1 0 00-1.414 1.414L10.586 8 9.293 9.293a1 1 0 101.414 1.414l2-2a1 1 0 000-1.414l-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4x0In":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.5 12c-.86 0-2.5-.5-3.5-1 1 3.5 4.506 4 7 4a7 7 0 007-7l-.006-.004a5.974 5.974 0 00-1.29-3.988c.896.066 2.37.53 3.296.992-1-3.5-4.506-4-7-4a6.998 6.998 0 00-6.14 3.635 5.972 5.972 0 00-.859 3.226L2 8l.006.005a5.98 5.98 0 001.771 3.99A7.469 7.469 0 013.5 12zM8 6a2 2 0 100 4 2 2 0 000-4z",
    "M0 0h16v16H0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5uzhi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 5v7h12V5H2zm0-2h12c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z",
    "M7.9 10.48c-.14-.33-.84-.55-1.3-.75-.46-.2-.4-.33-.42-.5v-.07c.16-.14.29-.33.37-.56 0 0 0-.01.01-.02.02-.05.03-.1.05-.15.1-.01.16-.13.19-.23.03-.04.07-.15.06-.27-.02-.16-.08-.24-.15-.26v-.03c0-.2-.02-.48-.05-.67-.01-.05-.02-.1-.03-.16-.07-.23-.21-.44-.4-.58-.2-.15-.48-.23-.73-.23s-.53.08-.72.23c-.19.14-.33.35-.4.58-.02.05-.03.1-.03.16-.05.18-.06.47-.06.67v.03c-.07.03-.14.1-.15.26-.02.12.03.22.06.27.02.1.09.22.2.24.01.05.03.1.05.15v.01c.08.23.22.42.38.56v.07c-.02.17.03.29-.43.5-.46.2-1.16.42-1.3.75s-.09.52-.09.52H8c-.01 0 .05-.19-.1-.52zM10 6h2c.55 0 1 .45 1 1s-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1zM10 9h2c.55 0 1 .45 1 1s-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"laRm0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 2h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C8.11 2.47 8 2.72 8 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H13c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3zm-5.5 9c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 6.33L7 12l-1 1-2-3-2 2.67V9h7v4.33z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fP5BM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.71 5.71l2-2C7.89 3.53 8 3.28 8 3c0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H3C1.34 2 0 3.34 0 5v3c0 .55.45 1 1 1s1-.45 1-1V5c0-.55.45-1 1-1h1.59l-.3.29a1.003 1.003 0 001.42 1.42zM12.5 11c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM15 7H6c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 6.33L12 12l-1 1-2-3-2 2.67V9h7v4.33z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"27EXP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.29 11.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L9 8.59V1c0-.55-.45-1-1-1S7 .45 7 1v7.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l4 4zM15 11c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aI9To":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.91 2.6c-.16-.36-.51-.61-.92-.61h-10c-.41 0-.77.25-.92.61L-.01 7.45v5.54c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7.45L13.91 2.6zm-1.92 5.39c-.55 0-1 .45-1 1v1h-6v-1c0-.55-.45-1-1-1H1.94l1.71-4h8.68l1.71 4h-2.05z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gwIgL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.432 2c.094.14.202.273.324.394L8.42 4H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6.557c.693 0 1.363-.262 1.837-.736l.103-.102.85-1.14a2.564 2.564 0 00.623-1.682V5.058L16 7.46V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h3.432zm9.048-2c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V3.71L8.17.98A.566.566 0 018 .57c0-.31.26-.57.57-.57h6.91z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6MIud":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.341 2A5.99 5.99 0 006 4H3.66L1.95 8H4c.55 0 1 .45 1 1v1h7a5.978 5.978 0 004-1.528V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h3.341zm3.679 2.145c0-.125.075-.23.205-.225h.345l.79.8c.005 0 0 .005 0 .005v.295c0 .13-.085.23-.215.23h-.07v.15c0 .13-.09.2-.215.2v.535c0 .125-.12.225-.245.225s-.245-.1-.245-.225V5.25h-.145c-.125 0-.205-.1-.205-.23v-.875zm2.235-2.195c-.03 0-.055-.005-.06-.035 0-.03.03-.035.06-.035h.11c.035 0 .06.005.06.035 0 .03-.03.035-.06.035h-.11zm-1.165-.025a.094.094 0 01-.13 0l-.25-.25a.094.094 0 010-.13.094.094 0 01.13 0l.25.25a.094.094 0 010 .13zm1.53.445c-.035 0-.07-.025-.07-.06v-.155c0-.03.035-.06.07-.06s.07.025.07.06v.155c0 .03-.035.06-.07.06zM12 0c2.21 0 4 1.79 4 4s-1.79 4-4 4-4-1.79-4-4 1.79-4 4-4zm0 7c1.655 0 3-1.345 3-3 0-.195-.02-.39-.06-.575h-.21c-.125 0-.225-.07-.23-.21h-.215c.075.07.155.14.155.23V3.9c0 .06-.04.115-.075.155h-.015l-.01.005-.015.01-.445.43v.815c0 .13-.07.22-.2.22h-.36c-.125 0-.21-.09-.21-.22v-.84a.627.627 0 00-.36-.345h-.45c-.13 0-.245-.095-.245-.225v-.46c0-.125.115-.23.245-.23l.13-.005.21-.215c.09-.09.24-.09.33 0l.22.225h.47c.105 0 .155-.105.225-.21v-.075h-.205a.106.106 0 01-.105-.105.11.11 0 01.105-.105h.18l.025.005v-.12s-.03-.025-.04-.025h-.2l-.045.05a.235.235 0 01-.33.005l-.045-.06h-.115l.16.175c.015.015.015.06 0 .075-.02.015-.045.02-.06.005l-.195-.185h-.085l-.245.23-.02-.005c-.025.07-.06.055-.095.055-.085 0-.15-.045-.15-.13s.065-.14.15-.14h.115v-.125c0-.06.04-.09.1-.09h.05V2.36c0-.095.095-.2.19-.2h.19c.105 0 .18-.075.18-.185V1.94c0-.015.035.01.035-.06h-.125l-.005.01-.21.22a.085.085 0 01-.115 0 .085.085 0 010-.115l.255-.255c.02-.015.045-.015.065-.015.005 0 .005.015.005.015h.64a2.327 2.327 0 00-.355-.275 2.452 2.452 0 00-.355-.195c-.03-.015-.055-.03-.08-.04a3.025 3.025 0 00-1.735-.175c-.09.02-.175.055-.265.08-.09.03-.18.05-.265.085-.075.03-.145.07-.22.105-.115.06-.235.115-.34.185l-.005.005c-.1.065-.18.145-.27.22h.455c.06 0 .11.045.11.105s-.05.105-.11.105h-.32c0 .07-.025.04-.025.045v.24h.285l.15-.17c.09-.09.235-.105.325-.015.09.09.09.23 0 .32l-.795.79-.01.01c-.005 0-.005 0-.01.005l-.025.015h-.01a.235.235 0 01-.12.025h-.23c-.08.07-.125.1-.125.18v.06c0 .01-.02.02-.02.03l.375.39c.04.04.04.1 0 .14-.04.04-.1.04-.14 0l-.39-.385a.213.213 0 01-.055.01c-.105 0-.195-.085-.195-.185v-.235h-.055A3.1 3.1 0 009 4c0 1.655 1.345 3 3 3zm2.27-2.135c.05 0 .105.04.105.09v.285c0 .05-.055.09-.105.09-.05 0-.105-.04-.105-.09v-.285c0-.05.055-.09.105-.09zm-2.085-3.27c0 .13-.105.21-.225.21h-.25v.07c0 .075-.03.135-.105.135s-.105-.06-.105-.135V1.64c-.075-.02-.025-.025-.025-.04 0-.125.085-.215.21-.215h.27c.13 0 .23.085.23.21z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iHxm8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.639 2a5.391 5.391 0 00-.144 2H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6V9c0-.088.012-.174.033-.255.12-.007.238-.019.39-.038.154-.008.252-.03.442-.077a5.34 5.34 0 00.24-.05h.05l.122-.04 1.266 1.271c.425.47 1.116.769 1.847.769.21 0 .414-.025.61-.071V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h2.639zM15.82 7.53c.1.12.17.27.18.44 0 .34-.27.61-.61.61a.57.57 0 01-.43-.18l-2.24-2.25c-.13.08-.26.16-.4.23-.02.01-.05.02-.07.03-.14.06-.27.12-.42.17h-.01c-.14.05-.29.08-.44.11-.04.01-.08.02-.11.02-.15.02-.3.04-.46.04-1.85 0-3.35-1.51-3.35-3.37S8.96.01 10.81 0c1.85 0 3.35 1.51 3.35 3.37 0 .16-.02.31-.04.47-.01.04-.01.07-.02.11-.02.15-.05.29-.1.44v.01c-.05.15-.11.28-.17.42-.01.02-.02.05-.03.07-.07.14-.14.27-.23.4l2.25 2.24zm-5.01-1.94c1.22 0 2.21-.99 2.21-2.22 0-1.23-.99-2.22-2.21-2.22S8.6 2.14 8.6 3.37c0 1.22.99 2.22 2.21 2.22z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fxzFD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.1 2a5.023 5.023 0 000 2H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6V9c0-.55.45-1 1-1h2.05c.708 0 1.352-.241 1.905-.645L16 7.46V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h5.1zM13 6a3 3 0 110-6 3 3 0 010 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1ojJL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM7 3h2v2H7V3zm3 10H6v-1h1V7H6V6h3v6h1v1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bdyFQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 8c0 1.66 1.34 3 3 3h4.59L11.3 9.71A.965.965 0 0111 9a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42l1.3-1.29H8c-2.76 0-5-2.24-5-5H1a1 1 0 01-1-1V1a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5zM2 2v4h4V2H2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2tBLI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 7c.51 0 .935.388.993.884L2 8v3c0 .51.388.935.884.993L3 12h1.59l-.3-.29a1.003 1.003 0 011.324-1.504l.096.084 2 2c.18.18.29.43.29.71 0 .233-.076.446-.206.614l-.084.096-2 2A1.003 1.003 0 014 15c0-.24.08-.458.224-.629l.076-.081.29-.29H3a2.996 2.996 0 01-2.995-2.823L0 11V8c0-.55.45-1 1-1zm5.388-7c.629 0 1.338.21 1.838.6.48.38.85.91 1.019 1.52.04.13.07.27.09.4.09.48.14 1.22.14 1.73v.07c.18.08.34.27.37.67.03.32-.09.59-.16.71-.06.28-.21.58-.48.63-.03.13-.07.26-.12.39 0 .01-.01.04-.01.04-.22.58-.55 1.08-.949 1.45v.18c.04.45-.12.77 1.059 1.3 1.179.53 2.947 1.09 3.307 1.95.37.86.22 1.36.22 1.36H9c0-.539-.21-1.045-.583-1.417l-2-2A1.997 1.997 0 005 9c-.149 0-.296-.015-.442-.045.099-.19.082-.37.101-.575 0-.05.01-.11.01-.17-.41-.35-.75-.86-.969-1.45v-.01s-.01-.01-.01-.02c-.04-.12-.09-.26-.12-.39-.28-.05-.44-.36-.5-.64-.06-.12-.19-.39-.16-.71.04-.41.21-.6.39-.68v-.06c0-.51.05-1.26.14-1.74.02-.13.05-.27.09-.4.17-.6.54-1.13 1.02-1.51C5.048.21 5.757 0 6.387 0zm4.625 2.04c.49 0 1.05.16 1.439.46.38.29.67.7.8 1.17.03.1.05.21.07.31.07.37.11.94.11 1.33v.05c.139.06.269.21.289.51.02.25-.07.45-.13.54-.05.21-.16.44-.38.48a1.711 1.711 0 01-.1.33c-.17.44-.43.83-.749 1.11v.14c.03.35-.09.59.83 1 .929.41 2.317.84 2.597 1.5.29.66.17 1.04.17 1.04H13.66v.01c-.05-.24-.14-.5-.25-.76-.36-.86-1.119-1.33-2.687-2-.14-.06-.59-.25-.6-.25-.21-.09-.36-.15-.5-.22.02-.1.02-.2.03-.31 0-.04.01-.08.01-.13-.07-.06-.13-.12-.19-.19.22-.32.4-.67.54-1.05.02-.06.02-.06.03-.1.29-.23.48-.57.59-.96.16-.33.25-.73.21-1.16-.03-.4-.16-.76-.37-1.03-.02-.53-.07-1.13-.15-1.54-.01-.06-.02-.12-.03-.19.23-.06.48-.09.72-.09z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4inTH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.6 3.3C5.3 4.4 4.5 6.1 4.5 8s.8 3.6 2.1 4.7c-.5.2-1 .3-1.6.3-2.8 0-5-2.2-5-5s2.2-5 5-5c.6 0 1.1.1 1.6.3zm-1.96 8.68C3.92 10.83 3.5 9.46 3.5 8s.42-2.83 1.14-3.98C2.6 4.2 1 5.91 1 8s1.6 3.8 3.64 3.98zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3zm.35 1.02c.73 1.15 1.14 2.52 1.14 3.98s-.42 2.83-1.14 3.98c2.04-.18 3.64-1.9 3.64-3.98s-1.6-3.8-3.64-3.98z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cRsu8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 9h2v2c0 .6.4 1 1 1s1-.4 1-1V9h2c.6 0 1-.4 1-1s-.4-1-1-1H9V5c0-.6-.4-1-1-1s-1 .4-1 1v2H5c-.6 0-1 .4-1 1s.4 1 1 1zm10-9H1C.4 0 0 .4 0 1v14c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V1c0-.6-.4-1-1-1zm-1 14H2V2h12v12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1ngmb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 3c-.92 0-1.76.26-2.5.69C6.76 3.26 5.92 3 5 3 2.24 3 0 5.24 0 8s2.24 5 5 5c.92 0 1.76-.26 2.5-.69.74.43 1.58.69 2.5.69 2.76 0 5-2.24 5-5s-2.24-5-5-5zm-4.1 7.85c-.29.09-.59.15-.9.15-1.66 0-3-1.34-3-3s1.34-3 3-3c.31 0 .61.06.9.15C5.33 5.96 5 6.94 5 8s.33 2.04.9 2.85zM10 11c-.31 0-.61-.06-.9-.15.57-.81.9-1.79.9-2.85s-.33-2.04-.9-2.85c.29-.09.59-.15.9-.15 1.66 0 3 1.34 3 3s-1.34 3-3 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gLkoS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 2.66C5 4.14 8 8 8 8s3-3.86 3-5.34C10.99 1.2 9.66 0 8 0S5 1.2 5 2.66zM7 3c0-.55.45-1 1-1s1 .45 1 1-.45 1-1 1-1-.45-1-1zM10.5 10H8v5h1v-4h1v1H9v1h2v-3h-.5zM2 9h12c.55 0 1 .45 1 1v5c0 .55-.45 1-1 1H2c-.55 0-1-.45-1-1v-5c0-.55.45-1 1-1zm4 1v5h1v-5H6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hg2Co":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 16A8 8 0 118 0a8 8 0 010 16zm0-2A6 6 0 108 2a6 6 0 000 12zm1-2H7v-2h2v2zm0-3H7V4h2v5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3NktF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.296.104a2.99 2.99 0 00-1.003.664 2.987 2.987 0 00-.75 1.25 6 6 0 106.28 4.527c.043-.039.085-.079.127-.12l1.456-1.456A8 8 0 119.296.105zm2.532 5.2a.997.997 0 01-.707-.294L9.707 3.596a1 1 0 011.414-1.414l.707.707 1.768-1.768a1 1 0 111.414 1.415L12.536 5.01a.997.997 0 01-.708.293zM9 12H7v-2h2v2zm0-3H7V4h2v5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4310u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.568.421c-.01.04-.018.08-.026.121-.837.156-1.53.73-1.85 1.497a6 6 0 105.27 5.273 2.51 2.51 0 001.496-1.854c.04-.008.081-.016.121-.026A8 8 0 1110.568.421zM9 12H7v-2h2v2zm0-3H7V4h2v5zm1-6c0-.55.45-1 1-1h1V1c0-.55.45-1 1-1s1 .45 1 1v1h1c.55 0 1 .45 1 1s-.45 1-1 1h-1v1.005c0 .55-.45 1-1 1s-1-.45-1-1V4h-1c-.55 0-1-.45-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gc1J6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.8 4H11c.5 0 1-.4 1-1s-.4-1-1-1H7c-.5 0-1 .4-1 1s.4 1 1 1h.8l-1.6 8H5c-.5 0-1 .4-1 1s.4 1 1 1h4c.5 0 1-.4 1-1s-.4-1-1-1h-.8l1.6-8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"vvIq5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 5h-3V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h3v3c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-5-1v2H6V4h4zm0 6H6V7h4v3zM2 4h3v2H2V4zm0 5V7h3v2H2zm4 4v-2h4v2H6zm8 0h-3v-2h3v2zm0-3h-3V8h3v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jNKLE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 0C8.24 0 6 2.24 6 5c0 1.02.31 1.96.83 2.75L.29 14.29a1.003 1.003 0 001.42 1.42L3 14.41l1.29 1.29c.18.19.43.3.71.3s.53-.11.71-.29l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71L6.41 11l1.83-1.83c.8.52 1.74.83 2.76.83 2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 8c-.23 0-.45-.03-.66-.08-.01 0-.02-.01-.03-.01-.21-.05-.41-.12-.6-.21a3.014 3.014 0 01-1.62-2c0-.01-.01-.02-.01-.03C8.03 5.45 8 5.23 8 5c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jdZ0B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 2H6c-.28 0-.53.11-.71.29l-5 5C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l5 5c.18.18.43.29.71.29h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-2.29 7.29a1.003 1.003 0 01-1.42 1.42L10 9.41 8.71 10.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L8.59 8l-1.3-1.29a1.003 1.003 0 011.42-1.42L10 6.59l1.29-1.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L11.41 8l1.3 1.29z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4r6Cw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 9h-1V7h1c1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3v1H7V4c0-1.66-1.34-3-3-3S1 2.34 1 4s1.34 3 3 3h1v2H4c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3v-1h2v1c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3zm0-6c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM4 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0-8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm5 4H7V7h2v2zm3 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"25I0L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.71 5.29l-4-4C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9PpC4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.71 7.29l-5-5A.997.997 0 0010 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h9c.28 0 .53-.11.71-.29l5-5c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zm-7 2a1.003 1.003 0 01-1.42 1.42L6 9.41 4.71 10.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L4.59 8l-1.3-1.29a1.003 1.003 0 011.42-1.42L6 6.59 7.29 5.3c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L7.41 8l1.3 1.29z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cDmiz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 2c-.55 0-1 .45-1 1v3c0 1.66-1.34 3-3 3H4.41L5.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L4.41 11H10c2.76 0 5-2.24 5-5V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"areJl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 7c.55 0 1-.45 1-1V4.41L7.29 8.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 3H6c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm7-5.9v2A5 5 0 113.1 9h-2c.49 3.39 3.38 6 6.9 6 3.87 0 7-3.13 7-7 0-3.52-2.61-6.41-6-6.9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8euOV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 4h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1s.45 1 1 1zm4 8h-3.43L5.86 2.49h-.02A.975.975 0 005 2H1c-.55 0-1 .45-1 1s.45 1 1 1h3.43l5.71 9.51.01-.01c.18.3.49.5.85.5h4c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8zAex":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.71 7.29l-5-5C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-5 5A1.003 1.003 0 003 9h2v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V9h2a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iGGXM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 10H4.41L5.7 8.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L2 9.59V8c0-.55-.45-1-1-1s-1 .45-1 1v6c0 .55.45 1 1 1s1-.45 1-1v-1.59l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 12H15c.55 0 1-.45 1-1s-.45-1-1-1zm0-9c-.55 0-1 .45-1 1v1.59L11.71 1.3A.965.965 0 0011 1a1.003 1.003 0 00-.71 1.71L11.59 4H1c-.55 0-1 .45-1 1s.45 1 1 1h10.59L10.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L14 6.41V8c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3B7Bh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 3a.997.997 0 00-.707.293L12 5.586l-1.293-1.293a1 1 0 10-1.414 1.414l2 2a.997.997 0 001.414 0l3-3A1 1 0 0015 3zm-.879 6.121l-.007-.007c-.313.309-.69.552-1.114.702V10h-.998H12h-1v-.184c-.424-.15-.8-.395-1.112-.704l-.01.01-2-2 .012-.012A2.978 2.978 0 017.184 6H3c-.176 0-.06-.824 0-1l.73-1.63C3.79 3.192 3.823 3 4 3H7.78C8.328 2.39 9.115 2 10 2c.768 0 1.461.293 1.987.77l.844-.844c-.238-.244-.524-.442-.794-.524C12.037 1.402 10.72 1 8 1c-2.72 0-4.037.402-4.037.402-.508.155-1.078.711-1.268 1.237l-.763 2.117H.88c-.484 0-.88.423-.88.939s.396.939.88.939h.375L1 7c-.034.685 0 1.436 0 2v5c0 .657.384 1 1 1s1-.343 1-1v-1h10v1c0 .657.384 1 1 1s1-.343 1-1V9l-.003-.754-.876.875zM5.001 10H3V8h2v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f14RI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 1a1 1 0 010 2v3l3 7v1.25a.75.75 0 01-.75.75H2.75a.75.75 0 01-.75-.75V13l3-7V3a1 1 0 110-2h6zM9 3H7v3l-1.714 4h5.428L9 6V3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ad0LZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7l-5-5zm3 10H2V4h8v2H3v1h7v1h4v4zm-3-5V4l3 3h-3zm-8 3h10V9H3v1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hbu54":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 8c0-.37-.21-.68-.51-.85l.01-.01-7-4-.01.01C8.34 3.06 8.18 3 8 3s-.34.06-.49.15l-.01-.02-7 4 .01.01C.21 7.32 0 7.63 0 8s.21.68.51.85l-.01.01 7 4 .01-.01c.15.09.31.15.49.15s.34-.06.49-.15l.01.01 7-4-.01-.01c.3-.17.51-.48.51-.85z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jyQJX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.504 3.132l-7 4a1 1 0 000 1.736l7 4a1 1 0 00.992 0l7-4a1 1 0 000-1.736l-7-4a1 1 0 00-.992 0zM8 5.152L12.983 8 8 10.847 3.016 8 8 5.152z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"edMgz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M.55 4.89l7 3.5c.14.07.29.11.45.11s.31-.04.45-.11l7-3.5a.998.998 0 00-.06-1.81L8.4.08a1.006 1.006 0 00-.79 0l-6.99 3a.992.992 0 00-.07 1.81zM15 10c-.16 0-.31.04-.45.11L8 13.38 1.45 10.1c-.14-.06-.29-.1-.45-.1-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3.5c.14.07.29.11.45.11s.31-.04.45-.11l7-3.5c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1zm0-3.5c-.16 0-.31.04-.45.11L8 9.88 1.45 6.61A.997.997 0 001 6.5c-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3.5c.14.07.29.11.45.11s.31-.04.45-.11l7-3.5c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eQT5T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 4c-1.1 0-2 .9-2 2 0 .47.17.9.44 1.24l-.68.91A1.996 1.996 0 009.07 9.5H7.93C7.71 8.64 6.93 8 6 8c-.47 0-.9.17-1.24.44l-.91-.68c.1-.23.15-.49.15-.76 0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .37.11.71.28 1.01L3.01 5.28C2.71 5.11 2.37 5 2 5 .9 5 0 5.9 0 7s.9 2 2 2c.47 0 .9-.17 1.24-.44l.91.68c-.1.23-.15.49-.15.76 0 .37.11.71.28 1.01l-1.27 1.27C2.71 12.11 2.37 12 2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.37-.11-.71-.28-1.01l1.27-1.27c.3.17.64.28 1.01.28.93 0 1.71-.64 1.93-1.5h1.14c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2 0-.47-.17-.9-.44-1.24l.68-.91c.23.1.49.15.76.15 1.1 0 2-.9 2-2s-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fZzAc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 9.5c-.56 0-1.06.23-1.42.59L8.99 8l3.59-2.09A2.002 2.002 0 0016 4.5c0-1.1-.9-2-2-2s-2 .9-2 2c0 .19.03.37.08.54L8.5 7.13v-3.2c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v3.2L3.92 5.04c.05-.17.08-.35.08-.54 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.56 0 1.06-.23 1.42-.59L7.01 8l-3.59 2.09A2.002 2.002 0 000 11.5c0 1.1.9 2 2 2s2-.9 2-2c0-.19-.03-.37-.08-.54L7.5 8.87v3.2c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-3.2l3.58 2.09c-.05.17-.08.35-.08.54 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"0231b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 11c-.2 0-.38.04-.56.09L12.42 9.4c.36-.36.58-.85.58-1.4 0-.55-.22-1.04-.58-1.4l1.01-1.69c.19.05.37.09.57.09 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .55.22 1.04.58 1.4l-1.01 1.69C11.38 6.04 11.2 6 11 6c-.93 0-1.71.64-1.93 1.5H6.93C6.71 6.64 5.93 6 5 6c-.2 0-.38.04-.56.09L3.42 4.4C3.78 4.04 4 3.55 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.2 0 .38-.04.56-.09L3.58 6.6C3.22 6.96 3 7.45 3 8c0 .55.22 1.04.58 1.4l-1.01 1.69C2.38 11.04 2.2 11 2 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.55-.22-1.04-.58-1.4l1.01-1.69c.19.05.37.09.57.09.93 0 1.71-.64 1.93-1.5h2.14c.22.86 1 1.5 1.93 1.5.2 0 .38-.04.56-.09l1.01 1.69c-.35.36-.57.85-.57 1.4 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lAHym":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.16 6.02c-.12-.36-.26-.7-.43-1.03.17-.29.27-.63.27-.99 0-1.1-.9-2-2-2-.36 0-.7.1-.99.27-.33-.17-.67-.31-1.03-.43A1.987 1.987 0 008 0C6.95 0 6.1.81 6.02 1.84c-.36.12-.7.26-1.03.43C4.7 2.1 4.36 2 4 2c-1.1 0-2 .9-2 2 0 .36.1.7.27.99-.17.33-.31.67-.43 1.03C.81 6.1 0 6.95 0 8c0 1.05.81 1.9 1.84 1.98.12.36.26.7.43 1.03-.17.29-.27.63-.27.99 0 1.1.9 2 2 2 .36 0 .7-.1.99-.27.33.17.67.32 1.03.43C6.1 15.19 6.95 16 8 16c1.05 0 1.9-.81 1.98-1.84.36-.12.7-.26 1.03-.43.29.17.63.27.99.27 1.1 0 2-.9 2-2 0-.36-.1-.7-.27-.99.17-.33.31-.67.43-1.03C15.19 9.9 16 9.05 16 8c0-1.05-.81-1.9-1.84-1.98zm-.99 3.79c-.05.16-.11.31-.17.46-.3-.17-.64-.27-1-.27-1.1 0-2 .9-2 2 0 .36.1.7.27 1-.15.07-.3.12-.46.17C9.5 12.48 8.81 12 8 12s-1.5.48-1.81 1.17c-.16-.06-.32-.11-.46-.17.17-.3.27-.64.27-1 0-1.1-.9-2-2-2-.36 0-.7.1-1 .27-.07-.15-.12-.3-.17-.46C3.52 9.5 4 8.81 4 8s-.48-1.5-1.17-1.81c.06-.16.11-.32.17-.46.3.17.64.27 1 .27 1.1 0 2-.9 2-2 0-.36-.1-.7-.27-1 .15-.07.3-.12.46-.17C6.5 3.52 7.19 4 8 4s1.5-.48 1.81-1.17c.16.06.32.11.46.17-.17.3-.27.64-.27 1 0 1.1.9 2 2 2 .36 0 .7-.1 1-.27.07.15.12.3.17.46C12.48 6.5 12 7.19 12 8s.48 1.5 1.17 1.81z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"idSO8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 0C6.9 0 6 .9 6 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5LRB2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 5c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 1C.9 1 0 1.9 0 3s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm5 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iuSpX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.5 12.07V9.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2-.93 0-1.71.64-1.93 1.5H9.93c-.18-.7-.73-1.25-1.43-1.43V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v2.14c-.7.18-1.25.73-1.43 1.43H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8c0 .93.64 1.71 1.5 1.93v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93V9.93c.7-.18 1.25-.73 1.43-1.43h2.14c.18.7.73 1.25 1.43 1.43v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93V9.93c.7-.18 1.25-.73 1.43-1.43h2.14c.18.7.73 1.25 1.43 1.43v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g4khm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 6c-.93 0-1.71.64-1.93 1.5H9.93C9.71 6.64 8.93 6 8 6s-1.71.64-1.93 1.5H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.93 0 1.71-.64 1.93-1.5h2.13C6.29 9.36 7.07 10 8 10s1.71-.64 1.93-1.5h2.13c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2C16 6.9 15.1 6 14 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dfCRd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-2c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4d0Cf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jQWpk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.441 1.104a.985.985 0 00-.882 0L.365 5c-.487.253-.487.747 0 1L7.56 9.896a.985.985 0 00.882 0L15.635 6c.487-.253.487-.747 0-1L8.44 1.104z",
    "M14 5.5l.016 4.514c.002.548.447.99.994.99a.99.99 0 00.99-.99V5.5h-2zM3.371 9.047l4.387 2.432a.5.5 0 00.485 0l4.39-2.432a.25.25 0 01.371.218v2.955a.25.25 0 01-.134.222l-4.635 2.436a.5.5 0 01-.466 0l-4.635-2.436A.25.25 0 013 12.22V9.265a.25.25 0 01.371-.218z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3r5yn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.6 3.3C6.1 3.1 5.6 3 5 3 2.2 3 0 5.2 0 8s2.2 5 5 5c.6 0 1.1-.1 1.6-.3C5.3 11.6 4.5 9.9 4.5 8s.8-3.6 2.1-4.7zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3zm.35 1.02c.73 1.15 1.14 2.52 1.14 3.98s-.42 2.83-1.14 3.98c2.04-.18 3.64-1.9 3.64-3.98s-1.6-3.8-3.64-3.98z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4pGB6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.287 5.958a1 1 0 00-.574-1.916l-10 3c-.95.285-.95 1.631 0 1.916l10 3a1 1 0 00.574-1.916L6.48 8l6.807-2.042z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6wT3I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.287 3.958a1 1 0 00-.575-1.916l-10 3c-.95.285-.95 1.63 0 1.916l10 3a1 1 0 00.575-1.916L6.48 6l6.807-2.042zM13 12H3a1 1 0 000 2h10a1 1 0 000-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8sHlK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.405 11.746C8.968 11.91 8.495 12 8 12c-.494 0-.968-.09-1.405-.254l-.702 1.873C6.548 13.865 7.258 14 8 14c.742 0 1.452-.135 2.107-.38l-.702-1.874zm2.341-2.341l1.873.702C13.865 9.452 14 8.742 14 8c0-.742-.135-1.452-.38-2.107l-1.874.702c.164.437.254.91.254 1.405 0 .494-.09.968-.254 1.405zM9.405 4.254l.702-1.873A5.987 5.987 0 008 2c-.742 0-1.452.135-2.107.38l.702 1.874C7.032 4.09 7.505 4 8 4c.494 0 .968.09 1.405.254zM4.254 6.595L2.38 5.893A5.987 5.987 0 002 8c0 .742.135 1.452.38 2.107l1.874-.702A3.991 3.991 0 014 8c0-.494.09-.968.254-1.405zM8 16A8 8 0 118 0a8 8 0 010 16zm0-6a2 2 0 100-4 2 2 0 000 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gALyx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.01 14h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.44-1-1-1zm1-3h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.44-1-1-1zm-2-11C5.26 0 3.03 1.95 3.03 4.35c0 2.37 1.63 2.64 1.94 5.22 0 .24.22.44.5.44h5.09c.28 0 .5-.19.5-.44C11.37 6.99 13 6.72 13 4.35 13 1.95 10.77 0 8.01 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g1gUt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 9H5a1 1 0 01-1-1L4.89.876A1 1 0 015.884 0h4.27a.847.847 0 01.793 1.144L9.125 6h2.05a.825.825 0 01.754 1.16L8.16 15.64A.606.606 0 017 15.394V9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"18TC0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.99 11.99c.28 0 .53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42l-6 6a1.003 1.003 0 00.71 1.71zm3.85-2.02L6.4 12.41l-1 1-.01-.01c-.36.36-.85.6-1.4.6-1.1 0-2-.9-2-2 0-.55.24-1.04.6-1.4l-.01-.01 1-1 2.44-2.44c-.33-.1-.67-.16-1.03-.16-1.1 0-2.09.46-2.81 1.19l-.02-.02-1 1 .02.02c-.73.72-1.19 1.71-1.19 2.81 0 2.21 1.79 4 4 4 1.1 0 2.09-.46 2.81-1.19l.02.02 1-1-.02-.02c.73-.72 1.19-1.71 1.19-2.81 0-.35-.06-.69-.15-1.02zm7.15-5.98c0-2.21-1.79-4-4-4-1.1 0-2.09.46-2.81 1.19l-.02-.02-1 1 .02.02c-.72.72-1.19 1.71-1.19 2.81 0 .36.06.69.15 1.02l2.44-2.44 1-1 .01.01c.36-.36.85-.6 1.4-.6 1.1 0 2 .9 2 2 0 .55-.24 1.04-.6 1.4l.01.01-1 1-2.43 2.45c.33.09.67.15 1.02.15 1.1 0 2.09-.46 2.81-1.19l.02.02 1-1-.02-.02a3.92 3.92 0 001.19-2.81z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bi1rk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 10H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b8EwH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 1c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm9-12c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5hGF7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 9H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm9-12h-5c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM6 5H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fmQSd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 7h-.09A6.98 6.98 0 009 1.1V1c0-.55-.45-1-1-1S7 .45 7 1v.09A6.98 6.98 0 001.1 7H1c-.55 0-1 .45-1 1s.45 1 1 1h.1A6.969 6.969 0 007 14.91V15c0 .55.45 1 1 1s1-.45 1-1v-.09A6.98 6.98 0 0014.9 9h.1c.55 0 1-.45 1-1s-.45-1-1-1zm-6.02 5.9c-.05-.5-.46-.9-.98-.9s-.93.4-.98.9A5.017 5.017 0 013.1 8.98c.5-.05.9-.46.9-.98s-.4-.93-.9-.98A5.017 5.017 0 017.02 3.1c.05.5.46.9.98.9s.93-.4.98-.9c1.97.39 3.52 1.95 3.92 3.92-.5.05-.9.46-.9.98s.4.93.9.98a5.017 5.017 0 01-3.92 3.92zM8 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eGPK4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.96 7H12V3.95C12 1.77 10.21 0 8 0S4 1.77 4 3.95V7H1.96c-.55 0-.96.35-.96.9v6.91c0 .54.41 1.19.96 1.19h12c.55 0 1.04-.65 1.04-1.19V7.9c0-.55-.49-.9-1.04-.9zM6 7V3.95c0-1.09.9-1.97 2-1.97s2 .88 2 1.97V7H6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kaadF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 8c0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L7.59 7H1c-.55 0-1 .45-1 1s.45 1 1 1h6.59L6.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71zm4-8H9c-.55 0-1 .45-1 1s.45 1 1 1h5v12H9c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6ri3Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 14H2V2h5c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm8.71-6.71l-3-3a1.003 1.003 0 00-1.42 1.42L12.59 7H6c-.55 0-1 .45-1 1s.45 1 1 1h6.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5jTcf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.99 1.13c-.02-.41-.33-.77-.78-.87C12.26-.36 9.84.13 8 1.7 6.16.13 3.74-.36.78.26.33.35.03.72.01 1.13H0v12c0 .08 0 .17.02.26.12.51.65.82 1.19.71 2.63-.55 4.59-.04 6.01 1.57.02.03.06.04.08.06.02.02.03.04.05.06.04.03.09.04.13.07.05.03.09.05.14.07.11.04.23.07.35.07h.04c.12 0 .24-.03.35-.07.05-.02.09-.05.14-.07.04-.02.09-.04.13-.07.02-.02.03-.04.05-.06.03-.02.06-.03.08-.06 1.42-1.6 3.39-2.12 6.01-1.57.54.11 1.07-.21 1.19-.71.04-.09.04-.18.04-.26l-.01-12zM7 12.99c-1.4-.83-3.07-1.14-5-.93V1.96c2.11-.28 3.75.2 5 1.46v9.57zm7-.92c-1.93-.21-3.6.1-5 .93V3.42c1.25-1.26 2.89-1.74 5-1.46v10.11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fxea7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 8h3.76l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm14.49-4.01c.31-.32.51-.76.51-1.24C16 1.78 15.22 1 14.25 1c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.45-1.43zM1 4h7.76l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 6c-.55 0-1 .45-1 1 0 .48.35.86.8.96L2.76 10H1zm9.95-6.43l-6.69 6.69 2.47 2.47 6.69-6.69-2.47-2.47zm4.25 2.47L13.24 8H15c.55 0 1-.45 1-1 0-.48-.35-.86-.8-.96zM2 15l3.86-1.39-2.46-2.44L2 15zm13-5h-3.76l-2 2H15c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dXESS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 3a1 1 0 100 2 1 1 0 000-2zm3 1c0 .047-.001.094-.003.14.255.081.538.209.832.41.406.28.8.676 1.171 1.225.37-.549.765-.945 1.171-1.224a3.14 3.14 0 01.832-.411 3 3 0 11.77 1.87 1.038 1.038 0 00-.47.19c-.291.2-.752.672-1.227 1.8.475 1.128.936 1.6 1.227 1.8.183.126.336.173.47.19a3 3 0 11-.77 1.87 3.141 3.141 0 01-.832-.41c-.406-.28-.8-.676-1.171-1.225-.37.549-.765.945-1.171 1.224-.294.202-.577.33-.832.411a3 3 0 11-.77-1.87c.134-.017.287-.064.47-.19.291-.2.752-.672 1.227-1.8-.475-1.128-.936-1.6-1.227-1.8a1.038 1.038 0 00-.47-.19A3 3 0 116 4zm6 0a1 1 0 112 0 1 1 0 01-2 0zm-9 7a1 1 0 100 2 1 1 0 000-2zm9 1a1 1 0 112 0 1 1 0 01-2 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hOFdf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 2a1 1 0 100 2 1 1 0 000-2zm0-2c1.385 0 2.551.94 2.896 2.215.168.044.34.096.51.158 1.076.394 2.237 1.242 2.575 2.93.161.809.664 1.211 1.293 1.443a3 3 0 110 2.508c-.629.232-1.132.634-1.293 1.442-.338 1.69-1.499 2.537-2.575 2.93a5.436 5.436 0 01-.51.159A3.001 3.001 0 010 13a3 3 0 015.726-1.254c.629-.232 1.132-.634 1.293-1.442.216-1.076.765-1.81 1.413-2.304-.648-.493-1.197-1.228-1.413-2.304-.161-.808-.664-1.21-1.293-1.442A3 3 0 113 0zm1 13a1 1 0 10-2 0 1 1 0 002 0zm8-5a1 1 0 102 0 1 1 0 00-2 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aVh15":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.55 3.17l-4.49-3A.975.975 0 009.99.15L5.53 2.82 1.56.17A1.003 1.003 0 000 1v11c0 .35.18.65.45.83l4.49 3a.975.975 0 001.07.02l4.46-2.67 3.97 2.65A1.003 1.003 0 0016 15V4c0-.35-.18-.65-.45-.83zM5 13.46l-3-2v-8.6l2.94 1.96c.02.02.04.03.06.04v8.6zm5-2.32s-.01 0-.01.01L6 13.53V4.86s.01 0 .01-.01L10 2.47v8.67zm4 1.99l-2.94-1.96c-.02-.01-.04-.02-.05-.03v-8.6l3 2v8.59z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gIbzP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 6.82v6.32l-2.94-1.96c-.02-.01-.04-.02-.05-.03V6.22c-.08-.07-.15-.16-.22-.24-.28-.02-.54-.08-.79-.16v5.32s-.01 0-.01.01L6 13.53V4.86s.01 0 .01-.01l2.05-1.23C8.02 3.42 8 3.21 8 3c0-.98.47-1.84 1.2-2.39l-3.67 2.2L1.56.17A1.003 1.003 0 000 1v11c0 .35.18.65.45.83l4.49 3a.975.975 0 001.07.02l4.46-2.67 3.97 2.65A1.003 1.003 0 0016 15V5.82c-.25.09-.52.14-.8.16-.33.36-.73.67-1.2.84zm-9 6.64l-3-2v-8.6l2.94 1.96c.02.02.04.03.06.04v8.6zM11 4h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"chrlf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.46 0C5.42 0 2.95 2.39 2.95 5.33 2.95 8.28 8.46 16 8.46 16s5.51-7.72 5.51-10.67C13.96 2.39 11.5 0 8.46 0zm0 8a2.5 2.5 0 010-5 2.5 2.5 0 010 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7vkOX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.99 8.99c-.28 0-.53.11-.71.29l-3.29 3.29v-1.59c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.41L6.7 10.7a1.003 1.003 0 00-.71-1.71zm9-9h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.3a.99.99 0 00-.29.7 1.003 1.003 0 001.71.71l3.29-3.29V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Tstg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.99 6.99c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm3-5h-14c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-10c0-.55-.45-1-1-1zm-1 9l-5-3-1 2-3-4-3 5v-7h12v7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"UQzXI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 4h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 8H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-5H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"71Tli":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.99 6.99h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm-12-2c-.28 0-.53.11-.71.29l-2 2a1.014 1.014 0 000 1.42l2 2a1.003 1.003 0 001.71-.71v-4c0-.55-.45-1-1-1zm3-1h9c.55 0 1-.45 1-1s-.45-1-1-1h-9c-.55 0-1 .45-1 1s.45 1 1 1zm9 8h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fN3kB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.99 11.99h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm5.71 5.3l-2-2a1.003 1.003 0 00-1.71.71v4a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8hsEa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.71 5.29a1.003 1.003 0 00-1.42 1.42l.3.29H2V2h3v1.51c.52.06.99.29 1.34.65l.66.66V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-3.82l-.66.66c-.35.35-.82.59-1.34.65V14H2V9h2.59l-.3.29a1.003 1.003 0 001.42 1.42l2-2C7.89 8.53 8 8.28 8 8c0-.28-.11-.53-.29-.71l-2-2zM15 0h-5c-.55 0-1 .45-1 1v3.82l.66-.66c.35-.35.82-.59 1.34-.65V2h3v5h-2.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C8.11 7.47 8 7.72 8 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14v5h-3v-1.51c-.52-.06-.99-.29-1.34-.65L9 11.18V15c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5zFSx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 3c-.93 0-1.71.64-1.93 1.5H11V3c0-1.66-1.34-3-3-3S5 1.34 5 3v4.5H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.93 0 1.71-.64 1.93-1.5H5V13c0 1.66 1.34 3 3 3s3-1.34 3-3V8.5h1.07c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2s-.9-2-2-2zm-4 7c0 1.1-.9 2-2 2s-2-.9-2-2V3c0-1.1.9-2 2-2s2 .9 2 2v10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hXXwr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.99.99a1.003 1.003 0 00-1.71-.71l-3.29 3.29V1.99c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H12.4l3.3-3.29c.18-.18.29-.43.29-.71zm-10 8h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.29 14.28a1.003 1.003 0 001.42 1.42L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4a1.02 1.02 0 00-1.01-1.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5oRbB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 7H3c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3XOnt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 0H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM8 15c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3-3H5V3h6v9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cWMNc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 4c-.28 0-.53.11-.71.29L12 6.59V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V9.41l2.29 2.29c.18.19.43.3.71.3.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lbJwt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1a1 1 0 011 1v12a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1h14zm-1 4H2v8h12V5zm-3-3H9v2h2V2zm3 0h-2v2h2V2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bq0Rl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm1 4H0V3h16v2zm-3-2h-2V1h2v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3pnru":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 11.38A7.835 7.835 0 017.85 16C3.51 16 0 12.49 0 8.15 0 4.97 1.89 2.23 4.62 1c-.45.99-.7 2.08-.7 3.23a7.85 7.85 0 007.85 7.85c1.15 0 2.24-.25 3.23-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i4TP2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 6.03a2 2 0 100 4 2 2 0 100-4zM14 6.03a2 2 0 100 4 2 2 0 100-4zM8 6.03a2 2 0 100 4 2 2 0 100-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6k4zc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 13H3l6-9h1l2 2h1l3 7zm-2.5-3.5l-1-2.5h-1l-2-2-3 4.5L9 8l1 1 1-1 2.5 1.5zM5.94 7l-4.122 6H0l5-6h.94z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9mR8S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.71 7.29l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9V3.41l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C8.53.11 8.28 0 8 0s-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V7H3.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 9H7v3.59l-.29-.29A.965.965 0 006 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2a1.003 1.003 0 00-1.42-1.42l-.29.3V9h3.59l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7M2U5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14h-.15c-.03-.09-.04-.16-.08-.25-.34-.79-2.01-1.31-3.12-1.8-1.11-.49-.96-.79-1-1.2-.01-.06-.01-.12-.01-.18.38-.34.69-.8.89-1.33 0 0 .01-.03.01-.04.04-.12.08-.24.11-.36.25-.05.4-.33.46-.59.06-.1.18-.36.15-.65-.04-.37-.19-.55-.35-.62v-.06c0-.48-.04-1.16-.13-1.61-.02-.12-.05-.25-.08-.37-.16-.55-.51-1.05-.96-1.39C9.26 3.19 8.6 3 8 3c-.59 0-1.26.19-1.73.55-.45.35-.8.84-.96 1.39-.04.13-.06.25-.08.38-.09.45-.13 1.13-.13 1.61v.06c-.18.06-.33.24-.37.62-.03.29.09.54.15.65.06.26.21.54.47.59.03.12.07.25.11.36 0 .01.01.02.01.02v.01c.21.54.53 1.01.92 1.35 0 .05-.01.11-.01.16-.04.41.08.7-1.03 1.2-1.11.49-2.77 1.01-3.12 1.8-.04.09-.05.16-.08.25H2V2h12v12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"17Fhv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 3.98H4c-.55 0-1 .45-1 1v1h8v5h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm3-3H7c-.55 0-1 .45-1 1v1h8v5h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm-6 6H1c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm-1 5H2v-3h6v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"F0U6Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0c-.07 0-.13.03-.19.04V.02l-10 2v.02C4.35 2.13 4 2.52 4 3v9.12c-.31-.07-.65-.12-1-.12-1.66 0-3 .9-3 2s1.34 2 3 2 3-.9 3-2V6.32l8-1.6v5.4c-.31-.07-.65-.12-1-.12-1.66 0-3 .9-3 2s1.34 2 3 2 3-.9 3-2V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2eilr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 2c.55 0 1 .45 1 1v3c0 1.66 1.34 3 3 3h5.59L10.3 7.71A.965.965 0 0110 7a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42l1.3-1.29H6c-2.76 0-5-2.24-5-5V3c0-.55.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h05oN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.9 11c.6 0 1 .5 1 1 0 .257-.073.44-.22.614l-.08.086-3 3c-.2.2-.4.3-.7.3-.5 0-1-.4-1-1 0-.257.073-.44.22-.614l.08-.086 3-3c.2-.2.4-.3.7-.3zM1.3.1l6.734 2.45a3.005 3.005 0 002.095 3.322 3.005 3.005 0 003.401 2.081L13.9 9.8v.2c0 .257-.073.44-.22.614l-.08.086-3 3c-.171.171-.343.27-.577.294L9.9 14h-.2l-5-1-.1-.01c-.231-.05-.45-.26-.56-.49L4 12.4l-4-11 .3-.3 5.8 5.8c-.1.2-.2.4-.2.6 0 .8.6 1.5 1.5 1.5s1.5-.7 1.5-1.5S8.2 6 7.4 6c-.16 0-.32.064-.48.14l-.12.06L1 .4l.3-.3zM13 0c.55 0 1 .45 1 1v1h1c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .503-.376.922-.861.99l-.013.002A.999.999 0 0113 6l.097-.006-.027.004a1 1 0 01-.037.001L13 6c-.55 0-1-.45-1-1V4h-1a.993.993 0 01-.855-.482A1 1 0 0110 3c0-.55.45-1 1-1h1V1c0-.55.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d7LeY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 0H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm5 14c0-.55-.45-1-1-1s-1 .45-1 1v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1s-.45-1-1-1zM6 9H1c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm9 4c-.55 0-1 .45-1 1-.55 0-1 .45-1 1s.45 1 1 1h1c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm-4-4h-1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1s1-.45 1-1c.55 0 1-.45 1-1s-.45-1-1-1zm4-9h-5c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm0 9h-1c-.55 0-1 .45-1 1s.45 1 1 1c0 .55.45 1 1 1s1-.45 1-1v-1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kYsv4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.982 6.272l1.518.868-.01.01c.3.17.51.48.51.85s-.21.68-.51.85l.01.01-7 4-.01-.01A.94.94 0 018 13a.94.94 0 01-.49-.15l-.01.01-7-4 .01-.01A.977.977 0 010 8c0-.37.21-.68.51-.86L.5 7.13l7-4 .01.02A.94.94 0 018 3c.086 0 .168.014.246.038a2 2 0 105.736 3.234zM14 3c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .55-.45 1-1 1s-1-.45-1-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 1-1s1 .45 1 1v1h1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ea5il":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5H9a1 1 0 110-2h2V1a1 1 0 012 0v2zm-3-1.983V2H9a2 2 0 100 4h1v1c0 .279.057.544.16.785l-1.71.855c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5a.992.992 0 01.07-1.81l6.99-3a1.006 1.006 0 01.79 0l1.6.687zm.91 7.66a2 2 0 003.085-1.54l.555-.277c.14-.07.29-.11.45-.11.55 0 1 .45 1 1 0 .39-.23.73-.55.89l-7 3.5c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5C.23 8.48 0 8.14 0 7.75c0-.55.45-1 1-1 .16 0 .31.04.45.11L8 10.13l2.91-1.453zM15 10.25c.55 0 1 .45 1 1 0 .39-.23.73-.55.89l-7 3.5c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5c-.32-.16-.55-.5-.55-.89 0-.55.45-1 1-1 .16 0 .31.04.45.1L8 13.63l6.55-3.27c.14-.07.29-.11.45-.11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kJUDM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 3h-1V2c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3.5 6a2.5 2.5 0 00-2.45 2h-4.1a2.5 2.5 0 100 1h4.1a2.5 2.5 0 102.45-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bLQrF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 4c0 .6.4 1 1 1h2v2c0 .6.4 1 1 1s1-.4 1-1V5h2c.6 0 1-.4 1-1s-.4-1-1-1h-2V1c0-.6-.4-1-1-1s-1 .4-1 1v2H9c-.6 0-1 .5-1 1zm6.5 2.5V7c0 1.4-1.1 2.5-2.5 2.5S9.5 8.4 9.5 7v-.5H9C7.6 6.5 6.5 5.4 6.5 4S7.6 1.5 9 1.5h.5V1c0-.3.1-.6.1-.8C9.1.1 8.6 0 8 0 3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8c0-.6-.1-1.3-.2-1.9-.4.3-.8.4-1.3.4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cb9dd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.12 12.69c-1.17-.53-1.01-.85-1.05-1.29-.01-.06-.01-.12-.01-.19.4-.37.73-.87.94-1.44 0 0 .01-.03.01-.04.05-.14.09-.27.12-.4.27-.06.43-.36.49-.63.06-.11.19-.39.16-.7-.04-.41-.2-.6-.38-.68v-.07c0-.51-.05-1.25-.14-1.74-.02-.13-.05-.27-.09-.4-.17-.6-.53-1.14-1.01-1.52C7.66 3.2 6.96 3 6.33 3c-.62 0-1.33.2-1.82.59-.49.38-.85.92-1.02 1.52-.04.13-.07.26-.09.4-.09.49-.13 1.23-.13 1.74v.06c-.19.08-.35.27-.39.68-.03.31.1.59.16.7.06.28.22.59.5.64.03.14.07.27.11.4 0 .01.01.02.01.02v.01c.22.59.55 1.1.96 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.09 1.29-1.17.53-2.93 1.1-3.29 1.95-.35.87-.2 1.37-.2 1.37h12.6s.15-.5-.22-1.36c-.36-.85-2.12-1.42-3.29-1.95zM14.89 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1NdR0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.82 11.66l2.48-2.87c.12-.2.13-.37.04-.53-.11-.19-.3-.26-.52-.26h-1.29c-.27 0-.49.13-.63.34L8.44 9.9 6.95 8a.482.482 0 00-.08-.1L5.82 6.55c.57-.24 1.04-.57 1.42-1.01.49-.57.74-1.27.74-2.08 0-.51-.1-.99-.32-1.42-.21-.43-.51-.8-.89-1.11A4.1 4.1 0 005.42.24C4.91.08 4.34 0 3.72 0H.61C.26 0 0 .23 0 .56v9.89c0 .33.26.55.61.55h.8c.36 0 .61-.23.61-.56V6.99H3.3l3.73 4.74-2.71 3.48c-.12.2-.13.37-.04.53.11.19.3.26.52.26h1.27c.27 0 .51-.12.64-.34l1.69-2.15 1.66 2.14c.12.21.34.35.62.35h1.43c.2 0 .39-.08.5-.25.12-.18.09-.38-.02-.55l-2.77-3.54zM4.18 5H1.99V2.02h2.19c.62 0 1.08.13 1.38.37.29.22.44.62.44 1.08 0 .45-.15.94-.44 1.17-.31.23-.76.36-1.38.36zM15 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zM9.99 3.01c0 .02.01.04.01.06V2.95c0 .02-.01.04-.01.06z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9rdpa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 6.5c0 .28.22.5.5.5H7v3.5c0 .28.22.5.5.5s.5-.22.5-.5V7h1.5c.28 0 .5-.22.5-.5S9.78 6 9.5 6h-4c-.28 0-.5.22-.5.5zM15 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zm-2 5c-.55 0-1 .45-1 1v5H3V4h5c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Uu2k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 5s-2.52 2.11-4.96 1.99C11.03 4.89 10.39.23 5 0c0 0 2.11 2.54 1.96 4.99C4.86 5.01.23 5.65 0 11c0 0 2.56-2.12 5.02-1.95.02 2.11.67 6.72 5.98 6.95 0 0-2.09-2.54-1.94-4.99 2.11-.02 6.71-.68 6.94-6.01zM8 9.5c-.83 0-1.5-.67-1.5-1.5S7.17 6.5 8 6.5s1.5.67 1.5 1.5S8.83 9.5 8 9.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7VPcP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.58 5l.44-2.196a1 1 0 011.96.392L9.62 5H13a1 1 0 010 2H9.22l-.4 2H13a1 1 0 010 2H8.42l-.44 2.196a1 1 0 01-1.96-.392L6.38 11H3a1 1 0 010-2h3.78l.4-2H3a1 1 0 110-2h4.58z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1CXj0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 003 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6NpR8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 14c0 1.1-.9 2-2 2s-2-.9-2-2zM7 0c.404 0 .755.243.912.59L7.9.6c-.7.6-.9 1.36-.9 1.9 0 .8.267 1.433.8 1.9-.533.6-.795 1.222-.784 1.867l.004.358A2.8 2.8 0 009.82 9.4L12 9.399V10c0 .51.388.935.884.993L13 11c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V6c0-2.43 1.73-4.45 4.02-4.9L6 1c0-.55.45-1 1-1z",
    "M13 6.702a.632.632 0 00-.632-.632h-1.743l2.208-2.734A.75.75 0 0013 2.864v-.3A.565.565 0 0012.435 2H9.561a.561.561 0 100 1.123h1.814L9.221 5.795A1 1 0 009 6.423v.279c0 .349.283.631.632.631h2.736A.632.632 0 0013 6.702z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hDjmi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm3.399-13.667l-.413.412A2.99 2.99 0 009 1.99a3 3 0 00-3 2.99c0 .8.32 1.558.876 2.114l2.002 1.992A2.99 2.99 0 0013 9.184V10c0 .55.45 1 1 1s1 .45 1 1-.45 1-1 1H2c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V6c0-2.43 1.73-4.45 4.02-4.9 0-.04-.02-.06-.02-.1 0-.55.45-1 1-1s1 .45 1 1c0 .04-.02.06-.02.1a4.97 4.97 0 012.419 1.233zM10.29 7.67l-2-1.99a.99.99 0 01-.29-.7 1 1 0 011-.99c.27 0 .52.11.7.29l1.29 1.29 3.28-3.28c.18-.18.42-.29.7-.29.55 0 1 .44 1 .99 0 .28-.11.52-.3.7l-3.98 3.98a.99.99 0 01-1.4 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gWMWf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.76 7h1.26V0h-.94c-.04.21-.12.39-.25.54-.13.15-.29.27-.48.36-.18.09-.39.16-.62.2-.23.04-.46.06-.71.06v.9h1.74V7zm-.59 7.17c.18-.12.37-.25.58-.37a10.763 10.763 0 001.24-.83c.2-.16.37-.33.52-.51.15-.19.28-.39.37-.61.09-.22.14-.47.14-.74 0-.22-.04-.45-.12-.7-.08-.26-.21-.49-.4-.69-.18-.21-.43-.39-.72-.52-.3-.14-.68-.21-1.12-.21-.41 0-.77.07-1.08.2-.32.14-.58.32-.8.56-.22.23-.38.51-.49.84-.11.32-.16.67-.16 1.05h1.19c.01-.24.03-.47.08-.67.05-.21.11-.39.21-.54.09-.15.22-.27.38-.36.16-.09.35-.13.59-.13.26 0 .47.04.63.12.16.08.29.18.38.3.09.12.15.25.18.39s.05.27.05.4c-.01.27-.08.5-.22.71-.14.21-.32.4-.53.57-.22.18-.45.34-.71.49-.26.15-.51.31-.74.47-.5.31-.89.68-1.17 1.11-.3.41-.44.91-.45 1.48h5v-1H1.43c.05-.15.14-.29.27-.43.14-.13.29-.26.47-.38zM15.01 1.99h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.44-1-1-1zm0 9h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.44-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6PjjT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.79 4.61c-.13.17-.29.3-.48.41-.18.11-.39.18-.62.23-.23.04-.46.07-.71.07v1.03h1.74V12h1.26V4h-.94c-.04.23-.12.44-.25.61zm4.37 5.31c.18-.14.37-.28.58-.42l.63-.45c.21-.16.41-.33.61-.51s.37-.38.52-.59c.15-.21.28-.45.37-.7.09-.25.13-.54.13-.85 0-.25-.04-.52-.12-.8-.07-.29-.2-.55-.39-.79a2.18 2.18 0 00-.73-.6c-.29-.15-.66-.23-1.11-.23-.41 0-.77.08-1.08.23-.31.16-.58.37-.79.64-.22.27-.38.59-.49.96-.11.37-.16.77-.16 1.2h1.19c.01-.27.03-.53.08-.77.04-.24.11-.45.21-.62.09-.18.22-.32.38-.42.16-.1.35-.15.59-.15.26 0 .47.05.63.14.15.09.28.21.37.35.09.14.15.29.18.45.03.16.05.31.05.45-.01.31-.08.58-.22.82-.14.23-.32.45-.53.65-.22.21-.46.39-.71.57-.26.18-.51.36-.75.54-.5.36-.89.78-1.17 1.27-.28.49-.43 1.06-.44 1.71h5v-1.15H6.43c.05-.17.14-.33.27-.49.13-.15.29-.29.46-.44zm8.5-1.56c-.23-.35-.54-.57-.95-.65v-.02c.34-.13.6-.34.76-.63.16-.29.24-.63.24-1.02 0-.34-.06-.64-.19-.9s-.3-.47-.51-.64c-.21-.17-.45-.3-.72-.38-.27-.09-.54-.13-.82-.13-.36 0-.68.07-.96.2-.28.13-.53.32-.72.55-.2.23-.36.51-.47.83-.11.32-.18.66-.19 1.04h1.15c-.01-.2.01-.39.06-.58.05-.19.12-.36.22-.51.1-.15.22-.27.37-.36.15-.09.32-.13.53-.13.32 0 .59.1.79.3.21.2.31.46.31.79 0 .23-.05.43-.14.59-.09.16-.21.29-.35.38-.15.09-.32.16-.51.19-.19.04-.38.05-.57.04v.93c.23-.01.45 0 .67.02.22.02.42.08.59.17.18.09.32.23.43.4.11.18.16.41.16.71 0 .44-.13.78-.39 1.02s-.58.36-.97.36c-.45 0-.79-.16-1.02-.47-.23-.31-.33-.7-.32-1.17H11c.01.4.06.77.17 1.1.11.33.26.61.47.85.21.23.46.42.77.54.31.13.67.19 1.08.19.34 0 .66-.05.96-.16.3-.11.57-.27.8-.47.23-.2.41-.45.55-.74.13-.27.2-.6.2-.97 0-.5-.11-.92-.34-1.27z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fwXQb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 5h-3V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h3v-4h4v4h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM5 10H2V7h3v3zm0-5H2V2h3v3zm5 5H7V7h3v3zm0-5H7V2h3v3zm4 9h-2v-2h2v2zm0-4h-2V7h2v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dL3v9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM6 14l1-5H4l6-7-1 5h3l-6 7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c9p3s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 14h-1.35l-3.34-7.51 2.46-.95 1.45 3.21c.09.2.36.3.6.23.1-.03.18-.08.24-.15.05-.08 1.23-1.56.87-4.2-.11-.79-.52-4.62-3.26-4.62-.93 0-1.68.62-1.67 1.37 0 .14.03.28.09.42l.87 1.92L.64 8.07v.01A.98.98 0 000 9c0 .55.45 1 1 1 .13 0 .25-.03.36-.07v.01l1.04-.4L3.67 14H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM4.27 8.81L7.14 7.7 5.2 12.08l-.93-3.27zM6.54 14L9 8.46 11.46 14H6.54z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1314K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1zm-6 5c-.28 0-.53.11-.71.29l-2 2a1.014 1.014 0 000 1.42l2 2a1.003 1.003 0 001.71-.71v-4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9esAx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 3a1 1 0 11-2 0 1 1 0 012 0zm-3.726 1.254a3 3 0 10-.17-2.039 5.467 5.467 0 00-.51.158c-1.076.394-2.237 1.242-2.575 2.93-.161.809-.664 1.211-1.293 1.443a3 3 0 100 2.508c.629.232 1.132.634 1.293 1.442.338 1.69 1.499 2.537 2.575 2.93.17.063.342.115.51.159a3.001 3.001 0 10.17-2.04c-.629-.231-1.132-.633-1.293-1.441C8.765 9.228 8.216 8.494 7.568 8c.648-.493 1.197-1.228 1.413-2.304.161-.808.664-1.21 1.293-1.442zM13 14a1 1 0 110-2 1 1 0 010 2zM4 8a1 1 0 10-2 0 1 1 0 002 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kgO1i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 8a1 1 0 112 0 1 1 0 01-2 0zm3.83-1a3.001 3.001 0 100 2h4.34a3.001 3.001 0 100-2H5.83zM13 7a1 1 0 100 2 1 1 0 000-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"givgi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 0h10c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H8v-2h6V3H6v5H4V1c0-.55.45-1 1-1zm2.5 5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h2c.28 0 .5-.22.5-.5S9.78 6 9.5 6h-2c-.28 0-.5.22-.5.5s.22.5.5.5zM11 8.5c0 .28-.165.5-.375.5h-2.25C8.165 9 8 8.78 8 8.5s.165-.5.375-.5h2.25c.21 0 .375.22.375.5zM5 14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9MNbD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0c4.42 0 8 3.58 8 8 0 4.06-3.02 7.4-6.94 7.92-.02 0-.04.01-.06.01-.33.04-.66.07-1 .07-4.42 0-8-3.58-8-8 0-.55.45-1 1-1s1 .45 1 1c0 3.31 2.69 6 6 6 .71 0 1.37-.15 2-.38v.01c2.33-.82 4-3.02 4-5.63 0-3.31-2.69-6-6-6-1.78 0-3.36.78-4.46 2H5c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v1.74A7.95 7.95 0 018 0zm1 12H7v-2h2v2zm0-3H7V4h2v5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"25k5o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 .95H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-12c0-.55-.45-1-1-1zm-9 12H2v-6h4v6zm8 0H7v-6h7v6zm0-7H2v-3h12v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fxflF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 4h3v1h-3zM10 6h3v1h-3zM10 8h3v1h-3zM10 10h3v1h-3z",
    "M15 1H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM8 12H2V3h6v9zm6 0H9V3h5v9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fKLxO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM8 9H6V7h2v2zm0-3H6V4h2v2zm-6 6V3h3v9H2zm4 0v-2h2v2H6zm8 0H9v-2h5v2zm0-3H9V7h5v2zm0-3H9V4h5v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lhz2s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.68 2.31A4.54 4.54 0 0011.46.99c-1.15 0-2.31.44-3.19 1.32L.95 9.63c-.63.63-.95 1.46-.95 2.28a3.21 3.21 0 003.23 3.22c.83 0 1.66-.31 2.3-.95l7.31-7.32c.76-.77.76-1.98.01-2.73s-1.99-.76-2.75 0l-6.07 6.08c-.24.25-.24.65.01.9s.65.25.91.01l6.07-6.08c.25-.25.67-.25.91-.01.25.25.25.67 0 .92l-7.31 7.32c-.75.75-2.04.74-2.76.01-.75-.75-.73-2.02.01-2.76L9.2 3.21c1.24-1.24 3.35-1.26 4.58-.03 1.24 1.24 1.24 3.36 0 4.6l-7.12 7.13c-.24.25-.24.64.01.88.24.24.63.24.88.01v.01l7.13-7.13A4.41 4.41 0 0016 5.51c0-1.16-.44-2.32-1.32-3.2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8OX4Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 1H6C3.8 1 2 2.8 2 5s1.8 4 4 4v5c0 .6.4 1 1 1s1-.5 1-1V3h2v11c0 .6.4 1 1 1s1-.5 1-1V3h1c.5 0 1-.4 1-1s-.4-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Gu7Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.5 0h-13C.67 0 0 .67 0 1.5S.67 3 1.5 3H7v3H3.5C2.67 6 2 6.67 2 7.5S2.67 9 3.5 9H7v3H5.5c-.83 0-1.5.67-1.5 1.5S4.67 15 5.5 15h5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5H9V9h3.5c.83 0 1.5-.67 1.5-1.5S13.33 6 12.5 6H9V3h5.5c.83 0 1.5-.67 1.5-1.5S15.33 0 14.5 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"em20Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 14.62l-4-2.4V9.77c-.32.09-.66.15-1 .18v2.27l-4 2.4V8.71c-.38-.31-.72-.66-1-1.06v6.97l-4-2.4V8c.55 0 1-.45 1-1s-.45-1-1-1V1.38l3.15 1.89c.08-.34.18-.66.32-.97L.76.07v.01A.496.496 0 00.5 0C.22 0 0 .22 0 .5v12c0 .18.1.33.25.42v.01l5 3v-.01c.07.05.16.08.25.08s.18-.03.25-.08v.01l4.74-2.85 4.74 2.85v-.01c.09.05.18.08.27.08.28 0 .5-.22.5-.5v-3.78c-.3.17-.63.28-1 .28v2.62zM2 5c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm6-1c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm7.75-.92l-1.19-.72c.18.43.29.9.36 1.38l.08.04v3.39l1 1V3.5c0-.18-.1-.33-.25-.42zM10 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3.3 4.89c.44-.7.7-1.51.7-2.39C14 2.01 11.99 0 9.5 0S5 2.01 5 4.5 7.01 9 9.5 9c.88 0 1.69-.26 2.39-.7l2.41 2.41c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71l-2.41-2.4zM9.5 8C7.57 8 6 6.43 6 4.5S7.57 1 9.5 1 13 2.57 13 4.5 11.43 8 9.5 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jooyD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 3H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm6 0h-2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6ihAo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.69 13.98c-.05-.24-.14-.5-.25-.76-.36-.86-1.12-1.33-2.69-2-.14-.06-.59-.25-.6-.25-.21-.09-.36-.15-.5-.22.02-.1.02-.2.03-.31 0-.04.01-.08.01-.13-.07-.06-.13-.12-.19-.19.22-.32.4-.67.54-1.05.02-.06.02-.06.03-.1.29-.23.48-.57.59-.96.16-.33.25-.73.21-1.16-.03-.4-.16-.76-.37-1.03-.02-.53-.07-1.13-.15-1.54-.01-.06-.02-.12-.03-.19.23-.06.48-.09.72-.09.49 0 1.05.16 1.44.46.38.29.67.7.8 1.17.03.1.05.21.07.31.07.37.11.94.11 1.33v.05c.14.06.27.21.29.51.02.25-.07.45-.13.54-.05.21-.16.44-.38.48-.02.1-.05.2-.09.3 0 .01-.01.03-.01.03-.17.44-.43.83-.75 1.11v.14c.03.35-.09.59.83 1 .93.41 2.32.84 2.6 1.5.29.66.17 1.04.17 1.04h-2.3zm-1.17-.38c.37.86.22 1.36.22 1.36H.06s-.14-.5.22-1.36 2.13-1.43 3.31-1.96c1.17-.54 1.05-.86 1.09-1.3 0-.05.01-.11.01-.17-.41-.35-.75-.86-.97-1.45v-.01s-.01-.01-.01-.02c-.04-.12-.09-.26-.12-.39-.28-.05-.44-.36-.5-.64-.06-.12-.19-.39-.16-.71.04-.41.21-.6.39-.68v-.06c0-.51.05-1.26.14-1.74.02-.13.05-.27.09-.4.17-.6.54-1.13 1.02-1.51.5-.39 1.21-.6 1.84-.6s1.34.21 1.84.6c.48.38.85.91 1.02 1.52.04.13.07.27.09.4.09.48.14 1.22.14 1.73v.07c.18.08.34.27.37.67.03.32-.09.59-.16.71-.06.28-.21.58-.48.63-.03.13-.07.26-.12.39 0 .01-.01.04-.01.04-.22.58-.55 1.08-.95 1.45v.18c.04.45-.12.77 1.06 1.3 1.18.53 2.95 1.09 3.31 1.95z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i8nV4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 6V4c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1c1.1 0 2-.9 2-2zM3.5 6c-.28 0-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5s.5.22.5.5v1c0 .28-.22.5-.5.5zM13 8h-1c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1c1.1 0 2-.9 2-2v-2c0-1.1-.9-2-2-2zm0 3.5c0 .28-.22.5-.5.5s-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5s.5.22.5.5v1zM12 3a1.003 1.003 0 00-1.87-.5l-5.99 9.98c-.09.15-.14.33-.14.52a1.003 1.003 0 001.87.5l5.99-9.98c.09-.15.14-.33.14-.52z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a5I42":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.68 14.32c-.46-1.05-2.68-1.75-4.16-2.4-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15A3.671 3.671 0 0010.32.72C9.68.25 8.79-.01 8-.01c-.79 0-1.68.25-2.31.73-.61.47-1.06 1.13-1.28 1.86-.05.17-.09.33-.11.5-.12.6-.17 1.51-.17 2.15v.08c-.24.09-.45.32-.5.83-.03.38.13.72.2.86.08.35.28.72.63.78.04.17.09.33.15.49 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.37 1.59-1.48.65-3.7 1.35-4.16 2.4-.46 1.05-.27 1.67-.27 1.67h15.92c-.01.01.18-.61-.28-1.66z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jwxgj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.9 12.41c-.06-.06-3.37-2-3.48-2.05a.794.794 0 00-.32-.08c-.15 0-.34.11-.57.32-.23.22-.94 1.19-1.15 1.4-.21.22-.38.32-.52.32-.07 0-.15-.02-.25-.06-.1-.04-1.16-.58-3.36-2.52-2.2-1.93-2.49-3.2-2.5-3.55 0-.14.11-.31.32-.52.22-.21.45-.41.7-.6.25-.19.49-.4.7-.62.22-.23.32-.42.32-.57 0-.11-.03-.21-.08-.32C5.66 3.46 3.66.15 3.59.08 3.44-.07 2.85 0 2.55.16.16 1.46-.03 3.2 0 3.89c.04.71.49 4.46 4.16 7.95C8.72 16.17 11.89 16 12.1 16c.69 0 2.82-.38 3.72-2.55.13-.32.25-.87.08-1.04z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fAeqp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 1.08c-3.37.5-5.97 3.4-5.97 6.92 0 3.87 3.13 7 6.98 7 3.52 0 6.42-2.61 6.91-6H7V1.08z",
    "M8 0v8h8c0-4.42-3.58-8-8-8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kc9Ip":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.41.92c-.51.51-.41 1.5.15 2.56L4.34 7.54C2.8 6.48 1.45 6.05.92 6.58l3.54 3.54-3.54 4.95 4.95-3.54 3.54 3.54c.53-.53.1-1.88-.96-3.42l4.06-5.22c1.06.56 2.04.66 2.55.15L9.41.92z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bzn2S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.57 7.02L.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4.27-4.27c-.58-.35-1.07-.84-1.41-1.42zM15 8c-.55 0-1 .45-1 1v.59l-2.57-2.57c-.34.58-.83 1.07-1.41 1.41L12.59 11H12c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-4-3c0-1.66-1.34-3-3-3S5 3.34 5 5s1.34 3 3 3 3-1.34 3-3zM8 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ixQw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm0-4H1C.45 0 0 .45 0 1v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm11.71 4.29C13.53 4.11 13.28 4 13 4s-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V9c0 1.66-1.34 3-3 3H7.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H9c2.76 0 5-2.24 5-5V7.41l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2zM15 0H5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ja6Z1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 8c0-.35-.19-.64-.46-.82l.01-.02-6-4-.01.02A.969.969 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 6-4-.01-.02c.27-.18.46-.47.46-.82z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dnxFq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.293.293a1 1 0 011.414 1.414L4.414 3l1.293 1.293a1 1 0 01-1.414 1.414L3 4.414 1.707 5.707A1 1 0 01.293 4.293L1.586 3 .293 1.707A1 1 0 011.707.293L3 1.586 4.293.293z",
    "M14.29 4.71L13 3.41V6a3 3 0 01-3 3H4a1 1 0 00-1 1v5a1 1 0 11-2 0v-5a3 3 0 013-3h6a1 1 0 001-1V3.41L9.71 4.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71l3-3c.18-.18.43-.29.71-.29.28 0 .53.11.71.29l3 3a1.003 1.003 0 01-1.42 1.42z",
    "M16 13a3 3 0 11-6 0 3 3 0 016 0zm-2 0a1 1 0 11-2 0 1 1 0 012 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"blIiY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 7H9V3c0-.55-.45-1-1-1s-1 .45-1 1v4H3c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V9h4c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kugGL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 5c-.24 0-.47.05-.68.13L9.97 2.34c.01-.11.03-.22.03-.34 0-1.1-.9-2-2-2S6 .9 6 2c0 .04.01.08.01.12L2.88 4.21C2.61 4.08 2.32 4 2 4 .9 4 0 4.9 0 6c0 .74.4 1.38 1 1.72v4.55c-.6.35-1 .99-1 1.73 0 1.1.9 2 2 2 .74 0 1.38-.4 1.72-1h4.55c.35.6.98 1 1.72 1 1.1 0 2-.9 2-2 0-.37-.11-.7-.28-1L14 9c1.11-.01 2-.9 2-2s-.9-2-2-2zm-4.01 7c-.73 0-1.37.41-1.71 1H3.73c-.18-.3-.43-.55-.73-.72V7.72c.6-.34 1-.98 1-1.72 0-.04-.01-.08-.01-.12l3.13-2.09c.27.13.56.21.88.21.24 0 .47-.05.68-.13l3.35 2.79c-.01.11-.03.22-.03.34 0 .37.11.7.28 1l-2.29 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"evPyA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S7 .45 7 1v6c0 .55.45 1 1 1zm3-5.32v2.34c1.21.91 2 2.35 2 3.98 0 2.76-2.24 5-5 5s-5-2.24-5-5c0-1.63.79-3.06 2-3.98V2.68C2.64 3.81 1 6.21 1 9c0 3.87 3.13 7 7 7s7-3.13 7-7c0-2.79-1.64-5.19-4-6.32z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"73UfC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 6.41c0-1.01-.49-1.94-1.29-2.49-.43-1.92-2.07-3.28-4-3.28-.46 0-.92.08-1.35.24C8.83.31 8.11 0 7.34 0c-.9 0-1.74.44-2.28 1.16-.12-.01-.24-.02-.36-.02-1.31 0-2.42.89-2.77 2.17C.78 3.72 0 4.84 0 6.13c0 .38.07.76.21 1.12C.07 7.6 0 7.98 0 8.36c0 1.11.58 2.11 1.51 2.63.54.56 1.27.87 2.03.87.49 0 .95-.12 1.37-.36a2.85 2.85 0 002.18 1.04c.52 0 1.03-.14 1.47-.42.49.39 1.07.65 1.69.73 1.04 1.15 1.84 2.63 1.84 2.64 0 0 .28.49.26.49.77 0 1.41-.16 1.32-1.04 0 .02-.73-2.31-.73-2.31.41-.21.75-.55.97-.98.9-.52 1.47-1.53 1.47-2.61 0-.24-.03-.48-.08-.71.45-.52.7-1.21.7-1.92zm-1.23 1.02l-.15-.16-.61-.67c-.27-.29-.54-.94-.58-1.39l-.1-1.01c-.05-.59-.94-.58-.91.11 0 .02.1 1.01.1 1.01.03.29.12.62.24.93-.06-.01-.12-.02-.18-.02 0 0-2.06-.1-2.05-.11-.58-.02-.71.97-.04 1l2.05.11c.42.02 1.04.3 1.29.58l.49.54.02.05c.08.21.12.44.12.66 0 .74-.41 1.41-1.07 1.75l-.16.08-.07.18c-.15.38-.48.66-.88.74l-.54.11.7 2.2c-.38-.61-.95-1.43-1.62-2.14l-.12-.13-.17-.01c-.41-.03-.8-.17-1.14-.38l1.36-1.18c.35-.31.83-.44.99-.39 0 0 .63.17.62.18.63.16.83-.74.23-.97l-.62-.18c-.55-.16-1.33.18-1.79.58l-1.53 1.33-.31.26c-.35.29-.75.44-1.2.44-.64 0-1.23-.33-1.58-.86V9.15c0-.4.17-.79.27-.85 0 0 .52-.34.51-.35.71-.53.18-1.23-.49-.89 0-.01-.52.35-.52.35-.26.15-.45.44-.58.77-.11-.11-.22-.2-.34-.28 0 0-1.53-1.01-1.53-1.02-.65-.45-1.2.51-.49.89 0-.01 1.51 1.02 1.51 1.02.37.24.62.78.62 1.09v.67c-.34.19-.63.29-.99.29-.54 0-1.05-.23-1.41-.63l-.05-.06-.07-.04c-.65-.34-1.05-1-1.05-1.73 0-.3.07-.6.2-.87l.12-.25L1.15 7c-.13-.27-.2-.56-.2-.87 0-.9.61-1.68 1.48-1.89l.31-.08.05-.34a1.926 1.926 0 012.38-1.58l.32.08.18-.31c.35-.6.99-.97 1.67-.97.44 0 .86.15 1.2.42l-.36.36v-.01l-.25.26c-.33.27-.74.42-.89.4 0 0-.67-.1-.67-.11-.67-.13-.87.86-.14 1.02.01 0 .67.11.67.11.02 0 .05 0 .07.01-.11.37-.15.77-.1 1.12 0 0 .17.99.15.99.11.52 1.06.36.93-.18 0-.01-.15-.99-.15-.99-.05-.37.12-.94.36-1.19l.39-.4c.05-.05.1-.09.15-.14l.74-.76c.4-.18.83-.27 1.27-.27 1.55 0 2.86 1.12 3.11 2.67l.04.25.21.12c.61.35.98 1 .98 1.7 0 .36-.1.7-.28 1.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7iO1G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.91 8.34c.14-.21.36-.34.63-.34h1.29c.22 0 .41.07.52.26.09.16.08.33-.04.53l-2.49 2.87 2.77 3.54c.12.17.14.37.02.55-.11.17-.3.25-.5.25h-1.44a.69.69 0 01-.61-.35L9.4 13.51l-1.69 2.15c-.13.21-.36.34-.63.34H5.8c-.22 0-.41-.07-.52-.26-.09-.16-.08-.33.04-.53l2.71-3.48L4.3 6.99H3.03v3.47c0 .33-.26.56-.62.56h-.8c-.35-.01-.61-.23-.61-.56V.56c0-.33.26-.56.62-.56h3.11c.62 0 1.19.08 1.7.24.51.16.96.39 1.34.69a3.194 3.194 0 011.21 2.53c0 .81-.25 1.5-.74 2.08-.37.44-.84.77-1.42 1.01L7.88 7.9c.04.04.07.08.08.1l1.49 1.9 1.46-1.56zM5.18 5c.62 0 1.08-.13 1.39-.37.29-.23.44-.71.44-1.16s-.15-.87-.44-1.1C6.26 2.12 5.8 2 5.18 2H2.99v3h2.19z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lp0jl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1H9c0-.55-.45-1-1-1S7 .45 7 1H1c-.55 0-1 .45-1 1s.45 1 1 1v8c0 .55.45 1 1 1h3.59L3.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 13.41V15c0 .55.45 1 1 1s1-.45 1-1v-1.59l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L10.41 12H14c.55 0 1-.45 1-1V3c.55 0 1-.45 1-1s-.45-1-1-1zm-2 9H3V3h10v7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Nlm5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 2.02c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h8v-1zm3 2H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1v-3h12v3h1c.55 0 1-.45 1-1v-6c0-.56-.45-1-1-1zm-1 3h-2v-1h2v1zm-3 6H5v-3H3v4c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-4h-2v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"alP2a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1h12V3zm-2-3H4c-.55 0-1 .45-1 1h10c0-.55-.45-1-1-1zm3 5H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-3 6c0 .55-.45 1-1 1H5c-.55 0-1-.45-1-1V9h1v2h6V9h1v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l05Kd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-3h9c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1zm-4 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm13-5H6c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0 6H6c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bJXVg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-.5-6.5a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM7 3h8c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zm8 10H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zM3 0C1.9 0 1 .9 1 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 6H7c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9VFi1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.16 3.76c.15-.11.3-.16.47-.16.06 0 .17.02.34.06.16.04.31.06.43.06a.58.58 0 00.6-.6c0-.19-.06-.33-.17-.44-.11-.11-.28-.16-.49-.16-.19 0-.37.04-.54.13-.17.09-.39.27-.65.55-.2.21-.48.58-.87 1.11a5.22 5.22 0 00-.78-1.79l-2.05.32-.04.21c.15-.03.28-.04.39-.04.2 0 .37.08.5.25.21.26.5 1.03.88 2.33-.29.36-.49.6-.6.71-.18.19-.33.31-.45.36-.09.04-.19.07-.3.07-.09 0-.23-.04-.42-.13a.904.904 0 00-.36-.09c-.2 0-.36.06-.49.18a.59.59 0 00-.19.46c0 .18.06.32.18.43.12.11.28.16.48.16.2 0 .38-.04.55-.12.17-.08.39-.24.65-.49s.62-.65 1.07-1.19c.18.52.33.89.46 1.13.13.24.28.4.44.51.17.1.37.16.62.16.24 0 .49-.08.74-.25.33-.21.66-.58 1.01-1.09l-.21-.11c-.23.31-.41.5-.52.57a.44.44 0 01-.26.07c-.12 0-.24-.07-.36-.21-.2-.24-.46-.91-.8-2 .29-.49.54-.81.74-.96zM6.37 5.83l.68-2.53h.83l.2-.64h-.84c.24-.91.56-1.59.96-2.01.24-.27.48-.4.71-.4.05 0 .08.01.11.04s.04.06.04.1c0 .04-.03.11-.1.21-.06.1-.1.2-.1.29 0 .13.05.24.15.33.1.09.23.14.39.14.17 0 .31-.06.42-.17.12-.12.18-.27.18-.46 0-.21-.08-.39-.25-.52C9.57.07 9.3 0 8.93 0c-.59 0-1.12.16-1.59.48-.48.32-.93.85-1.36 1.59-.15.26-.29.42-.42.49s-.35.11-.64.1l-.19.65h.81L4.35 7.68c-.2.72-.33 1.16-.4 1.33-.1.24-.26.45-.46.62a.48.48 0 01-.31.1c-.03 0-.06-.01-.08-.03l-.03-.03c0-.02.03-.06.09-.11.06-.06.09-.15.09-.26 0-.13-.05-.23-.14-.32-.1-.09-.23-.13-.41-.13-.21 0-.38.05-.51.16A.52.52 0 002 9.4c0 .16.08.3.23.42.16.12.4.18.74.18.53 0 .99-.13 1.4-.39.41-.26.76-.65 1.07-1.19.3-.53.61-1.39.93-2.59zm2.34 3.46A.997.997 0 008 9c-.28 0-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V15c0 .55.45 1 1 1s1-.45 1-1v-2.59l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kPMGN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 8h-1.46l-1.7-2.55-.02.01A.984.984 0 0011 5c-.43 0-.79.27-.93.65h-.01l-1.69 4.51-1.38-8.32h-.02A.989.989 0 006 1c-.41 0-.77.25-.92.61L2.34 8H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.41 0 .77-.25.92-.61l1.65-3.86 1.44 8.63h.02c.08.47.47.84.97.84.43 0 .79-.27.93-.65h.01l2.31-6.17.92 1.38.02-.01c.17.26.46.45.81.45h2c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kEZuM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.5 8a2.5 2.5 0 11.608-4.926 4.002 4.002 0 017.381-1.03A3 3 0 1112 8H3.501zM3 10a1 1 0 012 0v4a1 1 0 11-2 0v-4zm7-1a1 1 0 00-1 1v5a1 1 0 102 0v-5a1 1 0 00-1-1zm2 1a1 1 0 112 0v2a1 1 0 11-2 0v-2zM7 9a1 1 0 00-1 1v2a1 1 0 102 0v-2a1 1 0 00-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eIc98":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.48 4h1.11l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H11c-.32 0-.59.16-.77.38l-.01-.01L8.28 4.8l1.28 1.6L11.48 4zm2.23 6.29a1.003 1.003 0 00-1.42 1.42l.3.29h-1.11l-7.7-9.62h-.01A.996.996 0 003 2H1c-.55 0-1 .45-1 1s.45 1 1 1h1.52l7.7 9.62.01-.01c.18.23.45.39.77.39h1.59l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2zM2.52 12H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.32 0 .59-.16.77-.38l.01.01 1.94-2.42L4.44 9.6 2.52 12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i6wdV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 3a5 5 0 100 10A5 5 0 108 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3e7El":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 15V1h10v14H3zm0 1a1 1 0 01-1-1V1a1 1 0 011-1h10a1 1 0 011 1v14a1 1 0 01-1 1H3zM8.707 3.293a1 1 0 00-1.414 0l-2 2a1 1 0 001.414 1.414L8 5.414l1.293 1.293a1 1 0 001.414-1.414l-2-2zm-2 6a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L8 10.586 6.707 9.293z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aIEN7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 3h14v10H1V3zM0 3a1 1 0 011-1h14a1 1 0 011 1v10a1 1 0 01-1 1H1a1 1 0 01-1-1V3zm10.707 2.293a1 1 0 00-1.414 1.414L10.586 8 9.293 9.293a1 1 0 001.414 1.414l2-2a1 1 0 000-1.414l-2-2zm-4 1.414a1 1 0 00-1.414-1.414l-2 2a1 1 0 000 1.414l2 2a1 1 0 001.414-1.414L5.414 8l1.293-1.293z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kDP7s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 3h14c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1zm1 2v6h12V5H2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cyWZp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3.71-6.71l-3-3a1.003 1.003 0 00-1.42 1.42L12.59 4H5C2.24 4 0 6.24 0 9s2.24 5 5 5h4v-2H5c-1.66 0-3-1.34-3-3s1.34-3 3-3h7.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5wQaA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.99 6.99c-.55 0-1 .45-1 1 0 3.31-2.69 6-6 6-1.77 0-3.36-.78-4.46-2h1.46c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-1.74a7.95 7.95 0 006 2.74c4.42 0 8-3.58 8-8 0-.55-.45-1-1-1zm0-7c-.55 0-1 .45-1 1v1.74a7.95 7.95 0 00-6-2.74c-4.42 0-8 3.58-8 8 0 .55.45 1 1 1s1-.45 1-1c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2h-1.46c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hkepW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 6.5c0 .83.67 1.5 1.5 1.5S16 7.33 16 6.5 15.33 5 14.5 5 13 5.67 13 6.5zM8.5 5c.83 0 1.5-.67 1.5-1.5S9.33 2 8.5 2 7 2.67 7 3.5 7.67 5 8.5 5zM9 9.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5S11.33 8 10.5 8 9 8.67 9 9.5zM4.5 8C5.33 8 6 7.33 6 6.5S5.33 5 4.5 5 3 5.67 3 6.5 3.67 8 4.5 8zM15 12H3.26l12.03-8.59-.58-.81L2 11.67V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6WlXD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.99 6.99h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5JwsE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 0H4c-.55 0-1 .45-1 1v3h2V2h3v12H5v-2H3v3c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14h-3V2h3v12zm-8.71-3.29a1.003 1.003 0 001.42-1.42L4.41 8 5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L3 6.59l-1.29-1.3A1.003 1.003 0 00.29 6.71L1.59 8 .29 9.29a1.003 1.003 0 001.42 1.42L3 9.41l1.29 1.3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"chN3F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 9h4c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zm11-9H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 14H2V2h8v12zm4 0h-3V2h3v12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6qQ21":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 14H2V2h3v12zm9 0H6V2h8v12zM8 9h4c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5Re0u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V6h12v8zm0-9H2V2h12v3zm-8 6h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fHg6Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2v-3h12v3zm0-4H2V2h12v8zM6 7h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e9iU0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 5c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1.74A7.95 7.95 0 008 0C3.58 0 0 3.58 0 8c0 4.06 3.02 7.4 6.94 7.92.02 0 .04.01.06.01.33.04.66.07 1 .07 4.42 0 8-3.58 8-8 0-.55-.45-1-1-1s-1 .45-1 1c0 3.31-2.69 6-6 6-.71 0-1.37-.15-2-.38v.01C3.67 12.81 2 10.61 2 8c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2H11c-.55 0-1 .45-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jinwh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 5c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v1.74A7.95 7.95 0 018 0c4.42 0 8 3.58 8 8 0 4.06-3.02 7.4-6.94 7.92-.02 0-.04.01-.06.01-.33.04-.66.07-1 .07-4.42 0-8-3.58-8-8 0-.55.45-1 1-1s1 .45 1 1c0 3.31 2.69 6 6 6 .71 0 1.37-.15 2-.38v.01c2.33-.82 4-3.02 4-5.63 0-3.31-2.69-6-6-6-1.77 0-3.36.78-4.46 2H5c.55 0 1 .45 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lxOjk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.6 3.3C6.1 3.1 5.6 3 5 3 2.2 3 0 5.2 0 8s2.2 5 5 5c.6 0 1.1-.1 1.6-.3C5.3 11.6 4.5 9.9 4.5 8s.8-3.6 2.1-4.7zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c-.6 0-1.1.1-1.6.3 1.3 1.2 2.1 2.9 2.1 4.7s-.8 3.6-2.1 4.7c.5.2 1 .3 1.6.3 2.8 0 5-2.2 5-5s-2.2-5-5-5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"khLVm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.71 3c0 1.1.96 2 2.14 2C9.04 5 10 3.96 10 3c0-1.96-1.47-3-2.14-3H5c0 1.96 2.68 1.4.71 3zm2.5 3l.01.01s0-.01-.01-.01zm6.5 8.29L10 9.59V7c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v2.58l-4.71 4.7c-.18.19-.29.44-.29.72a1.003 1.003 0 001.71.71L6 12.42V15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.58l3.29 3.29a1.003 1.003 0 001.42-1.42z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2G6UQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.6 3.3C5.3 4.4 4.5 6.1 4.5 8s.8 3.6 2.1 4.7c-.5.2-1 .3-1.6.3-2.8 0-5-2.2-5-5s2.2-5 5-5c.6 0 1.1.1 1.6.3zm-1.96 8.68C3.92 10.83 3.5 9.46 3.5 8s.42-2.83 1.14-3.98C2.6 4.2 1 5.91 1 8s1.6 3.8 3.64 3.98zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bqcX2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4KrYK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 12C4.397 7.46 4.415 4.465 8 0c3.585 4.485 3.602 7.48 2 12H6zm3-7a1 1 0 11-2 0 1 1 0 012 0zm-7 8.022l3-1-.054-.158C4.636 10.954 4.076 9.317 4 8L3 9l-1 4.022zm9-1l3 1L13 9l-1-1c-.076 1.317-.635 2.954-.946 3.864l-.054.158zM7 13h2c0 1.5-.5 2.5-1 3-.5-.5-1-1.5-1-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4fBU3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.992 10c2-5 5-9 11-9 0 6-4 9-9 11l-2-2zm7.714-4.285a1 1 0 11-1.414-1.414 1 1 0 011.414 1.414zm-6.555-.218L2.992 6l-3 2L3.24 9.195c.542-1.301 1.166-2.556 1.911-3.698zM7.992 16l-1.236-3.232c1.3-.539 2.552-1.158 3.694-1.898L9.992 13l-2 3zm-4.931-4.94L5 13c-.992.991-2.186 1.154-3.001 1-.154-.815.07-1.948 1.06-2.94z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3LjKq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 2h-1.59l.29-.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-2 2C7.11 2.47 7 2.72 7 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H12c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3zM5.71 5.29A.997.997 0 005 5H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V9c0-.28-.11-.53-.29-.71l-3-3zM7 14H2V7h2v2c0 .55.45 1 1 1h2v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fLDY1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 6H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm-1 8H3V8h4v6zm5-12h-1.59l.29-.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-2 2C7.11 2.47 7 2.72 7 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H12c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kW2b9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.669 5.066l.099.189c.113.213.236.434.367.661.226.39.468.78.709 1.151l-.198-.004-.48-.004c-1.745.003-2.369.233-2.369.688 0 .053.226.19 1.038.436l.84.24C13.9 9.064 15 9.83 15 11.63c0 2.123-1.607 3.122-4.027 3.366-.651.065-1.266.075-2.043.05l-.958-.035H5.196l.268-.406c.336-.517.672-1.052.998-1.593h1.636l.572.023c.857.036 1.475.034 2.103-.03 1.526-.153 2.227-.59 2.227-1.375 0-.531-.402-.84-1.66-1.22l-.691-.198c-1.04-.293-1.764-.562-2.222-.946C8.8 8.366 9 7.612 9 6.997a5.03 5.03 0 00-.184-1.334c.645-.395 1.598-.562 2.853-.597zM4 3a4.007 4.007 0 014 3.997C8 9.21 4 15 4 15l-.416-.62C2.56 12.827 0 8.767 0 6.997A4.002 4.002 0 014 3zm0 2a2 2 0 10.001 4.001A2 2 0 004 5zm10-4c1.103 0 1.996.896 2 1.999C16 4.105 14 7 14 7l-.293-.44C13.15 5.707 12 3.838 12 2.999 12 1.896 12.897 1 14 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"brDxQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 9c0-.6.4-1 1-1s1 .4 1 1c0 1.1.9 2 2 2 .6 0 1 .4 1 1s-.4 1-1 1c-2.2 0-4-1.8-4-4zM0 9c0-.6.4-1 1-1s1 .4 1 1c0 2.8 2.2 5 5 5 .6 0 1 .4 1 1s-.4 1-1 1c-3.9 0-7-3.1-7-7zm7 1c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1zm1.3-2.8c-.4-.4-.4-1 0-1.4l4.5-4.5c.4-.4 1-.4 1.4 0l.5.5c.4.4.4 1 0 1.4l-4.5 4.5c-.4.4-1 .4-1.4 0l-.5-.5zM5.2.3c.4-.4 1-.4 1.4 0l2.1 2.1c.4.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0L4.3 2.6c-.4-.4-.4-1 0-1.4l.9-.9zm7 7c.4-.4 1-.4 1.4 0l2.1 2.1c.4.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0l-2.1-2.1c-.4-.4-.4-1 0-1.4l.9-.9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"afqqr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.71 9.29a1.003 1.003 0 00-1.42 1.42l2 2a.997.997 0 001.6-.27h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1-.39 0-.72.23-.89.56H9.1l-1.38 2.76-1.01-1.03zM9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aEFxz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-.5-7c.83 0 1.5-.67 1.5-1.5S15.33 2 14.5 2 13 2.67 13 3.5 13.67 5 14.5 5zm-3 4c.83 0 1.5-.67 1.5-1.5S12.33 6 11.5 6 10 6.67 10 7.5 10.67 9 11.5 9zm-4-2C8.33 7 9 6.33 9 5.5S8.33 4 7.5 4 6 4.67 6 5.5 6.67 7 7.5 7zm-3 4c.83 0 1.5-.67 1.5-1.5S5.33 8 4.5 8 3 8.67 3 9.5 3.67 11 4.5 11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5WZms":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.55 13.43l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ixylZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.5 11c-.51 0-.98.15-1.38.42l-2.4-2.41c.17-.3.28-.64.28-1.01s-.11-.71-.28-1.01l2.41-2.41c.39.27.86.42 1.37.42a2.5 2.5 0 000-5A2.5 2.5 0 0011 2.5c0 .51.15.98.42 1.38l-2.41 2.4C8.71 6.11 8.37 6 8 6s-.71.11-1.01.28l-2.41-2.4c.27-.4.42-.87.42-1.38a2.5 2.5 0 00-5 0A2.5 2.5 0 002.5 5c.51 0 .98-.15 1.38-.42l2.41 2.41C6.11 7.29 6 7.63 6 8s.11.71.28 1.01l-2.41 2.41c-.39-.27-.86-.42-1.37-.42a2.5 2.5 0 000 5A2.5 2.5 0 005 13.5c0-.51-.15-.98-.42-1.38l2.41-2.41c.3.18.64.29 1.01.29s.71-.11 1.01-.28l2.41 2.41c-.27.39-.42.86-.42 1.37a2.5 2.5 0 005 0 2.5 2.5 0 00-2.5-2.5zm0-10c.83 0 1.5.67 1.5 1.5S14.33 4 13.5 4 12 3.33 12 2.5 12.67 1 13.5 1zm-11 3C1.67 4 1 3.33 1 2.5S1.67 1 2.5 1 4 1.67 4 2.5 3.33 4 2.5 4zm0 11c-.83 0-1.5-.67-1.5-1.5S1.67 12 2.5 12s1.5.67 1.5 1.5S3.33 15 2.5 15zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4DI4x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.55 13.43l-2.67-2.67c.7-1.09 1.11-2.38 1.11-3.77 0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm2.5-6h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0-2h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0 4h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9XYeK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 4H5c-.55 0-1 .45-1 1s.45 1 1 1h1v3c0 .55.45 1 1 1s1-.45 1-1V6h1c.55 0 1-.45 1-1s-.45-1-1-1zm6.56 9.44l-2.67-2.67C13.59 9.68 14 8.39 14 7c0-3.87-3.13-7-7-7S0 3.13 0 7s3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 102.12-2.12zM7 12c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1FYtu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 4H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 6H8V6h6v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hu1IC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 15c0-.28-.12-.52-.31-.69l.02-.02-3.12-3.12 3.41-.84-8.05-2.86c.03-.09.05-.17.05-.27V2c0-.55-.45-1-1-1H3c0-.55-.45-1-1-1S1 .45 1 1c-.55 0-1 .45-1 1s.45 1 1 1v4c0 .55.45 1 1 1h5.2c.1 0 .18-.02.27-.05L10.33 16l.85-3.41 3.12 3.12.02-.02c.16.19.4.31.68.31.04 0 .07-.02.1-.02s.06.02.1.02c.44 0 .8-.36.8-.8 0-.04-.02-.07-.02-.1s.02-.06.02-.1zM6 6H3V3h3v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1H3pX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-9C6.34 5 5 6.34 5 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lVqQw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.399 9.01L1.527 15.875c-.535.267-1.175.081-1.421-.427A.953.953 0 010 15V10l8-2-8-2V1c0-.528.407-1 1.004-1 .169 0 .416.04.567.116L15.403 7.07a1.084 1.084 0 01-.005 1.939z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b0HHu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 7.5c-.8 0-1.5-.4-2-1l-1.2 1.2c-.4.5-1.1.7-1.8.7-1.4.1-2.5-1-2.5-2.4 0-.7.3-1.3.7-1.8L9.5 3c-.6-.5-1-1.2-1-2 0-.3.1-.7.2-1H8C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8v-.7c-.3.1-.6.2-1 .2zM15 0h-4c-.6 0-1 .5-1 1s.4 1 1 1h1.6L9.3 5.3c-.2.2-.3.4-.3.7 0 .5.4 1 1 1 .3 0 .5-.1.7-.3L14 3.4V5c0 .6.4 1 1 1 .5 0 1-.4 1-1V1c0-.5-.4-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jFkVa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1zm8 .5c-.56 0-1.06.23-1.42.59l-2.13-1.24L8.99 8l3.59-2.09A2.002 2.002 0 0016 4.5c0-1.1-.9-2-2-2s-2 .9-2 2c0 .19.03.37.08.54L8.5 7.13v-3.2c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v3.2l-.88-.52-2.7-1.57c.05-.17.08-.35.08-.54 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.56 0 1.06-.23 1.42-.59l2.13 1.24 3.84 2.24 2.7 1.57c-.06.17-.09.35-.09.54 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5nt5n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1zm9.55-5.83l-4.49-3A.975.975 0 009.99.15L5.53 2.82 1.56.17A1.003 1.003 0 000 1v6h2V2.87l2.94 1.96.06.03V7h1V4.86s.01 0 .01-.01L10 2.47v8.67s-.01 0-.01.01l-.99.58v2.33l1.47-.88 3.97 2.65A1.003 1.003 0 0016 15V4c0-.35-.18-.65-.45-.83zM14 13.13l-2.94-1.96c-.02-.01-.04-.02-.05-.03v-8.6l3 2v8.59z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gNCFN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.68 7.9c.44.54 1.07.92 1.79 1.05l-2.76 2.76c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l1.68-1.69zM15 3c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .55-.45 1-1 1s-1-.45-1-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 1-1s1 .45 1 1v1h1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"LYYCi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.94 9.64c.65.23 1.34.36 2.06.36.14 0 .29-.01.43-.01L9.7 12.71c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.3L5 9.41l-3 3V14h12.99c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 7.11 4.72 7 5 7c.28 0 .53.11.71.29L9 10.59l.94-.95zm4.73-6.44h.92c.22 0 .4.18.4.4v.8c0 .22-.18.4-.4.4h-.93c-.06.2-.14.38-.24.55l.66.65c.15.15.15.4 0 .55l-.54.55c-.15.15-.4.15-.55 0l-.65-.65c-.17.1-.36.18-.55.24v.91c0 .22-.18.4-.4.4h-.8c-.22 0-.4-.18-.4-.4v-.93c-.18-.06-.36-.13-.52-.22l-.68.68c-.15.16-.41.16-.57 0l-.56-.56a.417.417 0 010-.57l.68-.68c-.08-.16-.16-.33-.22-.52h-.93c-.22 0-.4-.18-.4-.4v-.8c0-.22.18-.4.4-.4h.93c.06-.2.14-.38.24-.55l-.65-.64a.392.392 0 010-.55l.54-.55a.38.38 0 01.54 0l.65.65c.18-.1.36-.18.55-.24V.4c0-.22.18-.4.4-.4h.8c.22 0 .4.18.4.4v.93c.18.06.35.14.52.22l.68-.68c.15-.16.41-.16.57 0l.57.57c.15.16.15.41 0 .57l-.68.68c.09.16.16.33.22.51zm-4.18.8c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5c-.82 0-1.5.67-1.5 1.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3nDjy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.66 7.92c.44.54 1.07.91 1.8 1.03L9.71 11.7c-.18.19-.43.3-.71.3s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l1.66-1.67zM12.3 5.3l.3-.3H8c-.6 0-1-.4-1-1s.4-1 1-1h4.6l-.3-.3c-.2-.2-.3-.4-.3-.7 0-.6.5-1 1-1 .3 0 .5.1.7.3l2 2c.2.2.3.4.3.7s-.1.5-.3.7l-2 2c-.2.2-.4.3-.7.3-.6 0-1-.4-1-1 0-.3.1-.5.3-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"43NWp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.29 9.3c.3.62.8 1.12 1.42 1.41l-1 1c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l.29-.29zM15.48 1c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V4.71L8.17 1.98A.566.566 0 018 1.57c0-.31.26-.57.57-.57h6.91z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7dwg4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.6 8.94a4.937 4.937 0 001.82.01c.1-.01.22-.04.39-.08l.23-.07c.04-.01.08-.02.11-.04l.22.22-2.7 2.72c-.18.19-.43.3-.71.3s-.53-.11-.71-.3L4.98 8.41l-2.99 3V13h12.94c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V3.99c0-.55.45-1 1-1s1 .45 1 1v4.59l2.28-2.3c.17-.18.42-.29.7-.29s.53.11.7.29l3.28 3.3.64-.64zm6.22-.41c.1.12.17.27.18.44 0 .34-.27.61-.61.61a.57.57 0 01-.43-.18l-2.24-2.25c-.13.08-.26.16-.4.23-.02.01-.05.02-.07.03-.14.06-.27.12-.42.17h-.01c-.14.05-.29.08-.44.11-.04.01-.08.02-.11.02-.15.02-.3.04-.46.04-1.85 0-3.35-1.51-3.35-3.37S8.96 1.01 10.81 1c1.85 0 3.35 1.51 3.35 3.37 0 .16-.02.31-.04.47-.01.04-.01.07-.02.11-.02.15-.05.29-.1.44v.01c-.05.15-.11.28-.17.42-.01.02-.02.05-.03.07-.07.14-.14.27-.23.4l2.25 2.24zm-5.01-1.94c1.22 0 2.21-.99 2.21-2.22 0-1.23-.99-2.22-2.21-2.22S8.6 3.14 8.6 4.37c0 1.22.99 2.22 2.21 2.22z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1wpgl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 1c0-.55-.45-1-1-1S1 .45 1 1v3h2V1zm0 4H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm12-4c0-.55-.45-1-1-1s-1 .45-1 1v2h2V1zM9 1c0-.55-.45-1-1-1S7 .45 7 1v6h2V1zM1 15c0 .55.45 1 1 1s1-.45 1-1v-5H1v5zM15 4h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-2 11c0 .55.45 1 1 1s1-.45 1-1V9h-2v6zM9 8H7c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-2 7c0 .55.45 1 1 1s1-.45 1-1v-2H7v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"GqbD0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.92 8.139c.44-.282 1.006-.121 1.264.358l2.689 4.988c.083.155.127.33.127.51C10 14.55 9.587 15 9.077 15H3.924a.864.864 0 01-.438-.12c-.449-.263-.617-.873-.376-1.362l2.465-4.989c.08-.162.2-.297.346-.39zM12 4a3 3 0 110 6 3 3 0 010-6zM6 1a1 1 0 011 1v4a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jaHca":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Oe0L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.843 15.163c.232.53.138.837.138.837H6.017s-.088-.308.138-.837c.226-.53 1.338-.88 2.079-1.206.735-.332.66-.53.685-.8 0-.03.006-.068.006-.105a2.171 2.171 0 01-.61-.892v-.006s-.006-.006-.006-.012c-.025-.074-.056-.16-.075-.24-.176-.031-.276-.222-.314-.394a.8.8 0 01-.1-.437c.025-.253.131-.37.244-.419v-.037c0-.313.032-.775.088-1.07A1.835 1.835 0 018.85 8.37c.315-.24.76-.37 1.156-.37.396 0 .842.13 1.156.37.301.233.534.56.64.935.026.08.045.166.057.246.057.295.088.75.088 1.064v.043c.113.05.214.167.232.413a.75.75 0 01-.1.437c-.038.172-.132.357-.301.387a1.77 1.77 0 01-.076.24.136.136 0 01-.006.025 2.346 2.346 0 01-.597.892v.111c.025.277-.075.474.666.8.741.326 1.853.67 2.079 1.2z",
    "M14.852 15h1.131s.083-.27-.12-.732c-.16-.373-.82-.641-1.411-.88a15.328 15.328 0 01-.409-.17c-.565-.25-.57-.412-.577-.61-.001-.03-.002-.06-.005-.09v-.097c.22-.2.401-.469.522-.781 0 0 .005-.016.005-.022.028-.07.05-.14.066-.21.149-.026.231-.188.264-.339a.655.655 0 00.088-.382c-.016-.215-.104-.318-.203-.36v-.039c0-.274-.028-.673-.077-.931a1.598 1.598 0 00-.61-1.034 1.736 1.736 0 00-1.285-.3c.236.285.42.622.529.996.038.124.065.248.083.36.048.257.079.578.093.867a1.736 1.736 0 01.08 1.624 1.65 1.65 0 01-.217.453 1.42 1.42 0 01-.176.209c-.08.204-.178.4-.292.585l.202.083c.285.117.64.261.9.387.226.11.475.245.698.414.213.161.476.408.63.764.034.08.065.159.091.235zM12.14 14.12l.09.037zM11 1c.55 0 1 .45 1 1 0 .28-.11.53-.29.7L8 6.41v1.374a2.813 2.813 0 00-.833 1.589 6.925 6.925 0 00-.092.86 1.64 1.64 0 00-.25.739l-.001.004c-.02.217.006.413.046.573L5.71 12.71A1.003 1.003 0 014 12V6.41L.29 2.71A1.003 1.003 0 011 1h10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9EGhg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 16c4.667-3.048 7-7.238 7-12.571-1.556 0-3.889-1.143-7-3.429-3.111 2.286-5.444 3.429-7 3.429C1 8.762 3.333 12.952 8 16zM8 2.121c2.005 1.388 3.715 2.304 5.186 2.735-.342 3.702-2.05 6.683-5.186 9.038V2.121z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9dcRI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.44.804L5.2 2H3a1 1 0 00-1 1v3.714l-1.08.309a.988.988 0 00-.69 1.192c.366 1.432.897 3.324 1.309 4.26a.644.644 0 00.005.01c-.175.01-.356.015-.544.015a.5.5 0 000 1c2.067 0 3.414-.543 4.161-.917.55.373 1.505.917 2.839.917 1.32 0 2.27-.533 2.822-.905l.004.002c.196.105.48.24.856.374.75.268 1.857.529 3.318.529a.5.5 0 000-1c-.295 0-.572-.012-.834-.032a.995.995 0 00.308-.458l1.208-3.74a1 1 0 00-.677-1.269L14 6.714V3a1 1 0 00-1-1h-2.2L10.56.804A1 1 0 009.58 0H6.42a1 1 0 00-.98.804zM4 6.143l3-.857V4H4v2.143zm5-.857l3 .857V4H9v1.286zm-4.036 8.273a.5.5 0 01.527.034c.455.325 1.277.907 2.509.907s2.054-.582 2.51-.907a.5.5 0 01.579-.001l.006.004.036.023c.034.022.09.055.168.097.154.082.394.197.72.313.649.232 1.642.471 2.981.471a.5.5 0 010 1c-1.46 0-2.568-.261-3.318-.53a6.316 6.316 0 01-.856-.373l-.004-.002c-.552.372-1.502.905-2.822.905-1.334 0-2.289-.544-2.839-.917-.747.374-2.094.917-4.161.917a.5.5 0 010-1c2.129 0 3.384-.63 3.964-.94z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"186hP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 2h10c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1zm9 11H4v-3H2v5c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-5h-2v3zm4-6l-1.01-3.17C14.9 3.36 14.49 3 14 3H2c-.49 0-.9.36-.98.83L.01 7H0c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9CGJ7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 10H7.72l-.33-1H13c.39 0 .72-.23.89-.56h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1H5.39l-.44-1.32h-.01C4.8 1.29 4.44 1 4 1H1c-.55 0-1 .45-1 1s.45 1 1 1h2.28l2.33 7H4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2h6c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zM6.05 5h7.33l-1 2H6.72l-.67-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fB9Zo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.474 7.971A5.31 5.31 0 006.66 8.9l.007.019.018.056c.015.038.038.06.045.098l1.5 5.999a.75.75 0 01-1.455.36l-.42-1.68h-.704l-.42 1.68a.746.746 0 01-.907.547.746.746 0 01-.547-.907l1.5-6c.007-.037.03-.06.044-.097.015-.037.015-.075.038-.112a.722.722 0 01-.105-.36c0-.207.084-.394.22-.53zM2.795 5.277a.763.763 0 00-.015-1.065.756.756 0 00-1.065.015c-2.286 2.34-2.286 6.21 0 8.549a.747.747 0 101.072-1.042c-1.709-1.763-1.709-4.702.008-6.457zM7.808 9.388a5.318 5.318 0 001.58.211 2.236 2.236 0 01-.656.98.756.756 0 01-1.057-.098.756.756 0 01.097-1.057l.036-.036zM11.544 9.105l.378.378a6.02 6.02 0 01-1.638 3.285c-.285.3-.757.3-1.057.015a.74.74 0 01-.015-1.057 4.52 4.52 0 001.185-2.24c.4-.083.785-.212 1.147-.381z",
    "M4.054 9.424c-.427-.352-.352-1.582-.03-1.822a.752.752 0 00.15-1.05.752.752 0 00-1.05-.15c-1.079.802-1.221 3.18-.03 4.177a.75.75 0 10.96-1.155zM9.318 0a4.318 4.318 0 014.317 4.318c0 .206-.02.402-.049.598-.01.05-.01.088-.02.138-.039.196-.078.382-.137.569v.01c-.059.186-.137.363-.216.54l-.039.087a5.285 5.285 0 01-.294.51l2.884 2.886a.878.878 0 01.236.559.787.787 0 01-.785.785.785.785 0 01-.56-.226L11.772 7.89a5.285 5.285 0 01-.51.295l-.089.039c-.176.079-.353.157-.54.216h-.01a3.701 3.701 0 01-.568.137c-.05.01-.099.02-.138.02-.196.03-.392.049-.598.049A4.318 4.318 0 015 4.327 4.332 4.332 0 019.318 0zm-.02 1.1A3.195 3.195 0 006.1 4.298a3.195 3.195 0 003.198 3.198 3.195 3.195 0 003.198-3.198A3.195 3.195 0 009.298 1.1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"43DEK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.71 4.29l-4-4A.997.997 0 009 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.28-.11-.53-.29-.71zM7 6h2v2H7V6zM4 6h2v2H4V6zm2 8H4v-2h2v2zm3 0H7v-2h2v2zm3 0h-2v-2h2v2zm0-3H4V9h8v2zm0-3h-2V6h2v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dTXdl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 2a.99.99 0 00-.96.73l-2.99 9.96A1.003 1.003 0 007 14c.46 0 .85-.31.96-.73l2.99-9.96A1.003 1.003 0 0010 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Y6RO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L9.41 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9b5vI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"28F5E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 7H9V5c0-.55-.45-1-1-1s-1 .45-1 1v2H5c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V9h2c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b686G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 5v6h6V5H5zM4 3a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V4a1 1 0 00-1-1H4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5rTlq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dnfY1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.364 9l.879.879a1 1 0 11-1.415 1.414l-2.12-2.121A1.003 1.003 0 0110.568 9H9v1.604c.042.03.083.065.121.103l2.122 2.121a1 1 0 01-1.415 1.415L9 13.414V15a1 1 0 01-2 0v-1.636l-.879.879a1 1 0 11-1.414-1.415l2.121-2.12c.054-.054.111-.1.172-.139V9H5.38c-.038.06-.084.118-.137.172l-2.122 2.12A1 1 0 111.707 9.88L2.586 9H1a1 1 0 110-2h1.536l-.829-.828a1 1 0 011.414-1.415L5.243 6.88c.038.038.072.079.103.121H7V5.38a1.003 1.003 0 01-.172-.137L4.708 3.12A1 1 0 016.12 1.707L7 2.586V1a1 1 0 112 0v1.536l.828-.829a1 1 0 011.415 1.414L9.12 5.243A1.007 1.007 0 019 5.346V7h1.604c.03-.042.065-.083.103-.121l2.121-2.122a1 1 0 011.415 1.415L13.414 7H15a1 1 0 010 2h-1.636z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7vm6m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.5 4c.4 0 .8-.1 1.1-.3C12 4.5 12.9 6 13 7.6c0 .5.5.9 1 .9.6 0 1-.4 1-1v-.2c-.2-2.4-1.5-4.4-3.5-5.5-.1-1-.9-1.8-2-1.8s-2 .9-2 2 .9 2 2 2zM4 8.5c0-.7-.4-1.3-.9-1.7.3-1.4 1.2-2.6 2.5-3.3.3-.1.6-.4.6-.9s-.4-1-1-1c-.2 0-.3 0-.5.1-1.9 1-3.2 2.8-3.6 5C.4 7.1 0 7.8 0 8.5c0 1.1.9 2 2 2s2-.9 2-2zm8.8 1.2c-1.1 0-2 .9-2 2v.3c-.8.6-1.8.9-2.8.9-1.2 0-2.3-.4-3.2-1.1-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.6.3.8C4.6 14.4 6.2 15 8 15c1.5 0 3-.5 4.1-1.3.2.1.5.1.7.1 1.1 0 2-.9 2-2s-.9-2.1-2-2.1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aTJBv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm3-9h7c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm7 2H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0 8H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eHa9T":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 002 12a1.003 1.003 0 00-.71 1.71l2 2c.19.18.44.29.71.29.28 0 .53-.11.71-.29l2-2c.18-.18.29-.43.29-.71a.99.99 0 00-1-1zm7.93-.95v-1.04H9.25v1.11h2.94L9 14.96V16h5.02v-1.11h-3.27l3.18-3.84zm-1.42-4.84l.62 1.78H15L11.94.01H10.1L7 7.99h1.81l.64-1.78h3.06zm-1.52-4.24h.02l1.03 2.93H9.92l1.07-2.93z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4tvXe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.99 11.99c-.28 0-.53.11-.71.29l-.29.29V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l2-2c.18-.18.29-.43.29-.71 0-.56-.45-1.01-1-1.01zM12.7 10h-1.38L9 15.99h1.36l.48-1.33h2.3l.46 1.33H15L12.7 10zm-1.51 3.67l.8-2.2h.02l.77 2.2h-1.59zm3.8-7.17h-4.57l4.45-5.12V0H8.34v1.48h4.1L7.99 6.59v1.39h7V6.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eTfD6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 7h3c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm0-4h1c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm0 8h5c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm-3 1c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm10 1H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"96HWN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm4 1H8c-.55 0-1 .45-1 1s.45 1 1 1h1c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H8c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm-2 4H8c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jefSj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 11.99c-.28 0-.53.11-.71.29l-.29.3V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l2-2A1.003 1.003 0 006 11.99zm7.91-.08c-.06-.36-.17-.68-.33-.96-.16-.28-.37-.51-.64-.69-.27-.17-.61-.26-1.03-.26-.28 0-.54.06-.78.17-.23.11-.43.26-.6.45-.17.19-.3.41-.39.67a2.492 2.492 0 00-.04 1.52 1.623 1.623 0 00.89 1.03c.22.11.45.16.68.16.26 0 .5-.05.7-.15s.38-.26.53-.5l.02.02c-.01.16-.03.34-.07.54-.03.2-.09.4-.17.57-.08.18-.18.33-.31.45s-.29.19-.5.19a.63.63 0 01-.48-.21c-.13-.14-.21-.31-.25-.5H10.1c.03.25.1.48.19.68.1.2.22.37.38.5.16.14.33.24.54.31s.42.1.65.1c.39 0 .72-.09.99-.27.27-.18.49-.41.66-.7.17-.29.29-.61.37-.97.08-.36.12-.72.12-1.07 0-.36-.03-.72-.09-1.08zm-1.14.54c-.04.13-.09.24-.16.34a.78.78 0 01-.27.24c-.11.06-.24.09-.39.09a.75.75 0 01-.37-.09.777.777 0 01-.26-.25c-.07-.1-.12-.22-.15-.35-.03-.13-.05-.26-.05-.4 0-.13.02-.26.05-.39.04-.13.09-.24.16-.34.07-.1.16-.18.26-.24s.22-.09.35-.09c.14 0 .26.03.37.09.11.06.2.14.28.24a1.32 1.32 0 01.23.74c0 .15-.02.28-.05.41zm-1.56-4.47H13V0h-1.42c-.05.3-.16.56-.31.76-.16.21-.35.37-.58.5-.23.13-.49.21-.78.26-.3.05-.6.07-.91.06V2.8h2.21v5.18z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kVqhW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 11.99c-.28 0-.53.11-.71.29l-.29.3V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29a.982.982 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 006 11.99zm7.86-9.45c-.09-.48-.26-.9-.5-1.28S12.8.58 12.4.35C12 .12 11.49 0 10.86 0c-.43 0-.82.07-1.17.22s-.65.35-.9.6-.44.55-.58.89c-.14.34-.2.71-.2 1.11 0 .31.05.61.15.91.1.3.26.57.48.8.23.24.52.43.85.58.33.14.68.21 1.03.21.4 0 .75-.07 1.05-.2.3-.13.57-.35.79-.66l.02.02c-.02.21-.05.45-.1.73-.05.27-.13.53-.25.76-.12.24-.27.44-.47.6-.19.16-.44.25-.75.25a.98.98 0 01-.72-.29c-.19-.18-.31-.4-.37-.66H8.15c.05.34.14.64.29.9.15.26.34.49.57.67.23.18.5.32.8.41.31.1.63.15.98.15.58 0 1.08-.12 1.48-.36.4-.24.73-.55.99-.93.26-.39.44-.82.56-1.29.12-.48.18-.96.18-1.44s-.05-.96-.14-1.44zm-1.71.72c-.05.17-.14.32-.24.46-.11.13-.24.24-.41.31-.16.08-.36.12-.58.12-.21 0-.39-.04-.55-.13-.16-.08-.29-.19-.39-.33-.12-.14-.19-.29-.24-.46-.05-.17-.08-.35-.08-.54 0-.18.03-.35.08-.52.06-.16.14-.31.25-.44.11-.13.24-.24.4-.32.16-.08.33-.12.52-.12.21 0 .4.04.56.12.16.08.3.19.41.32.11.14.2.29.26.46.06.17.09.35.09.52 0 .2-.03.38-.08.55zm-.46 7.31c-.12.15-.26.28-.44.37-.17.09-.37.16-.58.2-.22.04-.44.05-.67.05v.92h1.65v3.88h1.33V10h-1.06c-.03.23-.11.42-.23.57z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6eaDj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 10a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9V2h3v1.71c.31-.13.64-.21 1-.21s.69.08 1 .21V1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2.71c.31-.13.64-.21 1-.21s.69.08 1 .21V2h3v5H3.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 9H7v5H4v-1.71c-.31.13-.64.21-1 .21s-.69-.08-1-.21V15c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-2.71c-.31.13-.64.21-1 .21s-.69-.08-1-.21V14H9V9h3.59l-.29.29c-.19.18-.3.43-.3.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ilj2L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V2h12v12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"25Yyh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3h3V2zm3 10h1c.55 0 1-.45 1-1V8h-3v3c0 .55.45 1 1 1zm2-7c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v2h3V5zm-5 1H7v3h3V6zM5 7c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1h3V7zm3 5h1c.55 0 1-.45 1-1v-1H7v1c0 .55.45 1 1 1zm7 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h1c.55 0 1-.45 1-1V9H2v2c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"emn6t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 6H4a2 2 0 100 4h8a2 2 0 100-4zM4 4a4 4 0 100 8h8a4 4 0 000-8H4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4iU5h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0l2.5 5.3 5.5.8-4 4.1.9 5.8L8 13.3 3.1 16l.9-5.8-4-4.1 5.5-.8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6l3TN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 6.11l-5.53-.84L8 0 5.53 5.27 0 6.11l4 4.1L3.06 16 8 13.27 12.94 16 12 10.21l4-4.1zM4.91 13.2l.59-3.62L3 7.02l3.45-.53L8 3.2l1.55 3.29 3.45.53-2.5 2.56.59 3.62L8 11.49 4.91 13.2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3XZgb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 3c-.24 0-.44.09-.62.23l-.01-.01L7 6.72V4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V9.28l4.38 3.5.01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gVkm1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 12H2v-2h3c.55 0 1-.45 1-1V7h2v1c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h-2V6c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v2H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1r1NJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 3h-1c-.55 0-1 .45-1 1v2.72l-4.38-3.5v.01A.987.987 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01L10 9.28V12c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hh5h8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 3H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jRoY1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 2v1.083A6.002 6.002 0 018 15 6 6 0 017 3.083V2H6a1 1 0 110-2h4a1 1 0 010 2H9zM8 5a4 4 0 104 4H8V5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2oCkR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 7H8.65c-.38-.09-.73-.18-1.04-.26-.31-.08-.49-.13-.54-.14-.43-.11-.79-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72s.32-.34.54-.46c.22-.11.46-.19.72-.24.26-.05.52-.07.77-.07.74 0 1.36.15 1.84.46.32.2.55.5.68.9h2.22c-.06-.33-.17-.64-.32-.92-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7S8.59 2 7.95 2c-.55 0-1.1.07-1.63.2-.54.13-1.02.34-1.45.62-.42.28-.76.63-1.02 1.05-.26.42-.39.92-.39 1.5 0 .3.04.59.13.88.08.26.21.51.39.75H2c-.55 0-1 .45-1 1s.45 1 1 1h7.13c.25.07.49.14.71.22.25.09.48.23.7.44.21.21.32.53.32.97 0 .21-.05.43-.14.63-.09.21-.24.39-.45.55-.21.16-.48.29-.81.39-.33.1-.73.15-1.2.15-.44 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.01 0-.01-.01-.02-.02H3.14a3.68 3.68 0 001.39 2.03c.46.34 1 .58 1.62.74.61.15 1.27.23 1.97.23.61 0 1.2-.07 1.79-.2.58-.13 1.11-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.3-.05-.6-.15-.9-.05-.19-.13-.36-.22-.52H14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5NZn0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 14H2V2h8.76l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6.24l-2 2V14zm1.4-14L9.7 5.7l2.1 2.1L16 3.6V0h-.6zM4 11.92c2.33.15 4.42.15 6.15-1.5.82-.83.82-2.25 0-3.08-.45-.38-.98-.6-1.5-.6-.53 0-1.05.22-1.43.6-.82.91-1.27 3.38-3.22 4.58z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"39PdH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 7.02L.05 7H0v.02zm2-2.03h9.57l-1.29 1.29A1.003 1.003 0 0011.7 7.7l2.99-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2.99-3a1.07 1.07 0 00-.71-.28 1.003 1.003 0 00-.71 1.71L11.57 3H2c-.55 0-1 .45-1 1a1 1 0 001 .99zM15.96 9H16v-.02l-.04.02zM14 11.01H4.43l1.29-1.29A1.003 1.003 0 004.3 8.3l-2.99 3a.99.99 0 00-.29.7c0 .28.11.53.29.71l2.99 3a1.003 1.003 0 001.42-1.42L4.43 13H14c.55 0 1-.45 1-1s-.45-.99-1-.99z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7rdWG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 0h-.02L9 .04V0zM7 16h.02L7 15.95V16zM4.7 1.31c-.18-.18-.43-.29-.7-.29s-.53.11-.71.29l-3 2.99a1.003 1.003 0 001.42 1.42L3 4.43V14c0 .55.45 1 1 1s1-.45 1-1V4.43l1.29 1.29c.18.18.43.29.7.29A1.003 1.003 0 007.7 4.3l-3-2.99zM15 9.99c-.28 0-.53.11-.71.29L13 11.57V2c0-.55-.45-1-1-1s-1 .45-1 1v9.57l-1.29-1.29a.99.99 0 00-.7-.29 1.003 1.003 0 00-.71 1.71l3 2.99c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-2.99c.18-.18.29-.43.29-.71-.01-.55-.46-1-1.01-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"67Pt1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.293 2.293l1.414 1.414-4.999 5a3 3 0 11-1.415-1.415l5-5zM13 7a3 3 0 110 6 3 3 0 010-6zM3 9a1 1 0 100 2 1 1 0 000-2zm10 0a1 1 0 100 2 1 1 0 000-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iZUMt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 3.01a5 5 0 100 10 5 5 0 100-10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"62pcn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 6.01h-2v-2c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v2H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2h2c.55 0 1-.45 1-1v-2c0-.56-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"WXOaP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 8.01c0-.19-.07-.36-.16-.51l.01-.01-3-5-.01.01c-.17-.29-.48-.49-.84-.49s-.67.2-.84.49l-.02-.01-3 5 .02.01c-.09.15-.16.32-.16.51s.07.36.16.51h-.02l3 5 .01-.01c.18.29.49.5.85.5s.67-.2.84-.49l.01.01 3-5-.01-.01c.09-.16.16-.32.16-.51z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8BKwa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 4H3c-.5 0-1 .5-1 1v6c0 .5.5 1 1 1h10c.5 0 1-.5 1-1V5c0-.5-.5-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h6gDL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 3.01H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-8c0-.56-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lgj9a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 4.01c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 .16.05.31.11.44H3.1l4 8h.01c.16.33.49.56.89.56s.72-.23.89-.56h.01l4-8h-.01c.06-.14.11-.28.11-.44z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3WsMB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.89 11.56l-3.99-8h-.01c-.17-.32-.5-.55-.89-.55s-.72.23-.89.55H7.1l-4 8h.01c-.06.14-.11.29-.11.45 0 .55.45 1 1 1h8c.55 0 1-.45 1-1 0-.16-.05-.31-.11-.45z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9hwq6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.146.146a.5.5 0 000 .708l.647.646L10.5 2.793 8.854 1.146a.5.5 0 10-.708.708l.647.646-1.146 1.146-5.5 5.5a.5.5 0 000 .708l.646.646-1.647 1.646a.5.5 0 000 .708l.647.646-1.647 1.646a.5.5 0 00.708.708L2.5 14.207l.646.647a.5.5 0 00.708 0L5.5 13.207l.646.647a.5.5 0 00.708 0l5.5-5.5L13.5 7.207l.646.647a.5.5 0 00.708-.708L13.207 5.5 14.5 4.207l.646.647a.5.5 0 00.708-.708l-4-4a.5.5 0 00-.708 0zM11.293 8l-.793.793-1.646-1.647a.5.5 0 10-.708.708L9.793 9.5 8.5 10.793 6.854 9.146a.5.5 0 10-.708.708L7.793 11.5 6.5 12.793 3.207 9.5 8 4.707 11.293 8zM8.707 4L12 7.293l.793-.793L9.5 3.207 8.707 4zm-6.5 8.5L3.5 13.793 4.793 12.5 3.5 11.207 2.207 12.5zm11.586-9L12.5 2.207 11.207 3.5 12.5 4.793 13.793 3.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iKIfF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 3a2 2 0 012-2h4.584a2 2 0 011.414.586l5.413 5.412a2 2 0 010 2.829L9.827 14.41a2 2 0 01-2.829 0L1.586 8.998A2 2 0 011 7.584V3zm3.487-.007a1.494 1.494 0 100 2.988 1.494 1.494 0 000-2.988z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3mR0s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 11a1.003 1.003 0 001.71.71l4-4a1.003 1.003 0 00-1.42-1.42l-4 4c-.18.18-.29.43-.29.71zM4 6c.28 0 .53-.11.71-.29l4-4A1.003 1.003 0 007.29.29l-4 4A1.003 1.003 0 004 6zm4 4l5-5-.79-.79.5-.5a1.003 1.003 0 00-1.42-1.42l-.5.5L10 2 5 7l.79.79-5.5 5.5a1.003 1.003 0 001.42 1.42l5.5-5.5L8 10zm7 4H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"04ZKF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.7 3.4a1 1 0 01.8-.4h5.086a1 1 0 01.707.293L11 4h3a1 1 0 110 2h-3v1h2.5a2.5 2.5 0 010 5h-11a2.5 2.5 0 010-5H3V4.667a1 1 0 01.2-.6l.5-.667zM2.5 9h11a.5.5 0 010 1h-11a.5.5 0 110-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fssLH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 4a1 1 0 012 0v2a1 1 0 01-2 0V4zM10 7a1 1 0 000 2h2a1 1 0 000-2h-2zM3 8a1 1 0 011-1h2a1 1 0 010 2H4a1 1 0 01-1-1zM8 9a1 1 0 00-1 1v2a1 1 0 002 0v-2a1 1 0 00-1-1z",
    "M8 16A8 8 0 108 0a8 8 0 000 16zm0-2A6 6 0 108 2a6 6 0 000 12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gXkf8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.12 6.63h-.38L15 7c-.01.3-.01.64 0 .98V8c0 .07-.03.13-.04.19h.02L14 13.1v.9c0 .55-.45 1-1 1s-1-.45-1-1v-1H4v1c0 .55-.45 1-1 1s-1-.45-1-1v-.9l-.98-4.9h.02C1.03 8.13 1 8.07 1 8H.99c0-.33 0-.67.01-1l.26-.37H.88C.4 6.63 0 6.21 0 5.69s.4-.94.88-.94h1.05l.77-2.11c.19-.53.76-1.08 1.26-1.24 0 0 .68-.2 2.05-.32C6.01 1.05 6 1.03 6 1c0-.55.45-1 1-1h2c.55 0 1 .45 1 1 0 .03-.01.05-.02.08 1.37.12 2.05.32 2.05.32.51.15 1.08.71 1.27 1.24l.76 2.12h1.05c.49 0 .89.42.89.93 0 .52-.4.94-.88.94zM11 10h2V8h-2v2zm-8 0h2V8H3v2zm10-5l-.73-1.63C12.21 3.19 12.18 3 12 3H4c-.18 0-.21.19-.27.37L3 5c-.06.18-.18 1 0 1h10c.18 0 .06-.82 0-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1KPbN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.5 0A1.5 1.5 0 007 1.5v7.837a3.5 3.5 0 103 0V1.5A1.5 1.5 0 008.5 0zM2 5.5a.5.5 0 01.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zM2.5 1a.5.5 0 000 1h3a.5.5 0 000-1h-3zM4 3.5a.5.5 0 01.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zM4.5 7a.5.5 0 000 1h1a.5.5 0 000-1h-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gvPI4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 10H2V6h7V4H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h8v-2zm4 3h-1V3h1c.55 0 1-.45 1-1s-.45-1-1-1h-1c-.37 0-.7.11-1 .28-.3-.17-.63-.28-1-.28H9c-.55 0-1 .45-1 1s.45 1 1 1h1v10H9c-.55 0-1 .45-1 1s.45 1 1 1h1c.37 0 .7-.11 1-.28.3.17.63.28 1 .28h1c.55 0 1-.45 1-1s-.45-1-1-1zm2-9h-2v2h1v4h-1v2h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8U3ho":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1zM6 13H2v-2h4v2zm0-3H2V8h4v2zm0-3H2V5h4v2zm8 6H7v-2h7v2zm0-3H7V8h7v2zm0-3H7V5h7v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"0SAbi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.6 10l-.3.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l2-2c.2-.2.3-.4.3-.7s-.1-.5-.3-.7l-2-2C6.5 6.1 6.3 6 6 6c-.5 0-1 .4-1 1 0 .3.1.5.3.7l.3.3H1c-.6 0-1 .4-1 1s.4 1 1 1h4.6zM15 1H2c-.5 0-1 .5-1 1v5h2V5h11v2H8.8l.6.6c.1.1.2.3.3.4H14v2H9.7c-.1.1-.2.3-.3.4l-.6.6H14v2H3v-2H1v3c0 .5.5 1 1 1h13c.6 0 1-.5 1-1V2c0-.5-.4-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2OdST":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 1h3c.6 0 1 .5 1 1v12c0 .6-.4 1-1 1h-4.97l.286-2H14v-2h-3.398l.143-1H14V8h-2.97l.143-1H14V5h-2.541l.51-3.576C11.99 1.282 12 1.14 12 1zM5.97 1l-.572 4H2v2h3.112L4.97 8H2v2h2.684l-.143 1H2v2h2.255l-.225 1.576c-.02.142-.03.284-.03.424H1c-.6 0-1-.4-1-1V2c0-.5.4-1 1-1h4.97zM8.01.859a1 1 0 111.98.282l-2 14a1 1 0 11-1.98-.282l2-14z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"luhDh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 10h3l1.78-2.226a1 1 0 00.22-.625V4.3l1-.9V14c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V2c0-.5.4-1 1-1h4.333L9 4.3V5H7v2h2v1H7v2h3zm-4 3v-2H2v2h4zm0-3V8H2v2h4zm0-3V5H2v2h4zm8 6v-2H7v2h7z",
    "M15.48 0c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V3.71L8.17.98A.566.566 0 018 .57c0-.31.26-.57.57-.57h6.91z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3dzXG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1zm-1 12H2v-2h12v2zm0-3H2V8h12v2zm0-3H2V5h12v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"02Ij1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.448 9h.573c.025-.044.051-.088.079-.13A9.43 9.43 0 015.183 8h-.995A10.424 10.424 0 014 6c0-.717.068-1.391.188-2h3.624c.065.33.114.678.146 1.042A3.42 3.42 0 018.46 5c.168 0 .336.013.502.037A11.089 11.089 0 008.829 4h1.755c.148.338.26.696.33 1.068l.176-.028a2.74 2.74 0 01.5 0c.113 0 .225.006.336.018A6.001 6.001 0 000 6a6 6 0 005.672 5.991 4 4 0 01-.202-.441 1.842 1.842 0 01-.24-.26 1.82 1.82 0 01-.26-.55 2 2 0 01-.185-.92l-.012-.025A6.036 6.036 0 014.448 9zM3.171 8H1.416A4.983 4.983 0 011 6c0-.711.148-1.388.416-2h1.755C3.06 4.626 3 5.299 3 6c0 .701.06 1.374.17 2zM2 9H3.4c.18.618.412 1.167.685 1.62A5.015 5.015 0 012 9zm2.448-6h3.104a6.036 6.036 0 00-.325-.795C6.737 1.225 6.246 1 6 1c-.246 0-.737.225-1.227 1.205-.119.238-.228.504-.325.795zm4.15 0H10a5.016 5.016 0 00-2.086-1.62c.273.453.506 1.002.685 1.62zM4.087 1.38A6.834 6.834 0 003.401 3H2a5.015 5.015 0 012.086-1.62zM13.476 16s.118-.385-.172-1.046c-.228-.533-1.172-.915-2.015-1.257a22.113 22.113 0 01-.584-.243c-.808-.356-.816-.588-.825-.872-.002-.041-.003-.084-.007-.128v-.139c.314-.284.573-.669.745-1.115 0 0 .008-.023.008-.03.04-.1.071-.2.095-.3.212-.04.33-.27.377-.485.054-.093.149-.3.125-.547-.024-.307-.15-.453-.29-.515v-.054c0-.392-.04-.961-.11-1.33a2.16 2.16 0 00-.071-.308 2.283 2.283 0 00-.8-1.17C9.558 6.162 9.001 6 8.506 6c-.495 0-1.052.162-1.445.462A2.294 2.294 0 006.19 7.93c-.07.369-.11.946-.11 1.338v.046c-.14.062-.274.208-.306.523a1 1 0 00.126.547c.047.215.173.453.393.492.02.083.05.172.078.253l.016.047c0 .008.008.015.008.015v.008c.172.454.44.846.761 1.115a.804.804 0 01-.004.072c-.002.02-.004.04-.004.06l-.007.105c-.016.287-.028.523-.848.894-.176.078-.37.156-.568.237-.847.345-1.802.735-2.031 1.27C3.41 15.616 3.52 16 3.52 16h9.955zm2.503-1.25h-1.413a4.05 4.05 0 00-.116-.294c-.192-.445-.52-.753-.787-.955-.278-.21-.59-.38-.873-.517a21.373 21.373 0 00-1.122-.483l-.02-.008-.235-.097c.144-.23.266-.476.366-.731.089-.087.162-.177.22-.26.132-.192.217-.391.271-.568.117-.251.24-.64.199-1.105a2.025 2.025 0 00-.299-.925 8.626 8.626 0 00-.116-1.083 3.426 3.426 0 00-.104-.45 3.476 3.476 0 00-.661-1.246A2.18 2.18 0 0111.63 6c.432 0 .92.141 1.264.404.33.256.584.612.7 1.023.028.087.049.182.062.27.062.322.097.82.097 1.163v.048c.123.053.233.181.254.45a.82.82 0 01-.11.478c-.041.189-.144.391-.33.425a1.92 1.92 0 01-.082.262c0 .007-.007.027-.007.027-.151.39-.378.727-.653.976v.121c.004.038.005.075.006.111v.002c.008.247.015.451.722.762.158.07.332.14.51.213.739.299 1.565.634 1.764 1.1.254.579.151.915.151.915z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"izjXa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 2H0v7h2c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm13.99 4.38c.08-.58-.44-1.02-1.15-1.05-.25-.01-.52-.03-.81-.05.02 0 .05-.01.07-.01.7-.1 1.34-.49 1.41-1.07.06-.58-.46-.97-1.17-1.04-.25-.02-.52-.04-.79-.06.47-.15.84-.42.87-.93.04-.58-.79-1.03-1.5-1.09-.27-.02-.51-.04-.73-.05h-.09c-.23-.02-.43-.02-.62-.03C8.35.95 5.66 1.47 4 2.51v6c2.14 1.29 4.76 3.59 4.21 5.51-.18.59.31 1.05.98.98.81-.09 1.37-.91 1.4-1.78.04-1-.15-2.01-.5-2.91-.04-.25.01-.5.37-.53.49-.03 1.11-.06 1.59-.08.26 0 .51-.01.75-.02h.01c.41-.02.8-.05 1.13-.09.7-.09 1.35-.47 1.43-1.05.08-.58-.44-.97-1.15-1.05-.05-.01-.11-.01-.16-.02.17-.01.33-.03.49-.05.72-.08 1.37-.46 1.44-1.04z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aTJlm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.99 9.62c-.08-.58-.73-.96-1.43-1.05-.15-.02-.32-.04-.49-.05.06-.01.11-.01.16-.02.71-.08 1.23-.47 1.15-1.05-.08-.58-.73-.96-1.43-1.05-.34-.04-.72-.07-1.13-.09h-.01c-.24-.01-.49-.02-.75-.02-.48-.02-1.11-.04-1.59-.08-.36-.03-.41-.28-.37-.53.35-.9.54-1.91.5-2.91-.04-.85-.6-1.68-1.41-1.77-.67-.07-1.16.39-.99.98C8.76 3.91 6.13 6.2 4 7.49v6c1.66 1.03 4.35 1.56 7.48 1.5.19 0 .39-.01.62-.02h.09c.22-.01.46-.03.73-.05.71-.06 1.54-.51 1.5-1.09-.03-.51-.4-.79-.87-.93.27-.02.54-.04.79-.06.71-.06 1.24-.45 1.17-1.04-.06-.58-.7-.97-1.41-1.07-.02 0-.05-.01-.07-.01.29-.02.57-.03.81-.05.71-.03 1.23-.47 1.15-1.05zM2 7H0v7h2c.55 0 1-.45 1-1V8c0-.56-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h5kzC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 3c-.28 0-.53.11-.71.29L6 10.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l8-8A1.003 1.003 0 0014 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1TOl2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 16c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm4-11c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bnCNT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm1-6.41V4c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L9 7.59z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a3b4U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 2.59L9.91 7.68 6.6 5.2l-.01.01C6.42 5.09 6.23 5 6 5c-.24 0-.44.09-.62.23v-.01L3 7.12V11h12V2.59zM15 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fyGhD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 12h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1zm5 0h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1zm2 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h1c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"82LfE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 11H7v1h1v-1zm-4 0H3v1h1v-1zm7-8c.6 0 1-.5 1-1V1c0-.5-.4-1-1-1s-1 .5-1 1v1c0 .5.5 1 1 1zM4 3c.5 0 1-.5 1-1V1c0-.5-.5-1-1-1S3 .5 3 1v1c0 .5.5 1 1 1zm10-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H6v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H1c-.5 0-1 .5-1 1v12c0 .5.5 1 1 1h13c.6 0 1-.5 1-1V2c0-.5-.4-1-1-1zM5 13H2v-3h3v3zm0-4H2V6h3v3zm4 4H6v-3h3v3zm0-4H6V6h3v3zm4 4h-3v-3h3v3zm0-4h-3V6h3v3zm-1-2h-1v1h1V7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5q0YF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 12H2V9.41l3-3L8.29 9.7c.18.19.43.3.71.3s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L9 7.59l-3.29-3.3C5.53 4.11 5.28 4 5 4s-.53.11-.71.29L2 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gV1Ur":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.88 1s-4.9 6.28-4.9 8.9c.01 2.82 2.34 5.1 4.99 5.1 2.65-.01 5.03-2.3 5.03-5.13C12.99 7.17 7.88 1 7.88 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2kTUk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 15c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H5v1zm7-15H4c-.55 0-1 .45-1 1v1h10V1c0-.55-.45-1-1-1zM5 7v6h6V7l2-4H3l2 4zm2 0c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iMPEV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.5 9a3.5 3.5 0 110 7 3.5 3.5 0 010-7zm9.5 1a3 3 0 110 6 3 3 0 010-6zm-9.5 1a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm9.5 1a1 1 0 100 2 1 1 0 000-2zM5 0c1.46 0 2.527.668 3 2l.815 3.255a78.9 78.9 0 012.186.195L11 2h2l.001 3.688c.698.095 1.37.198 2.013.312.623.11.986.479.986 1v3.354a4.001 4.001 0 00-6.873 1.645H7.999l-.026-.002A4.5 4.5 0 00.659 9.01l-.654.001v-.829C.003 7.386.002 6.423 0 6.022 0 5.5.376 4.99 1 4.99V1a1 1 0 011-1h3zm1 2H3v2.99c1.29.024 2.554.069 3.781.135L6 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d6Vsi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 14h-1l1 2H3l1-2H3c-1.1 0-2-.9-2-2V2C1 .9 4.13 0 8 0s7 .9 7 2v10c0 1.1-.9 2-2 2zm-2-2h2v-2h-2v2zM9 7h4V3H9v4zm-6 5h2v-2H3v2zm0-5h4V3H3v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iIoAl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.89 14.56l-3.99-8h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56h-.01L9 8.76 7.17 7.38l.23-.18C8.37 6.47 9 5.31 9 4V3h1c.55 0 1-.45 1-1s-.45-1-1-1H7c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H1c-.55 0-1 .45-1 1s.45 1 1 1h6v1c0 .66-.32 1.25-.82 1.61l-.68.51-.68-.5C4.32 5.25 4 4.66 4 4H2c0 1.31.63 2.47 1.6 3.2l.23.17L1.4 9.2l.01.01C1.17 9.4 1 9.67 1 10c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01 2.9-2.17 2.6 1.95-1.99 3.98h.01c-.07.13-.12.28-.12.44 0 .55.45 1 1 1 .39 0 .72-.23.89-.56h.01L8.62 14h4.76l.72 1.45h.01c.17.32.5.55.89.55.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44zM9.62 12L11 9.24 12.38 12H9.62z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jgUO4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4laet":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 11.857V16H7v-4.143L1 13l3.885-4.44L3 9l3.07-4.297L5 5l3-5 3 5-1.07-.297L13 9l-1.885-.44L15 13l-6-1.143z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6cDaZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 7c-.55 0-1 .45-1 1v.59l-4.29-4.3A.997.997 0 009 4c-.16 0-.31.05-.44.11V4.1L5 5.88 1.45 4.11v.01C1.31 4.05 1.16 4 1 4c-.55 0-1 .45-1 1 0 .39.23.72.56.89v.01l4 2v-.01c.13.06.28.11.44.11s.31-.05.44-.11v.01L8.8 6.22 12.59 10H12c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Zxsd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 4h-3c-.55 0-1 .45-1 1s.45 1 1 1h.59L8.8 9.78 5.45 8.11v.01C5.31 8.05 5.16 8 5 8s-.31.05-.44.11V8.1l-4 2v.01c-.33.17-.56.5-.56.89 0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L5 10.12l3.55 1.78v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L14 7.41V8c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aL5UU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.5 0a.5.5 0 01.5.5V9a1 1 0 011 1v2h.5a.5.5 0 01.5.5v1a.5.5 0 01-.5.5H13v1a1 1 0 01-2 0v-1H5v1a1 1 0 01-2 0v-1H1.5a.5.5 0 01-.5-.5v-1a.5.5 0 01.5-.5H2v-2a1 1 0 011-1V.5a.5.5 0 011 0V3a2 2 0 012-2h4a2 2 0 012 2V.5a.5.5 0 01.5-.5zM9 8H7a1 1 0 00-1 1v2a1 1 0 001 1h2a1 1 0 001-1V9a1 1 0 00-1-1zm3.5 3h-1a.5.5 0 100 1h1a.5.5 0 100-1zm-8 0h-1a.5.5 0 100 1h1a.5.5 0 100-1zM9 9a.5.5 0 01.5.5v1l-.008.09A.5.5 0 019 11H7l-.09-.008a.5.5 0 01-.41-.492v-1l.008-.09A.5.5 0 017 9zm2-5H5v2h6V4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"RouqC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1zm11.71 7.3l-2-2a1.003 1.003 0 00-1.71.71v4a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71zM9.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1qRKH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.382 0a1 1 0 01.894.553L16 4v11a1 1 0 01-1 1H1a1 1 0 01-1-1V4L1.724.553A1 1 0 012.618 0h10.764zM8 6c-.28 0-.53.11-.71.29l-2 2-.084.096A1.003 1.003 0 006.71 9.71l.29-.3V12l.007.116c.058.496.482.884.993.884.55 0 1-.45 1-1V9.41l.29.29.081.076A.97.97 0 0010 10a1.003 1.003 0 00.71-1.71l-2-2-.096-.084A1.002 1.002 0 008 6zm5-4H3L2 4h12l-1-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"NuUej":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 14c2.8 0 5-2.2 5-5V3c0-.6-.4-1-1-1s-1 .4-1 1v6c0 1.7-1.3 3-3 3s-3-1.3-3-3V3c0-.6-.4-1-1-1s-1 .4-1 1v6c0 2.8 2.2 5 5 5zM13.5 15h-11c-.3 0-.5.2-.5.5s.2.5.5.5h11c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8eX3N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H3.41L4.7 2.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 4.47 0 4.72 0 5c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 6H11c1.66 0 3 1.34 3 3s-1.34 3-3 3H7v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bEE73":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.5 5C1.57 5 0 6.57 0 8.5S1.57 12 3.5 12 7 10.43 7 8.5 5.43 5 3.5 5zm9 0C10.57 5 9 6.57 9 8.5s1.57 3.5 3.5 3.5S16 10.43 16 8.5 14.43 5 12.5 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kjUnK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.507 9.75v-3.5c0-.089.023-.171.051-.25h-7.55c-.176 0-.061-.824 0-1l.729-1.63c.06-.177.095-.37.27-.37h4.5V1.01c-.166-.003-.32-.01-.5-.01-2.72 0-4.036.402-4.036.402-.508.155-1.079.711-1.268 1.237L1.94 4.756H.887c-.483 0-.88.423-.88.939s.397.939.88.939h.376L1.008 7c-.034.685 0 1.436 0 2v5c0 .657.384 1 1 1s1-.343 1-1v-1h10v1c0 .657.383 1 1 1s1-.343 1-1v-3.5h-3.75a.75.75 0 01-.75-.75zm-5.5.25h-2V8h2v2zm11-4.305zM15.34.826a2.807 2.807 0 00-.932-.598c-.386-.16-.868-.241-1.445-.241-.447 0-.851.076-1.213.228-.362.153-.67.364-.926.636s-.456.592-.598.963a3.535 3.535 0 00-.218 1.144V3h1.789c.003-.208.023-.405.069-.588.049-.193.124-.362.225-.506.102-.144.232-.259.39-.345.159-.087.348-.13.567-.13.325 0 .58.09.762.272.183.18.275.46.275.839.008.222-.031.407-.116.555a1.654 1.654 0 01-.335.408 7.4 7.4 0 01-.452.37c-.162.123-.316.27-.463.438a2.556 2.556 0 00-.384.611c-.11.239-.177.535-.2.889V6h1.645v-.1c.032-.248.111-.453.237-.618.126-.164.27-.31.433-.438.163-.128.335-.255.518-.383a2.413 2.413 0 00.878-1.117c.102-.255.152-.58.152-.975A2.241 2.241 0 0015.34.826zM12.007 7v2h2V7h-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Bv68":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.99-.01c-2.21 0-4 1.79-4 4v3h-7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-7c0-.55-.45-1-1-1h-3v-3c0-1.1.9-2 2-2s2 .9 2 2v1c0 .55.45 1 1 1s1-.45 1-1v-1c0-2.21-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eDD6n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.39 1c-.5.5-.4 1.48.15 2.53L4.38 7.54C2.85 6.5 1.52 6.07 1 6.59l3.5 3.5c-.02.02-1.4 2.8-1.4 2.8l2.8-1.4 3.5 3.5c.53-.53.1-1.86-.95-3.38l4.02-5.16c1.04.55 2.01.65 2.51.14L9.39 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4MJsz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 3c-.55 0-1.07.09-1.57.26a6.46 6.46 0 010 9.48c.5.17 1.02.26 1.57.26 2.76 0 5-2.24 5-5s-2.24-5-5-5zM9.78 9.38l.09-.27c.08-.36.13-.73.13-1.11s-.05-.75-.13-1.11l-.09-.27a5.32 5.32 0 00-.29-.79l-.12-.21c-.14-.27-.31-.52-.51-.76a.7.7 0 00-.08-.1c-.24-.27-.49-.52-.78-.74-.43-.32-.92-.58-1.45-.75l.01-.01c-.1-.03-.2-.05-.3-.08-.12-.03-.23-.07-.36-.09A5.28 5.28 0 005 3C2.24 3 0 5.24 0 8s2.24 5 5 5c.31 0 .61-.04.9-.09.12-.02.24-.06.36-.09.1-.03.21-.04.3-.08l-.01-.01c.88-.29 1.64-.8 2.22-1.49.03-.03.06-.07.09-.1.19-.24.36-.49.51-.76.04-.07.08-.14.11-.21.13-.25.23-.52.3-.79z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lJ5Cp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0a7.95 7.95 0 00-6 2.74V1c0-.55-.45-1-1-1S0 .45 0 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.54C4.64 2.78 6.22 2 8 2c3.31 0 6 2.69 6 6 0 2.61-1.67 4.81-4 5.63-.63.22-1.29.37-2 .37-3.31 0-6-2.69-6-6 0-.55-.45-1-1-1s-1 .45-1 1c0 4.42 3.58 8 8 8 .34 0 .67-.03 1-.07.02 0 .04-.01.06-.01C12.98 15.4 16 12.06 16 8c0-4.42-3.58-8-8-8zm3 5c-.28 0-.53.11-.71.29L7 8.58 5.71 7.29a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l4-4A1.003 1.003 0 0011 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eWKeq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3 8c-.28 0-.53-.11-.71-.29L9 6.41V12c0 .55-.45 1-1 1s-1-.45-1-1V6.41l-1.29 1.3a1.003 1.003 0 01-1.42-1.42l3-3C7.47 3.11 7.72 3 8 3s.53.11.71.29l3 3A1.003 1.003 0 0111 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eo6qi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.99-.01A7.998 7.998 0 00.03 8.77c.01.09.03.18.04.28.02.15.04.31.07.47.02.11.05.22.08.34.03.13.06.26.1.38.04.12.08.25.12.37.04.11.08.21.12.32a6.583 6.583 0 00.3.65c.07.14.14.27.22.4.04.07.08.13.12.2l.27.42.1.13a7.973 7.973 0 003.83 2.82c.03.01.05.02.07.03.37.12.75.22 1.14.29l.2.03c.39.06.79.1 1.2.1s.81-.04 1.2-.1l.2-.03c.39-.07.77-.16 1.14-.29.03-.01.05-.02.07-.03a8.037 8.037 0 003.83-2.82c.03-.04.06-.08.09-.13.1-.14.19-.28.28-.42.04-.07.08-.13.12-.2.08-.13.15-.27.22-.41.04-.08.08-.17.12-.26.06-.13.11-.26.17-.39.04-.1.08-.21.12-.32.04-.12.08-.24.12-.37.04-.13.07-.25.1-.38.03-.11.06-.22.08-.34.03-.16.05-.31.07-.47.01-.09.03-.18.04-.28.02-.26.04-.51.04-.78-.03-4.41-3.61-7.99-8.03-7.99zm0 14.4c-1.98 0-3.75-.9-4.92-2.31.67-.36 1.49-.66 2.14-.95 1.16-.52 1.04-.84 1.08-1.27.01-.06.01-.11.01-.17-.41-.36-.74-.86-.96-1.44v-.01c0-.01-.01-.02-.01-.02-.05-.13-.09-.26-.12-.39-.28-.05-.44-.35-.5-.63-.06-.11-.18-.38-.15-.69.04-.41.2-.59.38-.67v-.06c0-.51.05-1.24.14-1.72.02-.13.05-.26.09-.39.17-.59.53-1.12 1.01-1.49.49-.38 1.19-.59 1.82-.59.62 0 1.32.2 1.82.59.48.37.84.9 1.01 1.49.04.13.07.26.09.4.09.48.14 1.21.14 1.72v.07c.18.08.33.26.37.66.03.31-.1.58-.16.69-.06.27-.21.57-.48.62-.03.13-.07.26-.12.38 0 .01-.01.04-.01.04-.21.57-.54 1.06-.94 1.42 0 .06.01.13.01.19.04.43-.12.75 1.05 1.27.65.29 1.47.6 2.14.95a6.415 6.415 0 01-4.93 2.31z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gi499":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.94 3.15c.47-.66 1.05-1.24 1.76-1.73l.13-.4c-1.11.45-2.05 1.01-2.84 1.7-1.02.88-1.8 1.9-2.32 3.05C.22 6.76 0 7.75 0 8.75c0 1.75.66 3.5 1.99 5.25l.13-.42c-.39-.94-.59-1.82-.59-2.63 0-1.28.22-2.64.67-4.1.45-1.45 1.03-2.69 1.74-3.7zm7.51 6.41l-.27-.15c-.3.41-.52.66-.66.77-.09.06-.21.1-.33.1-.15 0-.3-.1-.45-.28-.25-.33-.59-1.22-1.01-2.69.38-.65.69-1.08.95-1.28.19-.15.39-.22.59-.22.08 0 .22.03.43.08.2.06.39.08.54.08.22 0 .4-.07.54-.22.15-.15.22-.34.22-.57 0-.25-.07-.45-.22-.59-.15-.15-.35-.22-.63-.22-.24 0-.47.06-.69.17-.21.11-.49.36-.82.74-.25.28-.61.78-1.1 1.48a6.72 6.72 0 00-.97-2.38l-2.59.44-.05.27c.19-.04.36-.06.49-.06.26 0 .47.11.64.33.26.34.63 1.38 1.11 3.12-.37.49-.63.81-.77.96-.23.24-.41.4-.56.47-.11.06-.24.09-.39.09-.11 0-.29-.06-.53-.18-.17-.07-.32-.11-.45-.11-.25 0-.46.08-.62.24-.16.16-.24.37-.24.61 0 .23.08.42.23.57.15.15.35.22.61.22.25 0 .48-.05.7-.15.22-.1.49-.32.82-.65.33-.33.78-.86 1.36-1.59.22.69.42 1.19.58 1.51.16.31.35.54.56.68.21.14.47.21.79.21.31 0 .62-.11.93-.33.4-.29.82-.77 1.26-1.47zm2.56-8.54l-.12.42c.39.95.59 1.82.59 2.64 0 1.09-.17 2.26-.5 3.51-.26.96-.6 1.87-1.02 2.71-.42.85-.82 1.51-1.21 1.98-.39.48-.87.92-1.44 1.32l-.14.4c1.11-.45 2.05-1.02 2.84-1.7 1.03-.89 1.81-1.91 2.33-3.05.44-.99.66-1.99.66-3 0-1.73-.66-3.48-1.99-5.23z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lyOz9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1zM2 9c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm8-5c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1zm4-4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"igs0B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1zM2 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm8 7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1zm4 2c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7QYn2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 2h14c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1zm14 11H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM3 5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1H3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dgxXM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 0H0v1a1 1 0 001 1h14a1 1 0 001-1V0zM0 15v1h16v-1a1 1 0 00-1-1H1a1 1 0 00-1 1zM8.707 3.293a1 1 0 00-1.414 0l-2 2a1 1 0 001.414 1.414L8 5.414l1.293 1.293a1 1 0 001.414-1.414l-2-2zm-2 6a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L8 10.586 6.707 9.293z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"38At0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM5 11V5l6 3-6 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3JOQi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.918 11.107l.737.737.052-.051A1 1 0 0114.2 13.12l-.078.087-1.414 1.414a1 1 0 01-1.492-1.327l.029-.033-.863-.863c-.426.231-.89.402-1.38.502L9 14l.117.007A1 1 0 019 16H7l-.117-.007A1 1 0 017 14v-1.1a4.967 4.967 0 01-1.447-.539l-.846.846.078.087a1 1 0 01-1.492 1.327l-1.414-1.414-.078-.087a1 1 0 011.492-1.327l.744-.744A4.986 4.986 0 013.23 9.5H2a1 1 0 01-1.993.117L0 9.5v-2a1 1 0 011.993-.117L2 7.5h1.025a4.973 4.973 0 01.905-2.405l-.512-.513-.125.125A1 1 0 011.8 3.38l.078-.087 1.414-1.414a1 1 0 011.529 1.277l.573.575a4.969 4.969 0 011.604-.63V2l-.116-.007a1 1 0 010-1.986L7 0h2a1 1 0 01.117 1.993L9 2l.001 1.1c.639.13 1.233.381 1.757.73l.535-.537-.078-.087a1 1 0 011.492-1.327l1.414 1.414.078.087a1 1 0 01-1.492 1.327l-.535.536a4.97 4.97 0 01.803 2.257H14l.007-.117A1 1 0 0116 7.5v2l-.007.117A1 1 0 0114 9.5h-1.229a4.987 4.987 0 01-.853 1.607zM10 9a1 1 0 100 2 1 1 0 000-2zM6.5 5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9vQ4u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 2c-.28 0-.53.11-.71.29L5.59 5H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm3.57 1.44l-1.59 1.22C11.62 5.61 12 6.76 12 8s-.38 2.39-1.02 3.34l1.59 1.22C13.47 11.27 14 9.7 14 8c0-1.7-.53-3.27-1.43-4.56z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8NNXD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 2c-.28 0-.53.11-.71.29L7.59 5H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"EjTcc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 1.86c-.28 0-.53.11-.71.29l-2.7 2.71H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71a1.003 1.003 0 001.71-.71v-10c-.01-.55-.46-1-1.01-1zm6.74-.99l-1.58 1.22A9.985 9.985 0 0114 7.86c0 2.16-.69 4.15-1.85 5.78l1.58 1.22c1.42-1.97 2.26-4.38 2.26-7 .01-2.61-.84-5.02-2.25-6.99zM8.98 4.52C9.62 5.48 10 6.63 10 7.86s-.38 2.39-1.02 3.34l1.59 1.22c.9-1.29 1.43-2.86 1.43-4.56 0-1.7-.53-3.27-1.43-4.56L8.98 4.52z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3HT3w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 8h-2c-.16 0-.31-.05-.44-.11v.01l-1.02-.51-.37 1.86 1.38.92-.01.02c.27.17.46.46.46.81v4c0 .55-.45 1-1 1s-1-.45-1-1v-3.46l-1.27-.85-1.8 4.67h-.01A.98.98 0 015 16c-.55 0-1-.45-1-1 0-.13.03-.25.07-.36h-.01L7.39 6H5.62l-.73 1.45h-.01C4.72 7.77 4.39 8 4 8c-.55 0-1-.45-1-1 0-.16.05-.31.11-.44H3.1l1-2h.01c.17-.33.5-.56.89-.56h3.16l.29-.75C8.17 2.9 8 2.47 8 2c0-1.1.9-2 2-2s2 .9 2 2c0 1-.73 1.82-1.69 1.97l-.5 1.32 1.43.71H13c.55 0 1 .45 1 1s-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7UaJj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.84 13.5l.01-.01-7-12-.01.01c-.17-.3-.48-.5-.85-.5s-.67.2-.85.5l-.01-.01-7 12 .01.01c-.09.15-.15.31-.15.5 0 .55.45 1 1 1h14c.55 0 1-.45 1-1 0-.19-.06-.35-.15-.5zm-6.85-.51h-2v-2h2v2zm0-3h-2v-5h2v5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gRox5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-4 4h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm7-6c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1s-1 .45-1 1v1c0 .55.45 1 1 1zm4-3h-1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 10H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"20aNS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 1a1 1 0 01.894.553c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.173.344.38.75.637 1.072.277.347.437.375.469.375a1 1 0 110 2c-.968 0-1.642-.64-2.03-1.125a4.755 4.755 0 01-.076-.097 6.093 6.093 0 01-.221.212C12.175 4.442 11.393 5 10.5 5c-.892 0-1.675-.558-2.173-1.01A6.243 6.243 0 018 3.67c-.105.11-.214.217-.327.32C7.175 4.442 6.393 5 5.5 5c-.892 0-1.675-.558-2.173-1.01a6.119 6.119 0 01-.221-.212l-.075.097C2.64 4.36 1.968 5 1 5a1 1 0 010-2c.032 0 .191-.028.47-.375.256-.321.463-.728.636-1.072A1 1 0 013 1zm0 5a1 1 0 01.894.553c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.173.344.38.75.637 1.072.277.347.437.375.469.375a1 1 0 110 2c-.968 0-1.642-.639-2.03-1.125a4.726 4.726 0 01-.076-.097 6.093 6.093 0 01-.221.212c-.498.452-1.28 1.01-2.173 1.01-.892 0-1.675-.558-2.173-1.01A6.243 6.243 0 018 8.67c-.105.11-.214.217-.327.32C7.175 9.442 6.393 10 5.5 10c-.892 0-1.675-.558-2.173-1.01a6.119 6.119 0 01-.221-.212l-.075.097C2.64 9.36 1.968 10 1 10a1 1 0 010-2c.032 0 .191-.028.47-.375.256-.321.463-.728.636-1.072A1 1 0 013 6zm.894 5.553a1 1 0 00-1.788 0c-.173.344-.38.75-.637 1.072-.278.347-.437.375-.469.375a1 1 0 100 2c.968 0 1.642-.639 2.03-1.125a4.9 4.9 0 00.076-.097c.072.073.146.143.221.212.498.452 1.28 1.01 2.173 1.01.892 0 1.675-.558 2.173-1.01.113-.103.222-.21.327-.32.105.11.214.217.327.32.498.452 1.28 1.01 2.173 1.01.892 0 1.675-.558 2.173-1.01.075-.069.149-.14.221-.212a4.9 4.9 0 00.075.097C13.36 14.36 14.032 15 15 15a1 1 0 100-2c-.032 0-.191-.028-.47-.375-.256-.321-.463-.728-.636-1.072a1 1 0 00-1.788 0c-.102.202-.393.607-.779.957-.419.381-.72.49-.827.49-.108 0-.408-.109-.827-.49-.386-.35-.677-.755-.779-.957a1 1 0 00-1.788 0c-.102.202-.393.607-.779.957-.419.381-.72.49-.827.49-.108 0-.408-.109-.827-.49-.386-.35-.677-.755-.779-.957z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4pvGF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 11h2V5h-2v6zM3 5H1v6h2V5zm11-1c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM5 3h6V1H5v2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3 15h6v-2H5v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8i76E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 3h14c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1zm1 2v6h12V5H2zm3 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gvkzO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 0H2c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H3v-3h10v3zm0-4H3V2h10v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7cZ9x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 0H2c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H3V6h10v8zm0-9H3V2h10v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eYTDw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 4a2 2 0 112 2H4a1 1 0 000 2h8a4 4 0 10-4-4 1 1 0 002 0zM1 9a1 1 0 100 2h7.5a1.5 1.5 0 010 3c-.749 0-1.386-.538-1.52-1.199a1 1 0 10-1.96.398C5.35 14.82 6.83 16 8.5 16a3.5 3.5 0 100-7H1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jSOWw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.83 3.7l-3.06 3.05-2.84-.7-.7-2.83L12.29.17a5.004 5.004 0 00-4.83 1.29 4.967 4.967 0 00-1.12 5.36L.58 12.58c-.36.36-.58.86-.58 1.41 0 1.1.9 2 2 2 .55 0 1.05-.22 1.41-.59l5.77-5.77c1.79.69 3.91.33 5.35-1.12 1.32-1.3 1.74-3.15 1.3-4.81z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fo9cb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.99 5.99v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2zm7.56 7.44l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gEPJv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.99 5.99c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1h-6zm11.56 7.44l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jWf0F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 10a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42L12.59 8 11.3 9.29c-.19.18-.3.43-.3.71zM1 5c.55 0 1-.45 1-1V2h2c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v3c0 .55.45 1 1 1zm4 1a1.003 1.003 0 00-1.71-.71l-2 2C1.11 7.47 1 7.72 1 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 8 4.7 6.71c.19-.18.3-.43.3-.71zm1-1c.28 0 .53-.11.71-.29L8 3.41 9.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-2 2A1.003 1.003 0 006 5zm9 6c-.55 0-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm0-11h-3c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zM4 14H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm6-3c-.28 0-.53.11-.71.29L8 12.59 6.71 11.3A.965.965 0 006 11a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0010 11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k6PFu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Add", ()=>_addDefault.default
);
parcelHelpers.export(exports, "AddClip", ()=>_addClipDefault.default
);
parcelHelpers.export(exports, "AddColumnLeft", ()=>_addColumnLeftDefault.default
);
parcelHelpers.export(exports, "AddColumnRight", ()=>_addColumnRightDefault.default
);
parcelHelpers.export(exports, "AddLocation", ()=>_addLocationDefault.default
);
parcelHelpers.export(exports, "AddRowBottom", ()=>_addRowBottomDefault.default
);
parcelHelpers.export(exports, "AddRowTop", ()=>_addRowTopDefault.default
);
parcelHelpers.export(exports, "AddToArtifact", ()=>_addToArtifactDefault.default
);
parcelHelpers.export(exports, "AddToFolder", ()=>_addToFolderDefault.default
);
parcelHelpers.export(exports, "Airplane", ()=>_airplaneDefault.default
);
parcelHelpers.export(exports, "AlignCenter", ()=>_alignCenterDefault.default
);
parcelHelpers.export(exports, "AlignJustify", ()=>_alignJustifyDefault.default
);
parcelHelpers.export(exports, "AlignLeft", ()=>_alignLeftDefault.default
);
parcelHelpers.export(exports, "AlignRight", ()=>_alignRightDefault.default
);
parcelHelpers.export(exports, "AlignmentBottom", ()=>_alignmentBottomDefault.default
);
parcelHelpers.export(exports, "AlignmentHorizontalCenter", ()=>_alignmentHorizontalCenterDefault.default
);
parcelHelpers.export(exports, "AlignmentLeft", ()=>_alignmentLeftDefault.default
);
parcelHelpers.export(exports, "AlignmentRight", ()=>_alignmentRightDefault.default
);
parcelHelpers.export(exports, "AlignmentTop", ()=>_alignmentTopDefault.default
);
parcelHelpers.export(exports, "AlignmentVerticalCenter", ()=>_alignmentVerticalCenterDefault.default
);
parcelHelpers.export(exports, "Annotation", ()=>_annotationDefault.default
);
parcelHelpers.export(exports, "Antenna", ()=>_antennaDefault.default
);
parcelHelpers.export(exports, "AppHeader", ()=>_appHeaderDefault.default
);
parcelHelpers.export(exports, "Application", ()=>_applicationDefault.default
);
parcelHelpers.export(exports, "Applications", ()=>_applicationsDefault.default
);
parcelHelpers.export(exports, "Archive", ()=>_archiveDefault.default
);
parcelHelpers.export(exports, "AreaOfInterest", ()=>_areaOfInterestDefault.default
);
parcelHelpers.export(exports, "Array", ()=>_arrayDefault.default
);
parcelHelpers.export(exports, "ArrayBoolean", ()=>_arrayBooleanDefault.default
);
parcelHelpers.export(exports, "ArrayDate", ()=>_arrayDateDefault.default
);
parcelHelpers.export(exports, "ArrayNumeric", ()=>_arrayNumericDefault.default
);
parcelHelpers.export(exports, "ArrayString", ()=>_arrayStringDefault.default
);
parcelHelpers.export(exports, "ArrayTimestamp", ()=>_arrayTimestampDefault.default
);
parcelHelpers.export(exports, "ArrowBottomLeft", ()=>_arrowBottomLeftDefault.default
);
parcelHelpers.export(exports, "ArrowBottomRight", ()=>_arrowBottomRightDefault.default
);
parcelHelpers.export(exports, "ArrowDown", ()=>_arrowDownDefault.default
);
parcelHelpers.export(exports, "ArrowLeft", ()=>_arrowLeftDefault.default
);
parcelHelpers.export(exports, "ArrowRight", ()=>_arrowRightDefault.default
);
parcelHelpers.export(exports, "ArrowTopLeft", ()=>_arrowTopLeftDefault.default
);
parcelHelpers.export(exports, "ArrowTopRight", ()=>_arrowTopRightDefault.default
);
parcelHelpers.export(exports, "ArrowUp", ()=>_arrowUpDefault.default
);
parcelHelpers.export(exports, "ArrowsHorizontal", ()=>_arrowsHorizontalDefault.default
);
parcelHelpers.export(exports, "ArrowsVertical", ()=>_arrowsVerticalDefault.default
);
parcelHelpers.export(exports, "Asterisk", ()=>_asteriskDefault.default
);
parcelHelpers.export(exports, "AutomaticUpdates", ()=>_automaticUpdatesDefault.default
);
parcelHelpers.export(exports, "Backlink", ()=>_backlinkDefault.default
);
parcelHelpers.export(exports, "Badge", ()=>_badgeDefault.default
);
parcelHelpers.export(exports, "BanCircle", ()=>_banCircleDefault.default
);
parcelHelpers.export(exports, "BankAccount", ()=>_bankAccountDefault.default
);
parcelHelpers.export(exports, "Barcode", ()=>_barcodeDefault.default
);
parcelHelpers.export(exports, "Blank", ()=>_blankDefault.default
);
parcelHelpers.export(exports, "BlockedPerson", ()=>_blockedPersonDefault.default
);
parcelHelpers.export(exports, "Bold", ()=>_boldDefault.default
);
parcelHelpers.export(exports, "Book", ()=>_bookDefault.default
);
parcelHelpers.export(exports, "Bookmark", ()=>_bookmarkDefault.default
);
parcelHelpers.export(exports, "Box", ()=>_boxDefault.default
);
parcelHelpers.export(exports, "Briefcase", ()=>_briefcaseDefault.default
);
parcelHelpers.export(exports, "BringData", ()=>_bringDataDefault.default
);
parcelHelpers.export(exports, "Buggy", ()=>_buggyDefault.default
);
parcelHelpers.export(exports, "Build", ()=>_buildDefault.default
);
parcelHelpers.export(exports, "Calculator", ()=>_calculatorDefault.default
);
parcelHelpers.export(exports, "Calendar", ()=>_calendarDefault.default
);
parcelHelpers.export(exports, "Camera", ()=>_cameraDefault.default
);
parcelHelpers.export(exports, "CaretDown", ()=>_caretDownDefault.default
);
parcelHelpers.export(exports, "CaretLeft", ()=>_caretLeftDefault.default
);
parcelHelpers.export(exports, "CaretRight", ()=>_caretRightDefault.default
);
parcelHelpers.export(exports, "CaretUp", ()=>_caretUpDefault.default
);
parcelHelpers.export(exports, "CargoShip", ()=>_cargoShipDefault.default
);
parcelHelpers.export(exports, "CellTower", ()=>_cellTowerDefault.default
);
parcelHelpers.export(exports, "Changes", ()=>_changesDefault.default
);
parcelHelpers.export(exports, "Chart", ()=>_chartDefault.default
);
parcelHelpers.export(exports, "Chat", ()=>_chatDefault.default
);
parcelHelpers.export(exports, "ChevronBackward", ()=>_chevronBackwardDefault.default
);
parcelHelpers.export(exports, "ChevronDown", ()=>_chevronDownDefault.default
);
parcelHelpers.export(exports, "ChevronForward", ()=>_chevronForwardDefault.default
);
parcelHelpers.export(exports, "ChevronLeft", ()=>_chevronLeftDefault.default
);
parcelHelpers.export(exports, "ChevronRight", ()=>_chevronRightDefault.default
);
parcelHelpers.export(exports, "ChevronUp", ()=>_chevronUpDefault.default
);
parcelHelpers.export(exports, "Circle", ()=>_circleDefault.default
);
parcelHelpers.export(exports, "CircleArrowDown", ()=>_circleArrowDownDefault.default
);
parcelHelpers.export(exports, "CircleArrowLeft", ()=>_circleArrowLeftDefault.default
);
parcelHelpers.export(exports, "CircleArrowRight", ()=>_circleArrowRightDefault.default
);
parcelHelpers.export(exports, "CircleArrowUp", ()=>_circleArrowUpDefault.default
);
parcelHelpers.export(exports, "Citation", ()=>_citationDefault.default
);
parcelHelpers.export(exports, "Clean", ()=>_cleanDefault.default
);
parcelHelpers.export(exports, "Clip", ()=>_clipDefault.default
);
parcelHelpers.export(exports, "Clipboard", ()=>_clipboardDefault.default
);
parcelHelpers.export(exports, "Cloud", ()=>_cloudDefault.default
);
parcelHelpers.export(exports, "CloudDownload", ()=>_cloudDownloadDefault.default
);
parcelHelpers.export(exports, "CloudUpload", ()=>_cloudUploadDefault.default
);
parcelHelpers.export(exports, "Code", ()=>_codeDefault.default
);
parcelHelpers.export(exports, "CodeBlock", ()=>_codeBlockDefault.default
);
parcelHelpers.export(exports, "Cog", ()=>_cogDefault.default
);
parcelHelpers.export(exports, "CollapseAll", ()=>_collapseAllDefault.default
);
parcelHelpers.export(exports, "ColorFill", ()=>_colorFillDefault.default
);
parcelHelpers.export(exports, "ColumnLayout", ()=>_columnLayoutDefault.default
);
parcelHelpers.export(exports, "Comment", ()=>_commentDefault.default
);
parcelHelpers.export(exports, "Comparison", ()=>_comparisonDefault.default
);
parcelHelpers.export(exports, "Compass", ()=>_compassDefault.default
);
parcelHelpers.export(exports, "Compressed", ()=>_compressedDefault.default
);
parcelHelpers.export(exports, "Confirm", ()=>_confirmDefault.default
);
parcelHelpers.export(exports, "Console", ()=>_consoleDefault.default
);
parcelHelpers.export(exports, "Contrast", ()=>_contrastDefault.default
);
parcelHelpers.export(exports, "Control", ()=>_controlDefault.default
);
parcelHelpers.export(exports, "CreditCard", ()=>_creditCardDefault.default
);
parcelHelpers.export(exports, "Cross", ()=>_crossDefault.default
);
parcelHelpers.export(exports, "Crown", ()=>_crownDefault.default
);
parcelHelpers.export(exports, "Cube", ()=>_cubeDefault.default
);
parcelHelpers.export(exports, "CubeAdd", ()=>_cubeAddDefault.default
);
parcelHelpers.export(exports, "CubeRemove", ()=>_cubeRemoveDefault.default
);
parcelHelpers.export(exports, "CurvedRangeChart", ()=>_curvedRangeChartDefault.default
);
parcelHelpers.export(exports, "Cut", ()=>_cutDefault.default
);
parcelHelpers.export(exports, "Cycle", ()=>_cycleDefault.default
);
parcelHelpers.export(exports, "Dashboard", ()=>_dashboardDefault.default
);
parcelHelpers.export(exports, "DataConnection", ()=>_dataConnectionDefault.default
);
parcelHelpers.export(exports, "DataLineage", ()=>_dataLineageDefault.default
);
parcelHelpers.export(exports, "Database", ()=>_databaseDefault.default
);
parcelHelpers.export(exports, "Delete", ()=>_deleteDefault.default
);
parcelHelpers.export(exports, "Delta", ()=>_deltaDefault.default
);
parcelHelpers.export(exports, "DeriveColumn", ()=>_deriveColumnDefault.default
);
parcelHelpers.export(exports, "Desktop", ()=>_desktopDefault.default
);
parcelHelpers.export(exports, "Diagnosis", ()=>_diagnosisDefault.default
);
parcelHelpers.export(exports, "DiagramTree", ()=>_diagramTreeDefault.default
);
parcelHelpers.export(exports, "DirectionLeft", ()=>_directionLeftDefault.default
);
parcelHelpers.export(exports, "DirectionRight", ()=>_directionRightDefault.default
);
parcelHelpers.export(exports, "Disable", ()=>_disableDefault.default
);
parcelHelpers.export(exports, "Divide", ()=>_divideDefault.default
);
parcelHelpers.export(exports, "Document", ()=>_documentDefault.default
);
parcelHelpers.export(exports, "DocumentOpen", ()=>_documentOpenDefault.default
);
parcelHelpers.export(exports, "DocumentShare", ()=>_documentShareDefault.default
);
parcelHelpers.export(exports, "Dollar", ()=>_dollarDefault.default
);
parcelHelpers.export(exports, "Dot", ()=>_dotDefault.default
);
parcelHelpers.export(exports, "DoubleCaretHorizontal", ()=>_doubleCaretHorizontalDefault.default
);
parcelHelpers.export(exports, "DoubleCaretVertical", ()=>_doubleCaretVerticalDefault.default
);
parcelHelpers.export(exports, "DoubleChevronDown", ()=>_doubleChevronDownDefault.default
);
parcelHelpers.export(exports, "DoubleChevronLeft", ()=>_doubleChevronLeftDefault.default
);
parcelHelpers.export(exports, "DoubleChevronRight", ()=>_doubleChevronRightDefault.default
);
parcelHelpers.export(exports, "DoubleChevronUp", ()=>_doubleChevronUpDefault.default
);
parcelHelpers.export(exports, "DoughnutChart", ()=>_doughnutChartDefault.default
);
parcelHelpers.export(exports, "Download", ()=>_downloadDefault.default
);
parcelHelpers.export(exports, "DragHandleHorizontal", ()=>_dragHandleHorizontalDefault.default
);
parcelHelpers.export(exports, "DragHandleVertical", ()=>_dragHandleVerticalDefault.default
);
parcelHelpers.export(exports, "Draw", ()=>_drawDefault.default
);
parcelHelpers.export(exports, "DrawerLeft", ()=>_drawerLeftDefault.default
);
parcelHelpers.export(exports, "DrawerLeftFilled", ()=>_drawerLeftFilledDefault.default
);
parcelHelpers.export(exports, "DrawerRight", ()=>_drawerRightDefault.default
);
parcelHelpers.export(exports, "DrawerRightFilled", ()=>_drawerRightFilledDefault.default
);
parcelHelpers.export(exports, "DriveTime", ()=>_driveTimeDefault.default
);
parcelHelpers.export(exports, "Duplicate", ()=>_duplicateDefault.default
);
parcelHelpers.export(exports, "Edit", ()=>_editDefault.default
);
parcelHelpers.export(exports, "Eject", ()=>_ejectDefault.default
);
parcelHelpers.export(exports, "Emoji", ()=>_emojiDefault.default
);
parcelHelpers.export(exports, "Endorsed", ()=>_endorsedDefault.default
);
parcelHelpers.export(exports, "Envelope", ()=>_envelopeDefault.default
);
parcelHelpers.export(exports, "Equals", ()=>_equalsDefault.default
);
parcelHelpers.export(exports, "Eraser", ()=>_eraserDefault.default
);
parcelHelpers.export(exports, "Error", ()=>_errorDefault.default
);
parcelHelpers.export(exports, "Euro", ()=>_euroDefault.default
);
parcelHelpers.export(exports, "Exchange", ()=>_exchangeDefault.default
);
parcelHelpers.export(exports, "ExcludeRow", ()=>_excludeRowDefault.default
);
parcelHelpers.export(exports, "ExpandAll", ()=>_expandAllDefault.default
);
parcelHelpers.export(exports, "Export", ()=>_exportDefault.default
);
parcelHelpers.export(exports, "EyeOff", ()=>_eyeOffDefault.default
);
parcelHelpers.export(exports, "EyeOn", ()=>_eyeOnDefault.default
);
parcelHelpers.export(exports, "EyeOpen", ()=>_eyeOpenDefault.default
);
parcelHelpers.export(exports, "FastBackward", ()=>_fastBackwardDefault.default
);
parcelHelpers.export(exports, "FastForward", ()=>_fastForwardDefault.default
);
parcelHelpers.export(exports, "Feed", ()=>_feedDefault.default
);
parcelHelpers.export(exports, "FeedSubscribed", ()=>_feedSubscribedDefault.default
);
parcelHelpers.export(exports, "Film", ()=>_filmDefault.default
);
parcelHelpers.export(exports, "Filter", ()=>_filterDefault.default
);
parcelHelpers.export(exports, "FilterKeep", ()=>_filterKeepDefault.default
);
parcelHelpers.export(exports, "FilterList", ()=>_filterListDefault.default
);
parcelHelpers.export(exports, "FilterOpen", ()=>_filterOpenDefault.default
);
parcelHelpers.export(exports, "FilterRemove", ()=>_filterRemoveDefault.default
);
parcelHelpers.export(exports, "Flag", ()=>_flagDefault.default
);
parcelHelpers.export(exports, "Flame", ()=>_flameDefault.default
);
parcelHelpers.export(exports, "Flash", ()=>_flashDefault.default
);
parcelHelpers.export(exports, "FloppyDisk", ()=>_floppyDiskDefault.default
);
parcelHelpers.export(exports, "FlowBranch", ()=>_flowBranchDefault.default
);
parcelHelpers.export(exports, "FlowEnd", ()=>_flowEndDefault.default
);
parcelHelpers.export(exports, "FlowLinear", ()=>_flowLinearDefault.default
);
parcelHelpers.export(exports, "FlowReview", ()=>_flowReviewDefault.default
);
parcelHelpers.export(exports, "FlowReviewBranch", ()=>_flowReviewBranchDefault.default
);
parcelHelpers.export(exports, "Flows", ()=>_flowsDefault.default
);
parcelHelpers.export(exports, "FolderClose", ()=>_folderCloseDefault.default
);
parcelHelpers.export(exports, "FolderNew", ()=>_folderNewDefault.default
);
parcelHelpers.export(exports, "FolderOpen", ()=>_folderOpenDefault.default
);
parcelHelpers.export(exports, "FolderShared", ()=>_folderSharedDefault.default
);
parcelHelpers.export(exports, "FolderSharedOpen", ()=>_folderSharedOpenDefault.default
);
parcelHelpers.export(exports, "Follower", ()=>_followerDefault.default
);
parcelHelpers.export(exports, "Following", ()=>_followingDefault.default
);
parcelHelpers.export(exports, "Font", ()=>_fontDefault.default
);
parcelHelpers.export(exports, "Fork", ()=>_forkDefault.default
);
parcelHelpers.export(exports, "Form", ()=>_formDefault.default
);
parcelHelpers.export(exports, "Fuel", ()=>_fuelDefault.default
);
parcelHelpers.export(exports, "FullCircle", ()=>_fullCircleDefault.default
);
parcelHelpers.export(exports, "FullStackedChart", ()=>_fullStackedChartDefault.default
);
parcelHelpers.export(exports, "Fullscreen", ()=>_fullscreenDefault.default
);
parcelHelpers.export(exports, "Function", ()=>_functionDefault.default
);
parcelHelpers.export(exports, "GanttChart", ()=>_ganttChartDefault.default
);
parcelHelpers.export(exports, "Geofence", ()=>_geofenceDefault.default
);
parcelHelpers.export(exports, "Geolocation", ()=>_geolocationDefault.default
);
parcelHelpers.export(exports, "Geosearch", ()=>_geosearchDefault.default
);
parcelHelpers.export(exports, "GitBranch", ()=>_gitBranchDefault.default
);
parcelHelpers.export(exports, "GitCommit", ()=>_gitCommitDefault.default
);
parcelHelpers.export(exports, "GitMerge", ()=>_gitMergeDefault.default
);
parcelHelpers.export(exports, "GitNewBranch", ()=>_gitNewBranchDefault.default
);
parcelHelpers.export(exports, "GitPull", ()=>_gitPullDefault.default
);
parcelHelpers.export(exports, "GitPush", ()=>_gitPushDefault.default
);
parcelHelpers.export(exports, "GitRepo", ()=>_gitRepoDefault.default
);
parcelHelpers.export(exports, "Glass", ()=>_glassDefault.default
);
parcelHelpers.export(exports, "Globe", ()=>_globeDefault.default
);
parcelHelpers.export(exports, "GlobeNetwork", ()=>_globeNetworkDefault.default
);
parcelHelpers.export(exports, "Graph", ()=>_graphDefault.default
);
parcelHelpers.export(exports, "GraphRemove", ()=>_graphRemoveDefault.default
);
parcelHelpers.export(exports, "GreaterThan", ()=>_greaterThanDefault.default
);
parcelHelpers.export(exports, "GreaterThanOrEqualTo", ()=>_greaterThanOrEqualToDefault.default
);
parcelHelpers.export(exports, "Grid", ()=>_gridDefault.default
);
parcelHelpers.export(exports, "GridView", ()=>_gridViewDefault.default
);
parcelHelpers.export(exports, "GroupObjects", ()=>_groupObjectsDefault.default
);
parcelHelpers.export(exports, "GroupedBarChart", ()=>_groupedBarChartDefault.default
);
parcelHelpers.export(exports, "Hand", ()=>_handDefault.default
);
parcelHelpers.export(exports, "HandDown", ()=>_handDownDefault.default
);
parcelHelpers.export(exports, "HandLeft", ()=>_handLeftDefault.default
);
parcelHelpers.export(exports, "HandRight", ()=>_handRightDefault.default
);
parcelHelpers.export(exports, "HandUp", ()=>_handUpDefault.default
);
parcelHelpers.export(exports, "Hat", ()=>_hatDefault.default
);
parcelHelpers.export(exports, "Header", ()=>_headerDefault.default
);
parcelHelpers.export(exports, "HeaderOne", ()=>_headerOneDefault.default
);
parcelHelpers.export(exports, "HeaderThree", ()=>_headerThreeDefault.default
);
parcelHelpers.export(exports, "HeaderTwo", ()=>_headerTwoDefault.default
);
parcelHelpers.export(exports, "Headset", ()=>_headsetDefault.default
);
parcelHelpers.export(exports, "Heart", ()=>_heartDefault.default
);
parcelHelpers.export(exports, "HeartBroken", ()=>_heartBrokenDefault.default
);
parcelHelpers.export(exports, "HeatGrid", ()=>_heatGridDefault.default
);
parcelHelpers.export(exports, "Heatmap", ()=>_heatmapDefault.default
);
parcelHelpers.export(exports, "Helicopter", ()=>_helicopterDefault.default
);
parcelHelpers.export(exports, "Help", ()=>_helpDefault.default
);
parcelHelpers.export(exports, "HelperManagement", ()=>_helperManagementDefault.default
);
parcelHelpers.export(exports, "HighPriority", ()=>_highPriorityDefault.default
);
parcelHelpers.export(exports, "Highlight", ()=>_highlightDefault.default
);
parcelHelpers.export(exports, "History", ()=>_historyDefault.default
);
parcelHelpers.export(exports, "Home", ()=>_homeDefault.default
);
parcelHelpers.export(exports, "HorizontalBarChart", ()=>_horizontalBarChartDefault.default
);
parcelHelpers.export(exports, "HorizontalBarChartAsc", ()=>_horizontalBarChartAscDefault.default
);
parcelHelpers.export(exports, "HorizontalBarChartDesc", ()=>_horizontalBarChartDescDefault.default
);
parcelHelpers.export(exports, "HorizontalDistribution", ()=>_horizontalDistributionDefault.default
);
parcelHelpers.export(exports, "HorizontalInbetween", ()=>_horizontalInbetweenDefault.default
);
parcelHelpers.export(exports, "Hurricane", ()=>_hurricaneDefault.default
);
parcelHelpers.export(exports, "IdNumber", ()=>_idNumberDefault.default
);
parcelHelpers.export(exports, "ImageRotateLeft", ()=>_imageRotateLeftDefault.default
);
parcelHelpers.export(exports, "ImageRotateRight", ()=>_imageRotateRightDefault.default
);
parcelHelpers.export(exports, "Import", ()=>_importDefault.default
);
parcelHelpers.export(exports, "Inbox", ()=>_inboxDefault.default
);
parcelHelpers.export(exports, "InboxFiltered", ()=>_inboxFilteredDefault.default
);
parcelHelpers.export(exports, "InboxGeo", ()=>_inboxGeoDefault.default
);
parcelHelpers.export(exports, "InboxSearch", ()=>_inboxSearchDefault.default
);
parcelHelpers.export(exports, "InboxUpdate", ()=>_inboxUpdateDefault.default
);
parcelHelpers.export(exports, "InfoSign", ()=>_infoSignDefault.default
);
parcelHelpers.export(exports, "Inheritance", ()=>_inheritanceDefault.default
);
parcelHelpers.export(exports, "InheritedGroup", ()=>_inheritedGroupDefault.default
);
parcelHelpers.export(exports, "InnerJoin", ()=>_innerJoinDefault.default
);
parcelHelpers.export(exports, "Insert", ()=>_insertDefault.default
);
parcelHelpers.export(exports, "Intersection", ()=>_intersectionDefault.default
);
parcelHelpers.export(exports, "IpAddress", ()=>_ipAddressDefault.default
);
parcelHelpers.export(exports, "Issue", ()=>_issueDefault.default
);
parcelHelpers.export(exports, "IssueClosed", ()=>_issueClosedDefault.default
);
parcelHelpers.export(exports, "IssueNew", ()=>_issueNewDefault.default
);
parcelHelpers.export(exports, "Italic", ()=>_italicDefault.default
);
parcelHelpers.export(exports, "JoinTable", ()=>_joinTableDefault.default
);
parcelHelpers.export(exports, "Key", ()=>_keyDefault.default
);
parcelHelpers.export(exports, "KeyBackspace", ()=>_keyBackspaceDefault.default
);
parcelHelpers.export(exports, "KeyCommand", ()=>_keyCommandDefault.default
);
parcelHelpers.export(exports, "KeyControl", ()=>_keyControlDefault.default
);
parcelHelpers.export(exports, "KeyDelete", ()=>_keyDeleteDefault.default
);
parcelHelpers.export(exports, "KeyEnter", ()=>_keyEnterDefault.default
);
parcelHelpers.export(exports, "KeyEscape", ()=>_keyEscapeDefault.default
);
parcelHelpers.export(exports, "KeyOption", ()=>_keyOptionDefault.default
);
parcelHelpers.export(exports, "KeyShift", ()=>_keyShiftDefault.default
);
parcelHelpers.export(exports, "KeyTab", ()=>_keyTabDefault.default
);
parcelHelpers.export(exports, "KnownVehicle", ()=>_knownVehicleDefault.default
);
parcelHelpers.export(exports, "LabTest", ()=>_labTestDefault.default
);
parcelHelpers.export(exports, "Label", ()=>_labelDefault.default
);
parcelHelpers.export(exports, "Layer", ()=>_layerDefault.default
);
parcelHelpers.export(exports, "LayerOutline", ()=>_layerOutlineDefault.default
);
parcelHelpers.export(exports, "Layers", ()=>_layersDefault.default
);
parcelHelpers.export(exports, "Layout", ()=>_layoutDefault.default
);
parcelHelpers.export(exports, "LayoutAuto", ()=>_layoutAutoDefault.default
);
parcelHelpers.export(exports, "LayoutBalloon", ()=>_layoutBalloonDefault.default
);
parcelHelpers.export(exports, "LayoutCircle", ()=>_layoutCircleDefault.default
);
parcelHelpers.export(exports, "LayoutGrid", ()=>_layoutGridDefault.default
);
parcelHelpers.export(exports, "LayoutGroupBy", ()=>_layoutGroupByDefault.default
);
parcelHelpers.export(exports, "LayoutHierarchy", ()=>_layoutHierarchyDefault.default
);
parcelHelpers.export(exports, "LayoutLinear", ()=>_layoutLinearDefault.default
);
parcelHelpers.export(exports, "LayoutSkewGrid", ()=>_layoutSkewGridDefault.default
);
parcelHelpers.export(exports, "LayoutSortedClusters", ()=>_layoutSortedClustersDefault.default
);
parcelHelpers.export(exports, "Learning", ()=>_learningDefault.default
);
parcelHelpers.export(exports, "LeftJoin", ()=>_leftJoinDefault.default
);
parcelHelpers.export(exports, "LessThan", ()=>_lessThanDefault.default
);
parcelHelpers.export(exports, "LessThanOrEqualTo", ()=>_lessThanOrEqualToDefault.default
);
parcelHelpers.export(exports, "Lifesaver", ()=>_lifesaverDefault.default
);
parcelHelpers.export(exports, "Lightbulb", ()=>_lightbulbDefault.default
);
parcelHelpers.export(exports, "Lightning", ()=>_lightningDefault.default
);
parcelHelpers.export(exports, "Link", ()=>_linkDefault.default
);
parcelHelpers.export(exports, "List", ()=>_listDefault.default
);
parcelHelpers.export(exports, "ListColumns", ()=>_listColumnsDefault.default
);
parcelHelpers.export(exports, "ListDetailView", ()=>_listDetailViewDefault.default
);
parcelHelpers.export(exports, "Locate", ()=>_locateDefault.default
);
parcelHelpers.export(exports, "Lock", ()=>_lockDefault.default
);
parcelHelpers.export(exports, "LogIn", ()=>_logInDefault.default
);
parcelHelpers.export(exports, "LogOut", ()=>_logOutDefault.default
);
parcelHelpers.export(exports, "Manual", ()=>_manualDefault.default
);
parcelHelpers.export(exports, "ManuallyEnteredData", ()=>_manuallyEnteredDataDefault.default
);
parcelHelpers.export(exports, "ManyToMany", ()=>_manyToManyDefault.default
);
parcelHelpers.export(exports, "ManyToOne", ()=>_manyToOneDefault.default
);
parcelHelpers.export(exports, "Map", ()=>_mapDefault.default
);
parcelHelpers.export(exports, "MapCreate", ()=>_mapCreateDefault.default
);
parcelHelpers.export(exports, "MapMarker", ()=>_mapMarkerDefault.default
);
parcelHelpers.export(exports, "Maximize", ()=>_maximizeDefault.default
);
parcelHelpers.export(exports, "Media", ()=>_mediaDefault.default
);
parcelHelpers.export(exports, "Menu", ()=>_menuDefault.default
);
parcelHelpers.export(exports, "MenuClosed", ()=>_menuClosedDefault.default
);
parcelHelpers.export(exports, "MenuOpen", ()=>_menuOpenDefault.default
);
parcelHelpers.export(exports, "MergeColumns", ()=>_mergeColumnsDefault.default
);
parcelHelpers.export(exports, "MergeLinks", ()=>_mergeLinksDefault.default
);
parcelHelpers.export(exports, "Minimize", ()=>_minimizeDefault.default
);
parcelHelpers.export(exports, "Minus", ()=>_minusDefault.default
);
parcelHelpers.export(exports, "MobilePhone", ()=>_mobilePhoneDefault.default
);
parcelHelpers.export(exports, "MobileVideo", ()=>_mobileVideoDefault.default
);
parcelHelpers.export(exports, "Modal", ()=>_modalDefault.default
);
parcelHelpers.export(exports, "ModalFilled", ()=>_modalFilledDefault.default
);
parcelHelpers.export(exports, "Moon", ()=>_moonDefault.default
);
parcelHelpers.export(exports, "More", ()=>_moreDefault.default
);
parcelHelpers.export(exports, "Mountain", ()=>_mountainDefault.default
);
parcelHelpers.export(exports, "Move", ()=>_moveDefault.default
);
parcelHelpers.export(exports, "Mugshot", ()=>_mugshotDefault.default
);
parcelHelpers.export(exports, "MultiSelect", ()=>_multiSelectDefault.default
);
parcelHelpers.export(exports, "Music", ()=>_musicDefault.default
);
parcelHelpers.export(exports, "Nest", ()=>_nestDefault.default
);
parcelHelpers.export(exports, "NewDrawing", ()=>_newDrawingDefault.default
);
parcelHelpers.export(exports, "NewGridItem", ()=>_newGridItemDefault.default
);
parcelHelpers.export(exports, "NewLayer", ()=>_newLayerDefault.default
);
parcelHelpers.export(exports, "NewLayers", ()=>_newLayersDefault.default
);
parcelHelpers.export(exports, "NewLink", ()=>_newLinkDefault.default
);
parcelHelpers.export(exports, "NewObject", ()=>_newObjectDefault.default
);
parcelHelpers.export(exports, "NewPerson", ()=>_newPersonDefault.default
);
parcelHelpers.export(exports, "NewPrescription", ()=>_newPrescriptionDefault.default
);
parcelHelpers.export(exports, "NewTextBox", ()=>_newTextBoxDefault.default
);
parcelHelpers.export(exports, "Ninja", ()=>_ninjaDefault.default
);
parcelHelpers.export(exports, "NotEqualTo", ()=>_notEqualToDefault.default
);
parcelHelpers.export(exports, "Notifications", ()=>_notificationsDefault.default
);
parcelHelpers.export(exports, "NotificationsSnooze", ()=>_notificationsSnoozeDefault.default
);
parcelHelpers.export(exports, "NotificationsUpdated", ()=>_notificationsUpdatedDefault.default
);
parcelHelpers.export(exports, "NumberedList", ()=>_numberedListDefault.default
);
parcelHelpers.export(exports, "Numerical", ()=>_numericalDefault.default
);
parcelHelpers.export(exports, "Office", ()=>_officeDefault.default
);
parcelHelpers.export(exports, "Offline", ()=>_offlineDefault.default
);
parcelHelpers.export(exports, "OilField", ()=>_oilFieldDefault.default
);
parcelHelpers.export(exports, "OneColumn", ()=>_oneColumnDefault.default
);
parcelHelpers.export(exports, "OneToMany", ()=>_oneToManyDefault.default
);
parcelHelpers.export(exports, "OneToOne", ()=>_oneToOneDefault.default
);
parcelHelpers.export(exports, "OpenApplication", ()=>_openApplicationDefault.default
);
parcelHelpers.export(exports, "Outdated", ()=>_outdatedDefault.default
);
parcelHelpers.export(exports, "PageLayout", ()=>_pageLayoutDefault.default
);
parcelHelpers.export(exports, "PanelStats", ()=>_panelStatsDefault.default
);
parcelHelpers.export(exports, "PanelTable", ()=>_panelTableDefault.default
);
parcelHelpers.export(exports, "Paperclip", ()=>_paperclipDefault.default
);
parcelHelpers.export(exports, "Paragraph", ()=>_paragraphDefault.default
);
parcelHelpers.export(exports, "Path", ()=>_pathDefault.default
);
parcelHelpers.export(exports, "PathSearch", ()=>_pathSearchDefault.default
);
parcelHelpers.export(exports, "Pause", ()=>_pauseDefault.default
);
parcelHelpers.export(exports, "People", ()=>_peopleDefault.default
);
parcelHelpers.export(exports, "Percentage", ()=>_percentageDefault.default
);
parcelHelpers.export(exports, "Person", ()=>_personDefault.default
);
parcelHelpers.export(exports, "Phone", ()=>_phoneDefault.default
);
parcelHelpers.export(exports, "PieChart", ()=>_pieChartDefault.default
);
parcelHelpers.export(exports, "Pin", ()=>_pinDefault.default
);
parcelHelpers.export(exports, "Pivot", ()=>_pivotDefault.default
);
parcelHelpers.export(exports, "PivotTable", ()=>_pivotTableDefault.default
);
parcelHelpers.export(exports, "Play", ()=>_playDefault.default
);
parcelHelpers.export(exports, "Playbook", ()=>_playbookDefault.default
);
parcelHelpers.export(exports, "Plus", ()=>_plusDefault.default
);
parcelHelpers.export(exports, "PolygonFilter", ()=>_polygonFilterDefault.default
);
parcelHelpers.export(exports, "Power", ()=>_powerDefault.default
);
parcelHelpers.export(exports, "PredictiveAnalysis", ()=>_predictiveAnalysisDefault.default
);
parcelHelpers.export(exports, "Prescription", ()=>_prescriptionDefault.default
);
parcelHelpers.export(exports, "Presentation", ()=>_presentationDefault.default
);
parcelHelpers.export(exports, "Print", ()=>_printDefault.default
);
parcelHelpers.export(exports, "Projects", ()=>_projectsDefault.default
);
parcelHelpers.export(exports, "Properties", ()=>_propertiesDefault.default
);
parcelHelpers.export(exports, "Property", ()=>_propertyDefault.default
);
parcelHelpers.export(exports, "PublishFunction", ()=>_publishFunctionDefault.default
);
parcelHelpers.export(exports, "Pulse", ()=>_pulseDefault.default
);
parcelHelpers.export(exports, "Rain", ()=>_rainDefault.default
);
parcelHelpers.export(exports, "Random", ()=>_randomDefault.default
);
parcelHelpers.export(exports, "Record", ()=>_recordDefault.default
);
parcelHelpers.export(exports, "RectHeight", ()=>_rectHeightDefault.default
);
parcelHelpers.export(exports, "RectWidth", ()=>_rectWidthDefault.default
);
parcelHelpers.export(exports, "Rectangle", ()=>_rectangleDefault.default
);
parcelHelpers.export(exports, "Redo", ()=>_redoDefault.default
);
parcelHelpers.export(exports, "Refresh", ()=>_refreshDefault.default
);
parcelHelpers.export(exports, "RegressionChart", ()=>_regressionChartDefault.default
);
parcelHelpers.export(exports, "Remove", ()=>_removeDefault.default
);
parcelHelpers.export(exports, "RemoveColumn", ()=>_removeColumnDefault.default
);
parcelHelpers.export(exports, "RemoveColumnLeft", ()=>_removeColumnLeftDefault.default
);
parcelHelpers.export(exports, "RemoveColumnRight", ()=>_removeColumnRightDefault.default
);
parcelHelpers.export(exports, "RemoveRowBottom", ()=>_removeRowBottomDefault.default
);
parcelHelpers.export(exports, "RemoveRowTop", ()=>_removeRowTopDefault.default
);
parcelHelpers.export(exports, "Repeat", ()=>_repeatDefault.default
);
parcelHelpers.export(exports, "Reset", ()=>_resetDefault.default
);
parcelHelpers.export(exports, "Resolve", ()=>_resolveDefault.default
);
parcelHelpers.export(exports, "Rig", ()=>_rigDefault.default
);
parcelHelpers.export(exports, "RightJoin", ()=>_rightJoinDefault.default
);
parcelHelpers.export(exports, "Ring", ()=>_ringDefault.default
);
parcelHelpers.export(exports, "Rocket", ()=>_rocketDefault.default
);
parcelHelpers.export(exports, "RocketSlant", ()=>_rocketSlantDefault.default
);
parcelHelpers.export(exports, "RotateDocument", ()=>_rotateDocumentDefault.default
);
parcelHelpers.export(exports, "RotatePage", ()=>_rotatePageDefault.default
);
parcelHelpers.export(exports, "Route", ()=>_routeDefault.default
);
parcelHelpers.export(exports, "Satellite", ()=>_satelliteDefault.default
);
parcelHelpers.export(exports, "Saved", ()=>_savedDefault.default
);
parcelHelpers.export(exports, "ScatterPlot", ()=>_scatterPlotDefault.default
);
parcelHelpers.export(exports, "Search", ()=>_searchDefault.default
);
parcelHelpers.export(exports, "SearchAround", ()=>_searchAroundDefault.default
);
parcelHelpers.export(exports, "SearchTemplate", ()=>_searchTemplateDefault.default
);
parcelHelpers.export(exports, "SearchText", ()=>_searchTextDefault.default
);
parcelHelpers.export(exports, "SegmentedControl", ()=>_segmentedControlDefault.default
);
parcelHelpers.export(exports, "Select", ()=>_selectDefault.default
);
parcelHelpers.export(exports, "Selection", ()=>_selectionDefault.default
);
parcelHelpers.export(exports, "SendMessage", ()=>_sendMessageDefault.default
);
parcelHelpers.export(exports, "SendTo", ()=>_sendToDefault.default
);
parcelHelpers.export(exports, "SendToGraph", ()=>_sendToGraphDefault.default
);
parcelHelpers.export(exports, "SendToMap", ()=>_sendToMapDefault.default
);
parcelHelpers.export(exports, "SeriesAdd", ()=>_seriesAddDefault.default
);
parcelHelpers.export(exports, "SeriesConfiguration", ()=>_seriesConfigurationDefault.default
);
parcelHelpers.export(exports, "SeriesDerived", ()=>_seriesDerivedDefault.default
);
parcelHelpers.export(exports, "SeriesFiltered", ()=>_seriesFilteredDefault.default
);
parcelHelpers.export(exports, "SeriesSearch", ()=>_seriesSearchDefault.default
);
parcelHelpers.export(exports, "Settings", ()=>_settingsDefault.default
);
parcelHelpers.export(exports, "Shapes", ()=>_shapesDefault.default
);
parcelHelpers.export(exports, "Share", ()=>_shareDefault.default
);
parcelHelpers.export(exports, "SharedFilter", ()=>_sharedFilterDefault.default
);
parcelHelpers.export(exports, "Shield", ()=>_shieldDefault.default
);
parcelHelpers.export(exports, "Ship", ()=>_shipDefault.default
);
parcelHelpers.export(exports, "Shop", ()=>_shopDefault.default
);
parcelHelpers.export(exports, "ShoppingCart", ()=>_shoppingCartDefault.default
);
parcelHelpers.export(exports, "SignalSearch", ()=>_signalSearchDefault.default
);
parcelHelpers.export(exports, "SimCard", ()=>_simCardDefault.default
);
parcelHelpers.export(exports, "Slash", ()=>_slashDefault.default
);
parcelHelpers.export(exports, "SmallCross", ()=>_smallCrossDefault.default
);
parcelHelpers.export(exports, "SmallMinus", ()=>_smallMinusDefault.default
);
parcelHelpers.export(exports, "SmallPlus", ()=>_smallPlusDefault.default
);
parcelHelpers.export(exports, "SmallSquare", ()=>_smallSquareDefault.default
);
parcelHelpers.export(exports, "SmallTick", ()=>_smallTickDefault.default
);
parcelHelpers.export(exports, "Snowflake", ()=>_snowflakeDefault.default
);
parcelHelpers.export(exports, "SocialMedia", ()=>_socialMediaDefault.default
);
parcelHelpers.export(exports, "Sort", ()=>_sortDefault.default
);
parcelHelpers.export(exports, "SortAlphabetical", ()=>_sortAlphabeticalDefault.default
);
parcelHelpers.export(exports, "SortAlphabeticalDesc", ()=>_sortAlphabeticalDescDefault.default
);
parcelHelpers.export(exports, "SortAsc", ()=>_sortAscDefault.default
);
parcelHelpers.export(exports, "SortDesc", ()=>_sortDescDefault.default
);
parcelHelpers.export(exports, "SortNumerical", ()=>_sortNumericalDefault.default
);
parcelHelpers.export(exports, "SortNumericalDesc", ()=>_sortNumericalDescDefault.default
);
parcelHelpers.export(exports, "SplitColumns", ()=>_splitColumnsDefault.default
);
parcelHelpers.export(exports, "Square", ()=>_squareDefault.default
);
parcelHelpers.export(exports, "StackedChart", ()=>_stackedChartDefault.default
);
parcelHelpers.export(exports, "StadiumGeometry", ()=>_stadiumGeometryDefault.default
);
parcelHelpers.export(exports, "Star", ()=>_starDefault.default
);
parcelHelpers.export(exports, "StarEmpty", ()=>_starEmptyDefault.default
);
parcelHelpers.export(exports, "StepBackward", ()=>_stepBackwardDefault.default
);
parcelHelpers.export(exports, "StepChart", ()=>_stepChartDefault.default
);
parcelHelpers.export(exports, "StepForward", ()=>_stepForwardDefault.default
);
parcelHelpers.export(exports, "Stop", ()=>_stopDefault.default
);
parcelHelpers.export(exports, "Stopwatch", ()=>_stopwatchDefault.default
);
parcelHelpers.export(exports, "Strikethrough", ()=>_strikethroughDefault.default
);
parcelHelpers.export(exports, "Style", ()=>_styleDefault.default
);
parcelHelpers.export(exports, "SwapHorizontal", ()=>_swapHorizontalDefault.default
);
parcelHelpers.export(exports, "SwapVertical", ()=>_swapVerticalDefault.default
);
parcelHelpers.export(exports, "Switch", ()=>_switchDefault.default
);
parcelHelpers.export(exports, "SymbolCircle", ()=>_symbolCircleDefault.default
);
parcelHelpers.export(exports, "SymbolCross", ()=>_symbolCrossDefault.default
);
parcelHelpers.export(exports, "SymbolDiamond", ()=>_symbolDiamondDefault.default
);
parcelHelpers.export(exports, "SymbolRectangle", ()=>_symbolRectangleDefault.default
);
parcelHelpers.export(exports, "SymbolSquare", ()=>_symbolSquareDefault.default
);
parcelHelpers.export(exports, "SymbolTriangleDown", ()=>_symbolTriangleDownDefault.default
);
parcelHelpers.export(exports, "SymbolTriangleUp", ()=>_symbolTriangleUpDefault.default
);
parcelHelpers.export(exports, "Syringe", ()=>_syringeDefault.default
);
parcelHelpers.export(exports, "Tag", ()=>_tagDefault.default
);
parcelHelpers.export(exports, "TakeAction", ()=>_takeActionDefault.default
);
parcelHelpers.export(exports, "Tank", ()=>_tankDefault.default
);
parcelHelpers.export(exports, "Target", ()=>_targetDefault.default
);
parcelHelpers.export(exports, "Taxi", ()=>_taxiDefault.default
);
parcelHelpers.export(exports, "Temperature", ()=>_temperatureDefault.default
);
parcelHelpers.export(exports, "TextHighlight", ()=>_textHighlightDefault.default
);
parcelHelpers.export(exports, "Th", ()=>_thDefault.default
);
parcelHelpers.export(exports, "ThDerived", ()=>_thDerivedDefault.default
);
parcelHelpers.export(exports, "ThDisconnect", ()=>_thDisconnectDefault.default
);
parcelHelpers.export(exports, "ThFiltered", ()=>_thFilteredDefault.default
);
parcelHelpers.export(exports, "ThList", ()=>_thListDefault.default
);
parcelHelpers.export(exports, "ThirdParty", ()=>_thirdPartyDefault.default
);
parcelHelpers.export(exports, "ThumbsDown", ()=>_thumbsDownDefault.default
);
parcelHelpers.export(exports, "ThumbsUp", ()=>_thumbsUpDefault.default
);
parcelHelpers.export(exports, "Tick", ()=>_tickDefault.default
);
parcelHelpers.export(exports, "TickCircle", ()=>_tickCircleDefault.default
);
parcelHelpers.export(exports, "Time", ()=>_timeDefault.default
);
parcelHelpers.export(exports, "TimelineAreaChart", ()=>_timelineAreaChartDefault.default
);
parcelHelpers.export(exports, "TimelineBarChart", ()=>_timelineBarChartDefault.default
);
parcelHelpers.export(exports, "TimelineEvents", ()=>_timelineEventsDefault.default
);
parcelHelpers.export(exports, "TimelineLineChart", ()=>_timelineLineChartDefault.default
);
parcelHelpers.export(exports, "Tint", ()=>_tintDefault.default
);
parcelHelpers.export(exports, "Torch", ()=>_torchDefault.default
);
parcelHelpers.export(exports, "Tractor", ()=>_tractorDefault.default
);
parcelHelpers.export(exports, "Train", ()=>_trainDefault.default
);
parcelHelpers.export(exports, "Translate", ()=>_translateDefault.default
);
parcelHelpers.export(exports, "Trash", ()=>_trashDefault.default
);
parcelHelpers.export(exports, "Tree", ()=>_treeDefault.default
);
parcelHelpers.export(exports, "TrendingDown", ()=>_trendingDownDefault.default
);
parcelHelpers.export(exports, "TrendingUp", ()=>_trendingUpDefault.default
);
parcelHelpers.export(exports, "Truck", ()=>_truckDefault.default
);
parcelHelpers.export(exports, "TwoColumns", ()=>_twoColumnsDefault.default
);
parcelHelpers.export(exports, "Unarchive", ()=>_unarchiveDefault.default
);
parcelHelpers.export(exports, "Underline", ()=>_underlineDefault.default
);
parcelHelpers.export(exports, "Undo", ()=>_undoDefault.default
);
parcelHelpers.export(exports, "UngroupObjects", ()=>_ungroupObjectsDefault.default
);
parcelHelpers.export(exports, "UnknownVehicle", ()=>_unknownVehicleDefault.default
);
parcelHelpers.export(exports, "Unlock", ()=>_unlockDefault.default
);
parcelHelpers.export(exports, "Unpin", ()=>_unpinDefault.default
);
parcelHelpers.export(exports, "Unresolve", ()=>_unresolveDefault.default
);
parcelHelpers.export(exports, "Updated", ()=>_updatedDefault.default
);
parcelHelpers.export(exports, "Upload", ()=>_uploadDefault.default
);
parcelHelpers.export(exports, "User", ()=>_userDefault.default
);
parcelHelpers.export(exports, "Variable", ()=>_variableDefault.default
);
parcelHelpers.export(exports, "VerticalBarChartAsc", ()=>_verticalBarChartAscDefault.default
);
parcelHelpers.export(exports, "VerticalBarChartDesc", ()=>_verticalBarChartDescDefault.default
);
parcelHelpers.export(exports, "VerticalDistribution", ()=>_verticalDistributionDefault.default
);
parcelHelpers.export(exports, "VerticalInbetween", ()=>_verticalInbetweenDefault.default
);
parcelHelpers.export(exports, "Video", ()=>_videoDefault.default
);
parcelHelpers.export(exports, "Virus", ()=>_virusDefault.default
);
parcelHelpers.export(exports, "VolumeDown", ()=>_volumeDownDefault.default
);
parcelHelpers.export(exports, "VolumeOff", ()=>_volumeOffDefault.default
);
parcelHelpers.export(exports, "VolumeUp", ()=>_volumeUpDefault.default
);
parcelHelpers.export(exports, "Walk", ()=>_walkDefault.default
);
parcelHelpers.export(exports, "WarningSign", ()=>_warningSignDefault.default
);
parcelHelpers.export(exports, "WaterfallChart", ()=>_waterfallChartDefault.default
);
parcelHelpers.export(exports, "Waves", ()=>_wavesDefault.default
);
parcelHelpers.export(exports, "Widget", ()=>_widgetDefault.default
);
parcelHelpers.export(exports, "WidgetButton", ()=>_widgetButtonDefault.default
);
parcelHelpers.export(exports, "WidgetFooter", ()=>_widgetFooterDefault.default
);
parcelHelpers.export(exports, "WidgetHeader", ()=>_widgetHeaderDefault.default
);
parcelHelpers.export(exports, "Wind", ()=>_windDefault.default
);
parcelHelpers.export(exports, "Wrench", ()=>_wrenchDefault.default
);
parcelHelpers.export(exports, "ZoomIn", ()=>_zoomInDefault.default
);
parcelHelpers.export(exports, "ZoomOut", ()=>_zoomOutDefault.default
);
parcelHelpers.export(exports, "ZoomToFit", ()=>_zoomToFitDefault.default
);
var _add = require("./add");
var _addDefault = parcelHelpers.interopDefault(_add);
var _addClip = require("./add-clip");
var _addClipDefault = parcelHelpers.interopDefault(_addClip);
var _addColumnLeft = require("./add-column-left");
var _addColumnLeftDefault = parcelHelpers.interopDefault(_addColumnLeft);
var _addColumnRight = require("./add-column-right");
var _addColumnRightDefault = parcelHelpers.interopDefault(_addColumnRight);
var _addLocation = require("./add-location");
var _addLocationDefault = parcelHelpers.interopDefault(_addLocation);
var _addRowBottom = require("./add-row-bottom");
var _addRowBottomDefault = parcelHelpers.interopDefault(_addRowBottom);
var _addRowTop = require("./add-row-top");
var _addRowTopDefault = parcelHelpers.interopDefault(_addRowTop);
var _addToArtifact = require("./add-to-artifact");
var _addToArtifactDefault = parcelHelpers.interopDefault(_addToArtifact);
var _addToFolder = require("./add-to-folder");
var _addToFolderDefault = parcelHelpers.interopDefault(_addToFolder);
var _airplane = require("./airplane");
var _airplaneDefault = parcelHelpers.interopDefault(_airplane);
var _alignCenter = require("./align-center");
var _alignCenterDefault = parcelHelpers.interopDefault(_alignCenter);
var _alignJustify = require("./align-justify");
var _alignJustifyDefault = parcelHelpers.interopDefault(_alignJustify);
var _alignLeft = require("./align-left");
var _alignLeftDefault = parcelHelpers.interopDefault(_alignLeft);
var _alignRight = require("./align-right");
var _alignRightDefault = parcelHelpers.interopDefault(_alignRight);
var _alignmentBottom = require("./alignment-bottom");
var _alignmentBottomDefault = parcelHelpers.interopDefault(_alignmentBottom);
var _alignmentHorizontalCenter = require("./alignment-horizontal-center");
var _alignmentHorizontalCenterDefault = parcelHelpers.interopDefault(_alignmentHorizontalCenter);
var _alignmentLeft = require("./alignment-left");
var _alignmentLeftDefault = parcelHelpers.interopDefault(_alignmentLeft);
var _alignmentRight = require("./alignment-right");
var _alignmentRightDefault = parcelHelpers.interopDefault(_alignmentRight);
var _alignmentTop = require("./alignment-top");
var _alignmentTopDefault = parcelHelpers.interopDefault(_alignmentTop);
var _alignmentVerticalCenter = require("./alignment-vertical-center");
var _alignmentVerticalCenterDefault = parcelHelpers.interopDefault(_alignmentVerticalCenter);
var _annotation = require("./annotation");
var _annotationDefault = parcelHelpers.interopDefault(_annotation);
var _antenna = require("./antenna");
var _antennaDefault = parcelHelpers.interopDefault(_antenna);
var _appHeader = require("./app-header");
var _appHeaderDefault = parcelHelpers.interopDefault(_appHeader);
var _application = require("./application");
var _applicationDefault = parcelHelpers.interopDefault(_application);
var _applications = require("./applications");
var _applicationsDefault = parcelHelpers.interopDefault(_applications);
var _archive = require("./archive");
var _archiveDefault = parcelHelpers.interopDefault(_archive);
var _areaOfInterest = require("./area-of-interest");
var _areaOfInterestDefault = parcelHelpers.interopDefault(_areaOfInterest);
var _array = require("./array");
var _arrayDefault = parcelHelpers.interopDefault(_array);
var _arrayBoolean = require("./array-boolean");
var _arrayBooleanDefault = parcelHelpers.interopDefault(_arrayBoolean);
var _arrayDate = require("./array-date");
var _arrayDateDefault = parcelHelpers.interopDefault(_arrayDate);
var _arrayNumeric = require("./array-numeric");
var _arrayNumericDefault = parcelHelpers.interopDefault(_arrayNumeric);
var _arrayString = require("./array-string");
var _arrayStringDefault = parcelHelpers.interopDefault(_arrayString);
var _arrayTimestamp = require("./array-timestamp");
var _arrayTimestampDefault = parcelHelpers.interopDefault(_arrayTimestamp);
var _arrowBottomLeft = require("./arrow-bottom-left");
var _arrowBottomLeftDefault = parcelHelpers.interopDefault(_arrowBottomLeft);
var _arrowBottomRight = require("./arrow-bottom-right");
var _arrowBottomRightDefault = parcelHelpers.interopDefault(_arrowBottomRight);
var _arrowDown = require("./arrow-down");
var _arrowDownDefault = parcelHelpers.interopDefault(_arrowDown);
var _arrowLeft = require("./arrow-left");
var _arrowLeftDefault = parcelHelpers.interopDefault(_arrowLeft);
var _arrowRight = require("./arrow-right");
var _arrowRightDefault = parcelHelpers.interopDefault(_arrowRight);
var _arrowTopLeft = require("./arrow-top-left");
var _arrowTopLeftDefault = parcelHelpers.interopDefault(_arrowTopLeft);
var _arrowTopRight = require("./arrow-top-right");
var _arrowTopRightDefault = parcelHelpers.interopDefault(_arrowTopRight);
var _arrowUp = require("./arrow-up");
var _arrowUpDefault = parcelHelpers.interopDefault(_arrowUp);
var _arrowsHorizontal = require("./arrows-horizontal");
var _arrowsHorizontalDefault = parcelHelpers.interopDefault(_arrowsHorizontal);
var _arrowsVertical = require("./arrows-vertical");
var _arrowsVerticalDefault = parcelHelpers.interopDefault(_arrowsVertical);
var _asterisk = require("./asterisk");
var _asteriskDefault = parcelHelpers.interopDefault(_asterisk);
var _automaticUpdates = require("./automatic-updates");
var _automaticUpdatesDefault = parcelHelpers.interopDefault(_automaticUpdates);
var _backlink = require("./backlink");
var _backlinkDefault = parcelHelpers.interopDefault(_backlink);
var _badge = require("./badge");
var _badgeDefault = parcelHelpers.interopDefault(_badge);
var _banCircle = require("./ban-circle");
var _banCircleDefault = parcelHelpers.interopDefault(_banCircle);
var _bankAccount = require("./bank-account");
var _bankAccountDefault = parcelHelpers.interopDefault(_bankAccount);
var _barcode = require("./barcode");
var _barcodeDefault = parcelHelpers.interopDefault(_barcode);
var _blank = require("./blank");
var _blankDefault = parcelHelpers.interopDefault(_blank);
var _blockedPerson = require("./blocked-person");
var _blockedPersonDefault = parcelHelpers.interopDefault(_blockedPerson);
var _bold = require("./bold");
var _boldDefault = parcelHelpers.interopDefault(_bold);
var _book = require("./book");
var _bookDefault = parcelHelpers.interopDefault(_book);
var _bookmark = require("./bookmark");
var _bookmarkDefault = parcelHelpers.interopDefault(_bookmark);
var _box = require("./box");
var _boxDefault = parcelHelpers.interopDefault(_box);
var _briefcase = require("./briefcase");
var _briefcaseDefault = parcelHelpers.interopDefault(_briefcase);
var _bringData = require("./bring-data");
var _bringDataDefault = parcelHelpers.interopDefault(_bringData);
var _buggy = require("./buggy");
var _buggyDefault = parcelHelpers.interopDefault(_buggy);
var _build = require("./build");
var _buildDefault = parcelHelpers.interopDefault(_build);
var _calculator = require("./calculator");
var _calculatorDefault = parcelHelpers.interopDefault(_calculator);
var _calendar = require("./calendar");
var _calendarDefault = parcelHelpers.interopDefault(_calendar);
var _camera = require("./camera");
var _cameraDefault = parcelHelpers.interopDefault(_camera);
var _caretDown = require("./caret-down");
var _caretDownDefault = parcelHelpers.interopDefault(_caretDown);
var _caretLeft = require("./caret-left");
var _caretLeftDefault = parcelHelpers.interopDefault(_caretLeft);
var _caretRight = require("./caret-right");
var _caretRightDefault = parcelHelpers.interopDefault(_caretRight);
var _caretUp = require("./caret-up");
var _caretUpDefault = parcelHelpers.interopDefault(_caretUp);
var _cargoShip = require("./cargo-ship");
var _cargoShipDefault = parcelHelpers.interopDefault(_cargoShip);
var _cellTower = require("./cell-tower");
var _cellTowerDefault = parcelHelpers.interopDefault(_cellTower);
var _changes = require("./changes");
var _changesDefault = parcelHelpers.interopDefault(_changes);
var _chart = require("./chart");
var _chartDefault = parcelHelpers.interopDefault(_chart);
var _chat = require("./chat");
var _chatDefault = parcelHelpers.interopDefault(_chat);
var _chevronBackward = require("./chevron-backward");
var _chevronBackwardDefault = parcelHelpers.interopDefault(_chevronBackward);
var _chevronDown = require("./chevron-down");
var _chevronDownDefault = parcelHelpers.interopDefault(_chevronDown);
var _chevronForward = require("./chevron-forward");
var _chevronForwardDefault = parcelHelpers.interopDefault(_chevronForward);
var _chevronLeft = require("./chevron-left");
var _chevronLeftDefault = parcelHelpers.interopDefault(_chevronLeft);
var _chevronRight = require("./chevron-right");
var _chevronRightDefault = parcelHelpers.interopDefault(_chevronRight);
var _chevronUp = require("./chevron-up");
var _chevronUpDefault = parcelHelpers.interopDefault(_chevronUp);
var _circle = require("./circle");
var _circleDefault = parcelHelpers.interopDefault(_circle);
var _circleArrowDown = require("./circle-arrow-down");
var _circleArrowDownDefault = parcelHelpers.interopDefault(_circleArrowDown);
var _circleArrowLeft = require("./circle-arrow-left");
var _circleArrowLeftDefault = parcelHelpers.interopDefault(_circleArrowLeft);
var _circleArrowRight = require("./circle-arrow-right");
var _circleArrowRightDefault = parcelHelpers.interopDefault(_circleArrowRight);
var _circleArrowUp = require("./circle-arrow-up");
var _circleArrowUpDefault = parcelHelpers.interopDefault(_circleArrowUp);
var _citation = require("./citation");
var _citationDefault = parcelHelpers.interopDefault(_citation);
var _clean = require("./clean");
var _cleanDefault = parcelHelpers.interopDefault(_clean);
var _clip = require("./clip");
var _clipDefault = parcelHelpers.interopDefault(_clip);
var _clipboard = require("./clipboard");
var _clipboardDefault = parcelHelpers.interopDefault(_clipboard);
var _cloud = require("./cloud");
var _cloudDefault = parcelHelpers.interopDefault(_cloud);
var _cloudDownload = require("./cloud-download");
var _cloudDownloadDefault = parcelHelpers.interopDefault(_cloudDownload);
var _cloudUpload = require("./cloud-upload");
var _cloudUploadDefault = parcelHelpers.interopDefault(_cloudUpload);
var _code = require("./code");
var _codeDefault = parcelHelpers.interopDefault(_code);
var _codeBlock = require("./code-block");
var _codeBlockDefault = parcelHelpers.interopDefault(_codeBlock);
var _cog = require("./cog");
var _cogDefault = parcelHelpers.interopDefault(_cog);
var _collapseAll = require("./collapse-all");
var _collapseAllDefault = parcelHelpers.interopDefault(_collapseAll);
var _colorFill = require("./color-fill");
var _colorFillDefault = parcelHelpers.interopDefault(_colorFill);
var _columnLayout = require("./column-layout");
var _columnLayoutDefault = parcelHelpers.interopDefault(_columnLayout);
var _comment = require("./comment");
var _commentDefault = parcelHelpers.interopDefault(_comment);
var _comparison = require("./comparison");
var _comparisonDefault = parcelHelpers.interopDefault(_comparison);
var _compass = require("./compass");
var _compassDefault = parcelHelpers.interopDefault(_compass);
var _compressed = require("./compressed");
var _compressedDefault = parcelHelpers.interopDefault(_compressed);
var _confirm = require("./confirm");
var _confirmDefault = parcelHelpers.interopDefault(_confirm);
var _console = require("./console");
var _consoleDefault = parcelHelpers.interopDefault(_console);
var _contrast = require("./contrast");
var _contrastDefault = parcelHelpers.interopDefault(_contrast);
var _control = require("./control");
var _controlDefault = parcelHelpers.interopDefault(_control);
var _creditCard = require("./credit-card");
var _creditCardDefault = parcelHelpers.interopDefault(_creditCard);
var _cross = require("./cross");
var _crossDefault = parcelHelpers.interopDefault(_cross);
var _crown = require("./crown");
var _crownDefault = parcelHelpers.interopDefault(_crown);
var _cube = require("./cube");
var _cubeDefault = parcelHelpers.interopDefault(_cube);
var _cubeAdd = require("./cube-add");
var _cubeAddDefault = parcelHelpers.interopDefault(_cubeAdd);
var _cubeRemove = require("./cube-remove");
var _cubeRemoveDefault = parcelHelpers.interopDefault(_cubeRemove);
var _curvedRangeChart = require("./curved-range-chart");
var _curvedRangeChartDefault = parcelHelpers.interopDefault(_curvedRangeChart);
var _cut = require("./cut");
var _cutDefault = parcelHelpers.interopDefault(_cut);
var _cycle = require("./cycle");
var _cycleDefault = parcelHelpers.interopDefault(_cycle);
var _dashboard = require("./dashboard");
var _dashboardDefault = parcelHelpers.interopDefault(_dashboard);
var _dataConnection = require("./data-connection");
var _dataConnectionDefault = parcelHelpers.interopDefault(_dataConnection);
var _dataLineage = require("./data-lineage");
var _dataLineageDefault = parcelHelpers.interopDefault(_dataLineage);
var _database = require("./database");
var _databaseDefault = parcelHelpers.interopDefault(_database);
var _delete = require("./delete");
var _deleteDefault = parcelHelpers.interopDefault(_delete);
var _delta = require("./delta");
var _deltaDefault = parcelHelpers.interopDefault(_delta);
var _deriveColumn = require("./derive-column");
var _deriveColumnDefault = parcelHelpers.interopDefault(_deriveColumn);
var _desktop = require("./desktop");
var _desktopDefault = parcelHelpers.interopDefault(_desktop);
var _diagnosis = require("./diagnosis");
var _diagnosisDefault = parcelHelpers.interopDefault(_diagnosis);
var _diagramTree = require("./diagram-tree");
var _diagramTreeDefault = parcelHelpers.interopDefault(_diagramTree);
var _directionLeft = require("./direction-left");
var _directionLeftDefault = parcelHelpers.interopDefault(_directionLeft);
var _directionRight = require("./direction-right");
var _directionRightDefault = parcelHelpers.interopDefault(_directionRight);
var _disable = require("./disable");
var _disableDefault = parcelHelpers.interopDefault(_disable);
var _divide = require("./divide");
var _divideDefault = parcelHelpers.interopDefault(_divide);
var _document = require("./document");
var _documentDefault = parcelHelpers.interopDefault(_document);
var _documentOpen = require("./document-open");
var _documentOpenDefault = parcelHelpers.interopDefault(_documentOpen);
var _documentShare = require("./document-share");
var _documentShareDefault = parcelHelpers.interopDefault(_documentShare);
var _dollar = require("./dollar");
var _dollarDefault = parcelHelpers.interopDefault(_dollar);
var _dot = require("./dot");
var _dotDefault = parcelHelpers.interopDefault(_dot);
var _doubleCaretHorizontal = require("./double-caret-horizontal");
var _doubleCaretHorizontalDefault = parcelHelpers.interopDefault(_doubleCaretHorizontal);
var _doubleCaretVertical = require("./double-caret-vertical");
var _doubleCaretVerticalDefault = parcelHelpers.interopDefault(_doubleCaretVertical);
var _doubleChevronDown = require("./double-chevron-down");
var _doubleChevronDownDefault = parcelHelpers.interopDefault(_doubleChevronDown);
var _doubleChevronLeft = require("./double-chevron-left");
var _doubleChevronLeftDefault = parcelHelpers.interopDefault(_doubleChevronLeft);
var _doubleChevronRight = require("./double-chevron-right");
var _doubleChevronRightDefault = parcelHelpers.interopDefault(_doubleChevronRight);
var _doubleChevronUp = require("./double-chevron-up");
var _doubleChevronUpDefault = parcelHelpers.interopDefault(_doubleChevronUp);
var _doughnutChart = require("./doughnut-chart");
var _doughnutChartDefault = parcelHelpers.interopDefault(_doughnutChart);
var _download = require("./download");
var _downloadDefault = parcelHelpers.interopDefault(_download);
var _dragHandleHorizontal = require("./drag-handle-horizontal");
var _dragHandleHorizontalDefault = parcelHelpers.interopDefault(_dragHandleHorizontal);
var _dragHandleVertical = require("./drag-handle-vertical");
var _dragHandleVerticalDefault = parcelHelpers.interopDefault(_dragHandleVertical);
var _draw = require("./draw");
var _drawDefault = parcelHelpers.interopDefault(_draw);
var _drawerLeft = require("./drawer-left");
var _drawerLeftDefault = parcelHelpers.interopDefault(_drawerLeft);
var _drawerLeftFilled = require("./drawer-left-filled");
var _drawerLeftFilledDefault = parcelHelpers.interopDefault(_drawerLeftFilled);
var _drawerRight = require("./drawer-right");
var _drawerRightDefault = parcelHelpers.interopDefault(_drawerRight);
var _drawerRightFilled = require("./drawer-right-filled");
var _drawerRightFilledDefault = parcelHelpers.interopDefault(_drawerRightFilled);
var _driveTime = require("./drive-time");
var _driveTimeDefault = parcelHelpers.interopDefault(_driveTime);
var _duplicate = require("./duplicate");
var _duplicateDefault = parcelHelpers.interopDefault(_duplicate);
var _edit = require("./edit");
var _editDefault = parcelHelpers.interopDefault(_edit);
var _eject = require("./eject");
var _ejectDefault = parcelHelpers.interopDefault(_eject);
var _emoji = require("./emoji");
var _emojiDefault = parcelHelpers.interopDefault(_emoji);
var _endorsed = require("./endorsed");
var _endorsedDefault = parcelHelpers.interopDefault(_endorsed);
var _envelope = require("./envelope");
var _envelopeDefault = parcelHelpers.interopDefault(_envelope);
var _equals = require("./equals");
var _equalsDefault = parcelHelpers.interopDefault(_equals);
var _eraser = require("./eraser");
var _eraserDefault = parcelHelpers.interopDefault(_eraser);
var _error = require("./error");
var _errorDefault = parcelHelpers.interopDefault(_error);
var _euro = require("./euro");
var _euroDefault = parcelHelpers.interopDefault(_euro);
var _exchange = require("./exchange");
var _exchangeDefault = parcelHelpers.interopDefault(_exchange);
var _excludeRow = require("./exclude-row");
var _excludeRowDefault = parcelHelpers.interopDefault(_excludeRow);
var _expandAll = require("./expand-all");
var _expandAllDefault = parcelHelpers.interopDefault(_expandAll);
var _export = require("./export");
var _exportDefault = parcelHelpers.interopDefault(_export);
var _eyeOff = require("./eye-off");
var _eyeOffDefault = parcelHelpers.interopDefault(_eyeOff);
var _eyeOn = require("./eye-on");
var _eyeOnDefault = parcelHelpers.interopDefault(_eyeOn);
var _eyeOpen = require("./eye-open");
var _eyeOpenDefault = parcelHelpers.interopDefault(_eyeOpen);
var _fastBackward = require("./fast-backward");
var _fastBackwardDefault = parcelHelpers.interopDefault(_fastBackward);
var _fastForward = require("./fast-forward");
var _fastForwardDefault = parcelHelpers.interopDefault(_fastForward);
var _feed = require("./feed");
var _feedDefault = parcelHelpers.interopDefault(_feed);
var _feedSubscribed = require("./feed-subscribed");
var _feedSubscribedDefault = parcelHelpers.interopDefault(_feedSubscribed);
var _film = require("./film");
var _filmDefault = parcelHelpers.interopDefault(_film);
var _filter = require("./filter");
var _filterDefault = parcelHelpers.interopDefault(_filter);
var _filterKeep = require("./filter-keep");
var _filterKeepDefault = parcelHelpers.interopDefault(_filterKeep);
var _filterList = require("./filter-list");
var _filterListDefault = parcelHelpers.interopDefault(_filterList);
var _filterOpen = require("./filter-open");
var _filterOpenDefault = parcelHelpers.interopDefault(_filterOpen);
var _filterRemove = require("./filter-remove");
var _filterRemoveDefault = parcelHelpers.interopDefault(_filterRemove);
var _flag = require("./flag");
var _flagDefault = parcelHelpers.interopDefault(_flag);
var _flame = require("./flame");
var _flameDefault = parcelHelpers.interopDefault(_flame);
var _flash = require("./flash");
var _flashDefault = parcelHelpers.interopDefault(_flash);
var _floppyDisk = require("./floppy-disk");
var _floppyDiskDefault = parcelHelpers.interopDefault(_floppyDisk);
var _flowBranch = require("./flow-branch");
var _flowBranchDefault = parcelHelpers.interopDefault(_flowBranch);
var _flowEnd = require("./flow-end");
var _flowEndDefault = parcelHelpers.interopDefault(_flowEnd);
var _flowLinear = require("./flow-linear");
var _flowLinearDefault = parcelHelpers.interopDefault(_flowLinear);
var _flowReview = require("./flow-review");
var _flowReviewDefault = parcelHelpers.interopDefault(_flowReview);
var _flowReviewBranch = require("./flow-review-branch");
var _flowReviewBranchDefault = parcelHelpers.interopDefault(_flowReviewBranch);
var _flows = require("./flows");
var _flowsDefault = parcelHelpers.interopDefault(_flows);
var _folderClose = require("./folder-close");
var _folderCloseDefault = parcelHelpers.interopDefault(_folderClose);
var _folderNew = require("./folder-new");
var _folderNewDefault = parcelHelpers.interopDefault(_folderNew);
var _folderOpen = require("./folder-open");
var _folderOpenDefault = parcelHelpers.interopDefault(_folderOpen);
var _folderShared = require("./folder-shared");
var _folderSharedDefault = parcelHelpers.interopDefault(_folderShared);
var _folderSharedOpen = require("./folder-shared-open");
var _folderSharedOpenDefault = parcelHelpers.interopDefault(_folderSharedOpen);
var _follower = require("./follower");
var _followerDefault = parcelHelpers.interopDefault(_follower);
var _following = require("./following");
var _followingDefault = parcelHelpers.interopDefault(_following);
var _font = require("./font");
var _fontDefault = parcelHelpers.interopDefault(_font);
var _fork = require("./fork");
var _forkDefault = parcelHelpers.interopDefault(_fork);
var _form = require("./form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _fuel = require("./fuel");
var _fuelDefault = parcelHelpers.interopDefault(_fuel);
var _fullCircle = require("./full-circle");
var _fullCircleDefault = parcelHelpers.interopDefault(_fullCircle);
var _fullStackedChart = require("./full-stacked-chart");
var _fullStackedChartDefault = parcelHelpers.interopDefault(_fullStackedChart);
var _fullscreen = require("./fullscreen");
var _fullscreenDefault = parcelHelpers.interopDefault(_fullscreen);
var _function = require("./function");
var _functionDefault = parcelHelpers.interopDefault(_function);
var _ganttChart = require("./gantt-chart");
var _ganttChartDefault = parcelHelpers.interopDefault(_ganttChart);
var _geofence = require("./geofence");
var _geofenceDefault = parcelHelpers.interopDefault(_geofence);
var _geolocation = require("./geolocation");
var _geolocationDefault = parcelHelpers.interopDefault(_geolocation);
var _geosearch = require("./geosearch");
var _geosearchDefault = parcelHelpers.interopDefault(_geosearch);
var _gitBranch = require("./git-branch");
var _gitBranchDefault = parcelHelpers.interopDefault(_gitBranch);
var _gitCommit = require("./git-commit");
var _gitCommitDefault = parcelHelpers.interopDefault(_gitCommit);
var _gitMerge = require("./git-merge");
var _gitMergeDefault = parcelHelpers.interopDefault(_gitMerge);
var _gitNewBranch = require("./git-new-branch");
var _gitNewBranchDefault = parcelHelpers.interopDefault(_gitNewBranch);
var _gitPull = require("./git-pull");
var _gitPullDefault = parcelHelpers.interopDefault(_gitPull);
var _gitPush = require("./git-push");
var _gitPushDefault = parcelHelpers.interopDefault(_gitPush);
var _gitRepo = require("./git-repo");
var _gitRepoDefault = parcelHelpers.interopDefault(_gitRepo);
var _glass = require("./glass");
var _glassDefault = parcelHelpers.interopDefault(_glass);
var _globe = require("./globe");
var _globeDefault = parcelHelpers.interopDefault(_globe);
var _globeNetwork = require("./globe-network");
var _globeNetworkDefault = parcelHelpers.interopDefault(_globeNetwork);
var _graph = require("./graph");
var _graphDefault = parcelHelpers.interopDefault(_graph);
var _graphRemove = require("./graph-remove");
var _graphRemoveDefault = parcelHelpers.interopDefault(_graphRemove);
var _greaterThan = require("./greater-than");
var _greaterThanDefault = parcelHelpers.interopDefault(_greaterThan);
var _greaterThanOrEqualTo = require("./greater-than-or-equal-to");
var _greaterThanOrEqualToDefault = parcelHelpers.interopDefault(_greaterThanOrEqualTo);
var _grid = require("./grid");
var _gridDefault = parcelHelpers.interopDefault(_grid);
var _gridView = require("./grid-view");
var _gridViewDefault = parcelHelpers.interopDefault(_gridView);
var _groupObjects = require("./group-objects");
var _groupObjectsDefault = parcelHelpers.interopDefault(_groupObjects);
var _groupedBarChart = require("./grouped-bar-chart");
var _groupedBarChartDefault = parcelHelpers.interopDefault(_groupedBarChart);
var _hand = require("./hand");
var _handDefault = parcelHelpers.interopDefault(_hand);
var _handDown = require("./hand-down");
var _handDownDefault = parcelHelpers.interopDefault(_handDown);
var _handLeft = require("./hand-left");
var _handLeftDefault = parcelHelpers.interopDefault(_handLeft);
var _handRight = require("./hand-right");
var _handRightDefault = parcelHelpers.interopDefault(_handRight);
var _handUp = require("./hand-up");
var _handUpDefault = parcelHelpers.interopDefault(_handUp);
var _hat = require("./hat");
var _hatDefault = parcelHelpers.interopDefault(_hat);
var _header = require("./header");
var _headerDefault = parcelHelpers.interopDefault(_header);
var _headerOne = require("./header-one");
var _headerOneDefault = parcelHelpers.interopDefault(_headerOne);
var _headerThree = require("./header-three");
var _headerThreeDefault = parcelHelpers.interopDefault(_headerThree);
var _headerTwo = require("./header-two");
var _headerTwoDefault = parcelHelpers.interopDefault(_headerTwo);
var _headset = require("./headset");
var _headsetDefault = parcelHelpers.interopDefault(_headset);
var _heart = require("./heart");
var _heartDefault = parcelHelpers.interopDefault(_heart);
var _heartBroken = require("./heart-broken");
var _heartBrokenDefault = parcelHelpers.interopDefault(_heartBroken);
var _heatGrid = require("./heat-grid");
var _heatGridDefault = parcelHelpers.interopDefault(_heatGrid);
var _heatmap = require("./heatmap");
var _heatmapDefault = parcelHelpers.interopDefault(_heatmap);
var _helicopter = require("./helicopter");
var _helicopterDefault = parcelHelpers.interopDefault(_helicopter);
var _help = require("./help");
var _helpDefault = parcelHelpers.interopDefault(_help);
var _helperManagement = require("./helper-management");
var _helperManagementDefault = parcelHelpers.interopDefault(_helperManagement);
var _highPriority = require("./high-priority");
var _highPriorityDefault = parcelHelpers.interopDefault(_highPriority);
var _highlight = require("./highlight");
var _highlightDefault = parcelHelpers.interopDefault(_highlight);
var _history = require("./history");
var _historyDefault = parcelHelpers.interopDefault(_history);
var _home = require("./home");
var _homeDefault = parcelHelpers.interopDefault(_home);
var _horizontalBarChart = require("./horizontal-bar-chart");
var _horizontalBarChartDefault = parcelHelpers.interopDefault(_horizontalBarChart);
var _horizontalBarChartAsc = require("./horizontal-bar-chart-asc");
var _horizontalBarChartAscDefault = parcelHelpers.interopDefault(_horizontalBarChartAsc);
var _horizontalBarChartDesc = require("./horizontal-bar-chart-desc");
var _horizontalBarChartDescDefault = parcelHelpers.interopDefault(_horizontalBarChartDesc);
var _horizontalDistribution = require("./horizontal-distribution");
var _horizontalDistributionDefault = parcelHelpers.interopDefault(_horizontalDistribution);
var _horizontalInbetween = require("./horizontal-inbetween");
var _horizontalInbetweenDefault = parcelHelpers.interopDefault(_horizontalInbetween);
var _hurricane = require("./hurricane");
var _hurricaneDefault = parcelHelpers.interopDefault(_hurricane);
var _idNumber = require("./id-number");
var _idNumberDefault = parcelHelpers.interopDefault(_idNumber);
var _imageRotateLeft = require("./image-rotate-left");
var _imageRotateLeftDefault = parcelHelpers.interopDefault(_imageRotateLeft);
var _imageRotateRight = require("./image-rotate-right");
var _imageRotateRightDefault = parcelHelpers.interopDefault(_imageRotateRight);
var _import = require("./import");
var _importDefault = parcelHelpers.interopDefault(_import);
var _inbox = require("./inbox");
var _inboxDefault = parcelHelpers.interopDefault(_inbox);
var _inboxFiltered = require("./inbox-filtered");
var _inboxFilteredDefault = parcelHelpers.interopDefault(_inboxFiltered);
var _inboxGeo = require("./inbox-geo");
var _inboxGeoDefault = parcelHelpers.interopDefault(_inboxGeo);
var _inboxSearch = require("./inbox-search");
var _inboxSearchDefault = parcelHelpers.interopDefault(_inboxSearch);
var _inboxUpdate = require("./inbox-update");
var _inboxUpdateDefault = parcelHelpers.interopDefault(_inboxUpdate);
var _infoSign = require("./info-sign");
var _infoSignDefault = parcelHelpers.interopDefault(_infoSign);
var _inheritance = require("./inheritance");
var _inheritanceDefault = parcelHelpers.interopDefault(_inheritance);
var _inheritedGroup = require("./inherited-group");
var _inheritedGroupDefault = parcelHelpers.interopDefault(_inheritedGroup);
var _innerJoin = require("./inner-join");
var _innerJoinDefault = parcelHelpers.interopDefault(_innerJoin);
var _insert = require("./insert");
var _insertDefault = parcelHelpers.interopDefault(_insert);
var _intersection = require("./intersection");
var _intersectionDefault = parcelHelpers.interopDefault(_intersection);
var _ipAddress = require("./ip-address");
var _ipAddressDefault = parcelHelpers.interopDefault(_ipAddress);
var _issue = require("./issue");
var _issueDefault = parcelHelpers.interopDefault(_issue);
var _issueClosed = require("./issue-closed");
var _issueClosedDefault = parcelHelpers.interopDefault(_issueClosed);
var _issueNew = require("./issue-new");
var _issueNewDefault = parcelHelpers.interopDefault(_issueNew);
var _italic = require("./italic");
var _italicDefault = parcelHelpers.interopDefault(_italic);
var _joinTable = require("./join-table");
var _joinTableDefault = parcelHelpers.interopDefault(_joinTable);
var _key = require("./key");
var _keyDefault = parcelHelpers.interopDefault(_key);
var _keyBackspace = require("./key-backspace");
var _keyBackspaceDefault = parcelHelpers.interopDefault(_keyBackspace);
var _keyCommand = require("./key-command");
var _keyCommandDefault = parcelHelpers.interopDefault(_keyCommand);
var _keyControl = require("./key-control");
var _keyControlDefault = parcelHelpers.interopDefault(_keyControl);
var _keyDelete = require("./key-delete");
var _keyDeleteDefault = parcelHelpers.interopDefault(_keyDelete);
var _keyEnter = require("./key-enter");
var _keyEnterDefault = parcelHelpers.interopDefault(_keyEnter);
var _keyEscape = require("./key-escape");
var _keyEscapeDefault = parcelHelpers.interopDefault(_keyEscape);
var _keyOption = require("./key-option");
var _keyOptionDefault = parcelHelpers.interopDefault(_keyOption);
var _keyShift = require("./key-shift");
var _keyShiftDefault = parcelHelpers.interopDefault(_keyShift);
var _keyTab = require("./key-tab");
var _keyTabDefault = parcelHelpers.interopDefault(_keyTab);
var _knownVehicle = require("./known-vehicle");
var _knownVehicleDefault = parcelHelpers.interopDefault(_knownVehicle);
var _labTest = require("./lab-test");
var _labTestDefault = parcelHelpers.interopDefault(_labTest);
var _label = require("./label");
var _labelDefault = parcelHelpers.interopDefault(_label);
var _layer = require("./layer");
var _layerDefault = parcelHelpers.interopDefault(_layer);
var _layerOutline = require("./layer-outline");
var _layerOutlineDefault = parcelHelpers.interopDefault(_layerOutline);
var _layers = require("./layers");
var _layersDefault = parcelHelpers.interopDefault(_layers);
var _layout = require("./layout");
var _layoutDefault = parcelHelpers.interopDefault(_layout);
var _layoutAuto = require("./layout-auto");
var _layoutAutoDefault = parcelHelpers.interopDefault(_layoutAuto);
var _layoutBalloon = require("./layout-balloon");
var _layoutBalloonDefault = parcelHelpers.interopDefault(_layoutBalloon);
var _layoutCircle = require("./layout-circle");
var _layoutCircleDefault = parcelHelpers.interopDefault(_layoutCircle);
var _layoutGrid = require("./layout-grid");
var _layoutGridDefault = parcelHelpers.interopDefault(_layoutGrid);
var _layoutGroupBy = require("./layout-group-by");
var _layoutGroupByDefault = parcelHelpers.interopDefault(_layoutGroupBy);
var _layoutHierarchy = require("./layout-hierarchy");
var _layoutHierarchyDefault = parcelHelpers.interopDefault(_layoutHierarchy);
var _layoutLinear = require("./layout-linear");
var _layoutLinearDefault = parcelHelpers.interopDefault(_layoutLinear);
var _layoutSkewGrid = require("./layout-skew-grid");
var _layoutSkewGridDefault = parcelHelpers.interopDefault(_layoutSkewGrid);
var _layoutSortedClusters = require("./layout-sorted-clusters");
var _layoutSortedClustersDefault = parcelHelpers.interopDefault(_layoutSortedClusters);
var _learning = require("./learning");
var _learningDefault = parcelHelpers.interopDefault(_learning);
var _leftJoin = require("./left-join");
var _leftJoinDefault = parcelHelpers.interopDefault(_leftJoin);
var _lessThan = require("./less-than");
var _lessThanDefault = parcelHelpers.interopDefault(_lessThan);
var _lessThanOrEqualTo = require("./less-than-or-equal-to");
var _lessThanOrEqualToDefault = parcelHelpers.interopDefault(_lessThanOrEqualTo);
var _lifesaver = require("./lifesaver");
var _lifesaverDefault = parcelHelpers.interopDefault(_lifesaver);
var _lightbulb = require("./lightbulb");
var _lightbulbDefault = parcelHelpers.interopDefault(_lightbulb);
var _lightning = require("./lightning");
var _lightningDefault = parcelHelpers.interopDefault(_lightning);
var _link = require("./link");
var _linkDefault = parcelHelpers.interopDefault(_link);
var _list = require("./list");
var _listDefault = parcelHelpers.interopDefault(_list);
var _listColumns = require("./list-columns");
var _listColumnsDefault = parcelHelpers.interopDefault(_listColumns);
var _listDetailView = require("./list-detail-view");
var _listDetailViewDefault = parcelHelpers.interopDefault(_listDetailView);
var _locate = require("./locate");
var _locateDefault = parcelHelpers.interopDefault(_locate);
var _lock = require("./lock");
var _lockDefault = parcelHelpers.interopDefault(_lock);
var _logIn = require("./log-in");
var _logInDefault = parcelHelpers.interopDefault(_logIn);
var _logOut = require("./log-out");
var _logOutDefault = parcelHelpers.interopDefault(_logOut);
var _manual = require("./manual");
var _manualDefault = parcelHelpers.interopDefault(_manual);
var _manuallyEnteredData = require("./manually-entered-data");
var _manuallyEnteredDataDefault = parcelHelpers.interopDefault(_manuallyEnteredData);
var _manyToMany = require("./many-to-many");
var _manyToManyDefault = parcelHelpers.interopDefault(_manyToMany);
var _manyToOne = require("./many-to-one");
var _manyToOneDefault = parcelHelpers.interopDefault(_manyToOne);
var _map = require("./map");
var _mapDefault = parcelHelpers.interopDefault(_map);
var _mapCreate = require("./map-create");
var _mapCreateDefault = parcelHelpers.interopDefault(_mapCreate);
var _mapMarker = require("./map-marker");
var _mapMarkerDefault = parcelHelpers.interopDefault(_mapMarker);
var _maximize = require("./maximize");
var _maximizeDefault = parcelHelpers.interopDefault(_maximize);
var _media = require("./media");
var _mediaDefault = parcelHelpers.interopDefault(_media);
var _menu = require("./menu");
var _menuDefault = parcelHelpers.interopDefault(_menu);
var _menuClosed = require("./menu-closed");
var _menuClosedDefault = parcelHelpers.interopDefault(_menuClosed);
var _menuOpen = require("./menu-open");
var _menuOpenDefault = parcelHelpers.interopDefault(_menuOpen);
var _mergeColumns = require("./merge-columns");
var _mergeColumnsDefault = parcelHelpers.interopDefault(_mergeColumns);
var _mergeLinks = require("./merge-links");
var _mergeLinksDefault = parcelHelpers.interopDefault(_mergeLinks);
var _minimize = require("./minimize");
var _minimizeDefault = parcelHelpers.interopDefault(_minimize);
var _minus = require("./minus");
var _minusDefault = parcelHelpers.interopDefault(_minus);
var _mobilePhone = require("./mobile-phone");
var _mobilePhoneDefault = parcelHelpers.interopDefault(_mobilePhone);
var _mobileVideo = require("./mobile-video");
var _mobileVideoDefault = parcelHelpers.interopDefault(_mobileVideo);
var _modal = require("./modal");
var _modalDefault = parcelHelpers.interopDefault(_modal);
var _modalFilled = require("./modal-filled");
var _modalFilledDefault = parcelHelpers.interopDefault(_modalFilled);
var _moon = require("./moon");
var _moonDefault = parcelHelpers.interopDefault(_moon);
var _more = require("./more");
var _moreDefault = parcelHelpers.interopDefault(_more);
var _mountain = require("./mountain");
var _mountainDefault = parcelHelpers.interopDefault(_mountain);
var _move = require("./move");
var _moveDefault = parcelHelpers.interopDefault(_move);
var _mugshot = require("./mugshot");
var _mugshotDefault = parcelHelpers.interopDefault(_mugshot);
var _multiSelect = require("./multi-select");
var _multiSelectDefault = parcelHelpers.interopDefault(_multiSelect);
var _music = require("./music");
var _musicDefault = parcelHelpers.interopDefault(_music);
var _nest = require("./nest");
var _nestDefault = parcelHelpers.interopDefault(_nest);
var _newDrawing = require("./new-drawing");
var _newDrawingDefault = parcelHelpers.interopDefault(_newDrawing);
var _newGridItem = require("./new-grid-item");
var _newGridItemDefault = parcelHelpers.interopDefault(_newGridItem);
var _newLayer = require("./new-layer");
var _newLayerDefault = parcelHelpers.interopDefault(_newLayer);
var _newLayers = require("./new-layers");
var _newLayersDefault = parcelHelpers.interopDefault(_newLayers);
var _newLink = require("./new-link");
var _newLinkDefault = parcelHelpers.interopDefault(_newLink);
var _newObject = require("./new-object");
var _newObjectDefault = parcelHelpers.interopDefault(_newObject);
var _newPerson = require("./new-person");
var _newPersonDefault = parcelHelpers.interopDefault(_newPerson);
var _newPrescription = require("./new-prescription");
var _newPrescriptionDefault = parcelHelpers.interopDefault(_newPrescription);
var _newTextBox = require("./new-text-box");
var _newTextBoxDefault = parcelHelpers.interopDefault(_newTextBox);
var _ninja = require("./ninja");
var _ninjaDefault = parcelHelpers.interopDefault(_ninja);
var _notEqualTo = require("./not-equal-to");
var _notEqualToDefault = parcelHelpers.interopDefault(_notEqualTo);
var _notifications = require("./notifications");
var _notificationsDefault = parcelHelpers.interopDefault(_notifications);
var _notificationsSnooze = require("./notifications-snooze");
var _notificationsSnoozeDefault = parcelHelpers.interopDefault(_notificationsSnooze);
var _notificationsUpdated = require("./notifications-updated");
var _notificationsUpdatedDefault = parcelHelpers.interopDefault(_notificationsUpdated);
var _numberedList = require("./numbered-list");
var _numberedListDefault = parcelHelpers.interopDefault(_numberedList);
var _numerical = require("./numerical");
var _numericalDefault = parcelHelpers.interopDefault(_numerical);
var _office = require("./office");
var _officeDefault = parcelHelpers.interopDefault(_office);
var _offline = require("./offline");
var _offlineDefault = parcelHelpers.interopDefault(_offline);
var _oilField = require("./oil-field");
var _oilFieldDefault = parcelHelpers.interopDefault(_oilField);
var _oneColumn = require("./one-column");
var _oneColumnDefault = parcelHelpers.interopDefault(_oneColumn);
var _oneToMany = require("./one-to-many");
var _oneToManyDefault = parcelHelpers.interopDefault(_oneToMany);
var _oneToOne = require("./one-to-one");
var _oneToOneDefault = parcelHelpers.interopDefault(_oneToOne);
var _openApplication = require("./open-application");
var _openApplicationDefault = parcelHelpers.interopDefault(_openApplication);
var _outdated = require("./outdated");
var _outdatedDefault = parcelHelpers.interopDefault(_outdated);
var _pageLayout = require("./page-layout");
var _pageLayoutDefault = parcelHelpers.interopDefault(_pageLayout);
var _panelStats = require("./panel-stats");
var _panelStatsDefault = parcelHelpers.interopDefault(_panelStats);
var _panelTable = require("./panel-table");
var _panelTableDefault = parcelHelpers.interopDefault(_panelTable);
var _paperclip = require("./paperclip");
var _paperclipDefault = parcelHelpers.interopDefault(_paperclip);
var _paragraph = require("./paragraph");
var _paragraphDefault = parcelHelpers.interopDefault(_paragraph);
var _path = require("./path");
var _pathDefault = parcelHelpers.interopDefault(_path);
var _pathSearch = require("./path-search");
var _pathSearchDefault = parcelHelpers.interopDefault(_pathSearch);
var _pause = require("./pause");
var _pauseDefault = parcelHelpers.interopDefault(_pause);
var _people = require("./people");
var _peopleDefault = parcelHelpers.interopDefault(_people);
var _percentage = require("./percentage");
var _percentageDefault = parcelHelpers.interopDefault(_percentage);
var _person = require("./person");
var _personDefault = parcelHelpers.interopDefault(_person);
var _phone = require("./phone");
var _phoneDefault = parcelHelpers.interopDefault(_phone);
var _pieChart = require("./pie-chart");
var _pieChartDefault = parcelHelpers.interopDefault(_pieChart);
var _pin = require("./pin");
var _pinDefault = parcelHelpers.interopDefault(_pin);
var _pivot = require("./pivot");
var _pivotDefault = parcelHelpers.interopDefault(_pivot);
var _pivotTable = require("./pivot-table");
var _pivotTableDefault = parcelHelpers.interopDefault(_pivotTable);
var _play = require("./play");
var _playDefault = parcelHelpers.interopDefault(_play);
var _playbook = require("./playbook");
var _playbookDefault = parcelHelpers.interopDefault(_playbook);
var _plus = require("./plus");
var _plusDefault = parcelHelpers.interopDefault(_plus);
var _polygonFilter = require("./polygon-filter");
var _polygonFilterDefault = parcelHelpers.interopDefault(_polygonFilter);
var _power = require("./power");
var _powerDefault = parcelHelpers.interopDefault(_power);
var _predictiveAnalysis = require("./predictive-analysis");
var _predictiveAnalysisDefault = parcelHelpers.interopDefault(_predictiveAnalysis);
var _prescription = require("./prescription");
var _prescriptionDefault = parcelHelpers.interopDefault(_prescription);
var _presentation = require("./presentation");
var _presentationDefault = parcelHelpers.interopDefault(_presentation);
var _print = require("./print");
var _printDefault = parcelHelpers.interopDefault(_print);
var _projects = require("./projects");
var _projectsDefault = parcelHelpers.interopDefault(_projects);
var _properties = require("./properties");
var _propertiesDefault = parcelHelpers.interopDefault(_properties);
var _property = require("./property");
var _propertyDefault = parcelHelpers.interopDefault(_property);
var _publishFunction = require("./publish-function");
var _publishFunctionDefault = parcelHelpers.interopDefault(_publishFunction);
var _pulse = require("./pulse");
var _pulseDefault = parcelHelpers.interopDefault(_pulse);
var _rain = require("./rain");
var _rainDefault = parcelHelpers.interopDefault(_rain);
var _random = require("./random");
var _randomDefault = parcelHelpers.interopDefault(_random);
var _record = require("./record");
var _recordDefault = parcelHelpers.interopDefault(_record);
var _rectHeight = require("./rect-height");
var _rectHeightDefault = parcelHelpers.interopDefault(_rectHeight);
var _rectWidth = require("./rect-width");
var _rectWidthDefault = parcelHelpers.interopDefault(_rectWidth);
var _rectangle = require("./rectangle");
var _rectangleDefault = parcelHelpers.interopDefault(_rectangle);
var _redo = require("./redo");
var _redoDefault = parcelHelpers.interopDefault(_redo);
var _refresh = require("./refresh");
var _refreshDefault = parcelHelpers.interopDefault(_refresh);
var _regressionChart = require("./regression-chart");
var _regressionChartDefault = parcelHelpers.interopDefault(_regressionChart);
var _remove = require("./remove");
var _removeDefault = parcelHelpers.interopDefault(_remove);
var _removeColumn = require("./remove-column");
var _removeColumnDefault = parcelHelpers.interopDefault(_removeColumn);
var _removeColumnLeft = require("./remove-column-left");
var _removeColumnLeftDefault = parcelHelpers.interopDefault(_removeColumnLeft);
var _removeColumnRight = require("./remove-column-right");
var _removeColumnRightDefault = parcelHelpers.interopDefault(_removeColumnRight);
var _removeRowBottom = require("./remove-row-bottom");
var _removeRowBottomDefault = parcelHelpers.interopDefault(_removeRowBottom);
var _removeRowTop = require("./remove-row-top");
var _removeRowTopDefault = parcelHelpers.interopDefault(_removeRowTop);
var _repeat = require("./repeat");
var _repeatDefault = parcelHelpers.interopDefault(_repeat);
var _reset = require("./reset");
var _resetDefault = parcelHelpers.interopDefault(_reset);
var _resolve = require("./resolve");
var _resolveDefault = parcelHelpers.interopDefault(_resolve);
var _rig = require("./rig");
var _rigDefault = parcelHelpers.interopDefault(_rig);
var _rightJoin = require("./right-join");
var _rightJoinDefault = parcelHelpers.interopDefault(_rightJoin);
var _ring = require("./ring");
var _ringDefault = parcelHelpers.interopDefault(_ring);
var _rocket = require("./rocket");
var _rocketDefault = parcelHelpers.interopDefault(_rocket);
var _rocketSlant = require("./rocket-slant");
var _rocketSlantDefault = parcelHelpers.interopDefault(_rocketSlant);
var _rotateDocument = require("./rotate-document");
var _rotateDocumentDefault = parcelHelpers.interopDefault(_rotateDocument);
var _rotatePage = require("./rotate-page");
var _rotatePageDefault = parcelHelpers.interopDefault(_rotatePage);
var _route = require("./route");
var _routeDefault = parcelHelpers.interopDefault(_route);
var _satellite = require("./satellite");
var _satelliteDefault = parcelHelpers.interopDefault(_satellite);
var _saved = require("./saved");
var _savedDefault = parcelHelpers.interopDefault(_saved);
var _scatterPlot = require("./scatter-plot");
var _scatterPlotDefault = parcelHelpers.interopDefault(_scatterPlot);
var _search = require("./search");
var _searchDefault = parcelHelpers.interopDefault(_search);
var _searchAround = require("./search-around");
var _searchAroundDefault = parcelHelpers.interopDefault(_searchAround);
var _searchTemplate = require("./search-template");
var _searchTemplateDefault = parcelHelpers.interopDefault(_searchTemplate);
var _searchText = require("./search-text");
var _searchTextDefault = parcelHelpers.interopDefault(_searchText);
var _segmentedControl = require("./segmented-control");
var _segmentedControlDefault = parcelHelpers.interopDefault(_segmentedControl);
var _select = require("./select");
var _selectDefault = parcelHelpers.interopDefault(_select);
var _selection = require("./selection");
var _selectionDefault = parcelHelpers.interopDefault(_selection);
var _sendMessage = require("./send-message");
var _sendMessageDefault = parcelHelpers.interopDefault(_sendMessage);
var _sendTo = require("./send-to");
var _sendToDefault = parcelHelpers.interopDefault(_sendTo);
var _sendToGraph = require("./send-to-graph");
var _sendToGraphDefault = parcelHelpers.interopDefault(_sendToGraph);
var _sendToMap = require("./send-to-map");
var _sendToMapDefault = parcelHelpers.interopDefault(_sendToMap);
var _seriesAdd = require("./series-add");
var _seriesAddDefault = parcelHelpers.interopDefault(_seriesAdd);
var _seriesConfiguration = require("./series-configuration");
var _seriesConfigurationDefault = parcelHelpers.interopDefault(_seriesConfiguration);
var _seriesDerived = require("./series-derived");
var _seriesDerivedDefault = parcelHelpers.interopDefault(_seriesDerived);
var _seriesFiltered = require("./series-filtered");
var _seriesFilteredDefault = parcelHelpers.interopDefault(_seriesFiltered);
var _seriesSearch = require("./series-search");
var _seriesSearchDefault = parcelHelpers.interopDefault(_seriesSearch);
var _settings = require("./settings");
var _settingsDefault = parcelHelpers.interopDefault(_settings);
var _shapes = require("./shapes");
var _shapesDefault = parcelHelpers.interopDefault(_shapes);
var _share = require("./share");
var _shareDefault = parcelHelpers.interopDefault(_share);
var _sharedFilter = require("./shared-filter");
var _sharedFilterDefault = parcelHelpers.interopDefault(_sharedFilter);
var _shield = require("./shield");
var _shieldDefault = parcelHelpers.interopDefault(_shield);
var _ship = require("./ship");
var _shipDefault = parcelHelpers.interopDefault(_ship);
var _shop = require("./shop");
var _shopDefault = parcelHelpers.interopDefault(_shop);
var _shoppingCart = require("./shopping-cart");
var _shoppingCartDefault = parcelHelpers.interopDefault(_shoppingCart);
var _signalSearch = require("./signal-search");
var _signalSearchDefault = parcelHelpers.interopDefault(_signalSearch);
var _simCard = require("./sim-card");
var _simCardDefault = parcelHelpers.interopDefault(_simCard);
var _slash = require("./slash");
var _slashDefault = parcelHelpers.interopDefault(_slash);
var _smallCross = require("./small-cross");
var _smallCrossDefault = parcelHelpers.interopDefault(_smallCross);
var _smallMinus = require("./small-minus");
var _smallMinusDefault = parcelHelpers.interopDefault(_smallMinus);
var _smallPlus = require("./small-plus");
var _smallPlusDefault = parcelHelpers.interopDefault(_smallPlus);
var _smallSquare = require("./small-square");
var _smallSquareDefault = parcelHelpers.interopDefault(_smallSquare);
var _smallTick = require("./small-tick");
var _smallTickDefault = parcelHelpers.interopDefault(_smallTick);
var _snowflake = require("./snowflake");
var _snowflakeDefault = parcelHelpers.interopDefault(_snowflake);
var _socialMedia = require("./social-media");
var _socialMediaDefault = parcelHelpers.interopDefault(_socialMedia);
var _sort = require("./sort");
var _sortDefault = parcelHelpers.interopDefault(_sort);
var _sortAlphabetical = require("./sort-alphabetical");
var _sortAlphabeticalDefault = parcelHelpers.interopDefault(_sortAlphabetical);
var _sortAlphabeticalDesc = require("./sort-alphabetical-desc");
var _sortAlphabeticalDescDefault = parcelHelpers.interopDefault(_sortAlphabeticalDesc);
var _sortAsc = require("./sort-asc");
var _sortAscDefault = parcelHelpers.interopDefault(_sortAsc);
var _sortDesc = require("./sort-desc");
var _sortDescDefault = parcelHelpers.interopDefault(_sortDesc);
var _sortNumerical = require("./sort-numerical");
var _sortNumericalDefault = parcelHelpers.interopDefault(_sortNumerical);
var _sortNumericalDesc = require("./sort-numerical-desc");
var _sortNumericalDescDefault = parcelHelpers.interopDefault(_sortNumericalDesc);
var _splitColumns = require("./split-columns");
var _splitColumnsDefault = parcelHelpers.interopDefault(_splitColumns);
var _square = require("./square");
var _squareDefault = parcelHelpers.interopDefault(_square);
var _stackedChart = require("./stacked-chart");
var _stackedChartDefault = parcelHelpers.interopDefault(_stackedChart);
var _stadiumGeometry = require("./stadium-geometry");
var _stadiumGeometryDefault = parcelHelpers.interopDefault(_stadiumGeometry);
var _star = require("./star");
var _starDefault = parcelHelpers.interopDefault(_star);
var _starEmpty = require("./star-empty");
var _starEmptyDefault = parcelHelpers.interopDefault(_starEmpty);
var _stepBackward = require("./step-backward");
var _stepBackwardDefault = parcelHelpers.interopDefault(_stepBackward);
var _stepChart = require("./step-chart");
var _stepChartDefault = parcelHelpers.interopDefault(_stepChart);
var _stepForward = require("./step-forward");
var _stepForwardDefault = parcelHelpers.interopDefault(_stepForward);
var _stop = require("./stop");
var _stopDefault = parcelHelpers.interopDefault(_stop);
var _stopwatch = require("./stopwatch");
var _stopwatchDefault = parcelHelpers.interopDefault(_stopwatch);
var _strikethrough = require("./strikethrough");
var _strikethroughDefault = parcelHelpers.interopDefault(_strikethrough);
var _style = require("./style");
var _styleDefault = parcelHelpers.interopDefault(_style);
var _swapHorizontal = require("./swap-horizontal");
var _swapHorizontalDefault = parcelHelpers.interopDefault(_swapHorizontal);
var _swapVertical = require("./swap-vertical");
var _swapVerticalDefault = parcelHelpers.interopDefault(_swapVertical);
var _switch = require("./switch");
var _switchDefault = parcelHelpers.interopDefault(_switch);
var _symbolCircle = require("./symbol-circle");
var _symbolCircleDefault = parcelHelpers.interopDefault(_symbolCircle);
var _symbolCross = require("./symbol-cross");
var _symbolCrossDefault = parcelHelpers.interopDefault(_symbolCross);
var _symbolDiamond = require("./symbol-diamond");
var _symbolDiamondDefault = parcelHelpers.interopDefault(_symbolDiamond);
var _symbolRectangle = require("./symbol-rectangle");
var _symbolRectangleDefault = parcelHelpers.interopDefault(_symbolRectangle);
var _symbolSquare = require("./symbol-square");
var _symbolSquareDefault = parcelHelpers.interopDefault(_symbolSquare);
var _symbolTriangleDown = require("./symbol-triangle-down");
var _symbolTriangleDownDefault = parcelHelpers.interopDefault(_symbolTriangleDown);
var _symbolTriangleUp = require("./symbol-triangle-up");
var _symbolTriangleUpDefault = parcelHelpers.interopDefault(_symbolTriangleUp);
var _syringe = require("./syringe");
var _syringeDefault = parcelHelpers.interopDefault(_syringe);
var _tag = require("./tag");
var _tagDefault = parcelHelpers.interopDefault(_tag);
var _takeAction = require("./take-action");
var _takeActionDefault = parcelHelpers.interopDefault(_takeAction);
var _tank = require("./tank");
var _tankDefault = parcelHelpers.interopDefault(_tank);
var _target = require("./target");
var _targetDefault = parcelHelpers.interopDefault(_target);
var _taxi = require("./taxi");
var _taxiDefault = parcelHelpers.interopDefault(_taxi);
var _temperature = require("./temperature");
var _temperatureDefault = parcelHelpers.interopDefault(_temperature);
var _textHighlight = require("./text-highlight");
var _textHighlightDefault = parcelHelpers.interopDefault(_textHighlight);
var _th = require("./th");
var _thDefault = parcelHelpers.interopDefault(_th);
var _thDerived = require("./th-derived");
var _thDerivedDefault = parcelHelpers.interopDefault(_thDerived);
var _thDisconnect = require("./th-disconnect");
var _thDisconnectDefault = parcelHelpers.interopDefault(_thDisconnect);
var _thFiltered = require("./th-filtered");
var _thFilteredDefault = parcelHelpers.interopDefault(_thFiltered);
var _thList = require("./th-list");
var _thListDefault = parcelHelpers.interopDefault(_thList);
var _thirdParty = require("./third-party");
var _thirdPartyDefault = parcelHelpers.interopDefault(_thirdParty);
var _thumbsDown = require("./thumbs-down");
var _thumbsDownDefault = parcelHelpers.interopDefault(_thumbsDown);
var _thumbsUp = require("./thumbs-up");
var _thumbsUpDefault = parcelHelpers.interopDefault(_thumbsUp);
var _tick = require("./tick");
var _tickDefault = parcelHelpers.interopDefault(_tick);
var _tickCircle = require("./tick-circle");
var _tickCircleDefault = parcelHelpers.interopDefault(_tickCircle);
var _time = require("./time");
var _timeDefault = parcelHelpers.interopDefault(_time);
var _timelineAreaChart = require("./timeline-area-chart");
var _timelineAreaChartDefault = parcelHelpers.interopDefault(_timelineAreaChart);
var _timelineBarChart = require("./timeline-bar-chart");
var _timelineBarChartDefault = parcelHelpers.interopDefault(_timelineBarChart);
var _timelineEvents = require("./timeline-events");
var _timelineEventsDefault = parcelHelpers.interopDefault(_timelineEvents);
var _timelineLineChart = require("./timeline-line-chart");
var _timelineLineChartDefault = parcelHelpers.interopDefault(_timelineLineChart);
var _tint = require("./tint");
var _tintDefault = parcelHelpers.interopDefault(_tint);
var _torch = require("./torch");
var _torchDefault = parcelHelpers.interopDefault(_torch);
var _tractor = require("./tractor");
var _tractorDefault = parcelHelpers.interopDefault(_tractor);
var _train = require("./train");
var _trainDefault = parcelHelpers.interopDefault(_train);
var _translate = require("./translate");
var _translateDefault = parcelHelpers.interopDefault(_translate);
var _trash = require("./trash");
var _trashDefault = parcelHelpers.interopDefault(_trash);
var _tree = require("./tree");
var _treeDefault = parcelHelpers.interopDefault(_tree);
var _trendingDown = require("./trending-down");
var _trendingDownDefault = parcelHelpers.interopDefault(_trendingDown);
var _trendingUp = require("./trending-up");
var _trendingUpDefault = parcelHelpers.interopDefault(_trendingUp);
var _truck = require("./truck");
var _truckDefault = parcelHelpers.interopDefault(_truck);
var _twoColumns = require("./two-columns");
var _twoColumnsDefault = parcelHelpers.interopDefault(_twoColumns);
var _unarchive = require("./unarchive");
var _unarchiveDefault = parcelHelpers.interopDefault(_unarchive);
var _underline = require("./underline");
var _underlineDefault = parcelHelpers.interopDefault(_underline);
var _undo = require("./undo");
var _undoDefault = parcelHelpers.interopDefault(_undo);
var _ungroupObjects = require("./ungroup-objects");
var _ungroupObjectsDefault = parcelHelpers.interopDefault(_ungroupObjects);
var _unknownVehicle = require("./unknown-vehicle");
var _unknownVehicleDefault = parcelHelpers.interopDefault(_unknownVehicle);
var _unlock = require("./unlock");
var _unlockDefault = parcelHelpers.interopDefault(_unlock);
var _unpin = require("./unpin");
var _unpinDefault = parcelHelpers.interopDefault(_unpin);
var _unresolve = require("./unresolve");
var _unresolveDefault = parcelHelpers.interopDefault(_unresolve);
var _updated = require("./updated");
var _updatedDefault = parcelHelpers.interopDefault(_updated);
var _upload = require("./upload");
var _uploadDefault = parcelHelpers.interopDefault(_upload);
var _user = require("./user");
var _userDefault = parcelHelpers.interopDefault(_user);
var _variable = require("./variable");
var _variableDefault = parcelHelpers.interopDefault(_variable);
var _verticalBarChartAsc = require("./vertical-bar-chart-asc");
var _verticalBarChartAscDefault = parcelHelpers.interopDefault(_verticalBarChartAsc);
var _verticalBarChartDesc = require("./vertical-bar-chart-desc");
var _verticalBarChartDescDefault = parcelHelpers.interopDefault(_verticalBarChartDesc);
var _verticalDistribution = require("./vertical-distribution");
var _verticalDistributionDefault = parcelHelpers.interopDefault(_verticalDistribution);
var _verticalInbetween = require("./vertical-inbetween");
var _verticalInbetweenDefault = parcelHelpers.interopDefault(_verticalInbetween);
var _video = require("./video");
var _videoDefault = parcelHelpers.interopDefault(_video);
var _virus = require("./virus");
var _virusDefault = parcelHelpers.interopDefault(_virus);
var _volumeDown = require("./volume-down");
var _volumeDownDefault = parcelHelpers.interopDefault(_volumeDown);
var _volumeOff = require("./volume-off");
var _volumeOffDefault = parcelHelpers.interopDefault(_volumeOff);
var _volumeUp = require("./volume-up");
var _volumeUpDefault = parcelHelpers.interopDefault(_volumeUp);
var _walk = require("./walk");
var _walkDefault = parcelHelpers.interopDefault(_walk);
var _warningSign = require("./warning-sign");
var _warningSignDefault = parcelHelpers.interopDefault(_warningSign);
var _waterfallChart = require("./waterfall-chart");
var _waterfallChartDefault = parcelHelpers.interopDefault(_waterfallChart);
var _waves = require("./waves");
var _wavesDefault = parcelHelpers.interopDefault(_waves);
var _widget = require("./widget");
var _widgetDefault = parcelHelpers.interopDefault(_widget);
var _widgetButton = require("./widget-button");
var _widgetButtonDefault = parcelHelpers.interopDefault(_widgetButton);
var _widgetFooter = require("./widget-footer");
var _widgetFooterDefault = parcelHelpers.interopDefault(_widgetFooter);
var _widgetHeader = require("./widget-header");
var _widgetHeaderDefault = parcelHelpers.interopDefault(_widgetHeader);
var _wind = require("./wind");
var _windDefault = parcelHelpers.interopDefault(_wind);
var _wrench = require("./wrench");
var _wrenchDefault = parcelHelpers.interopDefault(_wrench);
var _zoomIn = require("./zoom-in");
var _zoomInDefault = parcelHelpers.interopDefault(_zoomIn);
var _zoomOut = require("./zoom-out");
var _zoomOutDefault = parcelHelpers.interopDefault(_zoomOut);
var _zoomToFit = require("./zoom-to-fit");
var _zoomToFitDefault = parcelHelpers.interopDefault(_zoomToFit);

},{"./add":"3puHx","./add-clip":"b3DZy","./add-column-left":"desDm","./add-column-right":"6lfxt","./add-location":"kKNm8","./add-row-bottom":"2SduU","./add-row-top":"h0uJ2","./add-to-artifact":"9DfHc","./add-to-folder":"jBte4","./airplane":"aYydO","./align-center":"lGAkf","./align-justify":"l8eu9","./align-left":"226KZ","./align-right":"81ruh","./alignment-bottom":"i97td","./alignment-horizontal-center":"eVzHX","./alignment-left":"eiOpy","./alignment-right":"bBGVm","./alignment-top":"3aahH","./alignment-vertical-center":"7jHH1","./annotation":"6pevK","./antenna":"8JAFC","./app-header":"dAk9t","./application":"dCVOv","./applications":"c6nqC","./archive":"fjrr2","./area-of-interest":"8CJUG","./array":"32pGV","./array-boolean":"l8Ic4","./array-date":"Y7p1B","./array-numeric":"cudWr","./array-string":"jsWX5","./array-timestamp":"fgIuv","./arrow-bottom-left":"1FoCO","./arrow-bottom-right":"fI49f","./arrow-down":"fI976","./arrow-left":"hL76M","./arrow-right":"dUVto","./arrow-top-left":"2mCsU","./arrow-top-right":"ifdMv","./arrow-up":"fcUGy","./arrows-horizontal":"foPAy","./arrows-vertical":"i65e3","./asterisk":"lYE7o","./automatic-updates":"gUj5s","./backlink":"jmx3h","./badge":"998Kb","./ban-circle":"9WofN","./bank-account":"bWPMC","./barcode":"lSXwP","./blank":"eO89O","./blocked-person":"7JbFC","./bold":"9DiVe","./book":"c4k8G","./bookmark":"ezZwT","./box":"80JU5","./briefcase":"625W5","./bring-data":"eNhxL","./buggy":"6eqvD","./build":"3grG8","./calculator":"g0QX0","./calendar":"e9TJT","./camera":"8umqE","./caret-down":"emgn9","./caret-left":"4p5Ne","./caret-right":"a1msa","./caret-up":"YX1DG","./cargo-ship":"e8zL0","./cell-tower":"9lBIY","./changes":"4wEHn","./chart":"dyrBF","./chat":"6INBd","./chevron-backward":"bJLam","./chevron-down":"30qhh","./chevron-forward":"jpHbY","./chevron-left":"i5P63","./chevron-right":"bhx4M","./chevron-up":"jwE8A","./circle":"1B53F","./circle-arrow-down":"aOPWY","./circle-arrow-left":"b0rRU","./circle-arrow-right":"9jvHX","./circle-arrow-up":"gbqT8","./citation":"9NFIW","./clean":"2wzLC","./clip":"7fFHc","./clipboard":"2e8Fk","./cloud":"9KuM9","./cloud-download":"kqNTh","./cloud-upload":"29LrB","./code":"3jJap","./code-block":"hcIFB","./cog":"asnd2","./collapse-all":"gVcm1","./color-fill":"8Z4w4","./column-layout":"gBM7F","./comment":"cx0A2","./comparison":"6jJJ3","./compass":"EjWkq","./compressed":"f9SDw","./confirm":"2tyBR","./console":"fgIL7","./contrast":"7TQ0G","./control":"5gYaO","./credit-card":"cCtHY","./cross":"fkC2G","./crown":"2Yiqx","./cube":"gmXWq","./cube-add":"7Lxxa","./cube-remove":"dXulR","./curved-range-chart":"jMfKO","./cut":"khvoi","./cycle":"30yXG","./dashboard":"7ybAz","./data-connection":"5YCEe","./data-lineage":"8YREp","./database":"gNsYq","./delete":"dCK9g","./delta":"4ZARI","./derive-column":"khIGS","./desktop":"cmQxz","./diagnosis":"auFr6","./diagram-tree":"5pyUo","./direction-left":"h6kOK","./direction-right":"gboZ9","./disable":"f0YpU","./divide":"7z9ie","./document":"i7eBh","./document-open":"5fyQ0","./document-share":"hvD7Q","./dollar":"4nBCq","./dot":"28RL1","./double-caret-horizontal":"40C23","./double-caret-vertical":"4UzCU","./double-chevron-down":"ctmzZ","./double-chevron-left":"3hgSU","./double-chevron-right":"dX5xd","./double-chevron-up":"8lifw","./doughnut-chart":"gNgtk","./download":"cwTOG","./drag-handle-horizontal":"b8tTm","./drag-handle-vertical":"bvqAz","./draw":"1cngp","./drawer-left":"4NVbR","./drawer-left-filled":"3N2mI","./drawer-right":"alchB","./drawer-right-filled":"8i4oI","./drive-time":"1051P","./duplicate":"lU7Jh","./edit":"iYdJl","./eject":"40ObJ","./emoji":"3cML7","./endorsed":"fRiJC","./envelope":"9adJZ","./equals":"epRnS","./eraser":"03eMJ","./error":"j4Pio","./euro":"1pUiD","./exchange":"4cogC","./exclude-row":"qH06D","./expand-all":"dmXf3","./export":"5pNQ9","./eye-off":"7D3zf","./eye-on":"3LLt5","./eye-open":"jAUsw","./fast-backward":"eiO4u","./fast-forward":"Bt8ve","./feed":"c3rBp","./feed-subscribed":"g95WL","./film":"6tMEa","./filter":"l8Mio","./filter-keep":"iSpqP","./filter-list":"12vQy","./filter-open":"2itma","./filter-remove":"iY5HN","./flag":"icT20","./flame":"6uuYE","./flash":"1b6Jc","./floppy-disk":"lpVPF","./flow-branch":"hyt6l","./flow-end":"10b10","./flow-linear":"9Z773","./flow-review":"9DRuX","./flow-review-branch":"3UQ0k","./flows":"ezb6z","./folder-close":"63bKH","./folder-new":"4frQy","./folder-open":"hA568","./folder-shared":"c1zhC","./folder-shared-open":"21KMm","./follower":"hKgoB","./following":"hJsMm","./font":"aIziy","./fork":"93nJA","./form":"23501","./fuel":"agEKB","./full-circle":"cCKST","./full-stacked-chart":"enzcB","./fullscreen":"4p51P","./function":"2Gmtq","./gantt-chart":"5JXv4","./geofence":"aEdhz","./geolocation":"3MBcV","./geosearch":"7vb6X","./git-branch":"4Sj6x","./git-commit":"exp7t","./git-merge":"hcZrb","./git-new-branch":"cJbid","./git-pull":"kliRW","./git-push":"4MO6D","./git-repo":"6kRo2","./glass":"6UqA1","./globe":"ajbiZ","./globe-network":"agmej","./graph":"hEjZV","./graph-remove":"arsv2","./greater-than":"ceB4E","./greater-than-or-equal-to":"38r6A","./grid":"fWNp3","./grid-view":"iZdXL","./group-objects":"J5wF3","./grouped-bar-chart":"eYMXj","./hand":"6ezgn","./hand-down":"h2MWg","./hand-left":"8vTGX","./hand-right":"jZGGA","./hand-up":"8TRc0","./hat":"kCK5p","./header":"6ESce","./header-one":"im5L9","./header-three":"5gvXh","./header-two":"l8Y5e","./headset":"1Bfg7","./heart":"lvddc","./heart-broken":"drFsM","./heat-grid":"hj0tp","./heatmap":"oxgUK","./helicopter":"gjPBP","./help":"g7srM","./helper-management":"8dWrF","./high-priority":"d2gGE","./highlight":"fwTA7","./history":"fhqll","./home":"a79nI","./horizontal-bar-chart":"gfRuD","./horizontal-bar-chart-asc":"2DhIW","./horizontal-bar-chart-desc":"d5cbD","./horizontal-distribution":"dc9xq","./horizontal-inbetween":"3C3tW","./hurricane":"2KCDs","./id-number":"8ozlw","./image-rotate-left":"k9txA","./image-rotate-right":"bcQ0r","./import":"eKAzI","./inbox":"4MNoB","./inbox-filtered":"4pu8r","./inbox-geo":"jclxW","./inbox-search":"kVSL0","./inbox-update":"gyYNn","./info-sign":"cLVzt","./inheritance":"3Iy45","./inherited-group":"qaqMl","./inner-join":"jwSdc","./insert":"fHTFN","./intersection":"2xoo9","./ip-address":"kiC9r","./issue":"19GEA","./issue-closed":"g5CCW","./issue-new":"kSSha","./italic":"ds8kd","./join-table":"gJxnu","./key":"OPMd6","./key-backspace":"5hKui","./key-command":"2j9uA","./key-control":"8Wzb5","./key-delete":"j7500","./key-enter":"eodfQ","./key-escape":"3id53","./key-option":"bblGq","./key-shift":"4jd1l","./key-tab":"bCbi2","./known-vehicle":"g7fPt","./lab-test":"6h0PJ","./label":"1EmaT","./layer":"c4iBQ","./layer-outline":"88j5i","./layers":"8lv7G","./layout":"4uM19","./layout-auto":"aKC7j","./layout-balloon":"7Mm07","./layout-circle":"162TF","./layout-grid":"49RUJ","./layout-group-by":"amC6f","./layout-hierarchy":"jF5Aw","./layout-linear":"bsT7x","./layout-skew-grid":"hlpzW","./layout-sorted-clusters":"jhL74","./learning":"aatbD","./left-join":"eY6UC","./less-than":"givic","./less-than-or-equal-to":"dRN3z","./lifesaver":"3G8TT","./lightbulb":"ch75z","./lightning":"fsaFM","./link":"1fPsq","./list":"ixVCl","./list-columns":"h2jrJ","./list-detail-view":"9YPFp","./locate":"b34XP","./lock":"fUB9L","./log-in":"51n4u","./log-out":"eSh3l","./manual":"6LfPZ","./manually-entered-data":"j3F2Y","./many-to-many":"1WgE4","./many-to-one":"i7iS4","./map":"1pFil","./map-create":"1yJIU","./map-marker":"bbdNo","./maximize":"6IsZT","./media":"LCB2j","./menu":"dMvEa","./menu-closed":"fuNWO","./menu-open":"k9XSU","./merge-columns":"dJ5Md","./merge-links":"iYYTq","./minimize":"aqHf1","./minus":"80awO","./mobile-phone":"8GOYa","./mobile-video":"2nOcN","./modal":"gREM7","./modal-filled":"iR39B","./moon":"hgR8r","./more":"5ZlLZ","./mountain":"gknWC","./move":"gXc0n","./mugshot":"8N46d","./multi-select":"6sGlL","./music":"dZuxk","./nest":"bV8au","./new-drawing":"cE5Nf","./new-grid-item":"f1aeM","./new-layer":"fhFDr","./new-layers":"9LyJP","./new-link":"fmTad","./new-object":"5n6Ho","./new-person":"4TgrP","./new-prescription":"gAh76","./new-text-box":"kj9SW","./ninja":"bmH0z","./not-equal-to":"2d7bZ","./notifications":"iagZO","./notifications-snooze":"8ZGJi","./notifications-updated":"9I9AH","./numbered-list":"1B5rE","./numerical":"4ECoZ","./office":"9f75v","./offline":"ezWPf","./oil-field":"euxLr","./one-column":"c1PZN","./one-to-many":"7U83n","./one-to-one":"8DEjL","./open-application":"4fykH","./outdated":"2MNH2","./page-layout":"jkmEm","./panel-stats":"lWoB3","./panel-table":"1bBph","./paperclip":"drWUu","./paragraph":"aMfaI","./path":"evsUn","./path-search":"daYHV","./pause":"fLcrU","./people":"1IAaB","./percentage":"1QhrE","./person":"eEcDQ","./phone":"Vpm5G","./pie-chart":"6m3V2","./pin":"kOJPj","./pivot":"6g0VS","./pivot-table":"5yut3","./play":"ceHga","./playbook":"bMvcj","./plus":"dmsUt","./polygon-filter":"gkoaC","./power":"hXoyc","./predictive-analysis":"kwVtZ","./prescription":"coU4G","./presentation":"f8XvB","./print":"eKUs2","./projects":"95wBq","./properties":"75xNc","./property":"a1kNN","./publish-function":"kSFyv","./pulse":"c3U5h","./rain":"ddjWM","./random":"lcKGc","./record":"h4qWN","./rect-height":"iD2zn","./rect-width":"f0pVz","./rectangle":"3HrDE","./redo":"hEQq8","./refresh":"8pcfa","./regression-chart":"9LbRR","./remove":"uJsT1","./remove-column":"ckM4c","./remove-column-left":"c8AKQ","./remove-column-right":"gAyYE","./remove-row-bottom":"2GsqV","./remove-row-top":"d3DGN","./repeat":"du22w","./reset":"6A58y","./resolve":"9XLuF","./rig":"9fYyY","./right-join":"1MRMt","./ring":"1nuIa","./rocket":"eHQJC","./rocket-slant":"fyZ2G","./rotate-document":"bIHCh","./rotate-page":"9xTzf","./route":"8VFnd","./satellite":"eLCfX","./saved":"9oH5s","./scatter-plot":"6ioI9","./search":"eCAAs","./search-around":"4uLiE","./search-template":"55V8n","./search-text":"4qLbS","./segmented-control":"7XBzt","./select":"6WKal","./selection":"2UEgn","./send-message":"irX4B","./send-to":"45hpW","./send-to-graph":"9evqX","./send-to-map":"8xgr8","./series-add":"8LG21","./series-configuration":"8UGsT","./series-derived":"fWeDu","./series-filtered":"f5YSE","./series-search":"hEcTm","./settings":"4v8hd","./shapes":"3IU4i","./share":"5rlGE","./shared-filter":"eklPS","./shield":"hpag1","./ship":"j7cby","./shop":"6969K","./shopping-cart":"a38Om","./signal-search":"i4PJI","./sim-card":"4VjPG","./slash":"hGK0N","./small-cross":"88Ex4","./small-minus":"e1WfG","./small-plus":"bNhsq","./small-square":"11H8Z","./small-tick":"kEfb8","./snowflake":"d4gwW","./social-media":"91FvX","./sort":"aVYzX","./sort-alphabetical":"B212D","./sort-alphabetical-desc":"cj08H","./sort-asc":"aLkqM","./sort-desc":"2yPgb","./sort-numerical":"2DD3H","./sort-numerical-desc":"1ONII","./split-columns":"80JqY","./square":"j9Hnh","./stacked-chart":"8xtzX","./stadium-geometry":"9MYdQ","./star":"jxAHS","./star-empty":"310oM","./step-backward":"hszVA","./step-chart":"h6JWT","./step-forward":"eGfpk","./stop":"7eXdl","./stopwatch":"kVg3b","./strikethrough":"4qPvj","./style":"63Jc2","./swap-horizontal":"bZ5GJ","./swap-vertical":"7A0Mz","./switch":"aDvun","./symbol-circle":"lhzKK","./symbol-cross":"6kRYm","./symbol-diamond":"7Tgkk","./symbol-rectangle":"gFPp7","./symbol-square":"b3eRL","./symbol-triangle-down":"gMIC3","./symbol-triangle-up":"kIQl9","./syringe":"2HSlo","./tag":"3mD3Q","./take-action":"8ZuQj","./tank":"IuJCH","./target":"4RxZr","./taxi":"Hk4j0","./temperature":"54taU","./text-highlight":"ffnmg","./th":"fV8VA","./th-derived":"iZcye","./th-disconnect":"9AlqD","./th-filtered":"21Wwp","./th-list":"idzvA","./third-party":"j1VR1","./thumbs-down":"3Mnm7","./thumbs-up":"lHWpG","./tick":"aSjTJ","./tick-circle":"3SYUJ","./time":"8tCIP","./timeline-area-chart":"55Shw","./timeline-bar-chart":"ekA0i","./timeline-events":"bGKYm","./timeline-line-chart":"gjl3t","./tint":"ltGJz","./torch":"1yhE7","./tractor":"86zJ0","./train":"kppYg","./translate":"kO1M9","./trash":"h6fFO","./tree":"cwEQh","./trending-down":"h11Ep","./trending-up":"2HYJ4","./truck":"5a23n","./two-columns":"lKoae","./unarchive":"fPDge","./underline":"g1RCX","./undo":"4sjnI","./ungroup-objects":"1Qp12","./unknown-vehicle":"i6VDZ","./unlock":"dcvkA","./unpin":"fBEet","./unresolve":"kQjzK","./updated":"3ZYrZ","./upload":"cWOAP","./user":"eyvLd","./variable":"lvMvf","./vertical-bar-chart-asc":"iePEt","./vertical-bar-chart-desc":"dc3C2","./vertical-distribution":"gONTs","./vertical-inbetween":"aJWtQ","./video":"a5mnb","./virus":"7DY6l","./volume-down":"aSfhf","./volume-off":"iZCak","./volume-up":"9lw8p","./walk":"iWEtZ","./warning-sign":"43mBz","./waterfall-chart":"b4IHq","./waves":"6EQsB","./widget":"d99kG","./widget-button":"8pZj1","./widget-footer":"fJN43","./widget-header":"8xfRC","./wind":"ma3jM","./wrench":"nfVOO","./zoom-in":"6hcgT","./zoom-out":"h1w5S","./zoom-to-fit":"ex7Ly","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3puHx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9h-4V5c0-.55-.45-1-1-1s-1 .45-1 1v4H5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1v-4h4c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b3DZy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0V6h-3a1 1 0 110-2h3V1a1 1 0 011-1zM1 4a1 1 0 00-1 1v4a1 1 0 002 0V6h3a1 1 0 000-2H1zM0 19a1 1 0 001 1h4a1 1 0 100-2H2v-3a1 1 0 10-2 0v4zm15 1h-4a1 1 0 110-2h3v-3a1 1 0 112 0v4a1 1 0 01-1 1zm-7-5a3 3 0 100-6 3 3 0 000 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"desDm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 11h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1H8V7c0-.55-.45-1-1-1s-1 .45-1 1v2H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-7 18H2V2h10v16zm6 0h-5V2h5v16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6lfxt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 11h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V7c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1zm9-11H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H2V2h5v16zm11 0H8V2h10v16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kKNm8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0a1 1 0 010 2 8 8 0 108 8 1 1 0 012 0c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0zm0 6a4 4 0 110 8 4 4 0 010-8zm6-6c.6 0 1 .4 1 1v2h2c.6 0 1 .4 1 1s-.4 1-1 1h-2v2c0 .6-.4 1-1 1s-1-.4-1-1V5h-2c-.6 0-1-.4-1-1 0-.5.4-1 1-1h2V1c0-.6.4-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2SduU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V8h16v10zm0-11H2V2h16v5zM7 14h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2H7c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h0uJ2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 8h2v2c0 .55.45 1 1 1s1-.45 1-1V8h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V4c0-.55-.45-1-1-1s-1 .45-1 1v2H7c-.55 0-1 .45-1 1s.45 1 1 1zm12-8H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2v-5h16v5zm0-6H2V2h16v10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9DfHc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 12H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM1 6h9c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm12 2H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm6-4h-2V2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jBte4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M.01 10V6H20v10c0 .55-.45 1-1 1H9.995v-3.99C9.965 11.332 8.635 10 6.987 10H.01zM19 3c.55 0 1 .45.99 1v1H0V2c0-.55.45-1 1-1h5.997c.28 0 .53.11.71.29L9.414 3H19zM6.987 12c.55 0 .999.45 1.009 1.01v5c0 .55-.45 1-1 1s-.999-.45-.999-1v-2.59l-4.288 4.29a1.003 1.003 0 01-1.42-1.42L4.579 14H1.989c-.55 0-1-.45-1-1s.45-1 1-1h4.998z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aYydO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 2c0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-4.84 4.84L2 1 1 3l7.53 5.64L4.17 13H1l-1 1 4 2 2 4 1-1v-3.17l4.36-4.36L17 19l2-1-4.43-9.74 4.84-4.84c.37-.37.59-.87.59-1.42z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lGAkf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1H5zM1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm12 12c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1h6zm4 2H3c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm2-8H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l8eu9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 14H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-12H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"226KZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 7h10c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0-4h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 14H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM1 15h6c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"81ruh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 17H5c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 10h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H9c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i97td":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 16h4c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1zm7 2H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM4 16h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eVzHX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 9h-2V7c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v2H9V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v6H1c-.55 0-1 .45-1 1s.45 1 1 1h2v6c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-6h2v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eiOpy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 0C.45 0 0 .45 0 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm11 11H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm7-8H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bBGVm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-4 11H8c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm0-8H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3aahH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 4H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm11-4H1C.45 0 0 .45 0 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-3 4h-4c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7jHH1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 3h-6V1c0-.55-.45-1-1-1S9 .45 9 1v2H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h6v2H7c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1h-2V9h6c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6pevK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.41 13.41l7.65-7.65-2.83-2.83-7.65 7.65 2.83 2.83zm10-10c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.64-1.66zM18 18H2V2h8.93l2-2H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7.07l-2 2V18zM4 16l4.41-1.59-2.81-2.79L4 16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8JAFC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.01 10.758a8.025 8.025 0 001.01 3.204l.02.035c.034.058.061.117.084.178.163.44.054.951-.33 1.239-.435.328-1.059.242-1.342-.224a9.797 9.797 0 01-.221-.383 10 10 0 1117.48.106c-.269.474-.89.58-1.335.267-.392-.275-.518-.783-.37-1.228a1.19 1.19 0 01.078-.18l.019-.036A8.026 8.026 0 102.01 10.758zm4.272.772a1.464 1.464 0 01.091.32c.07.425-.052.87-.402 1.128-.44.325-1.068.235-1.316-.252a6 6 0 1110.734-.09c-.24.492-.867.593-1.312.275-.354-.253-.483-.695-.42-1.122a1.462 1.462 0 01.085-.321 4.021 4.021 0 00-5.87-4.878 4.02 4.02 0 00-1.59 4.94zm4.712 2.583A.999.999 0 0011 14v-4a1 1 0 10-2 0v4c0 .038.002.076.006.113l-3.753 4.223a1 1 0 001.494 1.328L10 16.005l3.252 3.66a1 1 0 101.495-1.33l-3.753-4.222z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dAk9t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h18zM8 6a1 1 0 00-1.993-.117L6 6v8a1 1 0 001.993.117L8 14v-3h4v3a1 1 0 001.993.117L14 14V6a1 1 0 00-1.993-.117L12 6v3H8V6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dCVOv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.5 9h9c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-9c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm-1 16H2V6h16v11zM3.5 13h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c6nqC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 5H1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 13H2V8h12v10zM3.5 10h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM19 0H5c-.55 0-1 .45-1 1v3h2V3h12v10h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fjrr2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.434 0a1 1 0 01.857.486L20 5v14a1 1 0 01-1 1H1a1 1 0 01-1-1V5L2.709.486A1 1 0 013.566 0h12.868zM10 8c-.55 0-1 .45-1 1v4.58l-1.29-1.29-.081-.073A.996.996 0 007 11.99a1.003 1.003 0 00-.71 1.71l3 3 .096.084c.168.13.38.206.614.206.28 0 .53-.11.71-.29l3-3 .084-.096a1.003 1.003 0 00-1.504-1.324L11 13.58V9l-.007-.116A1.004 1.004 0 0010 8zm6-6H4L2 5.002h16L16 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8CJUG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 4.664C5 2.09 7.241 0 10 0s4.99 2.091 5 4.664C15 7.245 10 14 10 14S5 7.245 5 4.664zM8 5a2 2 0 104.001-.001A2 2 0 008 5zM.504 12.132l4.302-2.458c.322.576.662 1.145.995 1.681l.025.04-3.294 1.881L6.468 18h7.064l3.936-4.724-3.293-1.882.024-.039c.333-.536.673-1.105.995-1.681l4.302 2.458a1 1 0 01.272 1.508l-5 6A1 1 0 0114 20H6a1 1 0 01-.768-.36l-5-6a1 1 0 01.272-1.508z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"32pGV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm5 9a1 1 0 110 2 1 1 0 010-2zM6 9a1 1 0 110 2 1 1 0 010-2zm8 0a1 1 0 110 2 1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l8Ic4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm10 7a1 1 0 01.993.883L16 8v4a1 1 0 01-.883.993L15 13H5a1 1 0 01-.993-.883L4 12V8a1 1 0 01.883-.993L5 7h10zm0 1h-5v4h5V8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Y7p1B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm2.5 5a.5.5 0 01.5.5V6h4v-.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5V6h1a1 1 0 01.993.883L16 7v7a1 1 0 01-.883.993L15 15H5a1 1 0 01-.993-.883L4 14V7a1 1 0 01.883-.993L5 6h1v-.5a.5.5 0 01.5-.5h1zM15 9H5v5h10V9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cudWr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm8.995 6.09c.32 0 .603.047.85.14a1.679 1.679 0 011.015.985c.09.23.135.482.135.755 0 .287-.063.552-.19.795a1.642 1.642 0 01-.57.615v.02l.101.05c.068.039.138.09.209.155.107.097.203.215.29.355a2.09 2.09 0 01.3 1.09c0 .313-.053.597-.16.85a1.898 1.898 0 01-1.12 1.065 2.42 2.42 0 01-.85.145c-.533 0-.99-.127-1.37-.38a1.702 1.702 0 01-.73-1.08c-.013-.067.013-.11.08-.13l.87-.2.041-.003c.038.004.064.028.079.073.073.2.193.37.36.51.167.14.39.21.67.21.32 0 .567-.095.74-.285.173-.19.26-.432.26-.725 0-.347-.1-.618-.3-.815-.2-.197-.47-.295-.81-.295h-.29l-.044-.006c-.037-.013-.056-.044-.056-.094V9.1l.006-.044c.013-.037.044-.056.094-.056h.27l.145-.008a.925.925 0 00.575-.262c.18-.18.27-.42.27-.72 0-.273-.08-.495-.24-.665-.16-.17-.383-.255-.67-.255-.253 0-.453.063-.6.19-.147.127-.25.297-.31.51-.02.06-.06.083-.12.07l-.85-.2-.042-.015c-.035-.02-.048-.055-.038-.105a1.684 1.684 0 01.645-1.035c.17-.13.37-.232.6-.305.23-.073.482-.11.755-.11zm-7.99.11l.044.006c.037.013.056.044.056.094v6.6l-.006.044c-.013.037-.044.056-.094.056h-.92l-.044-.006c-.037-.013-.056-.044-.056-.094V7.54h-.02l-1.04.73-.04.02c-.047.016-.07-.01-.07-.08V7.19l.008-.051a.196.196 0 01.062-.089l1.09-.79.051-.033a.295.295 0 01.129-.027h.85zm3.34-.11c.32 0 .603.05.85.15.247.1.455.235.625.405.17.17.3.37.39.6.09.23.135.478.135.745 0 .307-.057.588-.17.845a3.16 3.16 0 01-.47.745l-1.98 2.4V12h2.52l.044.006c.037.013.056.044.056.094v.8l-.006.044c-.013.037-.044.056-.094.056h-3.82l-.044-.006c-.037-.013-.056-.044-.056-.094v-.75l.006-.05a.165.165 0 01.044-.08l2.4-2.99.124-.167c.077-.11.143-.222.196-.333.08-.167.12-.347.12-.54a.92.92 0 00-.235-.64c-.157-.173-.378-.26-.665-.26-.273 0-.487.077-.64.23-.153.153-.247.36-.28.62-.013.067-.05.093-.11.08l-.88-.18-.043-.015c-.035-.02-.047-.055-.037-.105a1.78 1.78 0 01.56-1.115c.167-.157.372-.282.615-.375a2.35 2.35 0 01.845-.14z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jsWX5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm2.012 6c.643 0 1.203.266 1.68.797.477.53.715 1.246.715 2.145a4.472 4.472 0 01-.965 2.814c-.644.83-1.66 1.5-3.047 2.011v-.581l.26-.104a3.87 3.87 0 001.624-1.285c.457-.632.686-1.29.686-1.971 0-.148-.023-.256-.07-.326-.023-.047-.054-.07-.093-.07-.038 0-.1.031-.186.093-.248.179-.558.268-.93.268-.45 0-.843-.18-1.18-.541A1.817 1.817 0 015 7.965c0-.527.194-.986.581-1.378A1.934 1.934 0 017.011 6zm5.593 0c.643 0 1.203.266 1.68.797.477.53.715 1.246.715 2.145a4.472 4.472 0 01-.965 2.814c-.644.83-1.659 1.5-3.047 2.011v-.581l.26-.104a3.87 3.87 0 001.624-1.285c.457-.632.686-1.29.686-1.971 0-.148-.023-.256-.07-.326-.023-.047-.054-.07-.093-.07-.038 0-.1.031-.186.093-.248.179-.558.268-.93.268-.45 0-.843-.18-1.18-.541a1.817 1.817 0 01-.506-1.285c0-.527.194-.986.581-1.378A1.934 1.934 0 0112.604 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fgIuv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm5 4a6 6 0 110 12 6 6 0 010-12zm0 1a5 5 0 100 10 5 5 0 000-10zm2.854 2.146a.5.5 0 01.057.638l-.057.07-2.5 2.5a.5.5 0 01-.638.057l-.07-.057-1.5-1.5a.5.5 0 01.638-.765l.07.057L10 9.293l2.146-2.147a.5.5 0 01.708 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1FoCO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 3a1.003 1.003 0 00-1.71-.71L4 14.59V7c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1H5.41l12.3-12.29c.18-.18.29-.43.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fI49f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 6c-.55 0-1 .45-1 1v7.59L3.71 2.29a1.003 1.003 0 00-1.42 1.42L14.59 16H7c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fI976":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 11c-.3 0-.5.1-.7.3L11 15.6V2c0-.5-.4-1-1-1s-1 .5-1 1v13.6l-4.3-4.3c-.2-.2-.4-.3-.7-.3-.5 0-1 .4-1 1 0 .3.1.5.3.7l6 6c.2.2.4.3.7.3s.5-.1.7-.3l6-6c.2-.2.3-.4.3-.7 0-.6-.5-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hL76M":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 9H4.41L8.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L4.41 11H18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dUVto":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.71 9.29l-6-6a1.003 1.003 0 00-1.42 1.42L15.59 9H2c-.55 0-1 .45-1 1s.45 1 1 1h13.59l-4.29 4.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2mCsU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.71 16.29L5.41 4H13c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5.41L16.29 17.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ifdMv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 2H7c-.55 0-1 .45-1 1s.45 1 1 1h7.59L2.29 16.29a1.003 1.003 0 001.42 1.42L16 5.41V13c0 .55.45 1 1 1s1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fcUGy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.7 7.3l-6-6c-.2-.2-.4-.3-.7-.3s-.5.1-.7.3l-6 6c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L9 4.4V18c0 .5.4 1 1 1s1-.5 1-1V4.4l4.3 4.3c.2.2.4.3.7.3.5 0 1-.4 1-1 0-.3-.1-.5-.3-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"foPAy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.7 9.3l-5-5c-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.5.3.7L16.6 9H3.4l3.3-3.3c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1-.3 0-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7s.1.5.3.7l5 5c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7L3.4 11h13.2l-3.3 3.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l5-5c.2-.2.3-.4.3-.7s-.1-.5-.3-.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i65e3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 13c-.3 0-.5.1-.7.3L11 16.6V3.4l3.3 3.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7l-5-5c-.2-.2-.4-.3-.7-.3s-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3L9 3.4v13.2l-3.3-3.3c-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.5.3.7l5 5c.2.2.4.3.7.3s.5-.1.7-.3l5-5c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lYE7o":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.52 14.17l.01-.02L11.89 10l6.64-4.15-.01-.02A.97.97 0 0019 5c0-.55-.45-1-1-1-.2 0-.37.07-.52.17l-.01-.02L11 8.2V1c0-.55-.45-1-1-1S9 .45 9 1v7.2L2.53 4.15l-.01.02A.922.922 0 002 4c-.55 0-1 .45-1 1 0 .36.2.66.48.83l-.01.02L8.11 10l-6.64 4.15.01.02A.97.97 0 001 15c0 .55.45 1 1 1 .2 0 .37-.07.52-.17l.01.02L9 11.8V19c0 .55.45 1 1 1s1-.45 1-1v-7.2l6.47 4.04.01-.02c.15.11.32.18.52.18.55 0 1-.45 1-1 0-.36-.2-.66-.48-.83z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gUj5s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 18c-4.42 0-8-3.58-8-8 0-2.52 1.18-4.76 3-6.22V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1h2.06C1.61 3.82 0 6.71 0 10c0 5.52 4.48 10 10 10 .55 0 1-.45 1-1s-.45-1-1-1zm0-16c1.64 0 3.15.49 4.42 1.34l1.43-1.43A9.869 9.869 0 0010 0c-.55 0-1 .45-1 1s.45 1 1 1zm10 8c0-1.13-.2-2.21-.54-3.22L17.84 8.4A7.962 7.962 0 0115 16.22V15c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-2.06c2.45-1.82 4.06-4.71 4.06-8zm0-7a1.003 1.003 0 00-1.71-.71L12 8.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7c.18-.18.29-.43.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jmx3h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.387 19.79l-.094-.083L14 15.415V18a1 1 0 01-2 0l.003-5.075.017-.126.03-.111.044-.111.052-.098.067-.096.08-.09a1.01 1.01 0 01.112-.097l.11-.071.114-.054.105-.035.15-.03L13 12h5a1 1 0 110 2h-2.585l4.292 4.293a1 1 0 01-1.32 1.497zM7.036 9.136l-4.45 4.45-.117.127a2 2 0 002.818 2.818l.127-.117 4.45-4.449a4 4 0 01-.885 3.704l-.15.16-2 2A4 4 0 011.02 12.33l.15-.16 2-2a3.998 3.998 0 013.865-1.035zm6.671-3.843a1 1 0 01.083 1.32l-.083.094-7 7a1 1 0 01-1.497-1.32l.083-.094 7-7a1 1 0 011.414 0zm4.121-4.121a4 4 0 01.151 5.497l-.15.16-2 2a3.998 3.998 0 01-3.864 1.036l4.45-4.45.116-.128a2 2 0 00-2.818-2.818l-.127.117-4.45 4.45a4 4 0 01.885-3.705l.15-.16 2-2a4 4 0 015.657 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"998Kb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.94 5.73c-.19-1.41.62-2.52 1.38-3.59L17.03.65C14.89 1.76 11.88 1.48 10 0 8.12 1.48 5.11 1.76 2.97.65L1.68 2.14c.76 1.07 1.57 2.18 1.38 3.59C2.68 8.59 0 10.94 1.4 14.08c.56 1.43 1.81 2.37 3.4 2.75 1.95.46 4.4.91 5.2 3.17.8-2.26 3.25-2.71 5.2-3.17 1.6-.38 2.84-1.32 3.4-2.75 1.4-3.14-1.28-5.49-1.66-8.35z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9WofN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm5 11H5c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bWPMC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.2 8.02l-.78-.18C18.03 6.4 17.2 5.08 16.08 4l.5-2.28c.11-.42-.22-.78-.61-.72-1.06.12-2 .54-2.67 1.26-1.06-.42-2.34-.66-3.56-.66-3.12 0-5.79 1.5-7.4 3.72-.23-.05-.45-.11-.67-.11C.72 5.21 0 5.98 0 7c0 .72.39 1.32.95 1.62-.06.42-.12.9-.12 1.38 0 2.16.89 4.08 2.28 5.58l-.33 2.04c-.11.72.45 1.38 1.12 1.38h.72c.56 0 1-.42 1.11-1.02l.06-.48c1.17.54 2.5.9 3.95.9 1.39 0 2.78-.3 3.95-.9l.06.48c.11.6.56 1.02 1.11 1.02h.72c.67 0 1.22-.66 1.11-1.38l-.33-1.98c.78-.78 1.34-1.74 1.73-2.76l1-.24c.5-.12.89-.6.89-1.2V9.22c.11-.6-.28-1.08-.78-1.2zM15 10c-.6 0-1-.7-1-1.5S14.4 7 15 7s1 .7 1 1.5-.4 1.5-1 1.5zM7.55 5.83a.99.99 0 01-1.38-.28.99.99 0 01.28-1.38c2.34-1.56 4.77-1.56 7.11 0 .46.31.58.93.28 1.39-.31.46-.93.58-1.39.28-1.67-1.12-3.23-1.12-4.9-.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lSXwP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 16.98h2v-14H6v14zm3 0h1v-14H9v14zm-6 0h2v-14H3v14zm-3 0h2v-14H0v14zm16 0h2v-14h-2v14zm-4 0h1v-14h-1v14zm7-14v14h1v-14h-1zm-5 14h1v-14h-1v14z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eO89O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var p = [];
exports.default = p;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7JbFC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.55 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.06-.11.14-.35.17-.62C10.33 9.42 8.92 7.38 8.92 5c0-.3.05-.58.09-.87-.33-.08-.67-.13-.99-.13-.79 0-1.68.25-2.31.73-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.17 1.51-.17 2.14v.08c-.24.09-.45.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59C3 16.56.77 17.26.32 18.31-.15 19.38.04 20 .04 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.69-1.75-4.17-2.41zM14.97 0c-2.78 0-5.03 2.24-5.03 5s2.25 5 5.03 5S20 7.76 20 5s-2.25-5-5.03-5zm-3.03 5c0-1.66 1.35-3 3.02-3 .47 0 .9.11 1.29.3l-4.01 3.99c-.18-.4-.3-.83-.3-1.29zm3.03 3c-.47 0-.9-.11-1.29-.3l4.01-3.99c.19.39.3.82.3 1.29 0 1.66-1.36 3-3.02 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9DiVe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.3 9c.4-.8.7-1.6.7-2.5C15 4 13 2 10.5 2H5c-.6 0-1 .4-1 1v13c0 .6.4 1 1 1h6.5c2.5 0 4.5-2 4.5-4.5 0-1.4-.7-2.7-1.7-3.5zM7 5h3.5c.8 0 1.5.7 1.5 1.5S11.3 8 10.5 8H7V5zm4.5 9H7v-3h4.5c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c4k8G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 1v18c0 .55.45 1 1 1h2V0H4c-.55 0-1 .45-1 1zm14-1h-2v8l-2-2-2 2V0H7v20h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ezZwT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 0c-.55 0-1 .45-1 1v18c0 .55.32.68.71.29L9.3 15.7a.996.996 0 011.41 0l3.59 3.59c.38.39.7.26.7-.29v-8-4.5V1c0-.55-.45-1-1-1H6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"80JU5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.89 6.56l-2.99-6h-.01C16.72.23 16.39 0 16 0H4c-.39 0-.72.23-.89.56H3.1l-3 6h.01C.05 6.69 0 6.84 0 7v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7c0-.16-.05-.31-.11-.44zM11 2h4.38l2 4H11V2zM4.62 2H9v4H2.62l2-4zM18 18H2V8h16v10zM8 12h4c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"625W5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 5h-4V2c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v3H1c-.55 0-1 .45-1 1v5h4v-1h2v1h8v-1h2v1h4V6c0-.55-.45-1-1-1zm-6 0H7V3h6v2zm3 8h-2v-1H6v1H4v-1H0v6c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-6h-4v1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eNhxL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 18a1 1 0 010 2H2a1 1 0 010-2h16zM9.995 3.005c.55 0 1 .45 1 .999v9.584l1.29-1.288a1.002 1.002 0 011.42 1.419l-3 2.996a1.015 1.015 0 01-1.42 0l-3-2.997a1.002 1.002 0 011.42-1.419l1.29 1.29V4.013c0-.55.45-1.009 1-1.009zM16 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zM7 0a1 1 0 110 2 1 1 0 010-2zM4 0a1 1 0 110 2 1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6eqvD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.836 1.014a1 1 0 011.058.539l2.482 4.962.02-.004a.5.5 0 01.604.49v4.5a.5.5 0 01-.5.5h-3.93a1.5 1.5 0 00-1.248.667l-1.406 2.11A.5.5 0 0112.5 15H8a.5.5 0 01-.354-.146l-2.414-2.415A1.5 1.5 0 004.172 12H.5a.5.5 0 01-.5-.5v-3A.5.5 0 01.5 8h.823L3.072 3.63a1 1 0 01.764-.615l12-2zm.289 3.472l1.231 2.462-2.758.591 1.527-3.053zM14.5 3.264l-1.56 3.12-.252-.638-.825-2.043 2.637-.44zm-9.78 1.63l5.122-.854.988 2.445.899 2.27L10.232 11H7.707L4.854 8.147A.5.5 0 004.5 8H3.477l1.242-3.106zM3 19a3 3 0 100-6 3 3 0 000 6zm14 0a3 3 0 100-6 3 3 0 000 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3grG8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.43 16.67L9.31 7.81l1.47-1.56c.41-.44-.15-.8.15-1.6 1.08-2.76 4.19-2.99 4.19-2.99s.45-.47.87-.92C11.98-1 9.26.7 8.04 1.8L3.83 6.25l-.86.92c-.48.51-.48 1.33 0 1.84l-.87.92c-.48-.51-1.26-.51-1.74 0s-.48 1.33 0 1.84l1.74 1.84c.48.51 1.26.51 1.74 0s.48-1.33 0-1.84l.87-.92c.48.51 1.26.51 1.74 0l1.41-1.49 8.81 10.07c.76.76 2 .76 2.76 0 .76-.76.76-2 0-2.76z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g0QX0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V8h2v2zm4 8H9v-2h2v2zm0-4H9v-2h2v2zm0-4H9V8h2v2zm4 8h-2v-6h2v6zm0-8h-2V8h2v2zm0-4H5V2h10v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e9TJT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zM5 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm13-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H7v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H2c-.5 0-1 .5-1 1v14c0 .5.5 1 1 1h16c.5 0 1-.5 1-1V4c0-.5-.5-1-1-1zM7 17H3v-4h4v4zm0-5H3V8h4v4zm5 5H8v-4h4v4zm0-5H8V8h4v4zm5 5h-4v-4h4v4zm0-5h-4V8h4v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8umqE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm9-4h-3.59L13.7 2.29A.956.956 0 0013 2H7c-.28 0-.53.11-.71.29L4.59 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h4.11c1.26 1.24 2.99 2 4.89 2s3.63-.76 4.89-2H19c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zM4 8H2V6h2v2zm6 8c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"emgn9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 7c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1 0 .24.1.46.24.63l-.01.01 5 6 .01-.01c.19.22.45.37.76.37s.57-.15.76-.37l.01.01 5-6-.01-.01c.14-.17.24-.39.24-.63z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4p5Ne":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 4c-.24 0-.46.1-.63.24l-.01-.01-6 5 .01.01c-.22.19-.37.45-.37.76s.15.57.37.76l-.01.01 6 5 .01-.01c.17.14.39.24.63.24.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a1msa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 10c0-.31-.15-.57-.37-.76l.01-.01-6-5-.01.01C7.46 4.1 7.24 4 7 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1 .24 0 .46-.1.63-.24l.01.01 6-5-.01-.01c.22-.19.37-.45.37-.76z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"YX1DG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.76 12.37l.01-.01-5-6-.01.01C10.57 6.15 10.31 6 10 6s-.57.15-.76.37l-.01-.01-5 6 .01.01c-.14.17-.24.39-.24.63 0 .55.45 1 1 1h10c.55 0 1-.45 1-1 0-.24-.1-.46-.24-.63z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e8zL0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.5 1.25h4a1 1 0 011 1V5h-5V1.25zM2.75 5a.25.25 0 00-.25.25v6H.883a.5.5 0 00-.429.757l1.672 2.787c.17.284.384.533.63.741-.458.057-.959.09-1.506.09a.625.625 0 100 1.25c2.583 0 4.268-.68 5.202-1.146.687.466 1.88 1.146 3.548 1.146 1.65 0 2.837-.666 3.528-1.132l.005.003c.244.131.6.3 1.07.468.938.335 2.321.661 4.147.661a.625.625 0 100-1.25c-.319 0-.622-.01-.91-.03.398-.318.717-.738.914-1.23l.972-2.43a.5.5 0 00-.464-.685H5v-6A.25.25 0 004.75 5h-2zm3.455 11.95a.625.625 0 01.658.041c.569.407 1.597 1.134 3.137 1.134s2.568-.727 3.137-1.134a.625.625 0 01.724-.001l.007.005.045.029c.044.027.114.069.21.12.194.104.493.247.9.392.812.29 2.053.589 3.727.589a.625.625 0 110 1.25c-1.826 0-3.21-.326-4.148-.661a7.894 7.894 0 01-1.069-.468l-.005-.003c-.691.466-1.878 1.132-3.528 1.132-1.667 0-2.861-.68-3.548-1.146-.934.467-2.619 1.146-5.202 1.146a.625.625 0 110-1.25c2.66 0 4.23-.787 4.955-1.176zM17.5 6.25h-5V10h4a1 1 0 001-1V6.25zm-11.25-4a1 1 0 011-1h4V5h-5V2.25zm5 4h-5V9a1 1 0 001 1h4V6.25z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9lBIY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.5 8.32c.31-.35.51-.81.51-1.32 0-1.1-.9-2-2-2s-2 .9-2 2c0 .51.2.97.51 1.32L5.06 18.69c-.17.52.11 1.09.63 1.26s1.09-.11 1.26-.63L8.39 15h3.23l1.44 4.32c.17.52.74.81 1.26.63s.81-.74.63-1.26L11.5 8.32zM10.95 13H9.06l.95-2.84.94 2.84zM5.31 10.73a.996.996 0 101.37-1.45c-1.4-1.33-1.28-3.35-.01-4.54.4-.38.43-1.01.05-1.41-.36-.41-1-.43-1.4-.06-2.09 1.95-2.28 5.3-.01 7.46z",
    "M4.6 12.2C3 11.1 2 9 2 7c0-2.1.9-3.9 2.6-5.2.5-.3.5-1 .2-1.4-.3-.5-1-.5-1.4-.2C1.2 1.9-.1 4.2 0 7c.1 2.7 1.4 5.3 3.4 6.8.2.1.4.2.6.2.3 0 .6-.1.8-.4.4-.5.3-1.1-.2-1.4zM13.27 10.69c.38.4 1.01.42 1.41.04 2.27-2.16 2.08-5.51-.01-7.46a.996.996 0 10-1.36 1.46c1.28 1.19 1.39 3.21-.01 4.54-.39.39-.41 1.02-.03 1.42z",
    "M16.6.2c-.4-.3-1.1-.3-1.4.2-.3.4-.3 1.1.2 1.4C17.1 3.1 18 4.9 18 7c0 2-1 4.1-2.6 5.2-.5.3-.6.9-.2 1.4.2.3.5.4.8.4.2 0 .4-.1.6-.2C18.7 12.3 20 9.7 20 7c.09-2.8-1.2-5.1-3.4-6.8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4wEHn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 16H2c-1.1 0-2 .9-2 2s.9 2 2 2h16c1.1 0 2-.9 2-2s-.9-2-2-2zM3 5c.28 0 .53-.11.71-.29L5 3.41V13c0 .55.45 1 1 1s1-.45 1-1V3.41L8.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C6.53.11 6.28 0 6 0s-.53.11-.71.29l-3 3A1.003 1.003 0 003 5zm7.29 5.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L15 10.59V1c0-.55-.45-1-1-1s-1 .45-1 1v9.59L11.71 9.3A.965.965 0 0011 9a1.003 1.003 0 00-.71 1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dyrBF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 11v8c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-8l-2 2-4-2zm-7 8c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-8l-6 3v5zM17 7l-3 3v9c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V8.74c-.26.15-.58.26-1 .26-1.92 0-2-2-2-2zm2-6h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L10.8 8.78 7.45 7.11v.01C7.31 7.05 7.16 7 7 7s-.31.05-.44.11V7.1l-6 3v.01c-.33.17-.56.5-.56.89 0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L7 9.12l3.55 1.78v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L18 4.41V6c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6INBd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0H7c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h5.59l3.71 3.71c.17.18.42.29.7.29.55 0 1-.45 1-1v-3h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 13c-1.1 0-2-.9-2-2V4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1v3a1.003 1.003 0 001.71.71L7.41 16H13c.55 0 1-.45 1-1v-.17L12.17 13H7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bJLam":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L7 8.59V4c0-.55-.45-1-1-1s-1 .45-1 1v12c0 .55.45 1 1 1s1-.45 1-1v-4.59l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L8.41 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"30qhh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 6c-.28 0-.53.11-.71.29L10 11.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jpHbY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 3c-.55 0-1 .45-1 1v4.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5.29-5.3V16c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i5P63":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L8.41 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bhx4M":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.71 9.29l-6-6a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jwE8A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.71 12.29l-6-6C10.53 6.11 10.28 6 10 6s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42L10 8.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1B53F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aOPWY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 10c-.28 0-.53.11-.71.29L11 12.59V5c0-.55-.45-1-1-1s-1 .45-1 1v7.59L6.71 10.3A.965.965 0 006 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0014 10zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b0rRU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 9H7.41L9.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 11H15c.55 0 1-.45 1-1s-.45-1-1-1zm-5-9C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9jvHX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.71 9.29l-4-4a1.003 1.003 0 00-1.42 1.42L12.59 9H5c-.55 0-1 .45-1 1s.45 1 1 1h7.59l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gbqT8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.71-13.71C10.53 4.11 10.28 4 10 4s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L9 7.41V15c0 .55.45 1 1 1s1-.45 1-1V7.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9NFIW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 1C1.79 1 0 2.79 0 5s1.79 4 4 4c.1 0 .2-.01.3-.02C3.82 11.32 2.53 13 1 13c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7-4.48 7-10 0-2.21-1.79-4-4-4zM16 1c-2.21 0-4 1.79-4 4s1.79 4 4 4c.1 0 .2-.01.3-.02C15.82 11.32 14.53 13 13 13c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7-4.48 7-10 0-2.21-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2wzLC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 0L5 5 0 6.998 5 9l2 5 2-5 5-1.995L9 5zM15 10l-1.5 3.496-3.5 1.499 3.5 1.498L15 20l1.5-3.507L20 15l-3.5-1.504z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7fFHc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 1a1 1 0 011-1h5a1 1 0 010 2H2v4a1 1 0 01-2 0V1zm1 19a1 1 0 01-1-1v-5a1 1 0 112 0v4h4a1 1 0 110 2H1zm18 0a1 1 0 001-1v-5a1 1 0 10-2 0v4h-4a1 1 0 100 2h5zm0-20a1 1 0 011 1v5a1 1 0 11-2 0V2h-4a1 1 0 110-2h5zm-9 14a4 4 0 100-8 4 4 0 000 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2e8Fk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 2c0-.55-.45-1-1-1h-.78a1.98 1.98 0 00-3.44 0H7c-.55 0-1 .45-1 1v2h7V2z",
    "M16 2h-2v3H5V2H3c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9KuM9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 7c-.12 0-.24.03-.36.04C13.83 4.69 11.62 3 9 3 5.69 3 3 5.69 3 9c0 .05.01.09.01.14A3.98 3.98 0 000 13c0 2.21 1.79 4 4 4h11c2.76 0 5-2.24 5-5s-2.24-5-5-5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kqNTh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 4c-.12 0-.24.03-.36.04C13.83 1.69 11.62 0 9 0 5.69 0 3 2.69 3 6c0 .05.01.09.01.14A3.98 3.98 0 000 10c0 2.21 1.79 4 4 4h.78c.55-.61 1.34-1 2.22-1v-2c0-1.66 1.34-3 3-3s3 1.34 3 3v2c.88 0 1.66.38 2.2.98C17.87 13.87 20 11.69 20 9c0-2.76-2.24-5-5-5zm-2 11c-.28 0-.53.11-.71.29L11 16.59V11c0-.55-.45-1-1-1s-1 .45-1 1v5.59L7.71 15.3A.965.965 0 007 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0013 15z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"29LrB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.71 10.29c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 13.41V19c0 .55.45 1 1 1s1-.45 1-1v-5.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM15 4c-.12 0-.24.03-.36.04C13.83 1.69 11.62 0 9 0 5.69 0 3 2.69 3 6c0 .05.01.09.01.14A3.98 3.98 0 000 10c0 2.21 1.79 4 4 4 0-.83.34-1.58.88-2.12l3-3a2.993 2.993 0 014.24 0l3 3-.01.01c.52.52.85 1.23.87 2.02C18.28 13.44 20 11.42 20 9c0-2.76-2.24-5-5-5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3jJap":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 6a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L2.41 10 5.7 6.71c.19-.18.3-.43.3-.71zm6-4c-.46 0-.83.31-.95.73l-4 14c-.02.09-.05.17-.05.27 0 .55.45 1 1 1 .46 0 .83-.31.95-.73l4-14c.02-.09.05-.17.05-.27 0-.55-.45-1-1-1zm7.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42l3.3 3.29-3.29 3.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hcIFB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 5h-2V3c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v2H9V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM8.71 15.29a1.003 1.003 0 01-1.42 1.42l-4-4C3.11 12.53 3 12.28 3 12s.11-.53.29-.71l4-4a1.003 1.003 0 011.42 1.42L5.41 12l3.3 3.29zm8-2.58l-4 4a1.003 1.003 0 01-1.42-1.42l3.3-3.29-3.29-3.29A.965.965 0 0111 8a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71s-.11.53-.29.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"asnd2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 8h-2.31c-.14-.46-.33-.89-.56-1.3l1.7-1.7a.996.996 0 000-1.41l-1.41-1.41a.996.996 0 00-1.41 0l-1.7 1.7c-.41-.22-.84-.41-1.3-.55V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v2.33c-.48.14-.94.34-1.37.58L5 2.28a.972.972 0 00-1.36 0L2.28 3.64c-.37.38-.37.99 0 1.36L3.9 6.62c-.24.44-.44.89-.59 1.38H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2.31c.14.46.33.89.56 1.3L2.17 15a.996.996 0 000 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l1.7-1.7c.41.22.84.41 1.3.55V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.33c.48-.14.94-.35 1.37-.59L15 17.72c.37.37.98.37 1.36 0l1.36-1.36c.37-.37.37-.98 0-1.36l-1.62-1.62c.24-.43.45-.89.6-1.38H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gVcm1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.29 8.71c.18.18.43.29.71.29s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L10 6.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6zm1.42 2.58c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42l5.29-5.3 5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Z4w4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.188 9h11.984L8 2.828 3.414 7.414C2.811 8.017 2.405 8.48 2.188 9zM8 0L6.586 1.414 2 6c-1 1-2 2.11-2 4 0 2 1 3 2 4l1 1c1 1 2 2 4 2 2.009 0 2.918-.913 3.868-1.867L11 15l4.586-4.586L17 9l-1.414-1.414-6.172-6.172L8 0zm10.5 13.5L17 11l-1.5 2.5c-.318.53-.5 1-.5 1.5 0 1 .5 2 2 2s2-1 2-2c0-.5-.182-.97-.5-1.5zM1 18a1 1 0 100 2h18a1 1 0 100-2H1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gBM7F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM5 17H2V3h3v14zm4 0H6V3h3v14zm9 0h-8V3h8v14z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cx0A2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3v4a1.003 1.003 0 001.71.71l4.7-4.71H19c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6jJJ3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 8H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm13-6h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 3h-5V3h5v2zM6 14H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zM6 2H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm4-2c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm9 14h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-5v-2h5v2zm0-9h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm0 3h-5V9h5v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"EjWkq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 10c0 .14-.03.28-.09.4l-3.99 8.98-.01.02a.991.991 0 01-1.82 0l-.01-.02-3.99-8.98c-.06-.12-.09-.26-.09-.4s.03-.28.09-.4L9.08.62 9.09.6a.991.991 0 011.82 0l.01.02 3.99 8.98c.06.12.09.26.09.4zm-5-6.54L7.09 10h5.81L10 3.46z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f9SDw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.89 6.56l-2.99-6h-.01C16.72.23 16.39 0 16 0H4c-.39 0-.72.23-.89.56H3.1l-3 6h.01C.05 6.69 0 6.84 0 7v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7c0-.16-.05-.31-.11-.44zM11 2h4.38l2 4H11V2zM4.62 2H9v4H2.62l2-4zM18 18H2V8h7v4.59L6.71 10.3A.965.965 0 006 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L11 12.59V8h7v10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2tyBR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.71 5.29a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7a1.003 1.003 0 00-1.42-1.42L12 7.59l-2.29-2.3zm7.93 2.32c.23.75.36 1.56.36 2.39 0 4.42-3.58 8-8 8s-8-3.58-8-8a7.998 7.998 0 0111.8-7.04l1.46-1.46C13.73.56 11.93 0 10 0 4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-1.4-.29-2.73-.81-3.95l-1.55 1.56z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fgIL7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 19H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h18c.55 0 1 .45 1 1v16c0 .55-.45 1-1 1zM18 6H2v11h16V6zM4 8c.28 0 .53.11.71.29l2 2c.18.18.29.43.29.71s-.11.53-.29.71l-2 2a1.003 1.003 0 01-1.42-1.42L4.59 11l-1.3-1.29A1.003 1.003 0 014 8zm5 4h3c.55 0 1 .45 1 1s-.45 1-1 1H9c-.55 0-1-.45-1-1s.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7TQ0G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 8h-1.26c-.19-.73-.48-1.42-.85-2.06l.94-.94a.996.996 0 000-1.41l-1.41-1.41a.996.996 0 00-1.41 0l-.94.94c-.65-.38-1.34-.67-2.07-.86V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.26c-.76.2-1.47.5-2.13.89L5 2.28a.972.972 0 00-1.36 0L2.28 3.64c-.37.38-.37.98 0 1.36l.87.87c-.39.66-.69 1.37-.89 2.13H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h1.26c.19.73.48 1.42.85 2.06l-.94.94a.996.996 0 000 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l.94-.94c.64.38 1.33.66 2.06.85V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1.26c.76-.2 1.47-.5 2.13-.89l.88.87c.37.37.98.37 1.36 0l1.36-1.36c.37-.38.37-.98 0-1.36l-.87-.87c.4-.65.7-1.37.89-2.13H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 7c-2.76 0-5-2.24-5-5s2.24-5 5-5v10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5gYaO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 10h-7v7h7v-7zm0-7h-7v6h7V3zM9 3H3v14h6V3zm10-3H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V2h16v16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cCtHY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 3H1c-.55 0-1 .45-1 1v2h20V4c0-.55-.45-1-1-1zM0 16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V8H0v8zm6.5-2h7c.28 0 .5.22.5.5s-.22.5-.5.5h-7c-.28 0-.5-.22-.5-.5s.22-.5.5-.5zm-4 0h2c.28 0 .5.22.5.5s-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5s.22-.5.5-.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fkC2G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.41 10l4.29-4.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-4.29-4.3a1.003 1.003 0 00-1.42 1.42L8.59 10 4.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4.29-4.3 4.29 4.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Yiqx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 8l4 2 4-5 4 5 4-2-1 7H3L2 8zm8-6a1 1 0 110 2 1 1 0 010-2zM1 5a1 1 0 110 2 1 1 0 010-2zm18 0a1 1 0 110 2 1 1 0 010-2zM3 16h14v2H3v-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gmXWq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.953 4.481l7.41-4.02c.394-.215.88-.215 1.275 0l7.409 4.02L10 9.22 1.953 4.48zm-.817.68L9.5 10.085v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547zm17.728 0c.088.166.136.353.136.546v8.35c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281l8.364-4.926z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Lxxa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2zm-3.969 4.435L10 9.22 1.953 4.48l7.41-4.02c.394-.215.88-.215 1.275 0l1.33.721A3.001 3.001 0 0013 7c0 .148.01.293.031.435zm.319.972A3 3 0 0019 7v7.057c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281l2.85-1.679zM1.136 5.16L9.5 10.086v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dXulR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.968 1.182A3.001 3.001 0 0013 7h.77L10 9.22 1.953 4.48l7.41-4.02c.394-.215.88-.215 1.275 0l1.33.721zM19 7v7.057c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281L15.74 7H19zM1.136 5.16L9.5 10.086v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547zM13 3h6a1 1 0 010 2h-6a1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jMfKO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 16H3.02l2.14-1.74c2.25 1.7 7.33.46 11.83-2.99l-1.29-1.5c-3.56 2.74-7.31 4.03-8.93 3.19l10.55-8.57-.63-.78-10.59 8.6c-.64-1.64 1.46-4.91 5.09-7.7L9.9 3.01c-4.6 3.54-6.91 8.12-5.41 10.51L2 15.54V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"khvoi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 2s.72-1.28 0-2l-5.29 6.25 1.28 1.54L16 2zm.08 10c-.55 0-1.07.12-1.54.32L4.31 0c-.7.72 0 2 0 2l4.45 6.56-3.19 3.77C5.09 12.12 4.56 12 4 12c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.65-.17-1.26-.45-1.8l2.54-3.67 2.49 3.67c-.27.54-.44 1.15-.44 1.8 0 2.21 1.76 4 3.92 4 2.17 0 3.92-1.79 3.92-4 .02-2.21-1.74-4-3.9-4zM4 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm12.08 0c-1.08 0-1.96-.9-1.96-2s.88-2 1.96-2 1.96.9 1.96 2-.88 2-1.96 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"30yXG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 10a4 4 0 110 8 4 4 0 010-8zM4 10a4 4 0 110 8 4 4 0 010-8zm7.299-5.543l.087.089 1.93 2.232 2.048.708a1 1 0 01.65 1.16l-.031.112a1 1 0 01-1.16.65l-.112-.031-2.302-.796a1 1 0 01-.337-.197l-.092-.094-1.387-1.603-1.891 1.982 2.046 2.274a1 1 0 01.25.547l.007.122v4.24a1 1 0 01-1.993.117l-.007-.117-.001-3.857-2.408-2.676a1 1 0 01-.063-1.26l.082-.099 3.29-3.45a1 1 0 011.394-.053zM16 12a2 2 0 100 4 2 2 0 000-4zM4 12a2 2 0 100 4 2 2 0 000-4zm9.5-10a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7ybAz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM4 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-5C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm6-9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-8 5c0 1.1.9 2 2 2s2-.9 2-2c0-.33-2-8-2-8s-2 7.67-2 8zm6-9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5YCEe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 11.9c.935.674 2.339 1.217 4.023 1.536A6.996 6.996 0 009.393 20c-3.988-.019-7.231-1.083-7.387-2.4L2 17.5v-5.6zM13 8c3.315 0 6 2.685 6 6s-2.685 6-6 6-6-2.685-6-6 2.685-6 6-6zm1 1l-4 6h2.5l-.5 4 4-6h-2.5l.5-4zm3-4.6v3.855a7.003 7.003 0 00-10.779 3.992c-2.408-.391-4.097-1.202-4.214-2.142L2 10V4.4c1.525 1.1 4.3 1.85 7.5 1.85S15.475 5.5 17 4.4zM9.5 0C13.637 0 17 1.125 17 2.5S13.637 5 9.5 5C5.35 5 2 3.875 2 2.5S5.35 0 9.5 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8YREp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.053 0C.47 0 0 .471 0 1.053V4.21c0 .58.471 1.052 1.053 1.052h3.275a6.332 6.332 0 003.728 4.738 6.33 6.33 0 00-3.728 4.737l-3.275-.001C.47 14.737 0 15.208 0 15.789v3.158C0 19.53.471 20 1.053 20h7.435c.581 0 1.053-.471 1.053-1.053V15.79c0-.58-.472-1.052-1.053-1.052H5.406a5.293 5.293 0 015.195-4.21v2.105c0 .58.471 1.052 1.052 1.052h7.294c.582 0 1.053-.471 1.053-1.052V7.368c0-.58-.471-1.052-1.053-1.052h-7.294c-.581 0-1.052.471-1.052 1.052v2.106a5.293 5.293 0 01-5.194-4.21h3.081c.581 0 1.053-.472 1.053-1.053V1.053C9.54.47 9.069 0 8.488 0H1.053z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gNsYq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.01 5.1v5.4c0 1.38 3.58 2.5 8 2.5s8-1.12 8-2.5V5.1c-1.49 1.13-4.51 1.9-8 1.9-3.48 0-6.5-.77-8-1.9zm8 .9c4.42 0 8-1.12 8-2.5s-3.58-2.5-8-2.5-8 1.12-8 2.5S5.6 6 10.01 6zm-8 6.1v5.4c0 1.38 3.58 2.5 8 2.5s8-1.12 8-2.5v-5.4c-1.49 1.13-4.51 1.9-8 1.9-3.48 0-6.5-.77-8-1.9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dCK9g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 6a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10l3.29-3.29c.19-.18.3-.43.3-.71zm-5-6C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ZARI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0L0 20h20L10 0zM9 6l6 12H3L9 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"khIGS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.1 8.2h-.99c.28-1.11.66-1.92 1.12-2.43.28-.32.56-.48.83-.48.05 0 .1.02.13.05.03.03.05.07.05.12 0 .04-.04.13-.11.25a.64.64 0 00-.12.35c0 .15.06.28.18.39.12.11.27.16.45.16.2 0 .36-.07.49-.2s.2-.31.2-.54c0-.26-.1-.47-.3-.63-.19-.16-.51-.24-.95-.24-.68 0-1.3.19-1.85.58-.56.38-1.09 1.02-1.59 1.91-.17.3-.34.5-.49.59-.15.08-.4.13-.74.12l-.23.77h.95l-1.39 5.24c-.23.86-.39 1.39-.47 1.59-.12.29-.3.54-.54.75-.1.08-.21.12-.35.12-.04 0-.07-.01-.1-.03l-.03-.04c0-.02.03-.07.1-.13.07-.07.1-.17.1-.31 0-.15-.05-.28-.16-.38-.11-.1-.27-.15-.47-.15-.25 0-.44.07-.59.2-.15.12-.23.28-.23.46 0 .19.09.36.27.5.19.14.47.21.86.21.61 0 1.16-.15 1.63-.46.48-.31.89-.78 1.25-1.43.35-.64.72-1.68 1.09-3.11l.8-3.03h.96l.24-.77zM19 0h-9c-.55 0-1 .45-1 1v3h2V2h7v16h-7v-2H9v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-8.79 13.49c.15.28.32.49.52.61.19.12.44.19.73.19.28 0 .57-.1.86-.3.38-.25.77-.69 1.17-1.31l-.25-.14c-.27.37-.48.6-.61.69-.09.06-.19.09-.31.09-.14 0-.28-.09-.42-.26-.23-.29-.54-1.09-.93-2.4.35-.59.64-.97.87-1.15.17-.13.35-.2.55-.2.07 0 .2.03.39.08s.36.08.5.08c.2 0 .37-.07.5-.2.15-.14.22-.31.22-.52 0-.22-.07-.4-.2-.53s-.33-.2-.58-.2c-.22 0-.43.05-.63.15-.2.1-.45.32-.75.67-.23.25-.56.7-1.01 1.33a6.52 6.52 0 00-.91-2.15l-2.39.39-.05.25c.18-.03.33-.05.45-.05.24 0 .43.1.59.3.25.31.59 1.24 1.02 2.8-.34.44-.58.73-.7.87-.21.22-.38.36-.52.43-.1.05-.22.08-.35.08-.1 0-.26-.05-.49-.16a1.01 1.01 0 00-.42-.11c-.23 0-.42.07-.57.22-.15.14-.23.33-.23.55 0 .21.07.38.21.51.14.13.33.2.56.2.23 0 .44-.05.64-.14.2-.09.45-.29.75-.59s.72-.78 1.25-1.43c.21.61.39 1.06.54 1.35z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cmQxz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h5.67l-.5 3H5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1h-1.17l-.5-3H19c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 13H2V2h16v11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"auFr6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 2a1 1 0 01.117 1.993L4 4v5a2 2 0 001.85 1.995L6 11a2 2 0 001.995-1.85L8 9V4a1 1 0 01-.117-1.993L8 2h1a1 1 0 01.993.883L10 3v6a4.002 4.002 0 01-3 3.874V13a3 3 0 003 3 4 4 0 003.995-3.8L14 12V8.792a2.5 2.5 0 112 0V12a6 6 0 01-6 6 5 5 0 01-4.995-4.783L5 13v-.126A4.002 4.002 0 012.005 9.2L2 9V3a1 1 0 01.883-.993L3 2h1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5pyUo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 10v5h-2v-4h-6v4H9v-4H3v4H1v-5a1 1 0 011-1h7V5h2v4h7a1 1 0 011 1zM1 16h2a1 1 0 011 1v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a1 1 0 011-1zm16 0h2a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1zm-8 0h2a1 1 0 011 1v2a1 1 0 01-1 1H9a1 1 0 01-1-1v-2a1 1 0 011-1zM9 0h2a1 1 0 011 1v2a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h6kOK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 3.02l-20 7 20 7-5-7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gboZ9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 10.02l-20-7 5 7-5 7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f0YpU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM2 10c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L3.69 14.9A7.902 7.902 0 012 10zm8 8c-1.85 0-3.55-.63-4.9-1.69L16.31 5.1A7.902 7.902 0 0118 10c0 4.42-3.58 8-8 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7z9ie":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.25 6.25a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM6 9c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H6zm4 6a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i7eBh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.98 0h-8c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18h-11V2h6v5h5v11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5fyQ0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 15c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1h2.59L1.3 16.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 12.41V15zm5-15H5c-.55 0-1 .45-1 1v6h2V2h6v5h5v11H6v-.76L4.04 19.2c.1.45.48.8.96.8h13c.55 0 1-.45 1-1V6l-6-6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hvD7Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.09 10.09c-.31.31-.67.57-1.09.72V18H2V2h6v5h1.18c.15-.42.39-.8.7-1.11v-.01l2.45-2.45c-.42-.29-.78-.65-1.01-1.11L9 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V9.24l-.88.88-.03-.03zM19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4nBCq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.57 11.19c-.27-.51-.63-.93-1.07-1.26-.44-.33-.95-.6-1.51-.79-.56-.2-1.14-.36-1.72-.5-.6-.14-1.19-.26-1.75-.38-.57-.13-1.07-.27-1.51-.44-.44-.17-.8-.38-1.07-.63s-.41-.59-.41-1c0-.33.09-.6.28-.81.19-.21.42-.36.69-.47.27-.11.57-.18.88-.22.31-.04.58-.06.8-.06.71 0 1.35.14 1.9.41.55.27.91.81 1.06 1.62h3.36c-.09-.84-.32-1.56-.69-2.16-.37-.6-.83-1.08-1.38-1.45-.56-.37-1.18-.64-1.86-.81-.19-.05-.38-.07-.57-.1V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.1c-.22.03-.43.05-.66.1-.73.13-1.39.37-1.98.71-.6.34-1.09.8-1.47 1.35-.39.56-.58 1.25-.58 2.08 0 .76.13 1.41.4 1.93.26.52.62.95 1.06 1.28.44.33.94.6 1.5.79.55.2 1.13.36 1.74.5.58.14 1.16.26 1.72.38s1.07.26 1.51.43c.44.17.8.39 1.09.66.28.27.43.63.45 1.06.02.43-.08.78-.3 1.04-.22.26-.49.47-.83.6-.34.14-.7.23-1.09.28-.39.05-.73.07-1.03.07-.87 0-1.61-.2-2.23-.59-.62-.39-.98-1.08-1.07-2.06H3c.02.9.19 1.68.52 2.34.33.66.78 1.21 1.35 1.65.57.44 1.25.77 2.03.98.35.1.71.16 1.08.21V19c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1.13c.25-.04.5-.07.76-.13.77-.18 1.47-.46 2.1-.85.63-.39 1.14-.9 1.54-1.53.4-.63.59-1.39.59-2.29.01-.75-.13-1.37-.4-1.88z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"28RL1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 6a4 4 0 100 8 4 4 0 100-8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"40C23":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 4c-.24 0-.46.1-.63.24l-.01-.01-6 5 .01.01c-.22.19-.37.45-.37.76s.15.57.37.76l-.01.01 6 5 .01-.01c.17.14.39.24.63.24.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm11 6c0-.31-.15-.57-.37-.76l.01-.01-6-5-.01.01C12.46 4.1 12.24 4 12 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1 .24 0 .46-.1.63-.24l.01.01 6-5-.01-.01c.22-.19.37-.45.37-.76z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4UzCU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 9h10c.55 0 1-.45 1-1 0-.24-.1-.46-.24-.63l.01-.01-5-6-.01.01C10.57 1.15 10.31 1 10 1s-.57.15-.76.37l-.01-.01-5 6 .01.01C4.1 7.54 4 7.76 4 8c0 .55.45 1 1 1zm10 2H5c-.55 0-1 .45-1 1 0 .24.1.46.24.63l-.01.01 5 6 .01-.01c.19.22.45.37.76.37s.57-.15.76-.37l.01.01 5-6-.01-.01c.14-.17.24-.39.24-.63 0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ctmzZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.29 10.71c.18.18.43.29.71.29s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L10 8.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6zM16 9c-.28 0-.53.11-.71.29L10 14.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3hgSU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L5.41 10zm6 0l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L11.41 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dX5xd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 10c0-.28-.11-.53-.29-.71l-6-6a1.003 1.003 0 00-1.42 1.42L8.59 10 3.3 15.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71zm5.71-.71l-6-6a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8lifw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 11c.28 0 .53-.11.71-.29L10 5.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6A.997.997 0 0010 3c-.28 0-.53.11-.71.29l-6 6A1.003 1.003 0 004 11zm6.71-1.71A.997.997 0 0010 9c-.28 0-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42l5.29-5.3 5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gNgtk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 10c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6V0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10h-4zm-.09-1h4.04C19.48 4.28 15.72.52 11 .05V4.1A5.98 5.98 0 0115.91 9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cwTOG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm4.71 11.71l-4 4c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-4-4a1.003 1.003 0 011.42-1.42L9 12.59V5c0-.55.45-1 1-1s1 .45 1 1v7.59l2.29-2.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b8tTm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.5 11c-.83 0-1.5.67-1.5 1.5S6.67 14 7.5 14 9 13.33 9 12.5 8.33 11 7.5 11zm-5-5C1.67 6 1 6.67 1 7.5S1.67 9 2.5 9 4 8.33 4 7.5 3.33 6 2.5 6zm0 5c-.83 0-1.5.67-1.5 1.5S1.67 14 2.5 14 4 13.33 4 12.5 3.33 11 2.5 11zm15-2c.83 0 1.5-.67 1.5-1.5S18.33 6 17.5 6 16 6.67 16 7.5 16.67 9 17.5 9zm-5 2c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-10-5C6.67 6 6 6.67 6 7.5S6.67 9 7.5 9 9 8.33 9 7.5 8.33 6 7.5 6zm5 0c-.83 0-1.5.67-1.5 1.5S11.67 9 12.5 9 14 8.33 14 7.5 13.33 6 12.5 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bvqAz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.5 6C6.67 6 6 6.67 6 7.5S6.67 9 7.5 9 9 8.33 9 7.5 8.33 6 7.5 6zm0 5c-.83 0-1.5.67-1.5 1.5S6.67 14 7.5 14 9 13.33 9 12.5 8.33 11 7.5 11zm0 5c-.83 0-1.5.67-1.5 1.5S6.67 19 7.5 19 9 18.33 9 17.5 8.33 16 7.5 16zm5-12c.83 0 1.5-.67 1.5-1.5S13.33 1 12.5 1 11 1.67 11 2.5 11.67 4 12.5 4zm-5-3C6.67 1 6 1.67 6 2.5S6.67 4 7.5 4 9 3.33 9 2.5 8.33 1 7.5 1zm5 10c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-10c-.83 0-1.5.67-1.5 1.5S11.67 9 12.5 9 14 8.33 14 7.5 13.33 6 12.5 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1cngp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.7 12.7c0-.1 0-.2-.1-.3l-2-7c-.1-.3-.3-.6-.6-.7L1.8 0l-.6.5L7.7 7c.3-.2.6-.3 1-.3 1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2c0-.4.1-.7.3-1L.5 1.2l-.5.6L4.7 15c.1.3.4.5.7.6l7 2c.1 0 .2.1.3.1.3 0 .5-.1.7-.3l4-4c.2-.2.3-.5.3-.7zm1 1c-.3 0-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7 0 .5.4 1 1 1 .3 0 .5-.1.7-.3l4-4c.2-.2.3-.4.3-.7 0-.6-.5-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4NVbR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 0a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h8zM8 2H2v16h6V2zm2 7h6.59L14.3 6.71A.965.965 0 0114 6a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10V9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3N2mI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 0h8a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1zm9 9h6.59L14.3 6.71A.965.965 0 0114 6a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10V9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"alchB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0a1 1 0 011 1v18a1 1 0 01-1 1h-8a1 1 0 01-1-1V1a1 1 0 011-1h8zm-1 2h-6v16h6V2zm-8 7H3.41L5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 11H10V9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8i4oI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 0h8a1 1 0 011 1v18a1 1 0 01-1 1h-8a1 1 0 01-1-1V1a1 1 0 011-1zm-1 9H3.41L5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 11H10V9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1051P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20.01 7.7c0-.63-.5-1.14-1.1-1.14h-1.32l-.95-2.57c-.24-.64-.95-1.31-1.59-1.5 0 0-1.65-.49-5.05-.49s-5.04.49-5.04.49c-.63.19-1.35.86-1.59 1.5l-.95 2.57H1.1C.5 6.56 0 7.07 0 7.7c0 .63.5 1.14 1.1 1.14h.47l-.34.91c-.24.64-.43 1.72-.43 2.4v5.39c0 .8.63 1.45 1.4 1.45.77 0 1.4-.65 1.4-1.45v-.83h12.8v.83c0 .8.63 1.45 1.4 1.45s1.4-.65 1.4-1.45v-5.39c0-.68-.19-1.77-.43-2.4l-.34-.91h.47c.61 0 1.11-.51 1.11-1.14zm-16.47.34l1.12-3.16c.08-.22.32-.39.54-.39h9.6c.22 0 .46.17.54.39l1.12 3.16c.08.21-.04.39-.26.39H3.8c-.22-.01-.34-.18-.26-.39zm.96 4.94c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.68 1.5 1.5c0 .83-.67 1.5-1.5 1.5zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lU7Jh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 4H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 14H2V6h12v12zm5-18H5c-.55 0-1 .45-1 1v2h2V2h12v12h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iYdJl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0016 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"40ObJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 12h12c.55 0 1-.45 1-1 0-.25-.1-.47-.25-.64l.01-.01-6-7-.01.01C10.57 3.14 10.3 3 10 3s-.57.14-.75.36l-.01-.01-6 7 .01.01c-.15.17-.25.39-.25.64 0 .55.45 1 1 1zm12 1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3cML7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0c5.523 0 10 4.477 10 10s-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0zm0 2a8 8 0 100 16 8 8 0 000-16zm-4 8l.015.215C6.219 12.42 7.925 14 10 14a4 4 0 003.995-3.8L14 10h2l-.013.238C15.754 13.552 13.163 16 10 16a6 6 0 01-5.996-5.775L4 10h2zm1.5-4a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm5 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fRiJC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.83 9.38L18.81 7.6V5.62c0-.45-.23-.85-.61-1.08l-1.71-1-1.02-1.76a1.25 1.25 0 00-1.08-.61h-2.03l-1.74-1c-.38-.23-.87-.23-1.25 0l-1.74 1H5.65c-.44 0-.85.23-1.08.61L3.58 3.5l-1.8 1.04c-.38.24-.62.64-.62 1.08v2.06L.17 9.4c-.11.19-.17.4-.17.61s.06.42.17.61l.99 1.72v2.06c0 .45.23.85.61 1.08l1.78 1.02.99 1.72c.23.38.63.61 1.08.61h1.99l1.74 1c.19.11.41.17.62.17.21 0 .42-.06.61-.17l1.74-1h2.03c.44 0 .85-.23 1.08-.61l1.02-1.76 1.71-1c.38-.23.61-.64.61-1.08v-1.97l1.02-1.78c.27-.38.27-.85.04-1.25zm-5.08-.71l-5.01 5.01c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.29l-3.01-3.01a1.003 1.003 0 011.42-1.42l2.3 2.3 4.31-4.3a1.003 1.003 0 011.71.71c0 .28-.12.53-.3.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9adJZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 4.01v11.91l6.27-6.27L0 4.01zm18.91-1.03H1.09L10 10.97l8.91-7.99zm-5.18 6.66L20 15.92V4.01l-6.27 5.63zm-3.23 2.9c-.13.12-.31.19-.5.19s-.37-.07-.5-.19l-2.11-1.89-6.33 6.33h17.88l-6.33-6.33-2.11 1.89z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"epRnS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 7h12a1 1 0 010 2H4a1 1 0 110-2zm0 4h12a1 1 0 010 2H4a1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"03eMJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.71 8.43c.39-.4.39-1.05 0-1.45l-5.53-5.72a.967.967 0 00-1.4 0L1.29 12.1c-.39.4-.39 1.05 0 1.45l4.25 4.39 2.13 2.05h9.27c.02 0 .03.01.05.01.55 0 1-.45 1-1s-.45-1-1-1H9.46l.05-.05h.01l.81-.84 8.38-8.68zM7.52 17.94l-4.95-5.12 4.46-4.61 4.95 5.12-4.46 4.61z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j4Pio":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1pUiD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.89 4.47c.56-.31 1.23-.47 2.03-.47.44 0 .85.07 1.25.22.4.14.76.35 1.07.6.17.14.33.3.47.47l2.32-2.32c-.16-.15-.3-.32-.47-.46-.62-.49-1.33-.87-2.12-1.13-.8-.25-1.64-.38-2.52-.38-1.24 0-2.35.22-3.33.66-.99.44-1.82 1.05-2.49 1.82-.68.78-1.2 1.68-1.56 2.72-.09.26-.13.54-.2.8H2c-.55 0-1 .45-1 1s.45 1 1 1h1.04c-.01.2-.04.38-.04.58 0 .15.03.28.03.42H2c-.55 0-1 .45-1 1s.45 1 1 1h1.31c.07.3.13.6.23.89.36 1.02.88 1.92 1.56 2.67.68.76 1.51 1.35 2.49 1.79.98.43 2.09.65 3.33.65.99 0 1.9-.15 2.73-.46.83-.3 1.55-.74 2.17-1.32.03-.03.05-.06.08-.09l-2.41-2.15c-.01.01-.02.02-.02.03-.61.67-1.46 1-2.54 1-.8 0-1.47-.16-2.03-.47-.56-.31-1.01-.72-1.35-1.24-.28-.38-.47-.83-.63-1.3H12c.55 0 1-.45 1-1s-.45-1-1-1H6.56c0-.14-.02-.28-.02-.42 0-.2.02-.39.03-.58H13c.55 0 1-.45 1-1s-.45-1-1-1H6.94c.15-.46.34-.9.59-1.28.35-.52.8-.94 1.36-1.25zM18 11.38v0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4cogC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.5 8a2.5 2.5 0 000 5 2.5 2.5 0 000-5zm10.35 3.15a.495.495 0 10-.7.7L13.3 13H5.5c-.28 0-.5.22-.5.5s.22.5.5.5h7.79l-1.15 1.15c-.08.09-.14.21-.14.35a.495.495 0 00.85.35l2-2c.09-.09.15-.21.15-.35s-.06-.26-.15-.35l-2-2zM17.5 8a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM7.15 9.85a.495.495 0 10.7-.7L6.71 8h7.79c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H6.71l1.15-1.15c.08-.09.14-.21.14-.35a.495.495 0 00-.85-.35l-2 2c-.09.09-.15.21-.15.35s.06.26.15.35l2 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"qH06D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zM0 13a1.003 1.003 0 001.71.71L4 11.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L5.41 10 7.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L4 8.59l-2.29-2.3A1.003 1.003 0 00.29 7.71L2.59 10 .3 12.29c-.19.18-.3.43-.3.71zm18-5h-7c-1.1 0-2 .9-2 2s.9 2 2 2h7c1.1 0 2-.9 2-2s-.9-2-2-2zm1 9H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dmXf3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 9c.28 0 .53-.11.71-.29L10 3.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6C10.53 1.11 10.28 1 10 1s-.53.11-.71.29l-6 6A1.003 1.003 0 004 9zm12 2c-.28 0-.53.11-.71.29L10 16.59 4.71 11.3A.965.965 0 004 11a1.003 1.003 0 00-.71 1.71l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5pNQ9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 7c.28 0 .53-.11.71-.29L9 3.41V15c0 .55.45 1 1 1s1-.45 1-1V3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-5-5C10.53.11 10.28 0 10 0s-.53.11-.71.29l-5 5A1.003 1.003 0 005 7zm14 7c-.55 0-1 .45-1 1v3H2v-3c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7D3zf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 9.96v-.03-.01-.02-.02a.794.794 0 00-.21-.43c-.55-.69-1.19-1.3-1.85-1.87l-3.93 2.62a3.966 3.966 0 01-3.96 3.77c-.47 0-.91-.1-1.33-.24l-2.24 1.49c.52.21 1.05.39 1.6.51 1.21.27 2.43.28 3.64.05 1.11-.21 2.17-.64 3.17-1.18 1.56-.84 2.99-2 4.23-3.3.23-.24.46-.49.67-.75a.87.87 0 00.21-.43v-.02-.02-.01-.03V10v-.04zm-.46-5.14c.27-.18.46-.47.46-.82 0-.55-.45-1-1-1-.21 0-.39.08-.54.18l-.01-.02L15 5.46c-.95-.53-1.95-.96-3.01-1.2a9.158 9.158 0 00-3.65-.04c-1.11.21-2.17.64-3.17 1.18-1.56.84-2.99 2-4.23 3.3-.23.24-.46.48-.67.75-.27.34-.27.76 0 1.1.64.79 1.39 1.5 2.16 2.15.26.21.52.41.79.61L.44 15.16l.01.02A1 1 0 000 16c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 18-12-.01-.02zm-8.67 3.4c-.25-.12-.53-.2-.83-.2-1.1 0-1.99.89-1.99 1.99 0 .03.02.06.02.09l-1.78 1.19c-.14-.4-.22-.83-.22-1.28 0-2.19 1.78-3.97 3.98-3.97 1.01 0 1.91.38 2.61 1l-1.79 1.18z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3LLt5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.3 8.71c.18.18.43.29.71.29s.53-.11.71-.29l4.99-5a1.003 1.003 0 00-1.42-1.42L14 6.58l-2.29-2.29a.956.956 0 00-.7-.29 1.003 1.003 0 00-.71 1.71l3 3zM20 9.96v-.03-.01-.02-.02a.823.823 0 00-.21-.44c-.44-.55-.94-1.05-1.46-1.52l-2.2 2.2c-.55.54-1.3.88-2.12.88-.05 0-.09-.01-.14-.01a3.978 3.978 0 01-3.86 3.02 4.007 4.007 0 01-1.66-7.65A2.97 2.97 0 018.02 5c0-.28.05-.54.12-.8-1.05.22-2.07.64-3.02 1.15-1.57.85-3 2.02-4.24 3.33-.23.25-.46.5-.67.76-.28.35-.28.77 0 1.12.64.8 1.4 1.52 2.17 2.17 1.66 1.41 3.56 2.58 5.66 3.06 1.21.27 2.43.29 3.65.05 1.11-.21 2.18-.65 3.18-1.19 1.57-.85 3-2.02 4.24-3.33.23-.24.46-.49.67-.76.11-.12.18-.27.21-.44v-.02-.02-.01-.03V10c.01-.01.01-.03.01-.04zm-9.99 2.05c1.03 0 1.87-.79 1.98-1.8l-.09-.09-.01.01-2.1-2.11c-1 .11-1.77.95-1.77 1.98-.01 1.11.89 2.01 1.99 2.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jAUsw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.01 7.984A2.008 2.008 0 008.012 9.99c0 1.103.9 2.006 1.998 2.006a2.008 2.008 0 001.998-2.006c0-1.103-.9-2.006-1.998-2.006zM20 9.96v-.03-.01-.02-.02a.827.827 0 00-.21-.442c-.64-.802-1.398-1.514-2.168-2.166-1.658-1.404-3.566-2.587-5.664-3.058a8.982 8.982 0 00-3.656-.05c-1.11.2-2.178.641-3.177 1.183-1.569.852-2.997 2.016-4.246 3.33-.23.25-.46.49-.67.761-.279.351-.279.773 0 1.124.64.802 1.4 1.514 2.169 2.166 1.658 1.404 3.566 2.577 5.664 3.058 1.209.271 2.438.281 3.656.05 1.11-.21 2.178-.651 3.177-1.193 1.569-.852 2.997-2.016 4.246-3.33.23-.24.46-.49.67-.751.11-.12.179-.271.209-.442v-.02-.02-.01-.03V10v-.04zM10.01 14A4.003 4.003 0 016.014 9.99a4.003 4.003 0 013.996-4.011 4.003 4.003 0 013.996 4.011 4.003 4.003 0 01-3.996 4.011z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eiO4u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 3c-.23 0-.42.09-.59.21l-.01-.01L11 8V4c0-.55-.45-1-1-1-.23 0-.42.09-.59.21L9.4 3.2l-8 6 .01.01C1.17 9.4 1 9.67 1 10s.17.6.41.79l-.01.01 8 6 .01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1v-4l6.4 4.8.01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Bt8ve":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 10c0-.33-.17-.6-.41-.79l.01-.01-8-6-.01.01C10.42 3.09 10.23 3 10 3c-.55 0-1 .45-1 1v4L2.6 3.2l-.01.01C2.42 3.09 2.23 3 2 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01L9 12v4c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01 8-6-.01-.01c.24-.19.41-.46.41-.79z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c3rBp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.5 15a2.5 2.5 0 000 5 2.5 2.5 0 000-5zm.5-5c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5 2.24 5 5 0 .55.45 1 1 1s1-.45 1-1c0-3.87-3.13-7-7-7zM3 0c-.55 0-1 .45-1 1s.45 1 1 1c8.28 0 15 6.72 15 15 0 .55.45 1 1 1s1-.45 1-1C20 7.61 12.39 0 3 0zm0 5c-.55 0-1 .45-1 1s.45 1 1 1c5.52 0 10 4.48 10 10 0 .55.45 1 1 1s1-.45 1-1C15 10.37 9.63 5 3 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g95WL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.5 15a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM3 2c1.76 0 3.44.31 5.01.87.03-.71.31-1.35.75-1.85C6.96.37 5.03 0 3 0c-.55 0-1 .45-1 1s.45 1 1 1zm10.32 4.67a.99.99 0 001.4 0l4.98-4.98c.19-.17.3-.42.3-.7 0-.55-.45-1-1-1a.99.99 0 00-.7.29l-4.27 4.27-2.28-2.28a.99.99 0 00-.7-.29c-.55 0-.99.45-.99 1 0 .28.11.52.29.7l2.97 2.99zM3 10c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5 2.24 5 5 0 .55.45 1 1 1s1-.45 1-1c0-3.87-3.13-7-7-7zm13.94-2.69l-.82.82-.02-.02c-.2.2-.42.37-.67.51A14.8 14.8 0 0118 17c0 .55.45 1 1 1s1-.45 1-1c0-3.61-1.14-6.94-3.06-9.69zM3 5c-.55 0-1 .45-1 1s.45 1 1 1c5.52 0 10 4.48 10 10 0 .55.45 1 1 1s1-.45 1-1C15 10.37 9.63 5 3 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6tMEa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 2h-5v3H6V2H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h5v-3h8v3h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM4 17H2v-2h2v2zm0-3H2v-2h2v2zm0-3H2V9h2v2zm0-3H2V6h2v2zm0-3H2V3h2v2zm10 8H6V7h8v6zm4 4h-2v-2h2v2zm0-3h-2v-2h2v2zm0-3h-2V9h2v2zm0-3h-2V6h2v2zm0-3h-2V3h2v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l8Mio":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 1H2a1.003 1.003 0 00-.71 1.71L7 8.41V18a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71V8.41l5.71-5.71c.18-.17.29-.42.29-.7 0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iSpqP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm4 11c-.28 0-.53.11-.71.29L15 16.59l-1.29-1.29A.965.965 0 0013 15a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0019 13z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"12vQy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm-4 8c0 .55.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1h-7c-.55 0-1 .45-1 1zm8 7h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0-4h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2itma":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 2c0 .28-.11.53-.29.7L10 7.41V13c0 .28-.11.53-.29.71l-3 3A1.003 1.003 0 015 16V7.41L.29 2.71A1.003 1.003 0 011 1h13c.55 0 1 .45 1 1zm4.707 11.293a1 1 0 010 1.414l-4 4c-.63.63-1.707.184-1.707-.707v-8c0-.89 1.077-1.337 1.707-.707l4 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iY5HN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm2.91 13.5l1.79-1.79c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-1.79 1.79-1.79-1.79a1.003 1.003 0 00-1.42 1.42l1.79 1.79-1.79 1.79a1.003 1.003 0 001.42 1.42l1.79-1.79 1.79 1.79a1.003 1.003 0 001.42-1.42l-1.8-1.79z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"icT20":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 3c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1zm0-3c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm2 4.08v8.28c3.01-2.41 8.67 2.64 13 0V4.08C13.61 7.14 8.01 1 5 4.08z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6uuYE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.622 0c0 1.71.49 3.077 1.472 4.103C16.364 6.496 18 9.23 18 12.308c0 3.418-1.962 5.983-5.887 7.692 2.887-3 2.453-4.23-.49-8C8.5 13.5 9 14.5 9.5 16.5c-1.048 0-2 0-2.5-.5 0 .684 1.197 2.5 1.952 4-3.924-1.026-8.123-7.18-6.651-7.692.981-.342 2.126-.171 3.434.513C4.1 6.667 6.062 2.393 11.622 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1b6Jc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.96 6.37a1.003 1.003 0 001.42-1.42l-2-2a1.07 1.07 0 00-.71-.28 1.003 1.003 0 00-.71 1.71l2 1.99zm9.37.3c.28 0 .53-.11.71-.29l2-2a1.003 1.003 0 00-1.42-1.42l-2 2a1.003 1.003 0 00.71 1.71zM10 5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S9 .45 9 1v3c0 .55.45 1 1 1zm-5 5c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1zm14-1h-3c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm-9-3c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm5.04 1.63a1.003 1.003 0 00-1.42 1.42l2 2a1.003 1.003 0 001.42-1.42l-2-2zM10 15c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1s1-.45 1-1v-3c0-.55-.45-1-1-1zm-4.33-1.67c-.28 0-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l2-2a1.003 1.003 0 00-.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lpVPF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 1h-3v5h3V1zm5.71 2.29l-3-3A.997.997 0 0016 0h-1v7H5V0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V4c0-.28-.11-.53-.29-.71zM17 19H3v-8c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hyt6l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.425 7.953a3.98 3.98 0 01.562 2.045 3.98 3.98 0 01-.583 2.08L18 15.671V12.98c0-.248.097-.496.29-.689.379-.379 1.047-.38 1.426 0a.94.94 0 01.283.696l-.001 5.049a.957.957 0 01-.276.69.955.955 0 01-.69.273h-5.059a.971.971 0 01-.689-.289 1.026 1.026 0 010-1.417.972.972 0 01.69-.29h2.702l-3.634-3.573a3.998 3.998 0 01-5.924-2.431H1a1 1 0 010-2h6.12a3.998 3.998 0 015.96-2.409L16.665 3l-2.694-.001a.972.972 0 01-.689-.29 1.035 1.035 0 010-1.425.94.94 0 01.696-.283l5.05.001c.248 0 .497.083.69.276a.954.954 0 01.272.69l.001 5.052a.971.971 0 01-.29.689 1.028 1.028 0 01-1.419 0 .972.972 0 01-.29-.69V4.323l-3.567 3.63z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"10b10":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 9.919a3.998 3.998 0 014-3.92c2.21 0 4 1.79 4 3.997a3.998 3.998 0 01-4 3.996 3.998 3.998 0 01-4-3.916.967.967 0 01-.28.612L7.685 14.71a.958.958 0 01-.686.285c-.536 0-.994-.461-.994-.997 0-.273.107-.528.283-.704l2.379-2.302H.98c-.537 0-.976-.46-.976-.996s.44-.992.976-.992h7.676L6.287 6.687a.957.957 0 01-.283-.686c0-.536.458-.996.994-.996.274 0 .51.1.686.285l4.027 4.024c.159.158.27.365.29.605z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Z773":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.125 10.997H.976C.439 10.997 0 10.537 0 10c0-.536.44-.993.976-.993h4.148a4.002 4.002 0 017.752 0h3.776L14.293 6.69a.962.962 0 01-.285-.687c0-.537.46-1.001.996-1.001a.96.96 0 01.698.3l4.005 4.015c.176.176.293.41.293.683a.972.972 0 01-.283.693L15.702 14.7a.997.997 0 01-.698.297c-.537 0-.996-.453-.996-.99 0-.273.107-.517.283-.692l2.371-2.318h-3.787a4.002 4.002 0 01-7.75 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9DRuX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.13 9.004A4.005 4.005 0 0110.012 6c1.87 0 3.44 1.278 3.881 3.005h2.768l-2.354-2.317a.97.97 0 01-.283-.691c0-.536.462-.995 1-.995.273 0 .517.107.693.283l4 4.041a.97.97 0 01.284.692.956.956 0 01-.293.682l-3.991 3.997a.944.944 0 01-.694.292c-.537 0-1-.46-1-.997a.97.97 0 01.284-.692l2.345-2.29h-2.765a4.005 4.005 0 01-3.875 2.981 4.005 4.005 0 01-3.874-2.981H3.349l2.376 2.308a.97.97 0 01.283.691 1 1 0 01-.994.983.989.989 0 01-.713-.291L.293 10.699A.956.956 0 010 10.017a.97.97 0 01.283-.692l4.03-4.037a.996.996 0 01.701-.283c.537 0 .994.464.994 1a.97.97 0 01-.283.691L3.34 9.004h2.79z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3UQ0k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.04 13.424c-.6.36-1.302.568-2.052.568a4 4 0 01-3.868-2.999H3.342l2.372 2.31c.176.176.283.42.283.694 0 .537-.452.998-.988.998a.935.935 0 01-.691-.289L.292 10.683A.96.96 0 010 9.999c0-.274.107-.518.283-.694l4.035-4.04a.973.973 0 01.691-.288c.536 0 .988.47.988 1.007a.975.975 0 01-.283.694L3.332 8.984h3.786a4 4 0 013.87-3.006c.771 0 1.492.22 2.102.599l3.565-3.57-2.538-.003a.974.974 0 01-.69-.29c-.38-.38-.38-1.052-.002-1.431A.94.94 0 0114.122 1l4.896.005a.96.96 0 01.69.277c.193.193.27.442.27.69l.005 4.9a.971.971 0 01-.289.69 1.023 1.023 0 01-1.416 0 .975.975 0 01-.29-.691l-.003-2.54-3.554 3.62c.351.596.553 1.291.553 2.034 0 .763-.213 1.477-.583 2.084l3.595 3.595.003-2.54c0-.249.097-.497.29-.69.38-.38 1.05-.381 1.429-.002a.94.94 0 01.282.697l-.005 4.9a.927.927 0 01-.277.675.974.974 0 01-.69.291L13.974 19a.97.97 0 01-.69-.29 1.03 1.03 0 01.002-1.42.974.974 0 01.69-.29l2.696-.003-3.632-3.573z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ezb6z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.5 7.93a2.5 2.5 0 00-2.45 2h-2.3l-4.01-4-.75.75 3.26 3.25h-6.3a2.5 2.5 0 100 1h6.3l-3.26 3.25.75.75 4.01-4h2.3a2.5 2.5 0 102.45-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"63bKH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 17c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7H0v10zM19 4H9.41l-1.7-1.71A.997.997 0 007 2H1c-.55 0-1 .45-1 1v3h20V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4frQy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.994 7c0 1.655 1.344 3 2.998 3a3.002 3.002 0 002.999-3H20v10c0 .55-.45 1-1 1H1.01c-.55 0-1-.45-1-1V7h12.984zM10.76 6H0V3c0-.55.45-1 1-1h3.998c.28 0 .53.11.71.29L7.415 4h2.579c0 .768.29 1.469.765 2zm8.23-3c.55 0 1 .45 1 1s-.45 1-1 1h-1.998v2c0 .55-.45 1-1 1s-1-.45-1-1V5h-1.998c-.55 0-1-.45-1-1s.45-1 1-1h1.999V1c0-.55.45-1 .999-1 .55 0 1 .45 1 1v2h1.999z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hA568":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 9c0-.55-.45-1-1-1H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l3-8h-.01c.04-.11.07-.23.07-.35zM3.07 7.63C3.22 7.26 3.58 7 4 7h14V5c0-.55-.45-1-1-1H8.41l-1.7-1.71A.997.997 0 006 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c1zhC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 4H9.41l-1.7-1.71A.997.997 0 007 2H1c-.55 0-1 .45-1 1v3h11.78C11.3 5.47 11 4.77 11 4zm8-1h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L12.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 6.41V9c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1zm-2.46 7.7l-1.42 1.42a2.996 2.996 0 11-4.24-4.24l.88-.88H0v10c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-5.18c-.31.11-.65.18-1 .18-1.02 0-1.92-.52-2.46-1.3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"21KMm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.07 7.63C3.22 7.26 3.58 7 4 7h7.76l.54-.54A2.97 2.97 0 0111 4H8.41l-1.7-1.71A.997.997 0 006 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68zm13.47 3.07l-1.42 1.42A2.996 2.996 0 0110 10c0-.77.3-1.47.78-2H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l2.01-5.36c-1-.01-1.88-.52-2.41-1.29zM19 3h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L12.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 6.41V9c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hKgoB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.54 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.69 3.69 0 00-1.29-1.86C9.69 4.25 8.8 4 8.01 4c-.8 0-1.69.25-2.32.73-.61.47-1.06 1.13-1.28 1.86-.05.17-.09.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.44.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59-1.48.65-3.71 1.35-4.16 2.4C-.16 19.38.02 20 .02 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.68-1.75-4.16-2.41zm8.15-12.63l-3-3a.956.956 0 00-.7-.29 1.003 1.003 0 00-.71 1.71L16.58 3H13c-.55 0-1 .45-1 1s.45 1 1 1h3.58l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.3-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hJsMm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.55 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.69 3.69 0 00-1.29-1.86C9.7 4.25 8.81 4 8.02 4c-.79 0-1.68.25-2.31.73-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.44.32-.48.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59C3 16.56.77 17.26.32 18.31-.15 19.38.04 20 .04 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.69-1.75-4.17-2.41zM19 3h-3.58l1.29-1.29A1.003 1.003 0 0015.29.29l-3 3c-.17.18-.28.43-.28.71 0 .28.11.53.29.71l3 3c.18.18.43.29.7.29a1.003 1.003 0 00.71-1.71L15.42 5H19c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aIziy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.93 18.64l-7-18C10.78.27 10.42 0 10 0s-.78.27-.93.64l-7 18c-.04.11-.07.23-.07.36 0 .55.45 1 1 1 .42 0 .78-.27.93-.64L6.41 13h7.19l2.47 6.36c.15.37.51.64.93.64.55 0 1-.45 1-1 0-.13-.03-.25-.07-.36zM7.18 11L10 3.76 12.82 11H7.18z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"93nJA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.71 11.29a1.003 1.003 0 00-1.42 1.42l1.3 1.29h-2.17l-8-8h10.17L15.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 4H1c-.55 0-1 .45-1 1s.45 1 1 1h2.59l9.71 9.71c.17.18.42.29.7.29h2.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"23501":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 13v4h4v-4H2zm-1-2h6c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1zm11-7h7c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1zM8 1a1.003 1.003 0 01.71 1.71l-5 6C3.53 8.89 3.28 9 3 9s-.53-.11-.71-.29l-2-2a1.003 1.003 0 011.42-1.42L3 6.59l4.29-5.3C7.47 1.11 7.72 1 8 1zm4 13h7c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"agEKB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.196 2H0v2h2c.317 0 .619.139.825.38l3.493 4.075-1.873 1.248a1 1 0 00-.445.832V18c0 .5.5 1 1 1h14c.5 0 1-.5 1-1V7.1c0-.034-.001-.067-.004-.1H20V3s0-1-1-1h-8c-.5 0-1 .5-1 1v3L8.12 7.254 4.463 3.035A3 3 0 002.196 2zM18 4v2h-6V4h6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cCKST":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.96 0a10 10 0 100 20 10 10 0 100-20z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"enzcB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 16h2c.55 0 1-.45 1-1v-5h-4v5c0 .55.45 1 1 1zM12 2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v4h4V2zm6 4h-4v3h4V6zm0-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h4V2zm-6 5H8v5h4V7zm-9 9h2c.55 0 1-.45 1-1v-3H2v3c0 .55.45 1 1 1zm6 0h2c.55 0 1-.45 1-1v-2H8v2c0 .55.45 1 1 1zm10 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM6 2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v3h4V2zm0 4H2v5h4V6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4p51P":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.41 2H6c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1s1-.45 1-1V3.41L7.29 8.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L3.41 2zM8 11c-.28 0-.53.11-.71.29L2 16.59V14c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1H3.41l5.29-5.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1zM19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm0 13c-.55 0-1 .45-1 1v2.59l-5.29-5.29A.965.965 0 0012 11a1.003 1.003 0 00-.71 1.71l5.3 5.29H14c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2Gmtq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.14 5.82H8.73c.4-1.66.94-2.87 1.6-3.64.4-.48.8-.72 1.18-.72.08 0 .14.02.19.07.05.05.07.1.07.18 0 .07-.05.19-.16.37s-.16.36-.16.52c0 .23.08.43.25.59a.9.9 0 00.64.25c.28 0 .51-.1.7-.3.19-.2.28-.47.28-.81 0-.39-.14-.7-.42-.94-.28-.24-.74-.36-1.36-.36-.97 0-1.86.29-2.65.87-.79.56-1.54 1.52-2.26 2.85-.24.46-.48.75-.7.88-.22.13-.57.19-1.06.19l-.32 1.15H5.9l-1.99 7.85c-.33 1.29-.56 2.09-.67 2.39-.17.44-.43.81-.77 1.12a.74.74 0 01-.5.19c-.05 0-.1-.02-.14-.05l-.04-.07c0-.03.05-.1.15-.2.1-.1.15-.26.15-.47 0-.23-.08-.42-.23-.57-.16-.15-.38-.23-.67-.23-.35 0-.63.1-.85.29-.21.2-.32.43-.32.7 0 .29.13.54.39.75.25.22.65.33 1.2.33.88 0 1.66-.23 2.33-.69.68-.46 1.27-1.17 1.78-2.14.51-.96 1.03-2.52 1.56-4.66l1.14-4.54H9.8l.34-1.15zm6.8 1.95c.25-.2.51-.29.78-.29.1 0 .29.04.56.11.27.08.51.11.72.11.29 0 .52-.1.72-.3.18-.19.28-.45.28-.77 0-.33-.1-.6-.29-.8-.19-.2-.47-.29-.82-.29-.32 0-.62.08-.9.23-.28.15-.64.49-1.08 1-.33.38-.81 1.05-1.44 2a9.712 9.712 0 00-1.31-3.22l-3.4.59-.07.37c.25-.05.47-.08.64-.08.34 0 .62.15.84.44.35.46.84 1.85 1.46 4.19-.49.66-.82 1.09-1 1.3-.3.33-.55.54-.74.64-.15.08-.32.12-.51.12-.14 0-.38-.08-.7-.24-.22-.1-.42-.16-.59-.16-.33 0-.6.11-.82.32-.21.22-.32.49-.32.83 0 .31.1.57.3.77.2.2.47.29.8.29.32 0 .63-.07.92-.21.29-.14.64-.43 1.08-.88.43-.45 1.03-1.16 1.79-2.14.29.93.55 1.61.76 2.03.21.42.46.73.74.91.28.19.62.28 1.04.28.4 0 .81-.15 1.23-.44.55-.38 1.1-1.04 1.68-1.97l-.35-.21c-.39.55-.68.89-.87 1.03-.12.09-.27.13-.44.13-.2 0-.4-.13-.59-.38-.33-.43-.77-1.63-1.33-3.6.47-.86.89-1.44 1.23-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5JXv4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 7h5c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm3 2v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1zm12 3h-6c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0 4H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aEdhz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 11l.075.003.126.017.111.03.111.044.098.052.096.067.09.08c.036.035.068.073.097.112l.071.11.054.114.035.105.03.148L9 12V18a1 1 0 01-1.993.117L7 18v-3.586l-5.293 5.293a1 1 0 01-1.497-1.32l.083-.094L5.584 13h-3.58a1 1 0 01-.117-1.993L2.004 11H8zm3.018-11a1.003 1.003 0 01.39.087l.12.063.031.02.1.078 8.027 7.026.062.064.068.086.044.068.064.128.04.117.024.113.011.108v.1l-.007.073-.019.103-.037.121-.039.09-.05.087-4.996 7.994c-.06.097-.137.183-.226.254l-.093.067-.095.053-.087.037-.125.037a1.018 1.018 0 01-.218.026H11v-5a3 3 0 00-2.824-2.995L8 9H3V6a1 1 0 01.321-.734l.098-.08 7-5a1.01 1.01 0 01.45-.178L11.018 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3MBcV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 8.33l9.17 2.5 2.5 9.17L20 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7vb6X":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 18.88c-3.79 0-6.88-3.09-6.88-6.88 0-.61.08-1.22.23-1.79.03.01.06-.01.1-.01h.09v.55c0 .23.21.42.44.42.04 0 .09-.01.12-.02l.9.88c.09.09.23.09.32 0s.09-.23 0-.32l-.86-.9c0-.02.05-.04.05-.07v-.13c0-.18.1-.25.29-.41h.53c.1 0 .19-.01.27-.05.01-.01.02 0 .03-.01.02-.01.03-.02.05-.04.01-.01.02-.01.02-.02l.02-.02 1.13-1.13c-.16-.32-.3-.65-.42-.99h-.64v-.53c0-.01.06.06.06-.1h.38c-.04-.16-.08-.32-.1-.48h-.71c.2-.16.42-.31.64-.45C4.02 6.09 4 5.8 4 5.5c0-.14.01-.28.02-.43C1.62 6.46 0 9.04 0 12c0 4.41 3.59 8 8 8 3.87 0 7.09-2.77 7.82-6.44l-.97-1.1c-.26 3.57-3.23 6.42-6.85 6.42zm-2.12-3.67v-.35h.15c.29 0 .49-.23.49-.53v-.68c0-.01.01-.01 0-.02L4.71 11.8h-.77c-.29 0-.47.24-.47.53v2c0 .29.18.53.47.53h.33v2.02c0 .28.28.51.56.51s.56-.23.56-.51v-1.22h-.01c.29 0 .5-.16.5-.45zm13.83-2.92l-3.68-3.68c.14-.21.27-.42.38-.65.02-.04.04-.07.05-.11.11-.22.2-.45.28-.69v-.01c.07-.24.13-.48.17-.73l.03-.17c.04-.24.06-.49.06-.75C17 2.46 14.54 0 11.5 0S6 2.46 6 5.5 8.46 11 11.5 11c.26 0 .51-.02.76-.06l.17-.03c.25-.04.49-.1.73-.17h.01c.24-.08.47-.17.69-.28.04-.02.07-.04.11-.05.23-.11.44-.24.65-.38l3.68 3.68c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71zM11.5 9.5c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm1.93 5.33v-.65c0-.11-.13-.21-.24-.21-.11 0-.24.09-.24.21v.65c0 .11.13.21.24.21.11 0 .24-.1.24-.21zm-2.41.67h.83c.29 0 .46-.21.46-.5v-1.86l.23-.22c-.34.05-.69.08-1.04.08-.36 0-.7-.03-1.05-.08.03.05.06.1.08.16V15c.01.29.2.5.49.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Sj6x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 2c-1.66 0-3 1.34-3 3 0 1.3.84 2.4 2 2.82V9c0 1.1-.9 2-2 2H8c-.73 0-1.41.21-2 .55V5.82C7.16 5.4 8 4.3 8 3c0-1.66-1.34-3-3-3S2 1.34 2 3c0 1.3.84 2.4 2 2.82v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.25-.77-2.3-1.85-2.75C6.45 13.52 7.16 13 8 13h4c2.21 0 4-1.79 4-4V7.82C17.16 7.4 18 6.3 18 5c0-1.66-1.34-3-3-3zM5 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM15 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"exp7t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 9h-4.1a5 5 0 00-9.8 0H1c-.55 0-1 .45-1 1s.45 1 1 1h4.1a5 5 0 009.8 0H19c.55 0 1-.45 1-1s-.45-1-1-1zm-9 4c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hcZrb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 8c-1.3 0-2.4.84-2.82 2H11c-2.49 0-4.54-1.83-4.92-4.21A2.995 2.995 0 005 0C3.34 0 2 1.34 2 3c0 1.3.84 2.4 2 2.81v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V9.86C7.27 11.17 9.03 12 11 12h1.18A2.996 2.996 0 0018 11c0-1.66-1.34-3-3-3zM5 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM5 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm10 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cJbid":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 3h-1V2c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3 4.86V9c0 1.1-.9 2-2 2H8c-.73 0-1.41.21-2 .55V5.82C7.16 5.4 8 4.3 8 3c0-1.66-1.34-3-3-3S2 1.34 2 3c0 1.3.84 2.4 2 2.82v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.25-.77-2.3-1.85-2.75C6.45 13.52 7.16 13 8 13h4c2.21 0 4-1.79 4-4V7.86c-.32.08-.65.14-1 .14s-.68-.06-1-.14zM5 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kliRW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 14.18V7c0-2.21-1.79-4-4-4h-2.59l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C7.11 3.47 7 3.72 7 4c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L10.41 5H13c1.1 0 2 .9 2 2v7.18A2.996 2.996 0 0016 20c1.66 0 3-1.34 3-3 0-1.3-.84-2.4-2-2.82zM16 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 1C2.34 1 1 2.34 1 4c0 1.3.84 2.4 2 2.82v7.37C1.84 14.6 1 15.7 1 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V6.82C6.16 6.4 7 5.3 7 4c0-1.66-1.34-3-3-3zm0 17c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 5c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4MO6D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 11c0-.28-.11-.53-.29-.71l-3-3C11.53 7.11 11.28 7 11 7s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42l1.29-1.3V19c0 .55.45 1 1 1s1-.45 1-1v-8.59l1.29 1.29c.18.19.43.3.71.3.55 0 1-.45 1-1zm4-11H1C.45 0 0 .45 0 1v16c0 .55.45 1 1 1h7v-2H2v-2h6v-1H4V2h14v11h-4v1h4v2h-4v2h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 8h2V6H5v2zm2-5H5v2h2V3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6kRo2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 3H5v2h2V3zm0 6H5v2h2V9zm0-3H5v2h2V6zm12-6H1C.45 0 0 .45 0 1v16c0 .55.45 1 1 1h4v2l2-1 2 1v-2h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 16H9v-1H5v1H2v-2h16v2zm0-3H4V2h14v11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6UqA1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 6V0H3v6c0 3.53 2.61 6.43 6 6.92V18H6c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1h-3v-5.08c3.39-.49 6-3.39 6-6.92z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ajbiZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.53 4.37c.1-.1.1-.26 0-.35l-.68-.68c-.1-.1-.25-.1-.35 0-.1.1-.1.26 0 .35l.68.68c.1.1.25.1.35 0zm3.17.06h.3c.09 0 .16-.01.16-.1 0-.09-.07-.1-.16-.1h-.3c-.09 0-.16.01-.16.1s.07.1.16.1zm.98 1.15c.09 0 .19-.08.19-.17v-.42c0-.09-.1-.17-.19-.17s-.19.08-.19.17v.42c0 .09.1.17.19.17zm-6.5 4.19c-.35 0-.56.28-.56.63v2.37c0 .35.21.62.56.62h.39v2.4c0 .34.33.61.67.61s.67-.27.67-.61v-1.44h-.02c.35 0 .6-.19.6-.54v-.41h.18c.35 0 .58-.28.58-.62v-.81c0-.01.01-.01 0-.02L6.1 9.77h-.92zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8 0-.74.11-1.46.3-2.14h.03v.65c0 .28.25.5.53.5.05 0 .1-.01.15-.02l1.05 1.05c.1.11.28.11.38 0 .1-.1.11-.27 0-.38L3.42 8.59c0-.03.05-.05.05-.08v-.16c0-.22.12-.3.34-.49h.63c.12 0 .23-.01.32-.07.01-.01.02 0 .03-.01.02-.02.04-.03.06-.04.01-.01.02-.01.03-.02l.02-.02 2.15-2.15c.24-.24.24-.63 0-.86-.23-.24-.62-.19-.86.04l-.41.46H5v-.64c0-.01.07.07.07-.12h.87c.17 0 .3-.12.3-.29 0-.17-.13-.29-.3-.29H4.88C6.27 2.7 8.05 2 10 2s3.73.7 5.12 1.86h-1.58l-.01-.04c-.06 0-.12 0-.17.04l-.71.7c-.09.09-.09.23 0 .31.09.09.23.09.32 0l.56-.6.01-.03h.34c0 .19-.1.13-.1.16v.1c0 .29-.2.5-.49.5h-.51c-.25 0-.52.28-.52.54v.23h-.12c-.16 0-.27.08-.27.24v.33h-.32c-.23 0-.41.15-.41.38 0 .22.18.35.41.35.1 0 .19.04.26-.16l.06.01.66-.59h.23l.53.5c.04.04.11.03.16-.01.04-.04.04-.16 0-.2L13 6.15h.32l.12.16c.25.25.65.23.89-.02l.12-.14H15c.02 0 .11.07.11.07v.33s-.06-.01-.07-.01h-.49c-.16 0-.28.13-.28.29 0 .16.13.29.28.29h.49c.01 0 .07-.01.07-.01v.2c-.19.28-.33.57-.62.57h-1.28s0-.01-.01-.01l-.58-.58a.622.622 0 00-.89 0l-.58.58s0 .01-.01.01h-.34c-.35 0-.67.28-.67.63v1.25c0 .35.32.61.67.61h1.22c.46.19.78.48.97.94v2.28c0 .35.23.6.58.6h.98c.35 0 .54-.25.54-.6v-2.2l1.21-1.17.04-.02.02-.01h.04c.1-.11.2-.26.2-.42V8.49c0-.25-.22-.44-.42-.63h.58c.02.38.29.57.63.57h.43c.13.51.18 1.03.18 1.57 0 4.42-3.58 8-8 8zm6.16-5.65c-.14 0-.29.11-.29.25v.77c0 .14.15.25.29.25.14 0 .29-.11.29-.25v-.77c0-.14-.15-.25-.29-.25zM10.5 3.48c0-.34-.28-.57-.62-.57h-.74c-.34 0-.57.25-.57.59 0 .05-.13.06.06.1v.64c0 .2.09.36.29.36.2 0 .29-.16.29-.36v-.19h.68c.33 0 .61-.23.61-.57z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"agmej":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm7.39 7h-3.63c-.31-1.99-.92-3.66-1.72-4.73 2.45.65 4.41 2.42 5.35 4.73zM13 10c0 .69-.04 1.36-.11 2H7.11a18.419 18.419 0 010-4h5.77c.08.64.12 1.31.12 2zm-3-8c1.07 0 2.25 2.05 2.75 5h-5.5c.5-2.95 1.68-5 2.75-5zm-2.04.27C7.16 3.34 6.55 5.01 6.24 7H2.61c.94-2.31 2.9-4.08 5.35-4.73zM2 10c0-.69.11-1.36.28-2h3.83a18.419 18.419 0 000 4H2.28c-.17-.64-.28-1.31-.28-2zm.61 3h3.63c.31 1.99.92 3.66 1.72 4.73A7.996 7.996 0 012.61 13zM10 18c-1.07 0-2.25-2.05-2.75-5h5.5c-.5 2.95-1.68 5-2.75 5zm2.04-.27c.79-1.07 1.4-2.74 1.72-4.73h3.63a7.996 7.996 0 01-5.35 4.73zM13.89 12a18.419 18.419 0 000-4h3.83c.17.64.28 1.31.28 2s-.11 1.36-.28 2h-3.83z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hEjZV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.5 4A2.5 2.5 0 0015 6.5c0 .06.01.12.02.18l-1.9.84C12.38 6.6 11.27 6 10 6c-.83 0-1.59.25-2.23.68L4.91 4.14c.05-.21.09-.42.09-.64a2.5 2.5 0 00-5 0A2.5 2.5 0 002.5 6c.42 0 .81-.11 1.16-.3l2.79 2.48C6.17 8.73 6 9.34 6 10c0 1.41.73 2.64 1.83 3.35l-.56 1.67A2.498 2.498 0 005 17.5a2.5 2.5 0 005 0c0-.74-.32-1.39-.83-1.85l.56-1.68c.09.01.18.03.27.03 2.21 0 4-1.79 4-4 0-.22-.03-.44-.07-.65l2.02-.9c.43.34.96.55 1.55.55a2.5 2.5 0 000-5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"arsv2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.41 4l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L16 2.59 13.71.3A.965.965 0 0013 0a1.003 1.003 0 00-.71 1.71L14.59 4 12.3 6.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L16 5.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L17.41 4zM19 10c-.83 0-1.55-.36-2.09-.91l-.03.03-.88-.88-.88.88a2.996 2.996 0 11-4.24-4.24l.88-.88-.88-.88.03-.03C10.36 2.55 10 1.83 10 1c0-.35.07-.68.18-.99-.06 0-.12-.01-.18-.01C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-.06-.01-.12-.01-.18-.31.11-.64.18-.99.18z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ceB4E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.838 10l-9.154 3.051a1 1 0 00.632 1.898l12-4c.912-.304.912-1.594 0-1.898l-12-4a1 1 0 00-.632 1.898L12.838 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"38r6A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.684 11.051a1 1 0 00.632 1.898l12-4c.912-.304.912-1.594 0-1.898l-12-4a1 1 0 00-.632 1.898L12.838 8l-9.154 3.051zM4 15h12a1 1 0 110 2H4a1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fWNp3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 11c.55 0 1-.45 1-1s-.45-1-1-1h-2V5h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-4V1c0-.55-.45-1-1-1S9 .45 9 1v2H5V1c0-.55-.45-1-1-1S3 .45 3 1v2H1c-.55 0-1 .45-1 1s.45 1 1 1h2v4H1c-.55 0-1 .45-1 1s.45 1 1 1h2v4H1c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h4v2c0 .55.45 1 1 1s1-.45 1-1v-2h4v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2v-4h2zM9 15H5v-4h4v4zm0-6H5V5h4v4zm6 6h-4v-4h4v4zm0-6h-4V5h4v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iZdXL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 19c0 .55.45 1 1 1h8v-9H0v8zM0 1v8h9V0H1C.45 0 0 .45 0 1zm19-1h-8v9h9V1c0-.55-.45-1-1-1zm-8 20h8c.55 0 1-.45 1-1v-8h-9v9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"J5wF3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm8-3H6c-3.31 0-6 2.69-6 6s2.69 6 6 6h8c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 11H6c-2.76 0-5-2.24-5-5s2.24-5 5-5h8c2.76 0 5 2.24 5 5s-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eYMXj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 16h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1zm7 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-3-1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1zm-9 0h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1zm-4 0h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6ezgn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 5c-.42 0-.79.27-.93.64L14.38 10h-.77l1.34-6.67c.03-.1.05-.21.05-.33a.998.998 0 00-1.98-.19h-.01L11.57 10H11V1c0-.55-.45-1-1-1S9 .45 9 1v9h-.2L6.97 2.76a.997.997 0 00-1.73-.41l-.03.03c-.01.02-.02.03-.03.04-.01.02-.01.03-.02.04v.01c-.01.01-.02.02-.02.03v.01c-.02.01-.02.02-.03.03 0 0 0 .01-.01.01 0 .01 0 .02-.01.03 0 0 0 .01-.01.01 0 .01-.01.02-.01.03 0 0 0 .01-.01.01 0 .01-.01.02-.01.03 0 .01 0 .01-.01.02 0 .01-.01.02-.01.03 0 .01 0 .01-.01.02 0 .01-.01.02-.01.03v.02c0 .01 0 .02-.01.03V3c0 .05 0 .09.01.14l1.45 10.25L6 12.7v.01L3.84 9.45h-.01A.98.98 0 003 9c-.55 0-1 .45-1 1 0 .2.06.39.17.55L6 18.44C7.06 19.4 8.46 20 10 20c3.31 0 6-2.69 6-6v-1.84l.01-.03v-.06l1.94-5.75A1.003 1.003 0 0017 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h2MWg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.68 9.84C15.91 9 14.27 6.49 13.45 4.9 12.41 2.43 12.21 0 7.87 0 5.49 0 3.95.76 3.05 2.65 2.31 4.2 2 5.48 2 9.79v.99c0 .82.69 1.48 1.54 1.48.38 0 .73-.14 1-.36.19.6.78 1.05 1.47 1.05.47 0 .89-.2 1.17-.52.26.47.77.79 1.36.79.65 0 1.2-.39 1.43-.93l.03.77v5.44c0 .48.23.91.59 1.18.21.19.5.32.85.32h.06c.83 0 1.5-.67 1.5-1.5v-8.24l.01-.67c.85.98 1.92 1.76 3.24 1.89 1.79.19 2.09-1.33 1.43-1.64z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8vTGX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.1 6.54c-1.58-.81-4.09-2.46-4.94-4.23-.31-.65-1.82-.35-1.64 1.43.13 1.33.91 2.4 1.89 3.24L9.74 7H1.5C.67 7 0 7.67 0 8.5v.06c0 .36.13.64.32.85.27.36.7.59 1.18.59h5.44l.78.01c-.54.23-.93.78-.93 1.43 0 .59.32 1.1.79 1.36-.32.28-.52.7-.52 1.17 0 .69.44 1.28 1.05 1.47-.22.27-.36.62-.36 1 0 .85.66 1.54 1.48 1.54h.99c4.31 0 5.59-.31 7.14-1.05 1.89-.9 2.65-2.44 2.65-4.82-.01-4.32-2.44-4.52-4.91-5.57z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jZGGA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 8.5c0-.83-.67-1.5-1.5-1.5h-8.24l-.67-.01c.98-.85 1.76-1.92 1.89-3.24.18-1.79-1.33-2.08-1.65-1.43-.84 1.76-3.35 3.41-4.93 4.23C2.43 7.59 0 7.79 0 12.13c0 2.38.76 3.92 2.65 4.82C4.2 17.69 5.48 18 9.79 18h.99c.82 0 1.48-.69 1.48-1.54 0-.38-.14-.73-.36-1 .6-.19 1.05-.78 1.05-1.47 0-.47-.2-.89-.52-1.17.47-.26.79-.77.79-1.36 0-.65-.39-1.2-.93-1.43l.77-.03h5.44c.48 0 .91-.23 1.18-.59.19-.21.32-.49.32-.85v-.03-.03z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8TRc0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.46 7.74c-.38 0-.73.14-1 .36-.19-.6-.78-1.05-1.47-1.05-.47 0-.89.2-1.17.52-.26-.47-.77-.79-1.36-.79-.65 0-1.2.39-1.43.93L10 6.94V1.5c0-.48-.23-.91-.59-1.18C9.2.13 8.92 0 8.56 0H8.5C7.67 0 7 .67 7 1.5v8.24l-.01.67c-.84-.98-1.92-1.76-3.24-1.89-1.79-.18-2.08 1.33-1.43 1.65 1.77.84 3.41 3.35 4.23 4.94 1.05 2.47 1.25 4.9 5.58 4.9 2.38 0 3.92-.76 4.82-2.65.74-1.56 1.05-2.84 1.05-7.15v-.99c0-.81-.69-1.48-1.54-1.48z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kCK5p":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.5 13c1.118 0 1.466.534 1.498 1.366L20 14.5v.5c0 1.945-5.69 3-10 3S0 16.945 0 15v-.5c0-.908.323-1.5 1.5-1.5.895 0 3.5 1.2 8.5 1.2l.411-.003C15.143 14.134 17.631 13 18.5 13zm-5-10c1.725 0 2.954 2.729 3.688 8.186-1.455.263-3.805.72-6.392.801l-.434.01L10 12c-2.896 0-5.585-.524-7.189-.814C3.546 5.73 4.775 3 6.5 3 8.6 3 8.329 5.5 10 5.5S11.5 3 13.5 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6ESce":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 1c-.55 0-1 .45-1 1v7H5V2c0-.55-.45-1-1-1s-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1v-7h10v7c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"im5L9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1V9H2v6c0 .55-.45 1-1 1s-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v6h7V1c0-.55.45-1 1-1zm7.4 10.77c.17-.2.29-.46.34-.77H19v10h-1.5v-7.11H15v-1.24c.32 0 .63-.03.93-.08.31-.06.58-.16.83-.29.26-.12.47-.3.64-.51z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5gvXh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.989 1c0-.55-.45-1-.999-1-.55 0-.999.45-.999 1v6H1.998V1c0-.55-.45-1-.999-1C.449 0 0 .45 0 1v14c0 .55.45 1 .999 1 .55 0 .999-.45.999-1V9h6.993v6c0 .55.45 1 .999 1 .55 0 .999-.45.999-1V1zm7.461 13.645c.49.11.87.38 1.14.82.27.44.41.97.41 1.61a3 3 0 01-.24 1.23c-.16.36-.38.67-.66.92-.27.25-.59.44-.96.58-.37.14-.75.21-1.16.21-.5 0-.93-.08-1.3-.24a2.55 2.55 0 01-.93-.68c-.25-.29-.44-.65-.57-1.06-.13-.42-.2-.88-.21-1.38h1.39c-.02.58.11 1.07.38 1.46.28.39.68.58 1.23.58.47 0 .86-.15 1.17-.45.31-.3.47-.72.47-1.27 0-.37-.07-.67-.2-.89-.13-.22-.3-.39-.51-.5-.21-.11-.45-.18-.71-.21-.26-.03-.53-.04-.81-.03v-1.17c.22.01.45 0 .68-.05.23-.05.43-.13.61-.24.18-.11.32-.27.43-.47.11-.2.16-.45.16-.74 0-.41-.12-.74-.37-.99s-.57-.37-.96-.37c-.24 0-.45.06-.63.17-.18.11-.33.26-.45.45s-.2.4-.26.63c-.05.23-.08.47-.07.72h-1.39c.01-.47.09-.9.23-1.3s.33-.75.57-1.04c.24-.3.53-.53.87-.69.34-.17.73-.25 1.16-.25.33 0 .66.05.98.16.32.11.61.27.87.48.26.21.47.47.62.8.15.32.23.7.23 1.12 0 .48-.09.91-.29 1.27-.2.36-.5.63-.92.79v.02z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l8Y5e":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.6 17.41c-.22.17-.4.36-.56.55-.16.19-.27.4-.33.61h4.28V20H14c.01-.81.18-1.52.53-2.13.35-.6.81-1.13 1.41-1.58.28-.23.58-.46.89-.68.31-.22.59-.46.85-.71.26-.26.48-.53.63-.83.16-.3.25-.64.26-1.02 0-.18-.02-.37-.06-.57-.04-.2-.11-.39-.22-.56s-.26-.31-.45-.43-.44-.18-.75-.18c-.28 0-.52.06-.71.19s-.34.3-.45.52c-.11.22-.2.48-.25.78-.05.3-.08.62-.09.97h-1.43c0-.54.07-1.04.2-1.5.13-.47.32-.87.58-1.2.26-.34.58-.6.95-.78.37-.19.81-.29 1.3-.29.54 0 .99.09 1.35.29.36.19.65.44.87.74.22.29.38.62.47.97.09.35.14.68.14 1 0 .4-.05.75-.16 1.07-.11.32-.26.61-.44.88-.19.27-.4.52-.63.74-.24.22-.48.43-.73.63s-.5.38-.75.56c-.26.17-.5.35-.71.53zM10 0c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1V9H2v6c0 .55-.45 1-1 1s-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v6h7V1c0-.55.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Bfg7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.97 9H19A9 9 0 001 9h.03C.41 9.73 0 10.8 0 12c0 1.74.84 3.2 2 3.76V16c0 1.66 1.34 3 3 3h3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H5c-.55 0-1-.45-1-1 .55 0 1-.45 1-1V9c0-.55-.45-1-1-1h-.92C3.57 4.61 6.47 2 10 2s6.43 2.61 6.92 6H16c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1c1.66 0 3-1.79 3-4 0-1.2-.41-2.27-1.03-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lvddc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 6.25C20 3.35 17.65 1 14.75 1c-1.02 0-1.95.31-2.75.82v-.04c-.09.06-.17.12-.26.19-.04.03-.09.06-.14.1-.68.51-1.24 1.18-1.6 1.96-.4-.86-1.04-1.57-1.8-2.1-.04-.02-.07-.05-.1-.08a7 7 0 00-.6-.33c-.13-.04-.23-.1-.35-.15-.05-.02-.1-.05-.15-.07v.02C6.45 1.13 5.87 1 5.25 1A5.25 5.25 0 000 6.25c0 .09.01.17.01.25H0c0 .06.01.12.02.18s.01.12.02.18C.13 7.89.44 9 1.07 10.17 2.23 12.33 4.1 14.11 7 16.53v.01c.9.75 1.89 1.55 3 2.46.71-.58 1.38-1.12 2-1.63 3.48-2.86 5.64-4.78 6.93-7.18.63-1.17.94-2.27 1.03-3.3.01-.07.01-.14.02-.21 0-.06.01-.11.02-.17h-.01c0-.09.01-.17.01-.26z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"drFsM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.11 7.45C8.05 7.31 8 7.16 8 7c0-.07.03-.13.04-.19h-.02l.86-4.32A5.159 5.159 0 005.25 1 5.25 5.25 0 000 6.25c0 .09.01.17.01.25H0c0 .06.01.12.02.18s.01.12.02.18C.13 7.89.44 9 1.07 10.17c1.38 2.58 3.76 4.6 7.71 7.83l-.76-3.8h.02c-.01-.07-.04-.13-.04-.2 0-.21.08-.39.18-.54l-.02-.01 1.68-2.52-1.73-3.48zM20 6.25C20 3.35 17.65 1 14.75 1c-1.54 0-2.92.67-3.88 1.73l-.83 4.13 1.85 3.69h-.01c.07.14.12.29.12.45 0 .21-.08.39-.18.54l.02.01-1.77 2.66.81 4.07c4.16-3.39 6.63-5.45 8.05-8.1.63-1.17.94-2.27 1.03-3.3.01-.07.01-.14.02-.21 0-.06.01-.11.02-.17h-.01c0-.08.01-.16.01-.25z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hj0tp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 12h6V8h-6v4zM0 12h6V8H0v4zm1-3h4v2H1V9zm-1 7c0 .55.45 1 1 1h5v-4H0v3zM19 3h-5v4h6V4c0-.55-.45-1-1-1zm0 3h-4V4h4v2zM0 4v3h6V3H1c-.55 0-1 .45-1 1zm7 3h6V3H7v4zm7 10h5c.55 0 1-.45 1-1v-3h-6v4zm-7 0h6v-4H7v4zm1-3h4v2H8v-2zm-1-2h6V8H7v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"oxgUK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 0a6 6 0 100 12A6 6 0 106 0z",
    "M10.5 8a4.5 4.5 0 100 9 4.5 4.5 0 100-9z",
    "M16.5 7a3.5 3.5 0 100 7 3.5 3.5 0 100-7zM18 16a2 2 0 100 4 2 2 0 100-4zM2.5 14a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM16.5 0a2.5 2.5 0 100 5 2.5 2.5 0 100-5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gjPBP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 3v2H1V3.5a.5.5 0 00-1 0v5a.5.5 0 001 0V7l5 2c0 1.54.824 3.575 3 4.835V16H5.5a.5.5 0 100 1H16.5a.5.5 0 00.224-.053l2-1a.5.5 0 10-.448-.894L16.382 16H15v-1.1A5.002 5.002 0 0014 5h-1V3h6.5a.5.5 0 000-1h-16a.5.5 0 000 1H10zm4 13v-1c-1.608 0-2.928-.258-4-.683V16h4zm0-6V6a4 4 0 014 4h-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g7srM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7.41 4.62c.65-.54 1.51-.82 2.56-.82.54 0 1.03.08 1.48.25.44.17.83.39 1.14.68.32.29.56.63.74 1.02.17.39.26.82.26 1.27s-.08.87-.24 1.23c-.16.37-.4.73-.71 1.11l-1.21 1.58c-.14.17-.28.33-.32.48-.05.15-.11.35-.11.6v.97H9v-2s.06-.58.24-.81l1.21-1.64c.25-.3.41-.56.51-.77s.14-.44.14-.67c0-.35-.11-.63-.32-.85s-.5-.33-.88-.33c-.37 0-.67.11-.89.33-.22.23-.37.54-.46.94-.03.12-.11.17-.23.16l-1.95-.29c-.12-.01-.16-.08-.14-.22.13-.93.52-1.67 1.18-2.22zM9 14h2.02L11 16H9v-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8dWrF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 10h-3v3h3v-3zm0 4h-3v3h3v-3zm0-8h-3v3h3V6zm2-6H1C.4 0 0 .4 0 1v18c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V1c0-.6-.5-1-1-1zm-1 18H2V2h16v16zm-9-4H6v3h3v-3zm4 0h-3v3h3v-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d2gGE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 16v4H8v-4h4zm1-16l-1 14H8L7 0h6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fwTA7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.22 14.09l3.03-3.03.71.71L20 6.73l-5.71-5.71-5.04 5.04.71.71-3.02 3.04 4.28 4.28zm6.8 3.91h-16c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zm-15-1h4.04c.28 0 .53-.11.71-.3l2.02-2.02-3.44-3.45-4.04 4.04c-.18.18-.3.44-.3.71.01.57.46 1.02 1.01 1.02z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fhqll":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C6.71 0 3.82 1.6 2 4.05V2c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.76C5.23 3.17 7.47 2 10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8c0-.55-.45-1-1-1s-1 .45-1 1c0 5.52 4.48 10 10 10s10-4.48 10-10S15.52 0 10 0zm0 3c-.55 0-1 .45-1 1v6c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L11 9.59V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a79nI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 12v7c0 .55.45 1 1 1h5v-7h4v7h5c.55 0 1-.45 1-1v-7l-8-8-8 8zm17.71-2.71L17 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v1.59L10.71.3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-9 9a1.003 1.003 0 001.42 1.42L10 2.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gfRuD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1zm3 5h11c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm8 8H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm7-6H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h15c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2DhIW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 9h11c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0-5h9c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm18 12H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM1 14h14c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d5cbD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 16H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm2-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h11c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm3-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm4-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dc9xq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 2H8c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM1 0C.45 0 0 .45 0 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm18 0c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3C3tW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.293 13.707a.999.999 0 001.412 0l2.963-2.962a1 1 0 000-1.49l-2.963-2.962a.999.999 0 10-1.412 1.412L13.587 10l-2.294 2.295a.999.999 0 000 1.412zM7.295 13.707a.999.999 0 001.412-1.412L6.413 10l2.294-2.295a.999.999 0 10-1.412-1.412L4.332 9.255A.996.996 0 004 10a.996.996 0 00.332.745l2.963 2.962zM0 20V0h1a1 1 0 011 1v18a1 1 0 01-1 1H0zM20 20V0h-1a1 1 0 00-1 1v18a1 1 0 001 1h1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2KCDs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 14c1.648.775 3 1 4 1-1-1-2-3.112-2-5a5.098 5.098 0 000-.045C2 5.17 6.201 1 11.172 1c3.206 0 6.9.667 8.828 5-1.648-.775-3-1-4-1 1 1 2 3.112 2 5v.045C18 14.83 13.799 19 8.828 19c-3.206 0-6.9-.667-8.828-5zm10-7a3 3 0 100 6 3 3 0 000-6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8ozlw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 5v10h16V5H2zm0-2h16c1.1 0 2 .9 2 2v10c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z",
    "M8.88 12.38c-.17-.39-1.01-.66-1.56-.9-.56-.24-.48-.39-.5-.6v-.09c.19-.17.35-.4.45-.67 0 0 0-.02.01-.02l.06-.18c.13-.03.2-.17.23-.29.03-.05.09-.18.08-.33-.04-.18-.11-.27-.2-.3v-.03c0-.24-.02-.58-.06-.81-.01-.06-.02-.12-.04-.19-.08-.27-.25-.52-.48-.7C6.63 7.09 6.3 7 6 7s-.63.09-.87.27c-.23.17-.4.42-.48.7-.02.06-.03.13-.04.19-.04.22-.06.57-.06.81V9c-.09.03-.17.12-.19.31-.01.14.05.27.08.32.03.14.1.27.23.3.02.06.03.12.06.18v.01c.11.27.27.51.47.68v.08c-.02.2.04.35-.51.6-.56.24-1.39.51-1.56.9-.19.39-.12.62-.12.62h5.98c-.01 0 .06-.23-.11-.62zM12 7h4c.55 0 1 .45 1 1s-.45 1-1 1h-4c-.55 0-1-.45-1-1s.45-1 1-1zM12 11h4c.55 0 1 .45 1 1s-.45 1-1 1h-4c-.55 0-1-.45-1-1s.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k9txA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.5 13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM14 7H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 10l-5-3-1 2-2-4-3 4.5V9h11v8zm3-15h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H16c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bcQ0r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.29 4.29a1.003 1.003 0 001.42 1.42l2-2C8.89 3.53 9 3.28 9 3c0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H4C1.79 2 0 3.79 0 6v3c0 .55.45 1 1 1s1-.45 1-1V6c0-1.1.9-2 2-2h1.59l-.3.29zM15.5 13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM19 7H6c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 10l-5-3-1 2-2-4-3 4.5V9h11v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eKAzI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.29 15.71c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 00-1.42-1.42L11 12.59V1c0-.55-.45-1-1-1S9 .45 9 1v11.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l5 5zM19 14c-.55 0-1 .45-1 1v3H2v-3c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4MNoB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.92 3.56l-.01-.02c-.16-.35-.5-.6-.91-.6H4c-.41 0-.76.25-.91.6l-.01.02L0 10.49v6.46c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-6.46l-3.08-6.93zM15 10.95c-.55 0-1 .45-1 1v1H6v-1c0-.55-.45-1-1-1H1.98l2.67-6h10.7l2.67 6H15z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4pu8r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.262 3l1.958 1.958v.05H4.65l-2.67 5.997H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h3.02l-.635-1.426.625-.63c.354-.353.598-.8.707-1.289L20 10.545v6.456c0 .55-.45.999-1 .999H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h6.262zm9.088-3a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V4.13L11.19 1.1a.642.642 0 01.45-1.1h7.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jclxW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.427 3a7.467 7.467 0 00-.411 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8V13c.165.01.332 0 .5 0a7.48 7.48 0 005.5-2.4V17c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h3.427zm5.715-.596a.133.133 0 01-.193 0l-.374-.374a.133.133 0 010-.193.133.133 0 01.193 0l.373.374a.133.133 0 010 .193zm1.743.033c-.05 0-.088-.006-.088-.055 0-.05.038-.056.088-.056h.165c.05 0 .088.006.088.055 0 .05-.038.056-.088.056h-.165zm.539.632c-.05 0-.104-.044-.104-.094v-.23c0-.05.054-.094.104-.094.05 0 .104.044.104.094v.23c0 .05-.055.094-.104.094zm-3.575 2.304h.506l1.182 1.2c.006.005 0 .005 0 .01v.446c0 .187-.126.341-.319.341h-.098v.226c0 .192-.138.296-.33.296h.01v.792c0 .188-.181.336-.368.336s-.369-.149-.369-.335v-1.32h-.214c-.193 0-.308-.149-.308-.341V5.72c0-.192.115-.346.308-.346zM14.5 0C17.536 0 20 2.464 20 5.5S17.536 11 14.5 11A5.502 5.502 0 019 5.5C9 2.464 11.464 0 14.5 0zm0 9.9c2.431 0 4.4-1.969 4.4-4.4 0-.297-.027-.583-.099-.864h-.236c-.188 0-.336-.104-.347-.313h-.319c.11.104.231.209.231.346v.705c0 .088-.055.17-.11.23h-.022l-.011.006-.022.011-.666.643v1.21c0 .193-.104.33-.296.33h-.54c-.192 0-.319-.137-.319-.33V6.221a.915.915 0 00-.533-.518h-.671c-.192 0-.368-.143-.368-.335V4.68c0-.192.176-.346.368-.346l.193-.005.319-.32a.342.342 0 01.489 0l.319.32c.005 0 .005.005.005.005h.704c.16 0 .237-.16.341-.313v-.11l-.038.005h-.27a.159.159 0 01-.153-.16c0-.087.066-.159.154-.159h.269l.039.006V3.42s-.05-.038-.061-.038h-.302l-.067.076a.342.342 0 01-.489.011l-.066-.088h-.176l.248.259c.021.022.021.088 0 .11-.028.022-.067.028-.088.006l-.292-.276h-.127l-.363.325-.033-.006c-.038.11-.087.089-.143.089-.126 0-.225-.072-.225-.193 0-.127.099-.209.225-.209h.176v-.182c0-.088.061-.131.149-.131h.066v-.127c0-.143.149-.297.286-.297h.28c.16 0 .27-.115.27-.275V2.42c0-.016.055.017.055-.088h-.187l-.005.017-.308.33a.123.123 0 01-.177 0c-.049-.044-.049-.121 0-.171l.391-.385c.027-.022.06-.022.094-.022l.005.022h.869A4.376 4.376 0 0014.5 1.1a4.402 4.402 0 00-2.816 1.018h.583c.094 0 .165.066.165.159s-.072.16-.165.16h-.478c0 .104-.039.06-.039.066v.351h.429l.226-.252c.132-.127.346-.155.473-.022a.332.332 0 010 .473l-1.183 1.182-.011.011c-.005.005-.011.005-.016.011a.115.115 0 00-.034.022c-.005.006-.01 0-.016.006a.309.309 0 01-.176.038h-.347c-.12.104-.187.148-.187.27v.088c0 .016-.027.027-.027.043l.561.589c.06.06.055.154 0 .209a.143.143 0 01-.209 0l-.578-.578a.425.425 0 01-.082.011c-.154 0-.292-.12-.292-.274v-.358h-.016c-.104.374-.165.77-.165 1.177 0 2.431 1.969 4.4 4.4 4.4zm3.388-3.107c.077 0 .16.06.16.137v.424c0 .077-.083.137-.16.137s-.16-.06-.16-.137V6.93c0-.077.083-.137.16-.137zm-3.113-4.879c0 .187-.154.314-.335.314h-.374v.104c0 .11-.05.198-.16.198s-.16-.088-.16-.198V1.98c-.104-.022-.033-.028-.033-.055 0-.187.127-.325.314-.325h.407c.187 0 .341.127.341.314z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kVSL0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.136 3a6.327 6.327 0 00-.098 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h1.076l1.14 1.14a2.767 2.767 0 001.974.806c.282 0 .554-.042.81-.12V17c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h3.136zm3.244 1.33c0 1.62 1.31 2.93 2.93 2.93s2.93-1.31 2.93-2.93-1.31-2.93-2.93-2.93-2.93 1.31-2.93 2.93zm6.47 2.43l2.89 2.85c.13.15.22.35.23.56 0 .43-.35.78-.78.78-.23 0-.42-.08-.56-.22l-2.87-2.87c-.17.1-.33.2-.51.29-.03.01-.06.03-.09.04-.18.07-.35.15-.55.21-.19.06-.37.11-.57.14-.05.01-.1.02-.14.02-.2.03-.39.05-.6.05A4.3 4.3 0 019 4.31C9 1.93 10.93.01 13.3 0c2.37 0 4.3 1.93 4.3 4.3 0 .21-.02.4-.05.6-.01.05-.01.09-.02.14-.04.2-.08.38-.14.58-.05.19-.13.36-.21.54-.01.03-.03.06-.04.09-.08.18-.18.34-.29.51z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gyYNn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.083 3a6.04 6.04 0 00.001 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h3.02l-.53-1.19a5.97 5.97 0 001.824-.811L20 10.545v6.456c0 .55-.45.999-1 .999H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h6.083zM16 8a4 4 0 110-8 4 4 0 010 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cLVzt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM9 4h2v2H9V4zm4 12H7v-1h2V8H8V7h3v8h2v1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Iy45":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 10c0 2.21 1.79 4 4 4h6.59l-2.29-2.29A.965.965 0 0114 11a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10c-3.31 0-6-2.69-6-6H1a1 1 0 01-1-1V1a1 1 0 011-1h8a1 1 0 011 1v8a1 1 0 01-1 1H6zM2 2v6h6V2H2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"qaqMl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 9c.55 0 1 .45 1 1v4c0 1.1.9 2 2 2h2.59l-.3-.29a1.003 1.003 0 011.42-1.42l2 2c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-2 2A1.003 1.003 0 016 19c0-.28.11-.53.3-.71l.29-.29H4c-2.21 0-4-1.79-4-4v-4c0-.55.45-1 1-1zm6.996-9c.79 0 1.68.25 2.309.73a3.63 3.63 0 011.4 2.36c.11.6.17 1.52.17 2.15v.09c.22.09.42.32.47.82.03.39-.12.73-.2.87-.07.34-.27.71-.61.78-.04.16-.09.33-.15.48-.01.01-.02.05-.02.05-.27.71-.68 1.33-1.19 1.78 0 .08 0 .16.01.23.05.55-.15.95 1.33 1.6 1.469.66 3.698 1.35 4.178 2.39.45 1.05.27 1.67.27 1.67h-5.227a1.982 1.982 0 00-.319-.417l-2-2A2.003 2.003 0 005 15H4c-.548 0-1-.452-1-1v-1.462c.511-.213 1.023-.413 1.468-.608 1.479-.65 1.329-1.05 1.379-1.59l.01-.21c-.52-.45-.95-1.08-1.22-1.8l-.01-.01-.01-.03c-.07-.15-.12-.32-.16-.49-.34-.06-.54-.43-.62-.78-.08-.14-.24-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.64.05-1.55.17-2.15a3.648 3.648 0 011.4-2.36C6.317.25 7.207 0 7.996 0zm5.997 3c.59 0 1.26.19 1.73.55.46.35.8.85.97 1.4.04.13.07.25.08.38.08.45.13 1.14.13 1.61v.07c.16.07.31.24.35.62.02.29-.09.55-.15.65-.05.26-.2.53-.46.59-.03.12-.07.25-.11.36-.01.01-.01.04-.01.04-.2.53-.51 1-.89 1.34 0 .06 0 .12.01.17.04.41-.11.71 1 1.19 1.099.5 2.768 1.01 3.128 1.79.34.79.2 1.25.2 1.25h-3.039V15c-.06-.33-.17-.69-.33-1.06-.45-.97-1.37-1.52-3.238-2.3-.17-.07-.76-.31-.77-.32-.1-.04-.2-.08-.28-.12.05-.14.04-.29.06-.45l.01-.16c-.25-.21-.47-.48-.65-.79.22-.34.41-.71.56-1.12l.028-.078-.002.013-.006.035.06-.15c.36-.26.6-.67.72-1.13.18-.37.29-.82.25-1.3-.05-.5-.21-.92-.47-1.22-.02-.53-.06-1.11-.12-1.59.38-.17.83-.26 1.24-.26z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jwSdc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zm-3.34 9.25c-.55-1.2-.86-2.54-.86-3.95s.31-2.75.86-3.95a4.001 4.001 0 000 7.9zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm.6 2.05c.55 1.2.86 2.54.86 3.95s-.31 2.75-.86 3.95c1.9-.31 3.36-1.96 3.36-3.95S16.5 6.36 14.6 6.05zM10 5.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fHTFN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0H1C.4 0 0 .4 0 1v18c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V1c0-.6-.5-1-1-1zm-1 18H2V2h16v16zM5 11h4v4c0 .6.4 1 1 1s1-.4 1-1v-4h4c.6 0 1-.4 1-1s-.4-1-1-1h-4V5c0-.6-.4-1-1-1s-1 .4-1 1v4H5c-.6 0-1 .4-1 1s.4 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2xoo9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 4c-1.31 0-2.51.43-3.5 1.14A5.977 5.977 0 006 4c-3.31 0-6 2.69-6 6s2.69 6 6 6c1.31 0 2.51-.43 3.5-1.14.99.71 2.19 1.14 3.5 1.14 3.31 0 6-2.69 6-6s-2.69-6-6-6zm-4.93 9.41c-.61.37-1.31.59-2.07.59-2.21 0-4-1.79-4-4s1.79-4 4-4c.76 0 1.46.22 2.07.59C7.4 7.56 7 8.73 7 10s.4 2.44 1.07 3.41zM13 14c-.76 0-1.46-.22-2.07-.59C11.6 12.44 12 11.27 12 10s-.4-2.44-1.07-3.41C11.54 6.22 12.24 6 13 6c2.21 0 4 1.79 4 4s-1.79 4-4 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kiC9r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 3.66C6 5.69 10 11 10 11s4-5.31 4-7.34C13.99 1.64 12.21 0 10 0S6 1.64 6 3.66zM8 4c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zM14 13.5V13h-4v1h3v2h-2v1h3v-3.5zM3 12h14c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1zm4 1v6h1v-6H7zm3 1v5h1v-5h-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"19GEA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zm1-2H9v-2h2v2zm0-3H9V4h2v9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g5CCW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.364 5.9a.997.997 0 01-.707-.293l-2.121-2.122a1 1 0 111.414-1.414l1.414 1.414L18.192.657a1 1 0 011.414 1.414l-3.535 3.536a.997.997 0 01-.707.292zM11.78.157a3.002 3.002 0 00-1.437 1.85 8 8 0 107.1 5.055l.042-.042 1.472-1.472A9.959 9.959 0 0120 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0c.608 0 1.202.054 1.78.158zM11 16H9v-2h2v2zm0-3H9V4h2v9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kSSha":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.167.512a2.98 2.98 0 00-.131.524c-.74.115-1.39.5-1.848 1.052a8 8 0 106.724 6.724 2.997 2.997 0 001.052-1.848 2.98 2.98 0 00.524-.13A9.99 9.99 0 0120 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0a9.99 9.99 0 013.167.512zM11 16H9v-2h2v2zm0-3H9V4h2v9zm6-10h1.5a1 1 0 010 2H17v1.5a1 1 0 01-2 0V5h-1.5a1 1 0 010-2H15V1.5a1 1 0 012 0V3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ds8kd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.7 4H14c.6 0 1-.4 1-1s-.4-1-1-1H7c-.6 0-1 .4-1 1s.4 1 1 1h2.2L7.3 15H5c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1H9.8l1.9-11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gJxnu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 6h-4V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h4v4c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM6 12H2V9h4v3zm0-4H2V5h4v3zm7 9H7v-3h6v3zm0-4H7V9h6v4zm0-5H7V5h6v3zm5 9h-4v-3h4v3zm0-4h-4v-3h4v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"OPMd6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 0c-3.31 0-6 2.69-6 6 0 1.11.32 2.14.85 3.03L.44 17.44a1.498 1.498 0 102.12 2.12l.79-.79.94.94c.18.18.43.29.71.29s.53-.11.71-.29l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-.94-.94 3.2-3.2A5.9 5.9 0 0014 12c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 9c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5hKui":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 3H7c-.28 0-.53.11-.71.29l-6 6C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l6 6c.18.18.43.29.71.29h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-2.29 9.29a1.003 1.003 0 01-1.42 1.42L13 11.41l-2.29 2.29c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71l2.3-2.29-2.3-2.29a1.003 1.003 0 011.42-1.42L13 8.59l2.29-2.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L14.41 10l2.3 2.29z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2j9uA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.5 12H14V8h1.5C17.43 8 19 6.43 19 4.5S17.43 1 15.5 1 12 2.57 12 4.5V6H8V4.5C8 2.57 6.43 1 4.5 1S1 2.57 1 4.5 2.57 8 4.5 8H6v4H4.5C2.57 12 1 13.57 1 15.5S2.57 19 4.5 19 8 17.43 8 15.5V14h4v1.5c0 1.93 1.57 3.5 3.5 3.5s3.5-1.57 3.5-3.5-1.57-3.5-3.5-3.5zm0-9c.83 0 1.5.67 1.5 1.5S16.33 6 15.5 6 14 5.33 14 4.5 14.67 3 15.5 3zm-11 14c-.83 0-1.5-.67-1.5-1.5S3.67 14 4.5 14s1.5.67 1.5 1.5S5.33 17 4.5 17zm0-11C3.67 6 3 5.33 3 4.5S3.67 3 4.5 3 6 3.67 6 4.5 5.33 6 4.5 6zm7.5 6H8V8h4v4zm3.5 5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8Wzb5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.71 7.29l-6-6C10.53 1.11 10.28 1 10 1s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42L10 3.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j7500":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.71 9.29l-6-6A.997.997 0 0013 3H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.28 0 .53-.11.71-.29l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zm-9 3a1.003 1.003 0 01-1.42 1.42L7 11.41 4.71 13.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L5.59 10l-2.3-2.29a1.003 1.003 0 011.42-1.42L7 8.59 9.29 6.3c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L8.41 10l2.3 2.29z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eodfQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 2c-.55 0-1 .45-1 1v5c0 2.21-1.79 4-4 4H4.41L6.7 9.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 14H13c3.31 0 6-2.69 6-6V3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3id53":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 8c.55 0 1-.45 1-1V4.41l6.29 6.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 3H7c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1zm9-6.94V3.1c3.39.49 6 3.38 6 6.9 0 3.87-3.13 7-7 7-3.52 0-6.41-2.61-6.9-6H1.06c.5 4.5 4.31 8 8.94 8a9 9 0 009-9c0-4.63-3.5-8.44-8-8.94z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bblGq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 4h6c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1zm6 12h-4.42L6.87 2.5l-.02.01A.977.977 0 006 2H1c-.55 0-1 .45-1 1s.45 1 1 1h4.42l7.71 13.5.01-.01c.18.3.49.51.86.51h5c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4jd1l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.74 10.35l-6.99-8.01-.01.01C10.56 2.14 10.3 2 10 2s-.56.14-.74.35l-.01-.01-7 8 .01.01A.95.95 0 002 11c0 .55.45 1 1 1h3v5c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-5h3c.55 0 1-.45 1-1 0-.25-.1-.48-.26-.65z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bCbi2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 13H4.41l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L2 12.59V10c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1s1-.45 1-1v-2.59l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 15H19c.55 0 1-.45 1-1s-.45-1-1-1zm0-12c-.55 0-1 .45-1 1v2.59L14.71 1.3A.965.965 0 0014 1a1.003 1.003 0 00-.71 1.71L15.59 5H1c-.55 0-1 .45-1 1s.45 1 1 1h14.59L13.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 7.41V10c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g7fPt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 4a.997.997 0 00-.707.293L14 8.586l-2.293-2.293a1 1 0 00-1.414 1.414l3 3a.997.997 0 001.414 0l5-5A1 1 0 0019 4zm-2.048 7.291c.011.072.048.134.048.209a1.5 1.5 0 01-1.5 1.5c-.225 0-.433-.057-.624-.145-.279.085-.57.145-.876.145a2.99 2.99 0 01-2.121-.879l-3-3 .007-.007A3.027 3.027 0 018.184 8H4V7l1-3h10l.19.568 1.307-1.308c-.336-.356-.758-.658-1.165-.772 0 0-1.74-.488-5.332-.488s-5.332.488-5.332.488c-.67.188-1.424.864-1.674 1.502L2.99 4H3L2 7H1a1 1 0 000 2h.333l-.28.84L1 10v7.5a1.5 1.5 0 103 0V17h12v.5a1.5 1.5 0 003 0V10l-.19-.568-1.858 1.86zM4.5 13a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6h0PJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 2a1 1 0 010 2v4l4 8v1a1 1 0 01-1 1H4a1 1 0 01-1-1v-1l4-8V4a1 1 0 110-2h6zm-2 2H9v4l-2 4h6l-2-4V4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1EmaT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 12h14v-1H3v1zm11-9H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V9l-6-6zm4 12H2V5h11v3H3v1h10v1h5v5zm-4-6V5l4 4h-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c4iBQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.5 9.1l-9-5c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1l-9 5c-.3.2-.5.5-.5.9s.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9s-.2-.7-.5-.9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"88j5i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.514 4.126l-9 5a1 1 0 000 1.748l9 5a1 1 0 00.972 0l9-5a1 1 0 000-1.748l-9-5a1 1 0 00-.972 0zM10 6.144l6.94 3.855L10 13.855 3.059 9.999 10 6.144z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8lv7G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M.5 6.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9s-.2-.7-.5-.9l-9-5c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1l-9 5c-.3.2-.5.5-.5.9s.2.7.5.9z",
    "M19 9c-.2 0-.3 0-.5.1L10 13.9 1.5 9.1C1.3 9 1.2 9 1 9c-.6 0-1 .4-1 1 0 .4.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9 0-.6-.4-1-1-1z",
    "M19 13c-.2 0-.3 0-.5.1L10 17.9l-8.5-4.7c-.2-.2-.3-.2-.5-.2-.6 0-1 .4-1 1 0 .4.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9 0-.6-.4-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4uM19":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 6c-1.1 0-2 .9-2 2 0 .37.11.71.28 1.01l-2.27 2.27c-.3-.17-.64-.28-1.01-.28-.93 0-1.71.64-1.93 1.5H8.93c-.22-.86-1-1.5-1.93-1.5-.37 0-.71.11-1.01.28L3.72 9.01C3.89 8.71 4 8.37 4 8c0-.34-.09-.66-.24-.94l3.66-3.38c.31.2.68.32 1.08.32 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .34.09.66.24.94L3.08 6.32C2.77 6.12 2.4 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.37 0 .71-.11 1.01-.28l2.27 2.27c-.17.3-.28.64-.28 1.01s.11.71.28 1.01l-2.27 2.27C2.71 16.11 2.37 16 2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28.93 0 1.71-.64 1.93-1.5h2.14c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2 0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28 1.1 0 2-.9 2-2s-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aKC7j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 13c-.53 0-1.01.21-1.37.55L11.9 10.6c.06-.19.1-.39.1-.6s-.04-.41-.1-.6l4.72-2.95c.37.34.85.55 1.38.55 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .21.04.41.1.6l-4.73 2.96c-.24-.23-.54-.4-.87-.48V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.33.09-.63.26-.87.48L3.9 5.6c.06-.19.1-.39.1-.6 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.53 0 1.01-.21 1.37-.55L8.1 9.4c-.06.19-.1.39-.1.6s.04.41.1.6l-4.72 2.95C3.01 13.21 2.53 13 2 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.21-.04-.41-.1-.6l4.73-2.96c.24.23.54.4.87.48v4.14C8.64 16.29 8 17.07 8 18c0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.33-.09.63-.26.87-.48l4.73 2.96c-.06.18-.1.38-.1.59 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Mm07":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 16c-.14 0-.28.02-.42.05l-1.73-3.45c.69-.45 1.14-1.22 1.14-2.1s-.46-1.65-1.14-2.1l1.73-3.45c.14.03.28.05.42.05 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .6.27 1.13.69 1.5l-1.77 3.54c-.14-.02-.28-.04-.42-.04a2.5 2.5 0 00-2.45 2h-4.1A2.5 2.5 0 005.5 8c-.14 0-.28.02-.42.04L3.31 4.5C3.73 4.13 4 3.6 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.14 0 .28-.02.42-.05L4.14 8.4C3.46 8.85 3 9.62 3 10.5s.46 1.65 1.14 2.1l-1.73 3.45A1.84 1.84 0 002 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.6-.27-1.13-.69-1.5l1.77-3.54c.14.02.28.04.42.04a2.5 2.5 0 002.45-2h4.1a2.5 2.5 0 002.45 2c.14 0 .28-.02.42-.04l1.77 3.54c-.42.37-.69.9-.69 1.5 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"162TF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.3 8c-.2-.9-.6-1.7-1.1-2.5.2-.3.3-.7.3-1 0-1.1-.9-2-2-2-.4 0-.7.1-1 .3-.8-.5-1.6-.8-2.5-1.1-.1-1-1-1.7-2-1.7S8.2.8 8 1.7c-.9.3-1.7.6-2.5 1.1-.3-.2-.7-.3-1-.3-1.1 0-2 .9-2 2 0 .4.1.7.3 1-.5.8-.8 1.6-1.1 2.5C.8 8.2 0 9 0 10s.8 1.8 1.7 2c.2.9.6 1.7 1.1 2.5-.2.3-.3.7-.3 1 0 1.1.9 2 2 2 .4 0 .7-.1 1-.3.8.5 1.6.8 2.5 1.1.1 1 1 1.7 2 1.7s1.8-.8 2-1.7c.9-.2 1.7-.6 2.5-1.1.3.2.7.3 1 .3 1.1 0 2-.9 2-2 0-.4-.1-.7-.3-1 .5-.8.8-1.6 1.1-2.5 1-.1 1.7-1 1.7-2s-.8-1.8-1.7-2zm-1.8 5.8c-.3-.2-.6-.3-1-.3-1.1 0-2 .9-2 2 0 .4.1.7.3 1-.6.3-1.2.6-1.9.8-.3-.7-1-1.3-1.9-1.3-.8 0-1.6.5-1.9 1.3-.7-.2-1.3-.4-1.9-.8.2-.3.3-.6.3-1 0-1.1-.9-2-2-2-.4 0-.7.1-1 .3-.3-.6-.6-1.2-.8-1.9.8-.3 1.3-1.1 1.3-1.9s-.5-1.6-1.2-1.8c.2-.7.4-1.3.8-1.9.3.2.6.3 1 .3 1.1 0 2-.9 2-2 0-.4-.1-.7-.3-1 .6-.3 1.2-.6 1.9-.8.2.7 1 1.2 1.8 1.2s1.6-.5 1.9-1.3c.7.2 1.3.4 1.9.8-.2.3-.3.6-.3 1 0 1.1.9 2 2 2 .4 0 .7-.1 1-.3.3.6.6 1.2.8 1.9-.8.3-1.3 1.1-1.3 1.9s.5 1.6 1.2 1.8c-.1.7-.4 1.4-.7 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"49RUJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 0a2 2 0 100 4 2 2 0 100-4zM10 0a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM10 16a2 2 0 100 4 2 2 0 100-4zM2 16a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM10 8a2 2 0 100 4 2 2 0 100-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"amC6f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 2a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM2 14a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM13 12a2 2 0 100 4 2 2 0 100-4zM13 4a2 2 0 100 4 2 2 0 100-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jF5Aw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.5 16.07v-4.14c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2-.93 0-1.71.64-1.93 1.5h-4.14c-.18-.7-.73-1.25-1.43-1.43V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.7.18-1.25.73-1.43 1.43H3.93C3.71 8.64 2.93 8 2 8c-1.1 0-2 .9-2 2 0 .93.64 1.71 1.5 1.93v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.7-.18 1.25-.73 1.43-1.43h4.14c.18.7.73 1.25 1.43 1.43v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.7-.18 1.25-.73 1.43-1.43h4.14c.18.7.73 1.25 1.43 1.43v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bsT7x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.5 7a2.5 2.5 0 00-2.45 2h-2.1a2.5 2.5 0 00-4.9 0h-2.1a2.5 2.5 0 100 1h2.1a2.5 2.5 0 004.9 0h2.1a2.5 2.5 0 102.45-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hlpzW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 0a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM2 16a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM10 12a2 2 0 100 4 2 2 0 100-4zM10 4a2 2 0 100 4 2 2 0 100-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jhL74":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm16 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-8 4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aatbD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.551 1.127a1.256 1.256 0 00-1.102 0L.456 5.89c-.608.309-.608.913 0 1.222l8.993 4.762c.334.17.767.17 1.102 0l8.992-4.762c.61-.309.61-.913 0-1.222l-8.992-4.762z",
    "M18 6.5l.016 4.514c.002.548.447.99.994.99a.99.99 0 00.99-.99V6.5h-2zM3.366 10.033l6.401 3.358a.5.5 0 00.465 0l6.406-3.358a.25.25 0 01.366.221v5.109a.25.25 0 01-.139.224l-6.64 3.302a.5.5 0 01-.446 0l-6.64-3.302A.25.25 0 013 15.363v-5.108a.25.25 0 01.366-.222z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eY6UC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm.6 2.05c.55 1.2.86 2.54.86 3.95s-.31 2.75-.86 3.95c1.9-.31 3.36-1.96 3.36-3.95S16.5 6.36 14.6 6.05zM10 5.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"givic":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.162 10l9.154 3.052a1 1 0 01-.632 1.897l-12-4c-.912-.304-.912-1.594 0-1.897l12-4a1 1 0 01.632 1.897L7.162 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dRN3z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.316 11.051L7.162 8l9.154-3.051a1 1 0 10-.632-1.898l-12 4c-.912.304-.912 1.594 0 1.898l12 4a1 1 0 10.632-1.898zM16 15H4a1 1 0 100 2h12a1 1 0 100-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3G8TT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.143 14.644L7.028 17.43c.919.368 1.922.57 2.972.57s2.053-.202 2.972-.57l-1.115-2.786A4.986 4.986 0 0110 15a4.986 4.986 0 01-1.857-.356zm-2.787-2.787A4.986 4.986 0 015 10c0-.656.126-1.283.356-1.857L2.57 7.028A7.978 7.978 0 002 10c0 1.05.202 2.053.57 2.972l2.786-1.115zm2.787-6.5A4.986 4.986 0 0110 5c.656 0 1.283.126 1.857.356l1.115-2.786A7.978 7.978 0 0010 2c-1.05 0-2.053.202-2.972.57l1.115 2.786zm6.5 2.786c.23.574.357 1.2.357 1.857 0 .656-.126 1.283-.356 1.857l2.786 1.115c.368-.919.57-1.922.57-2.972s-.202-2.053-.57-2.972l-2.786 1.115zM10 13a3 3 0 100-6 3 3 0 000 6zm0 7C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ch75z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.33 13.39c0 .34.27.61.6.61h6.13c.33 0 .6-.27.6-.61C14.03 9.78 16 9.4 16 6.09 16 2.72 13.31 0 10 0S4 2.72 4 6.09c0 3.31 1.97 3.69 2.33 7.3zM13 15H7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-1 3H8c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fsaFM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 11H6a1 1 0 01-1-1L5.91.9a1 1 0 01.995-.9h6.256a.839.839 0 01.779 1.15L11.2 8h2.978a.822.822 0 01.748 1.162l-4.764 10.481A.608.608 0 019 19.392V11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1fPsq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10.85 11.98l-4.44 4.44-1 1c-.36.36-.86.58-1.41.58-1.1 0-2-.9-2-2 0-.55.22-1.05.59-1.41l5.44-5.44C7.69 9.06 7.36 9 7 9c-1.11 0-2.09.46-2.82 1.18l-.01-.01-3 3 .01.01C.46 13.91 0 14.89 0 16c0 2.21 1.79 4 4 4 1.11 0 2.09-.46 2.82-1.18l.01.01 3-3-.01-.01C10.54 15.09 11 14.11 11 13c0-.36-.06-.69-.15-1.02zM20 4c0-2.21-1.79-4-4-4-1.11 0-2.09.46-2.82 1.18l-.01-.01-3 3 .01.01C9.46 4.91 9 5.89 9 7c0 .36.06.69.15 1.02l4.44-4.44 1-1c.36-.36.86-.58 1.41-.58 1.1 0 2 .9 2 2 0 .55-.22 1.05-.59 1.41l-5.44 5.44c.34.09.67.15 1.03.15 1.11 0 2.09-.46 2.82-1.18l.01.01 3-3-.01-.01C19.54 6.09 20 5.11 20 4zM5 14a1.003 1.003 0 001.71.71l8-8a1.003 1.003 0 00-1.42-1.42l-2 2-2 2-2 2-2 2c-.18.18-.29.43-.29.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ixVCl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.03 1C.46 1 0 1.46 0 2.03v.95C0 3.54.46 4 1.03 4h17.95C19.54 4 20 3.54 20 2.97v-.94C20 1.46 19.54 1 18.97 1H1.03zM0 17.97C0 18.54.46 19 1.03 19h17.95c.56 0 1.03-.46 1.03-1.03v-.95c0-.56-.46-1.03-1.03-1.03H1.03C.46 16 0 16.46 0 17.03v.94zM0 12.97C0 13.54.46 14 1.03 14h17.95c.56 0 1.03-.46 1.03-1.03v-.95c0-.56-.46-1.03-1.03-1.03H1.03C.46 11 0 11.46 0 12.03v.94zM0 7.97C0 8.54.46 9 1.03 9h17.95C19.54 9 20 8.54 20 7.97v-.94C20 6.46 19.54 6 18.97 6H1.03C.46 6 0 6.46 0 7.03v.94z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h2jrJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 2.973v-.936C0 1.468.46 1.01 1.029 1H7.97C8.541 1 9 1.468 9 2.027v.946C9 3.542 8.53 4 7.971 4H1.03C.459 4 0 3.542 0 2.973zm0 5v-.936C0 6.468.46 6.01 1.029 6H7.97C8.541 6 9 6.468 9 7.027v.946C9 8.542 8.53 9 7.971 9H1.03C.459 9 0 8.542 0 7.973zm0 5v-.936C0 11.468.46 11.01 1.029 11H7.97C8.541 11 9 11.468 9 12.027v.946C9 13.542 8.53 14 7.971 14H1.03C.459 14 0 13.542 0 12.973zm0 5v-.936C0 16.468.46 16.01 1.029 16H7.97C8.541 16 9 16.468 9 17.027v.946C9 18.542 8.53 19 7.971 19H1.03C.459 19 0 18.542 0 17.973zm11-15v-.936c0-.569.46-1.027 1.029-1.037h6.942C19.541 1 20 1.468 20 2.027v.946C20 3.542 19.53 4 18.971 4H12.03C11.459 4 11 3.542 11 2.973zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942C19.541 6 20 6.468 20 7.027v.946C20 8.542 19.53 9 18.971 9H12.03C11.459 9 11 8.542 11 7.973zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942c.57 0 1.029.468 1.029 1.027v.946c0 .569-.47 1.027-1.029 1.027H12.03c-.57 0-1.029-.458-1.029-1.027zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942c.57 0 1.029.468 1.029 1.027v.946c0 .569-.47 1.027-1.029 1.027H12.03c-.57 0-1.029-.458-1.029-1.027z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9YPFp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 6H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM8 1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm11 0h-7c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b34XP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm9 1h-1.07c-.45-3.61-3.32-6.45-6.93-6.91V1c0-.55-.45-1-1-1S9 .45 9 1v1.09C5.39 2.55 2.52 5.39 2.07 9H1c-.55 0-1 .45-1 1s.45 1 1 1h1.07c.45 3.61 3.32 6.45 6.93 6.91V19c0 .55.45 1 1 1s1-.45 1-1v-1.09c3.61-.46 6.48-3.29 6.93-6.91H19c.55 0 1-.45 1-1s-.45-1-1-1zm-4 2h.9a5.98 5.98 0 01-4.9 4.91V15c0-.55-.45-1-1-1s-1 .45-1 1v.91A5.98 5.98 0 014.1 11H5c.55 0 1-.45 1-1s-.45-1-1-1h-.9A5.98 5.98 0 019 4.09V5c0 .55.45 1 1 1s1-.45 1-1v-.91A5.98 5.98 0 0115.9 9H15c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fUB9L":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.93 9H14V4.99c0-2.21-1.79-4-4-4s-4 1.79-4 4V9H3.93c-.55 0-.93.44-.93.99v8c0 .55.38 1.01.93 1.01h12c.55 0 1.07-.46 1.07-1.01v-8c0-.55-.52-.99-1.07-.99zM8 9V4.99c0-1.1.9-2 2-2s2 .9 2 2V9H8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"51n4u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0h-8c-.55 0-1 .45-1 1s.45 1 1 1h7v16h-7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 10c0-.28-.11-.53-.29-.71l-5-5a1.003 1.003 0 00-1.42 1.42L11.59 9H1c-.55 0-1 .45-1 1s.45 1 1 1h10.59L8.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5-5c.18-.18.29-.43.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eSh3l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.71 9.29l-5-5a1.003 1.003 0 00-1.42 1.42L16.59 9H6c-.55 0-1 .45-1 1s.45 1 1 1h10.59l-3.29 3.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5-5c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM9 18H2V2h7c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6LfPZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 1.1a.976.976 0 00-.83-.88C15.15-.43 12.07.34 10 2.5 7.93.34 4.85-.43.84.22.37.3.03.67 0 1.1v15.01c0 .07 0 .14.01.21.09.52.61.88 1.15.79 3.85-.62 6.4.16 8 2.46.02.02.03.04.05.07.02.02.04.04.06.07l.01.01a1.07 1.07 0 00.28.19c.01 0 .01.01.02.01.03.01.07.03.1.04.01 0 .02.01.04.01.03.01.07.02.1.02.01 0 .02 0 .04.01H10c.04 0 .09 0 .13-.01.01 0 .03 0 .04-.01.03-.01.06-.01.1-.02.01 0 .03-.01.04-.01.03-.01.07-.02.1-.04.01 0 .02-.01.03-.01.07-.03.13-.07.19-.11.01 0 .01-.01.02-.01.02-.02.04-.03.06-.05.01-.01.02-.02.03-.02l.05-.05c.01-.01.02-.02.02-.03.01-.02.02-.03.04-.05 1.61-2.3 4.15-3.09 8-2.46.54.09 1.06-.26 1.15-.79-.01-.05 0-.09 0-.13V1.1zM9 16.63c-1.78-1.31-4.12-1.83-7-1.55V2c3.26-.37 5.51.39 7 2.35v12.28zm9-1.56c-2.88-.28-5.22.24-7 1.55V4.34c1.49-1.96 3.74-2.71 7-2.35v13.08z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j3F2Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 12h4.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm16.77-3.94l1.65-1.65c.36-.36.58-.86.58-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.82zM1 4h12.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zM0 15c0 .55.45 1 1 1h.34l2-2H1c-.55 0-1 .45-1 1zm1-7h8.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 2h-.34l-2 2H19c.55 0 1-.45 1-1s-.45-1-1-1zm0 4h-4.34l-2 2H19c.55 0 1-.45 1-1s-.45-1-1-1zM4 19l4.41-1.59-2.81-2.79L4 19zM14.23 5.94l-7.65 7.65 2.83 2.83 7.65-7.65-2.83-2.83z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1WgE4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 6a1 1 0 100-2 1 1 0 000 2zm0 2a3 3 0 01-2.73-1.754c-.2.068-.408.154-.617.264-.884.465-1.92 1.418-2.605 3.49.685 2.072 1.721 3.025 2.605 3.49.21.11.416.196.617.264a3 3 0 11-.165 2.034 6.262 6.262 0 01-1.383-.528c-.983-.518-1.948-1.364-2.722-2.705-.774 1.34-1.739 2.187-2.722 2.705-.48.252-.95.419-1.383.528A3.001 3.001 0 010 15a3 3 0 015.73-1.246c.2-.068.408-.154.617-.264.884-.465 1.92-1.418 2.605-3.49-.685-2.072-1.721-3.025-2.605-3.49a4.21 4.21 0 00-.617-.264 3 3 0 11.165-2.034c.433.11.904.276 1.383.528.983.518 1.948 1.364 2.722 2.705.774-1.34 1.739-2.187 2.722-2.705.48-.252.95-.419 1.383-.528A3.001 3.001 0 0120 5a3 3 0 01-3 3zM4 5a1 1 0 10-2 0 1 1 0 002 0zm12 10a1 1 0 102 0 1 1 0 00-2 0zM3 14a1 1 0 110 2 1 1 0 010-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i7iS4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 2a1 1 0 100 2 1 1 0 000-2zm0 4c1.296 0 2.4-.821 2.82-1.972.487.039 1.086.13 1.667.347.947.352 1.773 1 2.032 2.318.323 1.644 1.234 2.675 2.264 3.307-1.03.632-1.941 1.663-2.264 3.307-.259 1.318-1.085 1.966-2.032 2.318a6.244 6.244 0 01-1.668.347 3.001 3.001 0 10.019 2.004c.633-.042 1.491-.158 2.347-.476 1.402-.523 2.867-1.625 3.296-3.807.259-1.318 1.085-1.966 2.032-2.318.24-.09.484-.158.722-.21a3 3 0 100-2.33 5.329 5.329 0 01-.722-.21c-.947-.352-1.773-1-2.032-2.318-.428-2.182-1.894-3.284-3.296-3.807-.856-.318-1.714-.434-2.347-.476A3.001 3.001 0 000 3a3 3 0 003 3zm13 4a1 1 0 102 0 1 1 0 00-2 0zM2 17a1 1 0 112 0 1 1 0 01-2 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1pFil":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.54 4.18l.01-.02-6-4-.01.02C13.39.08 13.21 0 13 0s-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v14c0 .35.19.64.46.82l-.01.02 6 4 .01-.02c.15.1.33.18.54.18s.39-.08.54-.18l.01.02L13 16.2l5.45 3.63.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1V5c0-.35-.19-.64-.46-.82zM6 17.13l-4-2.67V2.87l4 2.67v11.59zm6-2.67l-4 2.67V5.54l4-2.67v11.59zm6 2.67l-4-2.67V2.87l4 2.67v11.59z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1yJIU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 9.22v7.91l-4-2.67V9.22c-.61-.55-1-1.33-1-2.22-.35 0-.69-.07-1-.18v7.65l-4 2.67V5.54l2.02-1.35c0-.06-.02-.13-.02-.19 0-1.66 1.34-3 3-3 0-.34.07-.66.17-.97C13.12.02 13.06 0 13 0c-.21 0-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v14c0 .35.19.64.46.82l-.01.02 6 4 .01-.02c.15.1.33.18.54.18s.39-.08.54-.18l.01.02L13 16.2l5.45 3.63.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1V6.82c-.31.11-.65.18-1 .18 0 .89-.39 1.67-1 2.22zM6 17.13l-4-2.67V2.87l4 2.67v11.59zM12 4c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bbdNo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.98 0c-3.87 0-7 2.98-7 6.67 0 3.68 7 13.33 7 13.33s7-9.65 7-13.33c0-3.68-3.14-6.67-7-6.67zm0 10c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6IsZT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zM8 11c-.28 0-.53.11-.71.29L2 16.59V14c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1H3.41l5.29-5.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"LCB2j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dMvEa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 6h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 3H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fuNWO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 6h11c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zM4 6c-.28 0-.53.11-.71.29l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3A1.003 1.003 0 005 13V7c0-.55-.45-1-1-1zm15 8H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0-5H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"k9XSU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 9H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0-10H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm7.71 5.29l-3-3A1.003 1.003 0 0015 7v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dJ5Md":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.71 6.29a1.003 1.003 0 00-1.42 1.42L6.59 9H2V2h5v2.18c.42.15.8.39 1.11.7l.01-.01.88.89V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4.76l-.88.88-.01-.01c-.31.31-.69.56-1.11.71V18H2v-7h4.59L5.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM19 0h-7c-.55 0-1 .45-1 1v4.76l.88-.88.01.01c.31-.31.69-.55 1.11-.7V2h5v7h-4.59l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L13.41 11H18v7h-5v-2.18c-.42-.15-.8-.39-1.11-.7l-.01.01-.88-.89V19c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iYYTq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm8-5c-.93 0-1.71.64-1.93 1.5H14V4c0-2.21-1.79-4-4-4S6 1.79 6 4v5.5H3.93C3.71 8.64 2.93 8 2 8c-1.1 0-2 .9-2 2s.9 2 2 2c.93 0 1.71-.64 1.93-1.5H6V16c0 2.21 1.79 4 4 4s4-1.79 4-4v-5.5h2.07c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2s-.9-2-2-2zm-5 8c0 1.66-1.34 3-3 3s-3-1.34-3-3V4c0-1.66 1.34-3 3-3s3 1.34 3 3v12zM10 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aqHf1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zM20 1a1.003 1.003 0 00-1.71-.71L13 5.59V3c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1h-2.59l5.29-5.29c.19-.18.3-.43.3-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"80awO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 9H4c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8GOYa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 0H5c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 19c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4-3H6V3h8v13z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2nOcN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 5c-.28 0-.53.11-.71.29L15 8.59V5c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h13c.55 0 1-.45 1-1v-3.59l3.29 3.29c.18.19.43.3.71.3.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gREM7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1a1 1 0 011 1v16a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1h18zm-1 4H2v12h16V5zm-3-3h-2v2h2V2zm3 0h-2v2h2V2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iR39B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 5v13a1 1 0 01-1 1H1a1 1 0 01-1-1V5h20zm-3-4h2a1 1 0 011 1v1h-3V1zm-2 2H0V2a1 1 0 011-1h14v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hgR8r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 14.15A9.94 9.94 0 019.94 20C4.45 20 0 15.55 0 10.06 0 6.03 2.4 2.56 5.85 1a9.811 9.811 0 00-.88 4.09c0 5.49 4.45 9.94 9.94 9.94 1.46 0 2.84-.31 4.09-.88z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5ZlLZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM17.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM10.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gknWC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 16H4l7-11h1l2 2h1l5 9zm-4-5l-1.5-3h-1l-1-1-1-1L8 11.5l3-1.5 1 1 1-1 3 1zM8.055 8L2.79 16H0l7-8h1.055z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gXc0n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.71 9.29l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 9H11V3.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 3.41V9H3.41L4.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 11H9v5.59L7.71 15.3A.965.965 0 007 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L11 16.59V11h5.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8N46d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18h-.07c-.05-.2-.12-.42-.22-.67-.46-1.05-2.68-1.75-4.16-2.4-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.67 3.67 0 00-1.29-1.86C11.7 3.25 10.81 3 10.02 3s-1.68.25-2.31.73c-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.17 1.51-.17 2.14v.08c-.24.09-.44.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59-1.48.65-3.7 1.35-4.16 2.4-.12.27-.18.49-.23.69H2V2h16v16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6sGlL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 3H7c-.55 0-1 .45-1 1v1h12v6h1c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-6 6H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm-1 6H2v-4h10v4zm4-9H4c-.55 0-1 .45-1 1v1h12v6h1c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dZuxk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0c-.08 0-.16.03-.24.05V.03l-12 3v.02C6.33 3.16 6 3.53 6 4v11.35c-.59-.22-1.27-.35-2-.35-2.21 0-4 1.12-4 2.5S1.79 20 4 20c1.94 0 3.55-.86 3.92-2H8V7.78l10-2.5v7.07c-.59-.22-1.27-.35-2-.35-2.21 0-4 1.12-4 2.5s1.79 2.5 4 2.5c1.94 0 3.55-.86 3.92-2H20V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bV8au":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 2c.55 0 1 .45 1 1v5c0 2.21 1.79 4 4 4h8.59L13.3 9.71A.965.965 0 0113 9a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H7c-3.31 0-6-2.69-6-6V3c0-.55.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cE5Nf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.7 13.7c.5 0 1 .4 1 1 0 .257-.073.44-.22.614l-.08.086-4 4c-.2.2-.4.3-.7.3-.6 0-1-.5-1-1 0-.257.073-.44.22-.614L14 18l4-4c.2-.2.4-.3.7-.3zM1.8 0l8.378 2.982A3.003 3.003 0 0013 7a3.003 3.003 0 003.877 2.87l.723 2.53.049.06a.41.41 0 01.051.24c0 .167-.07.403-.208.593l-.092.107-4 4c-.2.2-.4.3-.7.3-.075 0-.15-.056-.225-.084L12.4 17.6l-7-2-.112-.042c-.223-.094-.431-.244-.542-.45L4.7 15 0 1.8l.5-.6L7 7.7c-.2.3-.3.6-.3 1 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2a1.68 1.68 0 00-.871.22L7.7 7 1.2.5l.6-.5zM16 0c.55 0 1 .45 1 1v2h2c.55 0 1 .45 1 1s-.45 1-1 1h-2v2c0 .432-.278.803-.664.941l-.01.004A.989.989 0 0116 8c-.55 0-1-.45-1-1V5h-2c-.55 0-1-.45-1-1l.007-.116C12.065 3.388 12.489 3 13 3h2V1c0-.55.45-1 1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f1aeM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0H1C.45 0 0 .45 0 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm0 11H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-7c0-.55-.45-1-1-1zm6 7h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1zm5-7h-2c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1zm0-11h-7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 11h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1zm5 5c-.55 0-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fhFDr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.513 2.663A2 2 0 0013 6h1v1a2 2 0 104 0v-.733l1.5.833c.3.2.5.5.5.9s-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5C.2 8.7 0 8.4 0 8s.2-.7.5-.9l9-5c.2-.1.3-.1.5-.1s.3 0 .5.1l1.013.563zM17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9LyJP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2zm-1.252 5.984L10.5 11.9c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5C.2 6.7 0 6.4 0 6s.2-.7.5-.9l9-5c.2-.1.3-.1.5-.1s.3 0 .5.1L13.92 2H13a2 2 0 100 4h1v1a2 2 0 001.748 1.984zm2.07-1.15C17.935 7.58 18 7.298 18 7V6h1c.353 0 .684-.091.972-.251.018.078.028.162.028.251 0 .4-.2.7-.5.9l-1.682.934zM19 9c.6 0 1 .4 1 1 0 .4-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5c-.3-.2-.5-.5-.5-.9 0-.6.4-1 1-1 .2 0 .3 0 .5.1l8.5 4.8 8.5-4.8c.2-.1.3-.1.5-.1zm0 4c.6 0 1 .4 1 1 0 .4-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5c-.3-.2-.5-.5-.5-.9 0-.6.4-1 1-1 .2 0 .3 0 .5.2l8.5 4.7 8.5-4.8c.2-.1.3-.1.5-.1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fmTad":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.5 12a2.5 2.5 0 00-2.45 2h-7.1a2.5 2.5 0 100 1h7.1a2.5 2.5 0 102.45-3zM19 5h-2V3c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V7h2c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5n6Ho":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 4c0 .6.4 1 1 1h2v2c0 .6.4 1 1 1 .5 0 1-.4 1-1V5h2c.5 0 1-.4 1-1s-.5-1-1-1h-2V1c0-.6-.5-1-1-1-.6 0-1 .4-1 1v2h-2c-.6 0-1 .5-1 1zm7 3c0 1.7-1.3 3-3 3s-3-1.3-3-3c-1.7 0-3-1.3-3-3s1.3-3 3-3c0-.2 0-.4.1-.5-1-.3-2-.5-3.1-.5C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10c0-1.1-.2-2.1-.5-3H19z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4TgrP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.41 15.92c-1.46-.65-1.26-1.05-1.31-1.59-.01-.07-.01-.15-.01-.23.5-.45.91-1.07 1.18-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.33-.07.53-.44.6-.78.08-.14.23-.48.2-.87-.05-.5-.24-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5-.22-.73-.67-1.4-1.27-1.86C9.58 4.25 8.7 4 7.92 4c-.78 0-1.66.25-2.28.73-.61.47-1.06 1.13-1.27 1.86-.05.16-.08.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.43.32-.48.83-.04.39.12.73.2.87.08.35.28.72.62.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.69 1.35 1.21 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.36 1.59-1.46.65-3.66 1.35-4.11 2.4C-.14 19.38.04 20 .04 20h15.75s.18-.62-.27-1.67c-.45-1.06-2.65-1.75-4.11-2.41zM18.87 3h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gAh76":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.95 10.23c.16-.18.22-.22.46-.22h1.48c.25 0 .47.08.59.33.1.2.09.41-.05.66l-2.71 3.58L14.88 19c.13.21.16.46.03.69-.12.21-.34.31-.57.31H12.7c-.31 0-.56-.17-.7-.44l-1.9-2.67-1.93 2.68c-.15.27-.42.43-.73.43H5.98c-.25 0-.47-.08-.59-.33-.1-.2-.09-.41.05-.66l3.09-4.35L4.26 9H3v4.32c0 .41-.3.69-.7.69H.7c-.41 0-.7-.28-.7-.69V.69C0 .28.3 0 .7 0h4.42c.71 0 1.36.1 1.94.3.59.2 1.11.49 1.54.87.44.38.78.84 1.02 1.39.25.54.37 1.13.37 1.77 0 1.01-.28 1.88-.84 2.6-.43.54-1.35 1.29-2 1.59l3.09 3.94 1.71-2.23zM4.71 6.04c.71 0 1.45-.16 1.81-.46.33-.28.5-.69.5-1.25s-.17-.97-.5-1.25c-.35-.3-1.1-.46-1.81-.46h-1.7v3.42h1.7zM19 3c.55 0 1 .45 1 1s-.45 1-1 1h-2v2c0 .55-.45 1-1 1s-1-.45-1-1V5h-2c-.55 0-1-.45-1-1s.45-1 1-1h2V1c0-.55.45-1 1-1s1 .45 1 1v2h2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kj9SW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 3h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1zM5 7.5v1c0 .28.22.5.5.5s.5-.22.5-.5V8h2v7h-.5c-.28 0-.5.22-.5.5s.22.5.5.5h2c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H9V8h2v.5c0 .28.22.5.5.5s.5-.22.5-.5v-1c0-.28-.22-.5-.5-.5h-6c-.28 0-.5.22-.5.5zM16 9c-.55 0-1 .45-1 1v8H2V5h8c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1h15c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bmH0z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 6s-2.98 2.43-6.12 2.19C13.52 5.31 12.05 0 6 0c0 0 2.41 2.99 2.16 6.12C5.27 6.49 0 7.97 0 14c0 0 2.98-2.43 6.11-2.19C6.47 14.69 7.94 20 14 20c0 0-2.42-2.99-2.16-6.13C14.73 13.51 20 12.02 20 6zm-10 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2d7bZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.487 7l.532-3.196a1 1 0 011.962.392L11.513 7H16a1 1 0 010 2h-4.82l-.333 2H16a1 1 0 010 2h-5.487l-.532 3.196a1 1 0 01-1.962-.392L8.487 13H4a1 1 0 010-2h4.82l.333-2H4a1 1 0 110-2h5.487z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iagZO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm7-5c-.55 0-1-.45-1-1V8c0-2.61-1.67-4.81-4-5.63V2c0-1.1-.9-2-2-2S8 .9 8 2v.37C5.67 3.19 4 5.39 4 8v6c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8ZGJi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 18c0 1.1-.9 2-2 2s-2-.9-2-2zM8 0c.476 0 .914.168 1.258.448C8.508.878 8.09 1.562 8 2.5c-.133 1.4.4 2.367 1.6 2.9C8.533 6.6 8 7.467 8 8v1.2a2.8 2.8 0 002.8 2.8H14v2c0 .51.388.935.884.993L15 15c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V8c0-2.61 1.67-4.81 4-5.63V2c0-1.1.9-2 2-2z",
    "M16 9.25v-.395a.75.75 0 00-.75-.75h-2.813L15.834 3.9A.75.75 0 0016 3.43v-.68a.75.75 0 00-.75-.75h-4.5a.75.75 0 00-.75.75v.184c0 .414.336.75.75.75h2.813L10.22 7.831a1 1 0 00-.221.627v.792c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9I9AH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm2-17.834A2.994 2.994 0 008 4.99c0 .808.319 1.557.876 2.114l2.97 2.99a2.99 2.99 0 004.154.072V14c0 .55.45 1 1 1s1 .45 1 1-.45 1-1 1H3c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V8c0-2.61 1.67-4.81 4-5.63V2c0-1.1.9-2 2-2s2 .9 2 2v.166zm1.26 6.514l-2.97-2.99a.973.973 0 01-.29-.7c0-.55.44-1 .99-1 .27 0 .52.11.7.29l2.28 2.28 4.27-4.27a.99.99 0 01.7-.29c.55 0 1 .45 1 1 0 .28-.11.53-.3.7l-4.98 4.98a.99.99 0 01-1.4 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1B5rE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.74 9.01h1.27V1h-.95c-.04.24-.12.45-.26.62-.13.17-.29.3-.47.41-.19.11-.4.18-.63.23-.23.04-.46.07-.71.07v1.03h1.75v5.65zm.43 7.93c.18-.14.37-.28.58-.43.21-.14.42-.29.63-.45.21-.16.41-.33.61-.5.2-.18.37-.38.52-.59.15-.21.28-.45.37-.7.09-.25.14-.54.14-.85 0-.25-.04-.52-.12-.8-.08-.28-.21-.54-.39-.78-.19-.24-.43-.44-.73-.59-.3-.17-.68-.25-1.12-.25-.41 0-.77.08-1.08.23-.32.16-.58.37-.8.64-.22.27-.38.59-.49.96-.11.37-.16.77-.16 1.21h1.19c.01-.28.03-.53.08-.77s.12-.45.21-.62c.09-.18.22-.31.38-.42.16-.1.35-.15.59-.15.26 0 .47.05.63.14.16.09.29.21.38.35.09.14.15.29.18.45.03.16.05.31.05.45-.01.31-.08.58-.22.81-.14.24-.32.45-.53.66-.22.2-.45.39-.71.57-.26.18-.51.36-.74.54-.5.36-.89.78-1.17 1.27-.3.47-.45 1.04-.46 1.69H5v-1.14H1.43c.05-.17.14-.33.27-.49.13-.15.29-.3.47-.44zM18 4.02H8c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-1c0-.56-.45-1-1-1zm0 9H8c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-1c0-.56-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4ECoZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2.39 5.75c-.17.21-.38.39-.63.52s-.52.23-.83.29c-.3.05-.61.08-.93.08v1.24h2.49V15h1.49V4.98H2.73c-.05.31-.17.57-.34.77zm17.2 4.71c-.27-.44-.65-.71-1.14-.82v-.02c.42-.16.72-.43.92-.79.2-.36.29-.79.29-1.27 0-.42-.08-.8-.23-1.12-.15-.33-.36-.59-.62-.8-.26-.21-.55-.37-.87-.48-.32-.11-.65-.16-.98-.16-.43 0-.82.08-1.16.25-.34.16-.63.39-.87.69-.24.29-.43.64-.57 1.04-.14.4-.22.83-.23 1.3h1.39c-.01-.25.02-.49.07-.72.06-.23.14-.44.26-.63s.27-.34.45-.45c.18-.11.39-.17.63-.17.39 0 .71.12.96.37s.37.58.37.99c0 .29-.05.54-.16.74-.11.2-.25.36-.43.47-.18.11-.38.19-.61.24-.23.05-.46.06-.68.05v1.17c.28-.01.55 0 .81.03s.5.1.71.21c.21.11.38.28.51.5.13.22.2.52.2.89 0 .55-.16.97-.47 1.27-.31.3-.7.45-1.17.45-.55 0-.95-.19-1.23-.58-.27-.39-.4-.88-.38-1.46h-1.39c.01.5.08.96.21 1.38.13.41.32.77.57 1.06.25.29.56.52.93.68.37.16.8.24 1.3.24.41 0 .79-.07 1.16-.21.37-.14.69-.33.96-.58.28-.25.5-.56.66-.92a3 3 0 00.24-1.23c0-.64-.14-1.17-.41-1.61zM8.58 12.41c.21-.18.45-.36.7-.53.25-.18.5-.36.75-.56.25-.2.49-.41.73-.63.23-.22.44-.47.63-.74.18-.27.33-.56.44-.88.11-.32.16-.67.16-1.07 0-.32-.05-.65-.14-1-.09-.35-.25-.68-.47-.97-.22-.3-.51-.55-.87-.74-.36-.2-.81-.29-1.35-.29-.49 0-.93.1-1.3.29-.37.18-.69.44-.95.78-.26.33-.45.73-.58 1.2-.13.46-.2.96-.2 1.5h1.43c.01-.35.04-.67.09-.97.05-.3.14-.56.25-.78.11-.22.26-.39.45-.52s.43-.19.71-.19c.31 0 .56.06.75.18.19.12.34.26.45.43.11.17.18.36.22.56.04.2.06.39.06.57-.01.38-.1.72-.26 1.02-.15.3-.37.57-.63.83-.26.25-.54.49-.85.71-.31.22-.61.45-.89.68-.6.45-1.06.98-1.41 1.58-.35.61-.52 1.32-.53 2.13h6.01v-1.43H7.69c.06-.21.17-.42.33-.61s.34-.38.56-.55z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9f75v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 6h-5V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h4v-6h4v6h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM6 12H2V8h4v4zm0-6H2V2h4v4zm6 6H8V8h4v4zm0-6H8V2h4v4zm6 11h-4v-3h4v3zm0-5h-4V8h4v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ezWPf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7 18l2-7H5l8-9-2 7h4l-8 9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"euxLr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 17.99h-1.36l-4.35-9.57 2.91-.86 1.66 4.1c.11.27.43.4.72.31.12-.04.22-.11.28-.2.06-.11 1.47-2.08 1.05-5.6C19.79 5.12 19.3 0 16.01 0 14.89.01 13.99.83 14 1.84c0 .19.04.38.1.56l1.34 3.31L.72 10.03v.02c-.41.12-.72.49-.72.94 0 .55.45 1 1 1 .1 0 .19-.03.28-.06v.02l2-.59 1.47 6.63H3c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zM5.2 10.8l3.95-1.16-2.83 6.22L5.2 10.8zm2.35 7.19l3.95-8.68 3.95 8.68h-7.9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c1PZN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.94 0h-4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-8 6c-.28 0-.53.11-.71.29l-3 3c-.18.18-.29.43-.29.71s.11.53.29.71l3 3A1.003 1.003 0 007.94 13V7c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7U83n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 3a1 1 0 11-2 0 1 1 0 012 0zm-3.82 1.028a6.243 6.243 0 00-1.667.347c-.947.352-1.773 1-2.032 2.318C10.158 8.337 9.247 9.368 8.217 10c1.03.632 1.941 1.663 2.264 3.307.259 1.318 1.085 1.966 2.032 2.318.581.217 1.18.308 1.668.347a3.001 3.001 0 11-.019 2.004c-.633-.042-1.491-.158-2.347-.476-1.402-.523-2.868-1.625-3.296-3.807-.259-1.318-1.085-1.966-2.032-2.318a5.314 5.314 0 00-.722-.21 3 3 0 110-2.33c.238-.052.481-.12.722-.21.947-.352 1.773-1 2.032-2.318.428-2.182 1.894-3.284 3.296-3.807.856-.318 1.714-.434 2.347-.476A3.001 3.001 0 0120 3a3 3 0 01-5.82 1.028zM4 10a1 1 0 100 .002v-.002zM17 18a1 1 0 100-2 1 1 0 000 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8DEjL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 10a1 1 0 112 0 1 1 0 01-2 0zm3.83-1a3.001 3.001 0 100 2h8.34a3.001 3.001 0 100-2H5.83zM17 9a1 1 0 100 2 1 1 0 000-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4fykH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 1h14c.55 0 1 .45 1 1v13c0 .55-.45 1-1 1h-8v-2h7V4H5v6H3V2c0-.55.45-1 1-1zm2.5 5h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h3c.28 0 .5-.22.5-.5S9.78 7 9.5 7h-3c-.28 0-.5.22-.5.5s.22.5.5.5zm5 2h-5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5h5c.28 0 .5.22.5.5s-.22.5-.5.5zM7 17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2MNH2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0c5.52 0 10 4.48 10 10s-4.48 10-10 10S0 15.52 0 10c0-.55.45-1 1-1s1 .45 1 1c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8C7.47 2 5.22 3.17 3.76 5H5c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1s1 .45 1 1v2.05C3.82 1.6 6.71 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jkmEm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM7 17H2V8h5v9zm11 0H8V8h10v9zm0-10H2V3h16v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lWoB3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 1h18a1 1 0 011 1v15a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1zm1 2v13h16V3H2zm9 0h1v13h-1V3zm2 7h3.952v1H13v-1zm0 2h3.952v1H13v-1zm0 2h3.952v1H13v-1zm0-6h3.952v1H13V8zm0-2h3.952v1H13V6zm0-2h3.952v1H13V4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1bBph":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1H1c-.6 0-1 .4-1 1v15c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm-9 11H7V9h3v3zm0-4H7V5h3v3zm-8 8V3h4v13H2zm5 0v-3h3v3H7zm11 0h-7v-3h7v3zm0-4h-7V9h7v3zm0-4h-7V5h7v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"drWUu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.35 2.67A5.664 5.664 0 0014.33 1c-1.44 0-2.89.56-3.99 1.67l-9.16 9.27C.4 12.73 0 13.78 0 14.83s.39 2.1 1.18 2.9c.78.79 1.82 1.18 2.85 1.18 1.04 0 2.07-.39 2.87-1.2l9.14-9.27c.96-.96.96-2.5.02-3.45-.94-.95-2.49-.96-3.44 0l-7.59 7.69c-.31.32-.3.83.01 1.14.31.31.81.31 1.13.02l7.59-7.69c.31-.31.84-.31 1.13-.02.31.31.31.85 0 1.16l-9.14 9.27c-.93.95-2.54.93-3.45.02-.94-.95-.92-2.55.02-3.49l9.16-9.25c1.55-1.56 4.18-1.59 5.72-.03 1.56 1.57 1.55 4.26 0 5.82l-8.89 9.02c-.3.31-.3.81.01 1.11.3.3.79.31 1.1.01v.01l8.91-9.02A5.645 5.645 0 0020 6.73c0-1.48-.55-2.94-1.65-4.06z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aMfaI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.5 1H7C4.2 1 2 3.2 2 6s2.2 5 5 5v6.5c0 .8.7 1.5 1.5 1.5s1.5-.7 1.5-1.5V4h2v13.5c0 .8.7 1.5 1.5 1.5s1.5-.7 1.5-1.5V4h1.5c.8 0 1.5-.7 1.5-1.5S17.3 1 16.5 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"evsUn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 0H2C.9 0 0 .9 0 2s.9 2 2 2h7v4H4c-1.1 0-2 .9-2 2s.9 2 2 2h5v4H6c-1.1 0-2 .9-2 2s.9 2 2 2h8c1.1 0 2-.9 2-2s-.9-2-2-2h-3v-4h5c1.1 0 2-.9 2-2s-.9-2-2-2h-5V4h7c1.1 0 2-.9 2-2s-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"daYHV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm15 11.69l-5-2.5v-3.63c-.32.11-.66.22-1 .29v3.32l-6 2.57v-7.25c-.36-.27-.69-.57-1-.9v8.1l-5-2.5V10c.55 0 1-.45 1-1s-.45-1-1-1V1.31l3.43 1.71c.11-.31.24-.62.39-.92L.72.05A.545.545 0 00.5 0C.22 0 0 .22 0 .5v16c0 .2.12.36.28.44l6 3c.07.04.14.06.22.06.07 0 .14-.01.2-.04l6.79-2.91 5.79 2.9c.07.03.14.05.22.05.28 0 .5-.22.5-.5v-4.21c-.31.13-.64.21-1 .21v3.19zM10 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3-1c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6.72-.94l-1.43-.72c.2.43.36.89.48 1.36l.23.11V5.5c-.55 0-1 .45-1 1s.45 1 1 1v1.96l1 1V3.5c0-.2-.12-.36-.28-.44zm-3.69 5.56c.14-.21.27-.42.38-.65.02-.04.04-.07.05-.11.11-.22.2-.45.28-.69v-.01c.07-.24.13-.48.17-.73l.03-.17c.04-.25.06-.5.06-.76C17 2.46 14.54 0 11.5 0S6 2.46 6 5.5 8.46 11 11.5 11c.26 0 .51-.02.76-.06l.17-.03c.25-.04.49-.1.73-.17h.01c.24-.08.47-.17.69-.28.04-.02.07-.03.11-.05.23-.11.44-.24.65-.38l.18.18 3.5 3.5c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71l-3.68-3.67zm-4.53.88c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fLcrU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 3H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm9 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1IAaB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.94 17a4.92 4.92 0 00-.33-1.06c-.45-.97-1.37-1.52-3.24-2.3-.17-.07-.76-.31-.77-.32-.1-.04-.2-.08-.28-.12.05-.14.04-.29.06-.45 0-.05.01-.11.01-.16-.25-.21-.47-.48-.65-.79.22-.34.41-.71.56-1.12l.04-.11c-.01.02-.01.02-.02.08l.06-.15c.36-.26.6-.67.72-1.13.18-.37.29-.82.25-1.3-.05-.5-.21-.92-.47-1.22-.02-.53-.06-1.11-.12-1.59.38-.17.83-.26 1.24-.26.59 0 1.26.19 1.73.55.46.35.8.85.97 1.4.04.13.07.25.08.38.08.45.13 1.14.13 1.61v.07c.16.07.31.24.35.62.02.29-.09.55-.15.65-.05.26-.2.53-.46.59-.03.12-.07.25-.11.36-.01.01-.01.04-.01.04-.2.53-.51 1-.89 1.34 0 .06 0 .12.01.17.04.41-.11.71 1 1.19 1.1.5 2.77 1.01 3.13 1.79.34.79.2 1.25.2 1.25h-3.04zm-5.42-3.06c1.47.66 3.7 1.35 4.18 2.39.45 1.05.27 1.67.27 1.67H.04s-.19-.62.27-1.67c.46-1.05 2.68-1.75 4.16-2.4 1.48-.65 1.33-1.05 1.38-1.59 0-.07.01-.14.01-.21-.52-.45-.95-1.08-1.22-1.8l-.01-.01c0-.01-.01-.02-.01-.03-.07-.15-.12-.32-.16-.49-.34-.06-.54-.43-.62-.78-.08-.14-.24-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.64.05-1.55.17-2.15a3.648 3.648 0 011.4-2.36C6.32 2.25 7.21 2 8 2s1.68.25 2.31.73a3.63 3.63 0 011.4 2.36c.11.6.17 1.52.17 2.15v.09c.22.09.42.32.47.82.03.39-.12.73-.2.87-.07.34-.27.71-.61.78-.04.16-.09.33-.15.48-.01.01-.02.05-.02.05-.27.71-.68 1.33-1.19 1.78 0 .08 0 .16.01.23.05.55-.15.95 1.33 1.6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1QhrE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 10c-1.66 0-3 1.34-3 3v2c0 1.66 1.34 3 3 3s3-1.34 3-3v-2c0-1.66-1.34-3-3-3zm1 5c0 .55-.45 1-1 1s-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2zM8 7V5c0-1.66-1.34-3-3-3S2 3.34 2 5v2c0 1.66 1.34 3 3 3s3-1.34 3-3zM4 7V5c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1zm11-4a1.003 1.003 0 00-1.88-.48L5.14 16.49a1.003 1.003 0 101.74.99l7.99-13.97c.08-.15.13-.32.13-.51z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eEcDQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.61 17.91c-.57-1.32-3.35-2.19-5.19-3.01-1.85-.82-1.59-1.31-1.66-1.99-.01-.09-.01-.19-.02-.29.63-.56 1.15-1.33 1.49-2.22 0 0 .02-.05.02-.06.07-.19.13-.39.19-.6.42-.09.67-.55.76-.98.1-.17.29-.6.25-1.08-.06-.62-.31-.91-.59-1.03v-.11c0-.79-.07-1.93-.22-2.68A4.55 4.55 0 0012.9.92C12.11.32 11 0 10.01 0s-2.1.32-2.89.92a4.55 4.55 0 00-1.74 2.94c-.14.75-.22 1.89-.22 2.68v.1c-.29.11-.55.4-.61 1.04-.04.48.15.91.25 1.08.1.44.35.91.79.98.05.21.12.41.19.6 0 .01.01.03.01.04l.01.02c.34.91.87 1.69 1.52 2.25 0 .09-.01.18-.02.26-.07.68.13 1.17-1.72 1.99S.96 16.59.39 17.91C-.18 19.23.05 20 .05 20h19.9s.23-.77-.34-2.09z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Vpm5G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.91 15.51c-.08-.08-4.21-2.5-4.35-2.57a.876.876 0 00-.4-.1c-.19 0-.42.13-.71.4-.28.27-1.17 1.49-1.43 1.76s-.48.4-.65.4c-.08 0-.19-.02-.32-.07s-1.45-.73-4.2-3.15-3.11-4-3.13-4.44c0-.17.13-.39.4-.65.28-.25.57-.51.89-.74.32-.24.61-.5.88-.78s.4-.52.4-.71c0-.13-.03-.27-.1-.4C7.12 4.32 4.62.19 4.53.1c-.19-.18-.92-.1-1.29.1C.25 1.82 0 4 .05 4.86c.05.89.61 5.58 5.2 9.93 5.7 5.41 9.66 5.2 9.92 5.2.87 0 3.52-.48 4.65-3.19.16-.38.31-1.07.09-1.29z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6m3V2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 .98c-4.5.5-8 4.31-8 8.94 0 4.97 4.03 9.04 9 9.04 4.63 0 8.44-3.96 8.94-7.96H9V.98z",
    "M10-.08V10h10C20 4 15.52-.08 10-.08z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kOJPj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.77 1.16c-.81.81-.74 2.28.02 3.76L6.1 8.71c-2.17-1.46-4.12-2-4.94-1.18l4.95 4.95-4.95 6.36 6.36-4.95 4.95 4.95c.82-.82.27-2.77-1.19-4.94l3.8-5.69c1.47.76 2.94.84 3.76.02l-7.07-7.07z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6g0VS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.83 9.75L.29 15.29a1.003 1.003 0 001.42 1.42l5.54-5.54c-.57-.37-1.05-.85-1.42-1.42zM19 11c-.55 0-1 .45-1 1v1.59l-3.83-3.83c-.37.56-.85 1.04-1.41 1.41L16.59 15H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm-5-4c0-2.21-1.79-4-4-4S6 4.79 6 7s1.79 4 4 4 4-1.79 4-4zm-4 2c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5yut3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 5H1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm0-5H1C.45 0 0 .45 0 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm13.71 5.29C16.53 5.11 16.28 5 16 5s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L15 8.41V11c0 2.21-1.79 4-4 4H8.41l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L8.41 17H11c3.31 0 6-2.69 6-6V8.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM19 0H6c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ceHga":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 10c0-.36-.2-.67-.49-.84l.01-.01-10-6-.01.01A.991.991 0 005 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .19 0 .36-.07.51-.16l.01.01 10-6-.01-.01c.29-.17.49-.48.49-.84z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bMvcj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.707.293A1 1 0 00.293 1.707L2.086 3.5.293 5.293a1 1 0 001.414 1.414L3.5 4.914l1.793 1.793a1 1 0 001.414-1.414L4.914 3.5l1.793-1.793A1 1 0 005.293.293L3.5 2.086 1.707.293z",
    "M16 20a4 4 0 100-8 4 4 0 000 8zm0-2a2 2 0 100-4 2 2 0 000 4z",
    "M18.29 5.7L16 3.41V8a3 3 0 01-3 3H4a1 1 0 00-1 1v7a1 1 0 11-2 0v-7a3 3 0 013-3h9a1 1 0 001-1V3.41l-2.29 2.3a1.003 1.003 0 01-1.42-1.42l4-4c.18-.18.43-.29.71-.29.28 0 .53.11.71.29l4 4A1.003 1.003 0 0119 6c-.28 0-.53-.11-.71-.3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dmsUt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 9h-5V4c0-.55-.45-1-1-1s-1 .45-1 1v5H4c-.55 0-1 .45-1 1s.45 1 1 1h5v5c0 .55.45 1 1 1s1-.45 1-1v-5h5c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gkoaC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 7c-.27 0-.52.05-.75.15l-6.28-4.88c.01-.09.03-.18.03-.27 0-1.1-.9-2-2-2S7 .9 7 2c0 .06.01.12.02.19l-4.19 3C2.57 5.07 2.29 5 2 5 .9 5 0 5.9 0 7c0 .74.4 1.38 1 1.72v7.55c-.6.35-1 .99-1 1.73 0 1.1.9 2 2 2 .74 0 1.38-.4 1.72-1h7.55c.35.6.98 1 1.72 1 1.1 0 2-.9 2-2 0-.37-.11-.72-.29-1.02L18.03 11A2 2 0 0018 7zm-5.03 9c-.72.01-1.35.41-1.69 1H3.72c-.17-.3-.42-.55-.72-.72V8.72c.6-.34 1-.98 1-1.72 0-.06-.01-.12-.02-.19l4.19-3c.26.12.54.19.83.19.27 0 .52-.05.75-.15l6.28 4.88c-.01.09-.03.18-.03.27 0 .37.11.72.29 1.02L12.97 16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hXoyc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S9 .45 9 1v8c0 .55.45 1 1 1zm3-7.45v2.16c2.36 1.12 4 3.5 4 6.29 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.79 1.64-5.17 4-6.29V2.55C3.51 3.79 1 7.09 1 11a9 9 0 0018 0c0-3.91-2.51-7.21-6-8.45z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kwVtZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 8.01c0-1.26-.61-2.43-1.61-3.12C17.86 2.5 15.8.79 13.4.79c-.58 0-1.14.1-1.69.29A3.533 3.533 0 009.17 0C8.05 0 7 .55 6.32 1.45c-.15-.02-.3-.03-.45-.03-1.63 0-3.03 1.12-3.46 2.71C.97 4.65 0 6.05 0 7.66c0 .48.09.95.26 1.4-.17.44-.26.91-.26 1.39 0 1.38.72 2.64 1.89 3.29.67.7 1.59 1.09 2.54 1.09.61 0 1.19-.15 1.71-.45.68.82 1.68 1.3 2.73 1.3.66 0 1.28-.18 1.83-.52.61.49 1.34.81 2.11.91 1.3 1.43 2.3 3.28 2.31 3.3 0 0 .35.61.33.61.96-.01 1.77-.2 1.64-1.3.01.02-.92-2.89-.92-2.89.52-.26.94-.69 1.21-1.23 1.12-.66 1.84-1.91 1.84-3.26 0-.3-.03-.6-.1-.89.57-.64.88-1.51.88-2.4zm-1.54 1.28l-.18-.2-.77-.84c-.33-.37-.67-1.17-.73-1.73 0 0-.13-1.25-.13-1.26-.06-.74-1.17-.73-1.13.14 0 .02.13 1.26.13 1.26.04.36.15.77.3 1.17-.08-.01-.15-.02-.22-.02 0 0-2.57-.12-2.57-.13-.73-.03-.89 1.22-.05 1.25l2.57.13c.53.03 1.29.37 1.61.72l.61.67.02.06c.1.27.14.55.14.83 0 .93-.51 1.77-1.34 2.18l-.2.1-.09.23c-.19.48-.6.82-1.1.93l-.67.14.87 2.75c-.48-.76-1.19-1.79-2.02-2.67l-.15-.16-.21-.02c-.51-.04-.99-.21-1.42-.48l1.7-1.48c.44-.39 1.04-.55 1.24-.49 0 0 .78.22.78.23.78.2 1.03-.92.29-1.21l-.78-.23c-.69-.2-1.67.22-2.24.72l-1.91 1.66-.39.32c-.44.36-.93.55-1.5.55-.8 0-1.54-.41-1.97-1.07v-1.88c0-.5.21-.98.34-1.07 0 0 .65-.43.64-.43.87-.69.21-1.57-.64-1.14 0-.01-.65.43-.65.43-.31.2-.54.56-.7.97-.13-.13-.28-.25-.43-.35 0 0-1.91-1.26-1.91-1.28-.81-.56-1.5.63-.61 1.11 0-.02 1.89 1.28 1.89 1.28.46.31.77.97.77 1.36v.84c-.43.24-.78.36-1.24.36-.67 0-1.31-.29-1.77-.79l-.07-.08-.09-.05a2.425 2.425 0 01-1.31-2.16c0-.38.09-.74.25-1.08l.15-.31-.14-.33c-.17-.34-.25-.7-.25-1.08 0-1.13.76-2.1 1.85-2.37l.39-.09.07-.43a2.41 2.41 0 012.39-2.05c.19 0 .39.02.58.07l.4.1.22-.38A2.41 2.41 0 019.17 1.3c.55 0 1.08.19 1.5.53l-.44.45-.01-.01-.31.31c-.41.35-.92.53-1.11.5 0 0-.84-.13-.84-.14-.83-.15-1.09 1.08-.18 1.29.01 0 .84.14.84.14.03 0 .06 0 .09.01-.14.46-.18.96-.12 1.4 0 0 .21 1.24.19 1.23.13.65 1.32.44 1.16-.22 0-.01-.19-1.23-.19-1.23-.07-.48.15-1.19.45-1.5l.48-.5c.07-.06.13-.12.19-.18l.93-.95c.5-.23 1.04-.34 1.59-.34 1.93 0 3.57 1.4 3.89 3.34l.05.31.26.15a2.445 2.445 0 01.87 3.4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"coU4G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.95 10.23c.16-.18.22-.22.46-.22h1.48c.25 0 .47.08.59.33.1.2.09.41-.05.66l-2.71 3.58L16.88 19c.13.21.16.46.03.69-.12.21-.34.31-.57.31H14.7c-.31 0-.56-.17-.7-.44l-1.9-2.67-1.93 2.68c-.15.27-.42.43-.73.43H7.98c-.25 0-.47-.08-.59-.33-.1-.2-.09-.41.05-.66l3.09-4.35L6.26 9H5v4.32c0 .41-.3.69-.7.69H2.7c-.41 0-.7-.28-.7-.69V.69c0-.41.3-.69.7-.69h4.42c.71 0 1.36.1 1.94.3.59.2 1.11.49 1.54.87.44.38.78.84 1.02 1.39.24.54.36 1.14.36 1.78 0 1.01-.28 1.88-.84 2.6-.43.54-1.35 1.29-2 1.59l3.09 3.94 1.72-2.24zM6.71 6.04c.71 0 1.45-.16 1.81-.46.33-.28.5-.69.5-1.25s-.17-.97-.5-1.25c-.35-.3-1.1-.46-1.81-.46h-1.7v3.42h1.7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f8XvB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1h-8c0-.55-.45-1-1-1S9 .45 9 1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v11c0 .55.45 1 1 1h4.59L4.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L9 16.41V19c0 .55.45 1 1 1s1-.45 1-1v-2.59l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L12.41 15H17c.55 0 1-.45 1-1V3h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3 12H4V3h12v10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eKUs2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 16H6v-4H4v5c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-5h-2v4zm2-13c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h12V3zm3 2H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h2v-3h14v3h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 4h-2V7h2v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"95wBq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 4c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h16V4zm-2-3c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h12V1zm3 6H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-5 7c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-2h1v2h6v-2h1v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"75xNc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm5-4h12c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zM2 1C.9 1 0 1.9 0 3s.9 2 2 2 2-.9 2-2-.9-2-2-2zm17 8H7c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm0 7H7c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a1kNN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm5-1h11c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zM3 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm16 1H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm-1-8H9c-1.1 0-2 .9-2 2s.9 2 2 2h9c1.1 0 2-.9 2-2s-.9-2-2-2zM3 7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kSFyv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.01 10.11c.35-.64.72-1.68 1.09-3.11l.8-3.03h.96l.24-.77h-.99c.28-1.11.66-1.92 1.12-2.43.28-.32.56-.48.83-.48.05 0 .1.02.13.05.03.03.05.07.05.12 0 .04-.04.13-.11.25-.08.12-.11.24-.11.35 0 .15.06.28.18.39.12.11.27.16.45.16.2 0 .36-.07.49-.2s.2-.31.2-.54c0-.26-.1-.47-.3-.63-.2-.16-.52-.24-.96-.24-.68 0-1.3.19-1.86.58-.55.38-1.08 1.02-1.58 1.91-.17.3-.34.5-.49.59-.15.08-.4.13-.74.12l-.23.77h.95L5.74 9.21c-.23.86-.39 1.39-.47 1.59-.12.29-.3.54-.54.75-.1.08-.21.12-.35.12-.04 0-.07-.01-.1-.03l-.03-.04c0-.02.03-.07.1-.13.07-.07.1-.17.1-.31 0-.15-.05-.28-.16-.38-.11-.1-.27-.15-.47-.15-.25 0-.44.07-.59.2-.15.12-.23.28-.23.46 0 .19.09.36.27.5.19.14.47.21.86.21.61 0 1.16-.15 1.63-.46.48-.31.89-.79 1.25-1.43zm3.7 1.18c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 14.41V19c0 .55.45 1 1 1s1-.45 1-1v-4.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zm4.15-6.78c.17-.13.36-.2.55-.2.07 0 .2.03.39.08s.36.08.5.08c.2 0 .37-.07.5-.2.13-.14.2-.31.2-.52 0-.22-.07-.4-.2-.53s-.33-.2-.58-.2c-.22 0-.43.05-.63.15-.2.1-.45.32-.75.67-.23.25-.56.7-1.01 1.33a6.52 6.52 0 00-.91-2.15l-2.38.39-.05.25c.18-.03.33-.05.45-.05.24 0 .43.1.59.3.25.31.59 1.24 1.02 2.79-.34.44-.58.73-.7.87-.21.22-.38.36-.52.43-.1.05-.22.08-.35.08-.1 0-.26-.05-.49-.16a1.01 1.01 0 00-.42-.11c-.23 0-.42.07-.57.22-.17.14-.24.32-.24.55 0 .21.07.38.21.51.14.13.33.2.56.2.23 0 .44-.05.64-.14.2-.09.45-.29.75-.59s.72-.78 1.25-1.43c.2.62.38 1.07.53 1.35.15.28.32.49.52.61.19.12.44.19.73.19.28 0 .57-.1.86-.3.38-.25.77-.69 1.17-1.31l-.25-.14c-.27.37-.48.6-.61.69-.09.06-.19.09-.31.09-.14 0-.28-.09-.42-.26-.23-.29-.54-1.09-.93-2.4.37-.58.66-.96.9-1.14z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c3U5h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 10h-2.38L14.9 6.55h-.01c-.17-.32-.5-.55-.89-.55-.43 0-.79.28-.93.66h-.01l-2.75 7.57L7.98 1.82h-.02A.978.978 0 007 1c-.44 0-.8.29-.94.69h-.01L3.28 10H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.44 0 .8-.29.94-.69h.01l1.78-5.34 2.29 12.21h.02c.08.46.47.82.96.82.43 0 .79-.28.93-.66h.01l3.21-8.82.96 1.92h.01c.16.33.49.56.88.56h3c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ddjWM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 10a3 3 0 111.065-5.806A5.001 5.001 0 0114.63 3.11 3.5 3.5 0 1115.5 10H4zm0 2a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm9 1a1 1 0 10-2 0v6a1 1 0 102 0v-6zm3-1a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-7 1a1 1 0 10-2 0v3a1 1 0 102 0v-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lcKGc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.47 5h2.12L15.3 6.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 3H14c-.31 0-.57.15-.76.37l-.01-.01-2.93 3.52 1.3 1.56L14.47 5zm2.24 7.29a1.003 1.003 0 00-1.42 1.42l1.3 1.29h-2.12L4.77 3.36l-.01.01A.998.998 0 004 3H1c-.55 0-1 .45-1 1s.45 1 1 1h2.53l9.7 11.64.01-.01c.19.22.45.37.76.37h2.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM3.53 15H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.31 0 .57-.15.76-.37l.01.01 2.93-3.52-1.3-1.56L3.53 15z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h4qWN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 3a7 7 0 100 14 7 7 0 100-14z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iD2zn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 18V2h12v16H4zM2 1a1 1 0 011-1h14a1 1 0 011 1v18a1 1 0 01-1 1H3a1 1 0 01-1-1V1zm4.293 11.705a.999.999 0 111.412-1.412L10 13.587l2.295-2.294a.999.999 0 011.412 1.412l-2.962 2.963a1 1 0 01-1.49 0l-2.962-2.963zm0-3.998a.999.999 0 010-1.412l2.962-2.963A1.008 1.008 0 0110 4a.996.996 0 01.745.332l2.962 2.963a.999.999 0 01-1.412 1.412L10 6.413 7.705 8.707a.999.999 0 01-1.412 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f0pVz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 16H2V4h16v12zM1 18a1 1 0 01-1-1V3a1 1 0 011-1h18a1 1 0 011 1v14a1 1 0 01-1 1H1zM7.295 6.293a.999.999 0 111.412 1.412L6.413 10l2.294 2.295a.999.999 0 11-1.412 1.412l-2.963-2.962A.992.992 0 014 10a.996.996 0 01.332-.745l2.963-2.962zm3.998 0a.999.999 0 011.412 0l2.963 2.962.04.038A.996.996 0 0116 10a.996.996 0 01-.332.745l-2.963 2.962a.999.999 0 01-1.412-1.412L13.587 10l-2.294-2.295a.999.999 0 010-1.412z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3HrDE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 4h18c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1zm1 2v8h16V6H2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hEQq8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.71 5.29l-4-4a1.003 1.003 0 00-1.42 1.42L16.59 5H6c-3.31 0-6 2.69-6 6s2.69 6 6 6h5v-2H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h10.59L14.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM15 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8pcfa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1c-.55 0-1 .45-1 1v2.06C16.18 1.61 13.29 0 10 0 4.48 0 0 4.48 0 10c0 .55.45 1 1 1s1-.45 1-1c0-4.42 3.58-8 8-8 2.52 0 4.76 1.18 6.22 3H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 8c-.55 0-1 .45-1 1 0 4.42-3.58 8-8 8-2.52 0-4.76-1.18-6.22-3H5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-2.06C3.82 18.39 6.71 20 10 20c5.52 0 10-4.48 10-10 0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9LbRR":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 16H3.1L19.31 3.39l-.61-.79L2 15.59V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-9-9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-5 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm10-2c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2zm-5 4c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"uJsT1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9H5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ckM4c":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0H5c-.55 0-1 .45-1 1v4h2V2h5v16H6v-3H4v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18h-5V2h5v16zM6.29 13.71a1.003 1.003 0 001.42-1.42L5.41 10 7.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L4 8.59l-2.29-2.3A1.003 1.003 0 00.29 7.71L2.59 10 .3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L4 11.41l2.29 2.3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c8AKQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 11h6c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-7 18H2V2h10v16zm6 0h-5V2h5v16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gAyYE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H2V2h5v16zm11 0H8V2h10v16zm-8-7h6c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2GsqV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 14h6c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V8h16v10zm0-11H2V2h16v5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d3DGN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 8h6c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zm12-8H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2v-5h16v5zm0-6H2V2h16v10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"du22w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 6c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1v2.05C16.18 1.6 13.29 0 10 0 4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-.55-.45-1-1-1s-1 .45-1 1c0 4.42-3.58 8-8 8s-8-3.58-8-8 3.58-8 8-8c2.53 0 4.77 1.17 6.24 3H15c-.55 0-1 .45-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6A58y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6 6c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1s1 .45 1 1v2.05C3.82 1.6 6.71 0 10 0c5.52 0 10 4.48 10 10s-4.48 10-10 10S0 15.52 0 10c0-.55.45-1 1-1s1 .45 1 1c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8C7.47 2 5.23 3.17 3.76 5H5c.55 0 1 .45 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9XLuF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.7 4.7C7.9 4.2 7 4 6 4c-3.3 0-6 2.7-6 6s2.7 6 6 6c1 0 1.9-.2 2.7-.7C7.3 14 6.5 12.1 6.5 10s.9-4 2.2-5.3zM14 4c-1 0-1.9.2-2.7.7 1.4 1.4 2.2 3.2 2.2 5.3s-.9 4-2.2 5.3c.8.5 1.7.7 2.7.7 3.3 0 6-2.7 6-6s-2.7-6-6-6zm-4 1.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9fYyY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 4.2C7 5.75 8.34 7 10 7s3-1.46 3-2.8C13 1.45 10.94 0 10 0H6c0 2.74 3.76 1.96 1 4.2zm11.71 14.09L13 12.59V9.01c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3.58l-5.71 5.7a1.003 1.003 0 001.42 1.42L7 15.42V19c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3.58l4.29 4.29a1.003 1.003 0 001.42-1.42zM10.21 8c.01 0 .01.01 0 0 .01.01.01 0 0 0z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1MRMt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zm-3.34 9.25c-.55-1.2-.86-2.54-.86-3.95s.31-2.75.86-3.95a4.001 4.001 0 000 7.9zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm-4 1.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1nuIa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eHQJC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7 7.5c0-3 1.857-6.25 3-7.5 1.143 1.25 3 4.5 3 7.5s-.714 6.25-1 7.5H8c-.286-1.25-1-4.5-1-7.5zm6.84 2.5c-.139 1.62-.47 3.405-.84 5.01l4 .99-1-4-2.16-2zm-4.832 6C9 16.139 9 16.284 9 16.429 9 17.143 9 17.5 10 20c1-2.5 1-2.857 1-3.571 0-.145 0-.29-.008-.429H9.008zM7 15.011c-.37-1.605-.701-3.39-.84-5.011L4 12l-1 4 4-.989zM10 5a1 1 0 100 2 1 1 0 000-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fyZ2G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 5c2.121-2.121 6.308-2.924 8-3-.076 1.692-.879 5.879-3 8-1.192 1.192-2.543 1.823-3.748 2.384-.442.207-.865.404-1.252.616-.203.111-.597.302-.986.49-.444.215-.88.426-1.014.51l-2-2c.158-.252 1-2 1-2s1.37-3.37 3-5zm5 1a1 1 0 11-2 0 1 1 0 012 0zM3 17s0-2 2-4l2 2c-2 2-4 2-4 2zm11-2l-4 4-1.298-4.233c1.033-.56 1.881-.962 2.643-1.322 1.275-.604 2.307-1.092 3.554-2.015L14 15zM1 10l4-4 3.557-.899c-.923 1.247-1.412 2.28-2.015 3.554-.36.762-.762 1.61-1.322 2.643L1 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bIHCh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.71 6.29A.997.997 0 008 6H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-8c0-.28-.11-.53-.29-.71l-4-4zM11 18H4V8h3v3c0 .55.45 1 1 1h3v6zm3-16h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C9.11 2.47 9 2.72 9 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9xTzf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 2h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C9.11 2.47 9 2.72 9 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4zm-2 5H3c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 11H4V9h7v9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8VFnd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.028 6.016c.146.275.31.57.485.872.304.524.628 1.047.952 1.545l.118.178-.208-.006-.577-.005c-2.093.004-2.841.303-2.841.895 0 .069.271.248 1.245.567l1.008.313c2.671.831 3.99 1.827 3.99 4.167 0 2.76-1.928 4.059-4.832 4.376-.782.085-1.52.098-2.452.066l-1.15-.046H6.221l.535-.811a67.46 67.46 0 001.122-1.787h2.04l.686.03c1.028.046 1.77.043 2.523-.039 1.832-.2 2.673-.767 2.673-1.789 0-.69-.483-1.09-1.992-1.585l-.83-.257c-1.192-.364-2.037-.7-2.59-1.165.399-1 .612-1.844.612-2.538a6.018 6.018 0 00-.382-2.098c.745-.573 1.884-.822 3.41-.883zM5 4.2c2.648 0 4.791 2.151 4.8 4.797C9.8 11.652 5 18.6 5 18.6l-.5-.744C3.273 15.993.2 11.121.2 8.997A4.802 4.802 0 015 4.2zm0 2.4a2.4 2.4 0 10.002 4.802A2.4 2.4 0 005 6.6zM17 .333a2.671 2.671 0 012.667 2.665C19.667 4.473 17 8.333 17 8.333l-.391-.587c-.741-1.137-2.276-3.629-2.276-4.748A2.668 2.668 0 0117 .333z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eLCfX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 18c.6 0 1 .4 1 1s-.4 1-1 1c-5 0-9-4-9-9 0-.6.4-1 1-1s1 .4 1 1c0 3.9 3.1 7 7 7zm0-4c.6 0 1 .4 1 1s-.4 1-1 1c-2.8 0-5-2.2-5-5 0-.6.4-1 1-1s1 .4 1 1c0 1.7 1.3 3 3 3zm5.7-3.7c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4l-1.4 1.4c-.4.4-1 .4-1.4 0l-3.6-3.6c-.4-.4-.4-1 0-1.4l1.4-1.4zM4.7.3c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4L8.3 6.7c-.4.4-1 .4-1.4 0L3.3 3.1c-.4-.4-.4-1 0-1.4L4.7.3zm11.1 1c.4-.4 1-.4 1.4 0l1.6 1.6c.4.4.4 1 0 1.4l-6.5 6.5c-.4.4-1 .4-1.4 0L9.3 9.2c-.4-.4-.4-1 0-1.4l6.5-6.5zM9 12c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9oH5s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18H5V2h6v5h5v11zm-8.29-6.71a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.32 0 .59-.16.77-.38l.01.01 4-5-.01-.01c.14-.18.23-.38.23-.62 0-.55-.45-1-1-1-.32 0-.59.16-.77.38l-.01-.01-3.3 4.13-2.21-2.21z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6ioI9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm5 2c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm1 10H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM5 15c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eCAAs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.56 17.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4uLiE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.9 6.9a3 3 0 100 6 3 3 0 100-6zM3 14c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM17 14c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM17 0c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM10 10L5 5",
    "M5.379 4.671l5.02 5.02-.707.708-5.02-5.02zM10 10l5-5",
    "M14.621 4.671l.707.708-5.02 5.02-.707-.707z",
    "M10 10l5 5M10.379 9.671l5.02 5.02-.707.708-5.02-5.02z",
    "M10 10l-5 5M9.621 9.671l.707.708-5.02 5.02-.707-.707z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"55V8n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 8H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0 3H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0-6H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm6.56 12.44l-3.23-3.23A8.939 8.939 0 0018 9a9 9 0 10-9 9c1.94 0 3.74-.62 5.21-1.67l3.23 3.23a1.498 1.498 0 102.12-2.12zM9 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4qLbS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.56 17.44l-3.23-3.23A8.939 8.939 0 0018 9a9 9 0 10-9 9c1.94 0 3.74-.62 5.21-1.67l3.23 3.23a1.498 1.498 0 102.12-2.12zM9 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm3.5-11h-7c-.28 0-.5.22-.5.5v2c0 .28.22.5.5.5s.5-.22.5-.5V7h2v6h-.5c-.28 0-.5.22-.5.5s.22.5.5.5h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H10V7h2v.5c0 .28.22.5.5.5s.5-.22.5-.5v-2c0-.28-.22-.5-.5-.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7XBzt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 5H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 8h-8V7h8v6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6WKal":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.71 18.29l-4.25-4.25L20 12.91 9.93 9.33c.04-.1.07-.21.07-.33V3c0-.55-.45-1-1-1H4V1c0-.55-.45-1-1-1S2 .45 2 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 .55.45 1 1 1h6c.12 0 .23-.03.34-.07L12.91 20l1.14-4.54 4.25 4.25c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71zM8 8H4V4h4v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2UEgn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z",
    "M10 6a4 4 0 100 8 4 4 0 100-8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"irX4B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1.754.135L19.393 9.06c.57.288.775.943.458 1.462-.107.176-.266.32-.458.418l-17.64 8.925c-.57.288-1.288.1-1.604-.418C.05 19.287 0 19.183 0 19v-7l11-2L0 8V1.075C0 .481.529 0 1.18 0c.201 0 .399.047.574.135z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"45hpW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0h-5c-.6 0-1 .4-1 1s.4 1 1 1h2.6l-4.3 4.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3L18 3.4V6c0 .5.5 1 1 1s1-.5 1-1V1c0-.6-.5-1-1-1zm0 9c-1 0-1.9-.5-2.5-1.3l-1.4 1.4c-.5.6-1.3.9-2.1.9-1.7 0-3-1.3-3-3 0-.8.3-1.6.9-2.1l1.4-1.4C11.5 2.9 11 2 11 1c0-.3.1-.6.2-.9-.4-.1-.8-.1-1.2-.1C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10c0-.4 0-.8-.1-1.2-.3.1-.6.2-.9.2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9evqX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm10 2c-.53 0-1.01.21-1.37.55L11.9 10.6c.06-.19.1-.39.1-.6 0-.21-.04-.41-.1-.6l4.72-2.95c.37.34.85.55 1.38.55 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .21.04.41.1.6l-4.73 2.96c-.24-.23-.54-.4-.87-.48V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.33.09-.63.26-.87.48L7.6 7.91 5.42 6.55 3.9 5.6c.06-.19.1-.39.1-.6 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.53 0 1.01-.21 1.37-.55L9 9.96V10h.06L12 11.84l.4.25 1.51.94 2.19 1.37c-.06.19-.1.39-.1.6 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zm-7-2.96l-.06-.04H11v.04z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8xgr8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm11.54-6.82l.01-.02-6-4-.01.02C13.39.08 13.21 0 13 0s-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v9c0-.55.45-1 1-1h1V2.87l4 2.67V9h2V5.54l4-2.67v11.6l-1 .67v2.4l2-1.33 5.45 3.63.01-.02c.15.1.33.18.54.18.55 0 1-.45 1-1V5c0-.35-.19-.64-.46-.82zM18 17.13l-4-2.67V2.87l4 2.67v11.59z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8LG21":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.29 9.29c.3.62.8 1.12 1.42 1.42l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 2.29-2.3zM12 5c0-.5.4-1 1-1h2V2c0-.6.4-1 1-1 .5 0 1 .4 1 1v2h2c.5 0 1 .4 1 1s-.5 1-1 1h-2v2c0 .6-.5 1-1 1-.6 0-1-.4-1-1V6h-2c-.6 0-1-.4-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8UGsT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.91 10.67c.52.45 1.13.8 1.8 1.03l-2.01 2.01c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.3L7 10.41l-5 5V17h16.99c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8c.28 0 .53.11.71.29l3.29 3.3.91-.92zM18.5 4.6h1.04c.25 0 .45.2.46.44v.9c0 .25-.2.45-.45.45h-1.04c-.07.22-.16.42-.27.62l.73.73c.17.17.17.44 0 .61l-.61.61c-.17.17-.44.17-.61 0l-.73-.73c-.2.11-.4.2-.62.26v1.05c0 .25-.2.45-.45.45h-.9c-.25 0-.45-.2-.45-.45V8.51c-.21-.06-.4-.15-.58-.25l-.76.77c-.17.17-.46.17-.64 0l-.64-.64a.465.465 0 010-.64l.76-.77c-.1-.19-.19-.38-.25-.59h-1.04c-.25 0-.45-.2-.45-.45v-.9c0-.25.2-.45.45-.45h1.04c.07-.22.16-.42.27-.61l-.73-.73a.429.429 0 010-.61l.61-.61c.17-.17.44-.17.61 0l.73.73c.2-.11.4-.2.62-.26V1.45a.44.44 0 01.44-.45h.9c.25 0 .45.2.45.45V2.5c.21.06.4.15.58.25l.76-.77c.17-.17.46-.17.64 0l.64.64c.17.17.17.46 0 .64l-.76.77c.1.17.19.36.25.57zm-4.69.9c0 .93.75 1.69 1.69 1.69.93 0 1.69-.75 1.69-1.69s-.75-1.69-1.69-1.69-1.69.76-1.69 1.69z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fWeDu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.82 6.58c-.03.05-.07.09-.11.13 0 0 0-.01-.01-.01l-2 2c-.2.2-.4.3-.7.3-.6 0-1-.4-1-1 0-.3.1-.5.3-.7L16.6 6H11c-.6 0-1-.4-1-1s.4-1 1-1h5.6l-1.3-1.3c-.2-.2-.3-.4-.3-.7 0-.6.4-1 1-1 .3 0 .5.1.7.3l3 3c.2.2.3.4.3.7s-.1.5-.3.7l-.88.88zm-5.53 2.71c.3.62.8 1.12 1.42 1.42l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 2.29-2.3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f5YSE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.14 10.45c.21.67.65 1.23 1.22 1.61l-1.65 1.65c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 1.14-1.14zM19.35 1a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V5.13L11.19 2.1a.642.642 0 01.45-1.1h7.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hEcTm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.28 11.31l-.28.28-3.29-3.3C7.53 8.11 7.28 8 7 8s-.53.11-.71.29L2 12.59V4c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1H2v-1.59l5-5 3.29 3.29c.18.19.43.3.71.3s.53-.11.71-.29l2.09-2.09c-.17.02-.34.02-.51.02-.7 0-1.38-.12-2.01-.33zm-.93-6c0-1.62 1.31-2.93 2.93-2.93s2.93 1.31 2.93 2.93-1.31 2.93-2.93 2.93-2.93-1.31-2.93-2.93zm6.47 2.43c.11-.17.21-.33.29-.51.01-.03.03-.06.04-.09.08-.18.16-.35.21-.54.06-.2.1-.38.14-.58.01-.05.01-.09.02-.14.03-.2.05-.39.05-.6 0-2.37-1.93-4.3-4.3-4.3-2.37.01-4.3 1.93-4.3 4.31s1.93 4.3 4.3 4.3c.21 0 .4-.02.6-.05.04 0 .09-.01.14-.02.2-.03.38-.08.57-.14.2-.06.37-.14.55-.21.03-.01.06-.03.09-.04.18-.09.34-.19.51-.29l2.87 2.87c.14.14.33.22.56.22.43 0 .78-.35.78-.78a.938.938 0 00-.23-.56l-2.89-2.85z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4v8hd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4 1c0-.55-.45-1-1-1S2 .45 2 1v5h2V1zM2 19c0 .55.45 1 1 1s1-.45 1-1v-6H2v6zm9-18c0-.55-.45-1-1-1S9 .45 9 1v8h2V1zm7 0c0-.55-.45-1-1-1s-1 .45-1 1v3h2V1zM9 19c0 .55.45 1 1 1s1-.45 1-1v-3H9v3zm9-14h-2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-2 14c0 .55.45 1 1 1s1-.45 1-1v-8h-2v8zM4 7H2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm7 3H9c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3IU4i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.88 11.12a.958.958 0 011.277.33l3.719 6.207c.081.136.124.29.124.447 0 .495-.419.896-.936.896H4.936a.969.969 0 01-.436-.103.878.878 0 01-.392-1.21l3.409-6.208a.915.915 0 01.362-.36zM15 5a4 4 0 110 8 4 4 0 010-8zM8 1a1 1 0 011 1v6a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5rlGE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 18H2V5h8.76l2-2H1c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1h15c.55 0 1-.45 1-1V7.24l-2 2V18zm4-18h-7c-.55 0-1 .45-1 1s.45 1 1 1h4.59l-7.3 7.29a1.003 1.003 0 001.42 1.42L18 3.41V8c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eklPS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13.917 17.209c1.01.454 2.543.928 2.873 1.643.31.722.186 1.148.186 1.148H6.026s-.13-.426.186-1.148 1.842-1.203 2.86-1.65c1.017-.447.914-.722.948-1.093 0-.048.007-.097.007-.145a3.067 3.067 0 01-.839-1.237l-.007-.007c0-.007-.006-.014-.006-.02a1.757 1.757 0 01-.11-.337c-.234-.042-.372-.296-.426-.537a1.045 1.045 0 01-.138-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478a2.508 2.508 0 01.962-1.623c.426-.33 1.038-.501 1.58-.501.544 0 1.155.172 1.588.502a2.496 2.496 0 01.963 1.622c.075.413.117 1.045.117 1.478v.062c.15.062.288.22.323.564.02.268-.083.502-.138.598-.048.234-.185.488-.42.537a2.635 2.635 0 01-.116.364 3.094 3.094 0 01-.818 1.224c0 .055 0 .11.007.158.034.378-.103.653.914 1.1z",
    "M14.976 16.57c-.24-.099-.455-.186-.65-.273l-.007-.004a3.801 3.801 0 01-.194-.091c.224-.288.41-.609.554-.946l.001-.002.013-.033c.018-.043.036-.087.052-.13l.011-.027.016-.04c.105-.092.19-.19.256-.284.129-.184.213-.38.265-.563.105-.226.225-.592.192-1.026l-.001-.011-.002-.011a1.854 1.854 0 00-.325-.91 9.924 9.924 0 00-.12-1.246 3.09 3.09 0 00-.106-.475l-.001-.006a3.543 3.543 0 00-.763-1.353c.27-.092.56-.139.83-.139.495 0 1.05.156 1.444.456a2.269 2.269 0 01.875 1.475c.069.375.106.95.106 1.344v.056c.138.056.263.2.294.513.019.244-.075.456-.125.543-.044.213-.169.444-.381.488-.025.1-.056.206-.094.3a2.815 2.815 0 01-.756 1.144c0 .05 0 .1.006.144.004.043.006.086.007.127.01.283.018.518.824.872.192.087.404.173.623.263.83.34 1.752.717 1.99 1.231.28.657.168 1.044.168 1.044h-2.081a3.864 3.864 0 00-.188-.542l-.005-.013-.006-.012c-.183-.397-.491-.681-.76-.88a5.614 5.614 0 00-.896-.522 17.36 17.36 0 00-.916-.4l-.15-.061zM14 1c.55 0 1 .45 1 1 0 .28-.11.53-.29.7L10 7.41v.897a3.182 3.182 0 00-.69.4 3.508 3.508 0 00-1.343 2.259c-.07.37-.107.836-.122 1.237a1.836 1.836 0 00-.339.926c-.046.458.09.84.195 1.06.053.178.138.376.27.56.055.08.125.162.21.242v.143l.053.052L6.71 16.71A1.003 1.003 0 015 16V7.41L.29 2.71A1.003 1.003 0 011 1h13z",
    "M9.059 14.361c-.23-.044-.366-.296-.42-.535a1.045 1.045 0 01-.138-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478A2.508 2.508 0 0110 9.441V13c0 .28-.11.53-.29.71l-.651.651z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hpag1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 20c6-3.81 9-9.048 9-15.714-2 0-5-1.429-9-4.286-4 2.857-7 4.286-9 4.286C1 10.952 4 16.19 10 20zm0-17.348c2.577 1.734 4.776 2.88 6.667 3.419-.44 4.627-2.636 8.353-6.667 11.297V2.652z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j7cby":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.84.804L6.5 2.5h-3a1 1 0 00-1 1v4.893l-1.58.451a.99.99 0 00-.691 1.192c.46 1.82 1.163 4.356 1.701 5.571-.218.012-.445.018-.68.018a.625.625 0 100 1.25c2.583 0 4.268-.68 5.202-1.146.687.466 1.88 1.146 3.548 1.146 1.65 0 2.837-.666 3.528-1.132l.005.003c.244.131.6.3 1.07.468.938.335 2.321.661 4.147.661a.625.625 0 100-1.25c-.323 0-.63-.011-.922-.031a.996.996 0 00.184-.334l1.67-5.168a1 1 0 00-.677-1.27l-1.505-.43V3.5a1 1 0 00-1-1h-3L13.16.804A1 1 0 0012.18 0H7.82a1 1 0 00-.98.804zM5 7.679l3.75-1.072V5H5v2.679zm6.25-1.072L15 7.68V5h-3.75v1.607zM6.205 16.95a.625.625 0 01.658.042c.569.407 1.597 1.134 3.137 1.134s2.568-.727 3.137-1.134a.625.625 0 01.724-.001l.007.005.045.029c.044.027.114.069.21.12.194.104.493.247.9.392.811.29 2.053.589 3.727.589a.625.625 0 110 1.25c-1.826 0-3.21-.326-4.148-.661a7.894 7.894 0 01-1.069-.468l-.005-.003c-.691.466-1.878 1.132-3.528 1.132-1.667 0-2.861-.68-3.548-1.146-.934.467-2.619 1.146-5.202 1.146a.625.625 0 110-1.25c2.66 0 4.23-.787 4.955-1.176z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6969K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.94 3.63c-.01-.02-.01-.03-.02-.04l-.03-.09h-.01c-.18-.3-.49-.5-.86-.5h-14c-.42 0-.77.25-.92.61L0 8.5h.02a2.5 2.5 0 005 0 2.5 2.5 0 005 0 2.5 2.5 0 005 0 2.5 2.5 0 005 0l-2.08-4.87zM3.02 2h14c.55 0 1-.45 1-1s-.45-1-1-1h-14c-.55 0-1 .45-1 1s.44 1 1 1zm13 14h-12v-4h-2v7c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-7h-2v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a38Om":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 14H8.72l-.67-2H17c.44 0 .8-.29.94-.69h.01l2-6h-.01c.03-.1.06-.2.06-.31 0-.55-.45-1-1-1H5.39l-.44-1.32h-.01C4.8 2.29 4.44 2 4 2H1c-.55 0-1 .45-1 1s.45 1 1 1h2.28l3.33 10H5c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2h9c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zM6.05 6h11.56l-1.33 4H7.39L6.05 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i4PJI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M7.15 10.33c.888.8 1.999 1.36 3.228 1.574l2.326 6.98a.846.846 0 01-.535 1.07.844.844 0 01-1.072-.535l-1.225-3.671H7.125L5.9 19.419a.85.85 0 01-1.072.536.85.85 0 01-.536-1.071l2.857-8.555zm1.353 1.305l-.808 2.413h1.607l-.8-2.413zM5 5.5c0 .76.13 1.49.37 2.17-.496 1.056-.313 2.356.704 3.29.385.353.404.94.038 1.311a.982.982 0 01-1.356.038c-2.183-2.01-2-5.125.01-6.94a.95.95 0 01.24-.156A6.421 6.421 0 005 5.5z",
    "M3.874 13.185c-1.346-.918-2.187-2.67-2.187-4.34 0-1.752.757-3.254 2.187-4.339.42-.25.42-.834.168-1.168-.252-.418-.84-.418-1.177-.167C1.014 4.59-.08 6.509.005 8.846c.084 2.253 1.177 4.423 2.86 5.675.168.083.336.166.504.166.253 0 .505-.083.673-.333.337-.418.253-.918-.168-1.169zM12.246 12.309a.98.98 0 01-1.354-.037.917.917 0 01-.206-.324 6.54 6.54 0 001.959-.049 5.125 5.125 0 01-.399.41zM14.631 11.476l1.228 1.229a6.6 6.6 0 01-1.723 1.816c-.169.083-.337.166-.505.166-.253 0-.505-.083-.673-.333-.337-.418-.253-.918.168-1.169.62-.422 1.133-1.022 1.505-1.709z",
    "M11.5 0C14.54 0 17 2.46 17 5.5c0 .26-.02.51-.06.75l-.03.17c-.04.25-.1.49-.17.73v.01c-.08.24-.17.47-.28.69-.01.04-.03.07-.05.11-.11.23-.24.44-.38.65l3.68 3.68A1.003 1.003 0 0119 14c-.28 0-.53-.11-.7-.29l-3.68-3.68c-.21.14-.42.27-.65.38-.04.01-.07.03-.11.05-.22.11-.45.2-.69.28h-.01c-.24.07-.48.13-.73.17l-.17.03c-.25.04-.5.06-.76.06C8.46 11 6 8.54 6 5.5S8.46 0 11.5 0zm0 1.5c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4VjPG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.71 5.29l-5-5A.997.997 0 0011 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.28-.11-.53-.29-.71zM9 7h2v3H9V7zM6 7h2v3H6V7zm2 11H6v-3h2v3zm3 0H9v-3h2v3zm3 0h-2v-3h2v3zm0-4H6v-3h8v3zm0-4h-2V7h2v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hGK0N":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 2c-.46 0-.85.32-.97.74L7.04 16.7c-.02.1-.04.2-.04.3 0 .55.45 1 1 1 .46 0 .85-.32.97-.74L12.96 3.3c.02-.1.04-.2.04-.3 0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"88Ex4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.41 10l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"e1WfG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 9H6c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bNhsq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 9h-3V6c0-.55-.45-1-1-1s-1 .45-1 1v3H6c-.55 0-1 .45-1 1s.45 1 1 1h3v3c0 .55.45 1 1 1s1-.45 1-1v-3h3c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"11H8Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 5v10h10V5H5zM4 3a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V4a1 1 0 00-1-1H4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kEfb8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 5c-.28 0-.53.11-.71.29L8 11.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7A1.003 1.003 0 0015 5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d4gwW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 11.776v2.81l2.31 2.242a.987.987 0 010 1.415c-.399.39-1.044.39-1.442 0L11 17.414V19a.99.99 0 01-.996 1A.996.996 0 019 19v-1.636l-.912.879c-.398.39-1.043.39-1.441 0a.987.987 0 010-1.415L9 14.536v-2.79l-2.548 1.435-.837 3.063c-.146.534-.705.85-1.248.707a.998.998 0 01-.721-1.224l.309-1.132-1.4.793a1.03 1.03 0 01-1.393-.366.99.99 0 01.373-1.366l1.445-.818-1.224-.322a.998.998 0 01-.72-1.225c.145-.533.704-.85 1.248-.707l3.193.84 2.462-1.395-2.532-1.434-3.123.82a1.022 1.022 0 01-1.249-.706.998.998 0 01.721-1.225L2.91 7.18l-1.4-.793a.99.99 0 01-.373-1.366 1.03 1.03 0 011.392-.366l1.445.818-.328-1.2a.998.998 0 01.72-1.225 1.022 1.022 0 011.25.707l.855 3.132L9 8.311V5.414L6.647 3.121a.987.987 0 010-1.414 1.033 1.033 0 011.441 0L9 2.586V1c0-.552.44-1 1.004-1A.99.99 0 0111 1l-.007 1.536.875-.829a1.033 1.033 0 011.441 0 .987.987 0 010 1.414L11 5.364v2.918l2.53-1.42.855-3.131c.146-.534.705-.85 1.249-.707a.998.998 0 01.72 1.224l-.327 1.2 1.4-.792a1.03 1.03 0 011.392.366.99.99 0 01-.373 1.366l-1.355.768 1.153.303a.998.998 0 01.721 1.225c-.146.533-.705.85-1.249.707l-3.123-.821-2.576 1.459 2.506 1.42 3.193-.84a1.022 1.022 0 011.249.707.998.998 0 01-.72 1.225l-1.224.322 1.4.793a.99.99 0 01.373 1.366 1.03 1.03 0 01-1.393.366l-1.356-.768.31 1.132a.998.998 0 01-.721 1.224 1.022 1.022 0 01-1.249-.707l-.837-3.063L11 11.776z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"91FvX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.5 5c.8 0 1.6-.4 2-1 2 1.2 3.3 3.3 3.5 5.7 0 .5.5.9 1 .9.6 0 1-.5 1-1v-.1c-.2-3.3-2.2-6.2-5.1-7.6C13.7.8 12.7 0 11.5 0 10.1 0 9 1.1 9 2.5S10.1 5 11.5 5zm5 7c-1.4 0-2.5 1.1-2.5 2.5 0 .4.1.7.2 1.1-1.1.9-2.6 1.4-4.2 1.4-1.9 0-3.6-.8-4.9-2-.2-.2-.5-.4-.8-.4-.5 0-1 .5-1 1 0 .3.1.5.3.7C5.3 18 7.5 19 10 19c2.2 0 4.2-.8 5.8-2.1.2.1.5.1.7.1 1.4 0 2.5-1.1 2.5-2.5S17.9 12 16.5 12zM5 10.5c0-1.1-.7-2.1-1.7-2.4.5-1.9 1.9-3.5 3.6-4.4.3-.2.6-.5.6-.9 0-.5-.4-1-1-1-.2 0-.4.1-.6.2-2.4 1.2-4.2 3.6-4.7 6.4C.5 8.9 0 9.6 0 10.5 0 11.9 1.1 13 2.5 13S5 11.9 5 10.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aVYzX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 16h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM7 15c-.28 0-.53.11-.71.29L5 16.59V11c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 15.3A.965.965 0 001 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 15zM19 1h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 5h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"B212D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 15c-.28 0-.53.11-.71.29L6 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L2.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 008 15zm8.89-.79v-1.22H11.3v1.3h3.51L11 18.78V20h5.99v-1.3h-3.91l3.81-4.49zM14.97 0h-1.95L9.01 11.01h1.89l.98-2.92h4.17l.98 2.92h1.96L14.97 0zm-2.59 6.63l1.58-4.74H14l1.57 4.74h-3.19z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cj08H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8.01 15c-.28 0-.53.11-.71.29L6 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L2.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3a1.014 1.014 0 001.42 0l3-3c.18-.18.29-.43.29-.71.01-.55-.44-1-.99-1zm4.44-5.65l6.4-7.88V0H10.5v1.67h5.91L10 9.44v1.57h9V9.35h-6.55zm1.27 3.64L11 20h1.59l.56-1.56h2.68l.55 1.56h1.64l-2.68-7.01h-1.62zm-.16 4.3l.93-2.57h.02l.9 2.57h-1.85z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aLkqM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 8h5c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0 5h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0-10h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm9 12h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM7 14c-.28 0-.53.11-.71.29L5 15.59V10c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 14.3A.965.965 0 001 14a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 14z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2yPgb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 15h-3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm-6-1c-.28 0-.53.11-.71.29L5 15.59V10c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 14.3A.965.965 0 001 14a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 14zM19 0h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 10h-5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm2-5h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2DD3H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 14.99c-.28 0-.53.11-.71.29L7 16.58v-5.59c0-.55-.45-1-1-1s-1 .45-1 1v5.59l-1.29-1.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-3c.18-.18.29-.43.29-.71a.99.99 0 00-1-1zm8.88.23c-.08-.42-.22-.79-.42-1.12-.2-.33-.47-.6-.8-.8-.33-.2-.76-.3-1.28-.3a2.333 2.333 0 00-1.72.71c-.21.22-.37.48-.49.78-.11.3-.17.62-.17.97 0 .27.04.54.13.8.08.26.22.5.4.7.19.21.43.38.71.5a2.142 2.142 0 001.72.02c.25-.12.47-.31.66-.58l.02.02c-.01.19-.04.4-.08.63-.04.24-.11.46-.21.67-.1.21-.23.38-.39.53a.92.92 0 01-.62.22c-.24 0-.44-.08-.6-.25-.16-.17-.27-.36-.31-.59h-1.31c.04.29.12.56.24.79.12.23.28.43.48.59.19.16.42.28.67.36.25.08.52.12.82.12.49 0 .9-.1 1.23-.31.34-.21.61-.48.82-.82.21-.34.37-.71.47-1.13.1-.42.15-.83.15-1.25 0-.43-.04-.85-.12-1.26zm-1.42.63c-.05.15-.11.28-.2.4-.09.12-.2.21-.34.27s-.3.1-.49.1c-.17 0-.33-.04-.46-.11s-.24-.17-.33-.29c-.08-.12-.15-.25-.19-.4-.04-.15-.06-.31-.06-.47 0-.15.02-.3.07-.45.05-.15.11-.28.2-.39.09-.12.2-.21.33-.28.13-.07.27-.11.44-.11.17 0 .33.04.47.11.14.07.25.17.34.28a1.387 1.387 0 01.28.86c.01.17-.02.33-.06.48zM15.32 11H17V0h-1.25c-.05.34-.17.62-.34.85-.17.23-.39.42-.63.57-.25.15-.52.25-.83.31-.3.06-.62.09-.94.09v1.41h2.31V11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1ONII":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 15c-.28 0-.53.11-.71.29L7 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L3.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-3A1.003 1.003 0 009 15zm6.7-1.33a1.5 1.5 0 01-.44.43c-.17.11-.37.19-.58.23-.22.04-.44.06-.67.05v1.07h1.66V20H17v-6.99h-1.06c-.04.26-.12.48-.24.66zm3.15-10.3c-.11-.68-.29-1.26-.55-1.76-.26-.5-.62-.89-1.08-1.18C16.75.14 16.17 0 15.46 0c-.54 0-1.03.09-1.46.27-.43.18-.79.44-1.09.76-.3.33-.52.71-.67 1.15-.16.44-.24.92-.24 1.43 0 .54.08 1.04.23 1.47.15.44.37.81.65 1.12.28.31.61.55 1 .72.39.17.82.26 1.3.26.46 0 .88-.11 1.26-.33.38-.22.68-.53.9-.94l.03.03c-.03.35-.07.74-.12 1.16-.05.42-.15.81-.29 1.18-.14.37-.35.68-.61.92-.26.25-.62.37-1.06.37-.43 0-.77-.13-1.03-.4-.25-.27-.4-.62-.44-1.05h-1.64c.02.43.11.83.29 1.18.17.35.39.66.67.91a3.027 3.027 0 002.07.8c.71 0 1.3-.17 1.79-.5.48-.33.87-.76 1.17-1.29.3-.53.51-1.12.64-1.76.13-.64.19-1.28.19-1.92.01-.77-.05-1.49-.15-2.17zM17.1 4.44c-.08.27-.19.5-.34.71-.15.21-.34.37-.57.49-.23.12-.5.18-.8.18-.3 0-.56-.06-.78-.19-.22-.13-.4-.29-.55-.49-.14-.2-.25-.44-.32-.7-.07-.27-.11-.55-.11-.84 0-.28.04-.55.11-.82.07-.26.18-.49.32-.7.14-.2.33-.36.55-.48.22-.12.48-.17.78-.17.31 0 .57.06.8.18.23.12.42.28.57.48.15.2.26.43.34.69.08.26.11.53.11.82 0 .29-.04.57-.11.84z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"80JqY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 13a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 9H11V2h5v2c.77 0 1.47.3 2 .78V1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v3.78C2.53 4.3 3.23 4 4 4V2h5v7H3.41L4.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 11H9v7H4v-2c-.77 0-1.47-.3-2-.78V19c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.78c-.53.48-1.23.78-2 .78v2h-5v-7h5.59l-1.29 1.29c-.19.18-.3.43-.3.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j9Hnh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V2h16v16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8xtzX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v4h4V2zm3 14h2c.55 0 1-.45 1-1v-5h-4v5c0 .55.45 1 1 1zm3-10c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h4V6zm-6 1H8v5h4V7zm-9 9h2c.55 0 1-.45 1-1v-3H2v3c0 .55.45 1 1 1zm16 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM6 9c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h4V9zm3 7h2c.55 0 1-.45 1-1v-2H8v2c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9MYdQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 7H5a3 3 0 000 6h10a3 3 0 100-6zM5 5a5 5 0 000 10h10a5 5 0 000-10H5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jxAHS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0l3.1 6.6 6.9 1-5 5.1 1.2 7.3-6.2-3.4L3.8 20 5 12.7 0 7.6l6.9-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"310oM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M20 7.6l-6.9-1.1L10 0 6.9 6.6 0 7.6l5 5.1L3.8 20l6.2-3.4 6.2 3.4-1.2-7.2 5-5.2zM10 15l-4.5 2.4.9-5.2-3.6-3.6 5-.8L10 3.1l2.2 4.7 5 .8-3.6 3.7.9 5.2L10 15z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hszVA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 3c-.23 0-.42.09-.59.21l-.01-.01L8 8V4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-4l6.4 4.8.01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h6JWT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 16H2v-3h4c.55 0 1-.45 1-1V8h3v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1h-3c-.55 0-1 .45-1 1v4h-3V7c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v4H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eGfpk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 3h-2c-.55 0-1 .45-1 1v4L5.6 3.2l-.01.01C5.42 3.09 5.23 3 5 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01L12 12v4c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7eXdl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 3H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kVg3b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 6a6 6 0 106 6h-6V6zm-.998-1.938A1.015 1.015 0 019 4V2H7a1 1 0 110-2h6a1 1 0 010 2h-2v2c0 .02 0 .041-.002.062A8.001 8.001 0 0110 20a8 8 0 01-.998-15.938z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4qPvj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 9h-4.46a4.7 4.7 0 00-.4-.14c-.19-.05-.51-.14-.96-.25-.45-.11-.9-.23-1.37-.35-.47-.12-.89-.23-1.27-.33s-.6-.16-.65-.17c-.53-.15-.95-.37-1.27-.66-.32-.28-.49-.68-.49-1.19 0-.36.09-.66.26-.9s.39-.43.65-.57c.26-.14.55-.24.87-.3s.63-.09.93-.09c.89 0 1.63.19 2.21.57.45.3.75.76.89 1.38h2.63c-.06-.52-.2-.98-.42-1.4-.3-.57-.71-1.05-1.23-1.43a5.33 5.33 0 00-1.79-.87c-.7-.2-1.42-.3-2.19-.3-.66 0-1.31.08-1.96.25s-1.22.43-1.73.77-.92.79-1.23 1.32c-.31.52-.46 1.15-.46 1.87 0 .37.05.74.15 1.1.1.36.28.7.53 1.02.18.24.41.47.69.67H2c-.55 0-1 .45-1 1s.45 1 1 1h10.14c.02.01.05.02.07.02.3.11.58.29.84.55.25.26.38.67.38 1.21 0 .27-.06.53-.17.79-.11.26-.29.49-.54.69-.25.2-.57.36-.97.49s-.88.19-1.44.19c-.52 0-1.01-.06-1.45-.17-.45-.11-.84-.29-1.19-.54s-.61-.56-.8-.95c-.05-.08-.09-.18-.12-.28H4.11c.09.43.22.82.4 1.18.33.65.77 1.18 1.32 1.59.55.41 1.2.72 1.94.92.74.2 1.53.3 2.37.3.73 0 1.44-.08 2.14-.25.7-.17 1.33-.43 1.88-.79.55-.36.99-.83 1.33-1.39.34-.56.51-1.25.51-2.05 0-.37-.06-.75-.18-1.12a3.12 3.12 0 00-.15-.39H18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"63Jc2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 18H2V2h12.3l2-2H1C.4 0 0 .4 0 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V7.7l-2 2V18zm1.2-18l-7.6 7.6 2.8 2.8L20 4.8V0h-.8zM4 15.9c3.1.2 5.9.2 8.2-2 1.1-1.1 1.1-3 0-4.1-.6-.5-1.3-.8-2-.8s-1.4.3-1.9.8C7.2 11 6.6 14.3 4 15.9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bZ5GJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.02 10c-.01 0-.01 0 0 0H16h.02zM2 6h13.58l-2.29 2.29a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L15.58 4H2c-.55 0-1 .45-1 1s.45 1 1 1zm2 4h-.02H4zm14 4H4.42l2.29-2.29a1 1 0 00.3-.71 1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.42 16H18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7A0Mz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.71 5.3l-4-4A.997.997 0 005 1.01c-.28 0-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L4 4.42V18c0 .55.45 1 1 1s1-.45 1-1V4.42l2.29 2.29a1 1 0 00.71.3 1.003 1.003 0 00.71-1.71zM10 3.98c0 .01 0 .01 0 0V4v-.02zm0 12.04c0-.01 0-.01 0 0V16v.02zm9-3.03c-.28 0-.53.11-.71.29L16 15.58V2c0-.55-.45-1-1-1s-1 .45-1 1v13.58l-2.29-2.29a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29.28 0 .53-.11.71-.29l4-4c.18-.18.29-.43.29-.71 0-.56-.45-1.01-1-1.01z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aDvun":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12.293 2.293l1.414 1.414-7.127 7.129a3.5 3.5 0 11-1.415-1.415l7.128-7.128zM16.5 9a3.5 3.5 0 110 7 3.5 3.5 0 010-7zm-13 2a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm13 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lhzKK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 4.01a6 6 0 100 12 6 6 0 100-12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6kRYm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 8.01h-3v-3c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v3H5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h3v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-3h3c.55 0 1-.45 1-1v-2c0-.56-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7Tgkk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 10.01c0-.21-.08-.39-.18-.54l.02-.01-4-6-.02.01c-.18-.28-.47-.46-.82-.46s-.64.18-.82.45l-.01-.01-4 6 .02.01c-.11.16-.19.34-.19.55s.08.39.18.54l-.02.01 4 6 .02-.01c.18.27.47.46.82.46s.64-.19.82-.46l.02.01 4-6-.02-.01c.1-.16.18-.34.18-.54z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gFPp7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 5H4c-.5 0-1 .5-1 1v8c0 .5.5 1 1 1h12c.5 0 1-.5 1-1V6c0-.5-.5-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b3eRL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15 4.01H5c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10c0-.56-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gMIC3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 5c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1 0 .16.05.31.11.44H4.1l5 10h.01c.17.33.5.56.89.56s.72-.23.89-.56h.01l5-10h-.01c.06-.13.11-.28.11-.44z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kIQl9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.89 14.56l-4.99-10h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56H9.1l-5 10h.01c-.06.13-.11.28-.11.44 0 .55.45 1 1 1h10c.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2HSlo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.146.854a.5.5 0 01.708-.708l4 4a.5.5 0 01-.708.708l-.646-.647L17.207 5.5l1.647 1.646a.5.5 0 01-.708.708l-.646-.647-1.146 1.146-7.5 7.5a.5.5 0 01-.708 0l-.646-.646-2.646 2.647a.5.5 0 01-.708 0l-.646-.647-2.646 2.647a.5.5 0 01-.708-.708L2.793 16.5l-.647-.646a.5.5 0 010-.708L4.793 12.5l-.647-.646a.5.5 0 010-.708l7.5-7.5L12.794 2.5l-.647-.646a.5.5 0 01.708-.708L14.5 2.793 15.793 1.5l-.647-.646zM12.707 4l.793-.793L16.793 6.5 16 7.293 12.707 4zm2.586 4l-.793.793-1.646-1.647a.5.5 0 00-.708.708L13.793 9.5 12.5 10.793l-1.646-1.647a.5.5 0 00-.708.708l1.647 1.646-1.293 1.293-1.646-1.647a.5.5 0 00-.708.708L9.793 13.5 8.5 14.793 5.207 11.5 12 4.707 15.293 8zM3.207 15.5L5.5 13.207 6.793 14.5 4.5 16.793 3.207 15.5zM16.5 2.207L17.793 3.5 16.5 4.793 15.207 3.5 16.5 2.207z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3mD3Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M2 4a2 2 0 012-2h4.588a2 2 0 011.414.586l7.41 7.41a2 2 0 010 2.828l-4.588 4.588a2 2 0 01-2.829 0l-7.41-7.41A2 2 0 012 8.588V4zm3.489-.006a1.495 1.495 0 100 2.99 1.495 1.495 0 000-2.99z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8ZuQj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 7c.28 0 .53-.11.71-.29l5-5A1.003 1.003 0 009.29.29l-5 5A1.003 1.003 0 005 7zm6 6a1.003 1.003 0 001.71.71l5-5a1.003 1.003 0 00-1.42-1.42l-5 5c-.18.18-.29.43-.29.71zm8 5h-1c0-.55-.45-1-1-1h-7c-.55 0-1 .45-1 1H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm-9-6l6-6-1.29-1.29a1.003 1.003 0 00-1.42-1.42L12 2 6 8l1.29 1.29-7 7a1.003 1.003 0 001.42 1.42l7-7L10 12z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"IuJCH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3.956 4.47A1 1 0 014.804 4h6.392a1 1 0 01.848.47L13 6h5a1 1 0 010 2h-5v1h4a3 3 0 110 6H3a3 3 0 010-6V6.287a1 1 0 01.152-.53l.804-1.287zM3 11h14a1 1 0 110 2H3a1 1 0 110-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4RxZr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 5a1 1 0 012 0v3a1 1 0 01-2 0V5zM12 9a1 1 0 000 2h3a1 1 0 000-2h-3zM4 10a1 1 0 011-1h3a1 1 0 010 2H5a1 1 0 01-1-1zM10 11a1 1 0 00-1 1v3a1 1 0 002 0v-3a1 1 0 00-1-1z",
    "M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10zm0-2a8 8 0 100-16 8 8 0 000 16z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"Hk4j0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 9h-.33l.33 1v.5c0 .15-.03.3-.07.44h.01L17 17.23v.27c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5V17H6v.5c0 .83-.67 1.5-1.5 1.5S3 18.33 3 17.5v-.27l-1.93-6.28h.01c-.05-.15-.08-.3-.08-.45V10s.02-.06.05-.16c.06-.17.16-.47.28-.84H1c-.55 0-1-.45-1-1s.45-1 1-1h1l1-3h-.01v-.01c.25-.64 1-1.31 1.67-1.5 0 0 .78-.21 2.33-.36V1c0-.55.45-1 1-1h4c.55 0 1 .45 1 1v1.13c1.55.14 2.33.36 2.33.36.67.19 1.42.86 1.67 1.5V4H17l1 3h1c.55 0 1 .45 1 1s-.45 1-1 1zM3 11.5c0 .83.67 1.5 1.5 1.5S6 12.33 6 11.5 5.33 10 4.5 10 3 10.67 3 11.5zM16 7l-1-3H5L4 7v1h12V7zm-.5 3c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"54taU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 0a2 2 0 00-2 2v10.535a4 4 0 104 0V2a2 2 0 00-2-2zM3 2.5a.5.5 0 01.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zM3.5 8a.5.5 0 000 1h4a.5.5 0 000-1h-4zM5 5.5a.5.5 0 01.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm.5 5.5a.5.5 0 000 1h2a.5.5 0 000-1h-2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ffnmg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 17c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1-.45 1-1-.45-1-1-1c-.77 0-1.47.3-2 .78-.53-.48-1.23-.78-2-.78-.55 0-1 .45-1 1s.45 1 1 1 1 .45 1 1v12c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1c.77 0 1.47-.3 2-.78.53.48 1.23.78 2 .78.55 0 1-.45 1-1s-.45-1-1-1zm-4-4H2V7h10V5H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h11v-2zm7-8h-3v2h2v6h-2v2h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fV8VA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1H1c-.6 0-1 .5-1 1v16c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zM7 17H2v-3h5v3zm0-4H2v-3h5v3zm0-4H2V6h5v3zm11 8H8v-3h10v3zm0-4H8v-3h10v3zm0-4H8V6h10v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iZcye":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5.3 13.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7s-.1-.5-.3-.7l-3-3C6.5 7.1 6.3 7 6 7c-.6 0-1 .4-1 1 0 .3.1.5.3.7L6.6 10H1c-.6 0-1 .4-1 1s.4 1 1 1h5.6l-1.3 1.3zM19 1H3c-.5 0-1 .5-1 1v6h1c0-1.7 1.3-3 3-3 .8 0 1.6.3 2.1.9l.1.1H9v.8l1 1V6h8v3h-6.8c.3.3.5.6.6 1H18v3h-6.8l-.1.1-.9.9H18v3h-8v-2.8l-1 1V17H4v-.8c-.6-.5-1-1.3-1-2.2H2v4c0 .5.5 1 1 1h16c.6 0 1-.5 1-1V2c0-.5-.5-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9AlqD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14.25 1H19c.5 0 1 .5 1 1v16c0 .5-.5 1-1 1h-7.221l.278-2H18v-3h-5.527l.14-1H18v-3h-4.971l.139-1H18V6h-4.416l.637-4.587c.02-.139.03-.277.03-.413zM8.221 1l-.694 5H2v3h5.11l-.139 1H2v3h4.555l-.14 1H2v3h3.999l-.22 1.587c-.02.139-.03.277-.03.413H1c-.6 0-1-.5-1-1V2c0-.5.4-1 1-1h7.221zM10.26.862a1 1 0 011.98.276l-2.5 18a1 1 0 01-1.98-.276l2.5-18z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"21Wwp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17.333 10l1.435-1.722a1 1 0 00.232-.64V4.85l1-.9V18c0 .5-.5 1-1 1H1c-.6 0-1-.5-1-1V2c0-.5.4-1 1-1h6.722L12 4.85V6H8v3h4v1H8v3h10v-3h-.667zM7 17v-3H2v3h5zm0-4v-3H2v3h5zm0-4V6H2v3h5zm11 8v-3H8v3h10z",
    "M19.35 0a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V4.13L11.19 1.1a.642.642 0 01.45-1.1h7.71z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"idzvA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 1H1c-.6 0-1 .5-1 1v16c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zm-1 16H2v-3h16v3zm0-4H2v-3h16v3zm0-4H2V6h16v3z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j1VR1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 0C3.58 0 0 3.58 0 8a8 8 0 005.856 7.71c.064-.057.129-.109.19-.156.278-.209.595-.383.896-.53.358-.174.81-.358 1.193-.515.206-.084.393-.16.534-.223a3.93 3.93 0 00.203-.095 4.1 4.1 0 01-.305-.45C8.382 13.911 8.19 14 8 14c-.67 0-1.36-1.1-1.73-3h1.252c.047-.296.153-.571.323-.797l.01-.203H6.12C6.05 9.39 6 8.73 6 8s.05-1.39.12-2h3.76l.037.344c.315-.145.65-.242.979-.295L10.89 6h2.76c.027.077.052.155.076.233l.118-.04A3.62 3.62 0 0114.998 6c.247 0 .51.028.772.086A8 8 0 008 0zm5.17 5h-2.44c-.21-1.11-.51-2.03-.91-2.69 1.43.46 2.61 1.43 3.35 2.69zM8 2c.67 0 1.36 1.1 1.73 3H6.27C6.64 3.1 7.33 2 8 2zm-1.82.31c-.4.66-.71 1.58-.91 2.69H2.83a6.025 6.025 0 013.35-2.69zM2 8c0-.7.13-1.37.35-2h2.76C5.04 6.62 5 7.28 5 8s.04 1.38.11 2H2.35C2.13 9.37 2 8.7 2 8zm.83 3h2.44c.21 1.11.51 2.03.91 2.69A6.025 6.025 0 012.83 11z",
    "M13.917 15.209c.21.094.444.19.685.288.912.374 1.927.789 2.188 1.355.31.722.186 1.148.186 1.148H6.026s-.13-.426.186-1.148c.256-.584 1.305-1.011 2.234-1.39.22-.088.432-.175.626-.26.909-.4.923-.662.94-.978.002-.037.004-.076.008-.115l.003-.072c.002-.025.004-.049.004-.073a3.067 3.067 0 01-.839-1.237l-.007-.007a.024.024 0 00-.003-.01 1.757 1.757 0 01-.113-.347c-.234-.042-.372-.296-.427-.537a1.045 1.045 0 01-.137-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478a2.508 2.508 0 01.962-1.623c.426-.33 1.038-.501 1.58-.501.544 0 1.155.172 1.588.502a2.496 2.496 0 01.963 1.622c.075.413.117 1.045.117 1.478v.062c.15.062.288.22.323.564.02.268-.083.502-.138.598-.048.234-.185.488-.42.537a2.635 2.635 0 01-.116.364 3.094 3.094 0 01-.818 1.224c0 .055 0 .11.007.158.004.048.006.095.007.14.011.311.02.57.907.96z",
    "M14.976 14.57c-.24-.098-.455-.186-.65-.274l-.007-.003a3.801 3.801 0 01-.194-.091c.224-.288.41-.609.554-.946l.001-.002.013-.033c.018-.043.036-.087.052-.13l.011-.027.016-.04c.105-.092.19-.19.256-.284.129-.184.213-.38.265-.563.105-.226.225-.592.192-1.026l-.001-.011-.002-.011a1.855 1.855 0 00-.325-.91 9.924 9.924 0 00-.12-1.246 3.088 3.088 0 00-.106-.474l-.001-.007a3.543 3.543 0 00-.763-1.353c.27-.092.56-.139.83-.139.495 0 1.05.156 1.444.456a2.269 2.269 0 01.875 1.475c.069.375.106.95.106 1.344v.056c.138.056.263.2.294.513.019.244-.075.456-.125.543-.044.213-.169.444-.381.488-.025.1-.056.206-.094.3a2.815 2.815 0 01-.756 1.144c0 .05 0 .1.006.144.004.043.006.086.007.127.01.283.018.518.824.873.192.086.404.172.623.262.83.34 1.752.717 1.99 1.231.28.657.168 1.044.168 1.044h-2.081a3.864 3.864 0 00-.188-.542l-.005-.013-.006-.012c-.183-.397-.491-.681-.76-.88a5.614 5.614 0 00-.896-.522 17.36 17.36 0 00-.916-.4l-.15-.061z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Mnm7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18.55 6.56c-.31-.01-.65-.03-1.02-.06.03 0 .06-.01.09-.01.88-.12 1.68-.63 1.76-1.37.08-.75-.58-1.25-1.46-1.33-.32-.03-.65-.05-.99-.08.59-.19 1.05-.54 1.09-1.2.05-.75-.99-1.32-1.87-1.41-.34-.03-.64-.05-.91-.07h-.11c-.28-.02-.54-.02-.77-.02-3.92-.08-7.29.6-9.36 1.93v7.72c2.67 1.66 5.95 4.61 5.26 7.08-.21.76.39 1.35 1.23 1.26 1.01-.11 1.71-1.18 1.75-2.28.05-1.29-.19-2.59-.62-3.74-.05-.32.01-.65.47-.68.61-.04 1.39-.08 1.99-.1.32 0 .64-.01.94-.03h.01c.52-.03 1-.07 1.42-.12.88-.11 1.69-.6 1.79-1.35.1-.75-.55-1.25-1.44-1.35-.07-.01-.13-.02-.2-.02.21-.02.42-.04.61-.06.88-.11 1.69-.6 1.79-1.35.09-.75-.56-1.31-1.45-1.36zM3 3H0v8h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lHWpG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 9H0v8h3c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm16.99 3.09c-.1-.75-.91-1.24-1.79-1.35-.19-.02-.4-.05-.61-.06.07-.01.14-.01.2-.02.88-.1 1.53-.61 1.44-1.35-.1-.74-.91-1.24-1.79-1.35-.42-.05-.9-.09-1.42-.12h-.01l-.94-.03c-.6-.02-1.39-.05-1.99-.1-.45-.03-.51-.36-.47-.68.43-1.15.67-2.45.62-3.74-.04-1.11-.74-2.17-1.75-2.28-.84-.09-1.45.5-1.23 1.26.7 2.47-2.58 5.43-5.25 7.08v7.72c2.08 1.33 5.44 2.01 9.35 1.93.24 0 .49-.01.77-.02h.11c.27-.02.57-.04.91-.07.88-.08 1.92-.66 1.87-1.41-.04-.65-.5-1.01-1.09-1.2.34-.03.67-.05.99-.08.89-.08 1.55-.58 1.46-1.33-.08-.75-.88-1.25-1.76-1.37-.03 0-.06-.01-.09-.01.37-.02.71-.04 1.02-.06.91-.05 1.55-.61 1.45-1.36z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aSjTJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 4c-.28 0-.53.11-.71.29L7 13.59 3.71 10.3A.965.965 0 003 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l10-10A1.003 1.003 0 0017 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3SYUJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 20C4.48 20 0 15.52 0 10S4.48 0 10 0s10 4.48 10 10-4.48 10-10 10zm5-14c-.28 0-.53.11-.71.29L8 12.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l7-7A1.003 1.003 0 0015 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8tCIP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 9.59V4c0-.55-.45-1-1-1s-1 .45-1 1v6c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L11 9.59zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"55Shw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 16H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-13.41l-7.07 7.07-4.3-3.44-.01.01A.987.987 0 007 6c-.24 0-.46.1-.63.24l-.01-.01L3 9.03V15h16V2.59z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ekA0i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 17H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM9 16h2c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1zm6 0h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1zM3 16h2c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bGKYm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm10 0c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm-9 9H4v2h2v-2zM17 3v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H7v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H2c-.5 0-1 .5-1 1v14c0 .5.5 1 1 1h16c.5 0 1-.5 1-1V4c0-.5-.5-1-1-1h-1zM7 17H3v-4h4v4zm0-5H3V8h4v4zm5 5H8v-4h4v4zm0-5H8V8h4v4zm5 5h-4v-4h4v4zm0-5h-4V8h4v4zm-6 2H9v2h2v-2zm5-5h-2v2h2V9z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gjl3t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 16H2v-1.59l5-5 3.29 3.29c.18.19.43.3.71.3s.53-.11.71-.29l7-7a1.003 1.003 0 00-1.42-1.42L11 10.59l-3.29-3.3C7.53 7.11 7.28 7 7 7s-.53.11-.71.29L2 11.59V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ltGJz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9.86 2S3.98 9.18 3.98 12.17C3.99 15.4 6.78 18 9.96 18c3.18-.01 6.04-2.63 6.03-5.86C15.99 9.05 9.86 2 9.86 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1yhE7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M6.97 19c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2h-6v2zm-3-15l3 4v8h6V8l3-4h-12zm5 5c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V9zm6-9h-10c-.55 0-1 .45-1 1v2h12V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"86zJ0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.5 11a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm11.499 1a4 4 0 110 8 4 4 0 010-8zm-11.5 1.571a1.928 1.928 0 100 3.857 1.928 1.928 0 000-3.857zM16 14.667a1.333 1.333 0 100 2.666 1.333 1.333 0 000-2.666zM5.999 0C7.46 0 8.527.668 9 2l.851 4.256c1.433.096 2.82.217 4.147.362V2h2L16 6.862c.962.13 1.886.275 2.767.435.779.141 1.232.614 1.232 1.284L20 13a4.995 4.995 0 00-4-1.997A5.001 5.001 0 0011.099 15h-1.12a5.499 5.499 0 00-5.478-4.994 5.482 5.482 0 00-3.377 1.157H.004v-1.18L0 7.327c-.002-.597.37-1.18.999-1.302V1a1 1 0 011-1h4zm1 2H3v4h.75c1.386.027 2.749.073 4.079.139L6.999 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kppYg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 18h-2l2 2H4l.12-.12L6 18H4c-1.1 0-2-.9-2-2V2c0-1.1 3.58-2 8-2s8 .9 8 2v14c0 1.1-.9 2-2 2zM5.5 15c.83 0 1.5-.67 1.5-1.5S6.33 12 5.5 12 4 12.67 4 13.5 4.67 15 5.5 15zM9 3H4v6h5V3zm7 0h-5v6h5V3zm-1.5 9c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kO1M9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.89 18.56l-4.99-10h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56h-.01l-1.73 3.46-2.8-2.3 1.99-1.64C11.44 7.34 12 6.23 12 5V4h1c.55 0 1-.45 1-1s-.45-1-1-1H8V1c0-.55-.45-1-1-1S6 .45 6 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h9v1c0 .62-.28 1.18-.73 1.54L7 8.42 4.73 6.54C4.28 6.18 4 5.62 4 5H2c0 1.23.56 2.34 1.44 3.07l1.99 1.64-3.06 2.52.01.01c-.23.18-.38.45-.38.76 0 .55.45 1 1 1 .24 0 .45-.1.63-.24l.01.01L7 11l3.36 2.77.01-.01c.02.02.05.03.08.05.01 0 .01.01.02.02l-2.36 4.73h.01c-.07.13-.12.28-.12.44 0 .55.45 1 1 1 .39 0 .72-.23.89-.56h.01L11.12 17h5.76l1.22 2.45h.01c.17.32.5.55.89.55.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44zM12.12 15L14 11.24 15.88 15h-3.76z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h6fFO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 1h-5c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H3c-.55 0-1 .45-1 1v1h16V2c0-.55-.45-1-1-1zm.5 3h-15c-.28 0-.5.22-.5.5s.22.5.5.5H3v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zM7 16c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cwEQh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 15.542V20H9v-4.458L2 17l4.5-5.625L4 12l3.655-5.483L6 7l4-7 4 7-1.655-.483L16 12l-2.5-.625L18 17l-7-1.458z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h11Ep":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 10c-.55 0-1 .45-1 1v1.37l-6.25-7.03-.01.01A.971.971 0 0011 5c-.23 0-.42.09-.59.21l-.01-.01-3.43 2.58-5.42-3.61-.01.01A.969.969 0 001 4c-.55 0-1 .45-1 1 0 .35.19.64.46.82l-.01.01 6 4 .01-.02c.15.11.33.19.54.19.23 0 .42-.09.59-.21l.01.01 3.26-2.45L16.77 14H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2HYJ4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 4h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.77l-5.91 6.65L7.6 10.2l-.01.01C7.42 10.09 7.23 10 7 10c-.21 0-.39.08-.54.18l-.01-.02-6 4 .01.02c-.27.18-.46.47-.46.82 0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 5.41-3.61 3.43 2.58.01-.01c.18.11.37.2.6.2.3 0 .56-.14.74-.34l.01.01L18 7.63V9c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5a23n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 0a1 1 0 011 1v11a1 1 0 011 1v3h.5a.5.5 0 01.5.5v1a.5.5 0 01-.5.5H17v1a1 1 0 01-1 1h-1a1 1 0 01-1-1v-1H6v1a1 1 0 01-1 1H4a1 1 0 01-1-1v-1H1.5a.5.5 0 01-.5-.5v-1a.5.5 0 01.5-.5H2v-3a1 1 0 011-1V1a1 1 0 112 0v3a2 2 0 012-2h6a2 2 0 012 2V1a1 1 0 011-1zm-4 10H8a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1v-4a1 1 0 00-1-1zm-7 4H4a1 1 0 000 2h1a1 1 0 000-2zm11 0h-1a1 1 0 000 2h1a1 1 0 000-2zm-4.5 0a.5.5 0 110 1h-3l-.09-.008A.5.5 0 018.5 14zm0-1.5a.5.5 0 110 1h-3l-.09-.008a.5.5 0 01.09-.992zm0-1.5a.5.5 0 110 1h-3l-.09-.008A.5.5 0 018.5 11zM14 5H6v3h8V5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lKoae":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm14.71 9.29l-3-3A1.003 1.003 0 0015 7v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM12 0H8c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fPDge":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16.434 0a1 1 0 01.857.486L20 5v14a1 1 0 01-1 1H1a1 1 0 01-1-1V5L2.709.486A1 1 0 013.566 0h12.868zM10 8c-.28 0-.53.11-.71.29l-3 3-.084.096A1.003 1.003 0 007.71 12.71L9 11.41v4.58l.007.116c.058.496.482.884.993.884.55 0 1-.45 1-1v-4.58l1.29 1.29.081.073c.171.139.389.227.629.227a1.003 1.003 0 00.71-1.71l-3-3-.096-.084A1.002 1.002 0 0010 8zm6-6H4L2 5.002h16L16 2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g1RCX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 17c3.3 0 6-2.7 6-6V3.5c0-.8-.7-1.5-1.5-1.5S13 2.7 13 3.5V11c0 1.7-1.3 3-3 3s-3-1.3-3-3V3.5C7 2.7 6.3 2 5.5 2S4 2.7 4 3.5V11c0 3.3 2.7 6 6 6zM16.5 19h-13c-.3 0-.5.2-.5.5s.2.5.5.5h13c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4sjnI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M5 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm9-9H3.41L5.7 2.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 5.47 0 5.72 0 6c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 7H14c2.21 0 4 1.79 4 4s-1.79 4-4 4H9v2h5c3.31 0 6-2.69 6-6s-2.69-6-6-6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Qp12":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.5 6C2.01 6 0 8.01 0 10.5S2.01 15 4.5 15 9 12.99 9 10.5 6.99 6 4.5 6zm11 0C13.01 6 11 8.01 11 10.5s2.01 4.5 4.5 4.5 4.5-2.01 4.5-4.5S17.99 6 15.5 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i6VDZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 11.988v-4H4v-1l1-3h6V2.003a35.867 35.867 0 00-1-.015c-3.593 0-5.332.488-5.332.488-.67.188-1.424.864-1.674 1.503l-.004.009H3l-1 3H1a1 1 0 100 2h.333l-.28.84-.053.16v7.5a1.5 1.5 0 103 0v-.5h12v.5a1.5 1.5 0 103 0v-4.5h-5a1 1 0 01-1-1zm-8.5 1a1.5 1.5 0 110-3 1.5 1.5 0 010 3zM19.83 2.782a2.392 2.392 0 00-.592-.853c-.276-.264-.64-.485-1.09-.663C17.695 1.09 17.132 1 16.457 1c-.523 0-.996.084-1.418.253a3.157 3.157 0 00-1.084.703c-.299.3-.532.656-.698 1.065-.166.41-.254.861-.264 1.353h2.096c0-.246.028-.476.085-.69.057-.214.145-.4.264-.56.119-.16.27-.287.456-.383.185-.095.406-.143.663-.143.38 0 .677.1.89.3.215.2.321.51.321.93.01.245-.035.45-.135.614-.1.164-.23.314-.392.45a8.598 8.598 0 01-.527.41 3.53 3.53 0 00-.542.485c-.171.187-.32.412-.45.676-.127.265-.206.592-.234.984v.614h1.924v-.519c.038-.273.13-.5.278-.683.147-.182.316-.343.506-.484a13.5 13.5 0 01.606-.424c.214-.14.408-.312.584-.512s.323-.442.442-.724.178-.642.178-1.079c0-.264-.059-.548-.178-.854zm-4.54 6.099v2.103h2.237V8.881H15.29z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dcvkA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 1c-2.21 0-4 1.79-4 4v4H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-8c0-.55-.45-1-1-1h-2V5c0-1.1.9-2 2-2s2 .9 2 2v2c0 .55.45 1 1 1s1-.45 1-1V5c0-2.21-1.79-4-4-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fBEet":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.77 1.16c-.81.81-.74 2.28.02 3.76L6.1 8.71c-2.17-1.46-4.12-2-4.94-1.18l4.95 4.95-2.12 3.54 3.54-2.12 4.95 4.95c.82-.82.27-2.77-1.19-4.94l3.8-5.69c1.47.76 2.94.84 3.76.02l-7.08-7.08z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kQjzK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11.47 12.46c.16-.36.29-.74.38-1.14 0-.02.01-.04.01-.06.09-.4.14-.82.14-1.26 0-.44-.05-.86-.14-1.27 0-.02-.01-.04-.01-.06-.09-.4-.22-.78-.38-1.14-.01-.02-.02-.03-.02-.05a5.94 5.94 0 00-.61-1.03c0-.01-.01-.01-.01-.02a6.308 6.308 0 00-2.1-1.77c-.19-.1-.39-.18-.59-.26-.03-.01-.06-.02-.1-.03-.17-.07-.34-.12-.52-.17-.05-.01-.1-.03-.15-.04a4.34 4.34 0 00-.52-.09c-.05-.01-.11-.02-.17-.03C6.46 4.02 6.23 4 6 4c-3.31 0-6 2.69-6 6s2.69 6 6 6c.23 0 .46-.02.68-.04l.17-.03c.17-.02.34-.06.51-.09.05-.01.1-.03.15-.04.18-.05.36-.1.53-.17l.09-.03a5.973 5.973 0 002.68-2.04c0-.01.01-.01.01-.02.24-.32.44-.66.61-1.03.02-.01.03-.03.04-.05zM14 4c-.99 0-1.91.24-2.73.66a7.51 7.51 0 010 10.68c.82.42 1.74.66 2.73.66 3.31 0 6-2.69 6-6s-2.69-6-6-6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3ZYrZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C6.71 0 3.82 1.6 2 4.05V2c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.76C5.22 3.17 7.47 2 10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8c0-.55-.45-1-1-1s-1 .45-1 1c0 5.52 4.48 10 10 10s10-4.48 10-10S15.52 0 10 0zm4 7c-.28 0-.53.11-.71.29L9 11.58 6.71 9.29a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l5-5A1.003 1.003 0 0014 7z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cWOAP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm4 10c-.28 0-.53-.11-.71-.29L11 7.41V15c0 .55-.45 1-1 1s-1-.45-1-1V7.41l-2.29 2.3a1.003 1.003 0 01-1.42-1.42l4-4c.18-.18.43-.29.71-.29s.53.11.71.29l4 4A1.003 1.003 0 0114 10z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eyvLd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M10 0C4.48 0 0 4.48 0 10c0 .33.02.65.05.97.01.12.03.23.05.35.03.2.05.4.09.59.03.14.06.28.1.42l.12.48c.05.16.1.31.15.46.05.13.09.27.15.4.06.16.13.32.21.48.05.11.1.22.16.33.09.17.17.34.27.5.05.09.1.17.15.25.11.18.22.35.34.52.04.06.08.11.12.17 1.19 1.62 2.85 2.86 4.78 3.53l.09.03c.46.15.93.27 1.42.36.08.01.17.03.25.04.49.07.99.12 1.5.12s1.01-.05 1.5-.12c.08-.01.17-.02.25-.04.49-.09.96-.21 1.42-.36l.09-.03c1.93-.67 3.59-1.91 4.78-3.53.04-.05.08-.1.12-.16.12-.17.23-.35.34-.53.05-.08.1-.16.15-.25.1-.17.19-.34.27-.51.05-.11.1-.21.15-.32.07-.16.14-.32.21-.49.05-.13.1-.26.14-.39.05-.15.11-.31.15-.46.05-.16.08-.32.12-.48.03-.14.07-.28.1-.42.04-.19.06-.39.09-.59.02-.12.04-.23.05-.35.05-.32.07-.64.07-.97 0-5.52-4.48-10-10-10zm0 18a7.94 7.94 0 01-6.15-2.89c.84-.44 1.86-.82 2.67-1.19 1.45-.65 1.3-1.05 1.35-1.59.01-.07.01-.14.01-.21-.51-.45-.93-1.08-1.2-1.8l-.01-.01c0-.01-.01-.02-.01-.03a4.42 4.42 0 01-.15-.48c-.33-.07-.53-.44-.61-.79-.08-.14-.23-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.63.06-1.55.17-2.15.02-.17.06-.33.11-.5.21-.73.66-1.4 1.26-1.86.62-.47 1.5-.72 2.28-.72.78 0 1.65.25 2.27.73.6.46 1.05 1.12 1.26 1.86.05.16.08.33.11.5.11.6.17 1.51.17 2.15v.09c.22.1.42.33.46.82.04.39-.12.73-.2.87-.07.34-.27.71-.6.78-.04.16-.09.33-.15.48 0 .01-.02.05-.02.05-.26.71-.67 1.33-1.17 1.78 0 .08.01.16.01.23.05.54-.15.94 1.31 1.59.81.36 1.84.74 2.68 1.19A7.958 7.958 0 0110 18z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lvMvf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.93 3.79a9.1 9.1 0 012.2-2.27L7.29 1c-1.38.59-2.57 1.33-3.55 2.22C2.46 4.39 1.49 5.72.83 7.23.28 8.51 0 9.81 0 11.12c0 2.28.83 4.57 2.49 6.86l.16-.55c-.49-1.23-.73-2.38-.73-3.44 0-1.67.28-3.46.84-5.36.55-1.9 1.28-3.51 2.17-4.84zm9.38 8.39l-.33-.2c-.37.54-.65.87-.82 1a.74.74 0 01-.42.12c-.19 0-.38-.12-.57-.37-.31-.42-.73-1.59-1.26-3.5.47-.85.86-1.41 1.19-1.67.23-.19.48-.29.74-.29.1 0 .28.04.53.11.26.07.48.11.68.11.27 0 .5-.1.68-.29.18-.19.27-.44.27-.75 0-.33-.09-.58-.27-.77-.18-.19-.44-.29-.78-.29-.3 0-.59.07-.86.22s-.61.47-1.02.97c-.31.37-.77 1.02-1.37 1.94a9.683 9.683 0 00-1.24-3.14l-3.24.59-.06.36c.24-.05.44-.07.61-.07.32 0 .59.14.8.43.33.45.8 1.8 1.39 4.07-.47.64-.78 1.06-.96 1.26-.28.32-.52.53-.7.62-.14.08-.3.11-.48.11-.14 0-.36-.08-.67-.23-.21-.1-.4-.15-.57-.15-.31 0-.57.11-.78.32s-.31.48-.31.8c0 .31.09.55.28.75.19.19.44.29.76.29.31 0 .6-.07.87-.2s.61-.42 1.02-.86c.41-.44.98-1.13 1.7-2.08.28.9.52 1.56.72 1.97.2.41.44.71.7.89.26.18.59.27.99.27.38 0 .77-.14 1.17-.43.54-.36 1.07-1 1.61-1.91zM17.51 1l-.15.54c.49 1.24.73 2.39.73 3.45 0 1.43-.21 2.96-.63 4.6-.33 1.26-.75 2.45-1.27 3.55-.52 1.11-1.02 1.97-1.51 2.6-.49.62-1.09 1.2-1.8 1.72l-.17.53c1.38-.59 2.57-1.34 3.55-2.23 1.29-1.17 2.26-2.5 2.91-4 .55-1.28.83-2.59.83-3.91 0-2.27-.83-4.56-2.49-6.85z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iePEt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M8 7H7c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zM3 9H2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1zm10-5h-1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm5-4h-1c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dc3C2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M3 0H2c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm5 4H7c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm5 3h-1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm5 2h-1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gONTs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 2h18c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1zm2 5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1H3zm16 11H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aJWtQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M0 0h20v1a1 1 0 01-1 1H1a1 1 0 01-1-1V0zm6.293 11.293a.999.999 0 000 1.412l2.962 2.963.038.04A.996.996 0 0010 16a.996.996 0 00.745-.332l2.962-2.963a.999.999 0 00-1.412-1.412L10 13.587l-2.295-2.294a.999.999 0 00-1.412 0zm0-3.998a.999.999 0 101.412 1.412L10 6.413l2.295 2.294a.999.999 0 101.412-1.412l-2.962-2.963A.996.996 0 0010 4a.996.996 0 00-.745.332L6.293 7.295zM20 19v1H0v-1a1 1 0 011-1h18a1 1 0 011 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a5mnb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19 2H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM7 14V6l6 4-6 4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7DY6l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.249 13.835l1.251 1.251.354-.354.087-.077a1 1 0 011.327 1.491l-2.122 2.122-.087.077a1 1 0 01-1.327-1.491l.354-.354-1.251-1.251A6.466 6.466 0 0111 16.424L10.999 18h.501a1 1 0 01.117 1.993L11.5 20h-3a1 1 0 01-.117-1.993L8.5 18h.499v-1.577a6.46 6.46 0 01-2.538-.97L5.414 16.5l.354.354a1 1 0 01-1.327 1.491l-.087-.077-2.122-2.122a1 1 0 011.327-1.491l.087.077.354.354.97-.97a6.472 6.472 0 01-1.384-3.057l-.025.002L2 11.06v.44a1 1 0 01-1.993.117L0 11.5v-3a1 1 0 011.993-.117L2 8.5v.56h1.567A6.471 6.471 0 014.97 5.883l-.971-.969-.353.354-.087.077a1 1 0 01-1.327-1.491l2.122-2.122.087-.077a1 1 0 011.327 1.491l-.354.353 1.047 1.048A6.46 6.46 0 019 3.577L9 2h-.5A1 1 0 018.383.007L8.5 0h3a1 1 0 01.117 1.993L11.5 2H11v1.577a6.466 6.466 0 012.838 1.176l.04-.046L15.086 3.5l-.353-.353a1 1 0 011.327-1.491l.087.077 2.122 2.122a1 1 0 01-1.327 1.491l-.087-.077-.354-.354-1.207 1.207-.046.041a6.467 6.467 0 011.16 2.733H18V8.5a1 1 0 011.993-.117L20 8.5v3a1 1 0 01-1.993.117L18 11.5v-.605h-1.561a6.466 6.466 0 01-1.19 2.94zM12.5 11a1.5 1.5 0 100 3 1.5 1.5 0 000-3zM8 6a2 2 0 100 4 2 2 0 000-4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aSfhf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M15.92 3.93l-1.6 1.18A7.948 7.948 0 0116 10c0 1.84-.63 3.54-1.68 4.89l1.6 1.18A9.878 9.878 0 0018 10c0-2.29-.78-4.39-2.08-6.07zM11 3c-.28 0-.53.11-.71.29L7.59 6H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iZCak":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M14 3c-.28 0-.53.11-.71.29L10.59 6H6c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9lw8p":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M9 3.43c-.28 0-.53.11-.71.29l-2.7 2.71H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71a1.003 1.003 0 001.71-.71v-12c-.01-.55-.46-1-1.01-1zm8.31-1.56l-1.62 1.2C17.14 5.16 18 7.69 18 10.43s-.86 5.27-2.31 7.37l1.62 1.2C19 16.57 20 13.62 20 10.43c0-3.18-1-6.13-2.69-8.56zm-3.39 2.49l-1.6 1.18A7.948 7.948 0 0114 10.43c0 1.84-.63 3.54-1.68 4.89l1.6 1.18A9.94 9.94 0 0016 10.43c0-2.28-.78-4.38-2.08-6.07z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iWEtZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M16 10h-2c-.23 0-.42-.09-.59-.21l-.01.01-1.69-1.27-.63 3.14 2.62 2.62c.19.18.3.43.3.71v4c0 .55-.45 1-1 1s-1-.45-1-1v-3.59L9.39 12.8l-2.45 6.55h-.01c-.14.38-.5.65-.93.65-.55 0-1-.45-1-1 0-.12.03-.24.07-.35h-.01L9.43 7h-2.9l-1.7 2.55-.01-.01c-.18.27-.47.46-.82.46-.55 0-1-.45-1-1 0-.21.08-.39.18-.54l-.01-.01 2-3 .02.01C5.36 5.19 5.65 5 6 5h4.18l.36-.96c-.33-.43-.54-.96-.54-1.54a2.5 2.5 0 015 0A2.5 2.5 0 0112.5 5c-.06 0-.12-.01-.18-.02l-.44 1.18L14.33 8H16c.55 0 1 .45 1 1s-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"43mBz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.86 17.52l.01-.01-9-16-.01.01C10.69 1.21 10.37 1 10 1s-.69.21-.86.52l-.01-.01-9 16 .01.01c-.08.14-.14.3-.14.48 0 .55.45 1 1 1h18c.55 0 1-.45 1-1 0-.18-.06-.34-.14-.48zM11 17H9v-2h2v2zm0-3H9V6h2v8z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"b4IHq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M13 7h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm-9 8h1c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm4-6h2c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm11-5h-1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm0 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6EQsB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M4.948 2.682a1 1 0 00-1.897.001l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172C1.958 4.635 1.468 5 .999 5a1 1 0 000 2c1.457 0 2.442-1.027 3-1.825C4.558 5.973 5.543 7 7 7s2.442-1.027 3-1.825C10.558 5.973 11.543 7 13 7s2.442-1.027 3-1.825C16.558 5.973 17.544 7 19 7a1 1 0 100-2c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.896 0l-.006.016a5.868 5.868 0 01-.147.364c-.11.246-.272.568-.481.882C13.958 4.635 13.469 5 13 5c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.897 0l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172C7.958 4.635 7.468 5 6.999 5c-.47 0-.958-.365-1.418-1.055A6.05 6.05 0 014.954 2.7l-.006-.016v-.001zm0 6a1 1 0 00-1.897.001l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172c-.46.69-.95 1.055-1.419 1.055a1 1 0 100 2c1.457 0 2.442-1.027 3-1.825C4.558 11.973 5.543 13 7 13s2.442-1.027 3-1.825c.558.798 1.543 1.825 3 1.825s2.442-1.027 3-1.825c.558.798 1.544 1.825 3 1.825a1 1 0 100-2c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.896 0l-.006.016a5.868 5.868 0 01-.147.364c-.11.246-.272.568-.481.882-.46.69-.949 1.055-1.418 1.055-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.897 0l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172c-.46.69-.95 1.055-1.419 1.055-.47 0-.958-.365-1.418-1.055A6.05 6.05 0 014.954 8.7l-.006-.016zm-1.896-6zm1.896 12l.006.017.027.074a6.053 6.053 0 00.6 1.172c.46.69.95 1.055 1.419 1.055.47 0 .958-.365 1.418-1.055a6.053 6.053 0 00.628-1.246l.005-.016a1 1 0 011.897 0l.006.016.027.074a6.051 6.051 0 00.6 1.172c.46.69.95 1.055 1.419 1.055.47 0 .958-.365 1.418-1.055a6.051 6.051 0 00.628-1.246l.006-.016a1 1 0 011.896 0l.006.016.027.074a6.051 6.051 0 00.6 1.172c.46.69.95 1.055 1.419 1.055a1 1 0 110 2c-1.456 0-2.442-1.027-3-1.825-.558.798-1.543 1.825-3 1.825s-2.442-1.027-3-1.825C9.442 17.973 8.457 19 7 19s-2.442-1.027-3-1.825C3.442 17.973 2.457 19 1 19a1 1 0 110-2c.47 0 .958-.365 1.418-1.055a6.053 6.053 0 00.628-1.246l.005-.016a1 1 0 011.897-.001z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d99kG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M18 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm15-1h2V5h-2v10zM3 5H1v10h2V5zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3 3h10V1H5v2zm13 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM5 19h10v-2H5v2z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8pZj1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 4h18c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1zm1 2v8h16V6H2zm4 5c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fJN43":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 0H3c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H4v-4h12v4zm0-5H4V2h12v11z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8xfRC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M17 0H3c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H4V7h12v11zm0-12H4V2h12v4z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ma3jM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M12 6a3 3 0 113 3H4a1 1 0 000 2h11a5 5 0 10-5-5 1 1 0 102 0zM1 12a1 1 0 100 2h10a2 2 0 110 4c-.934 0-1.803-.614-2.057-1.333a1 1 0 10-1.886.666C7.627 18.944 9.321 20 11 20a4 4 0 000-8H1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"nfVOO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.8 4.44L16.13 8.1l-3.55-.71-.71-3.53L15.54.21c-2.01-.53-4.23-.03-5.8 1.53-1.86 1.85-2.23 4.6-1.14 6.83L.59 16.59C.22 16.95 0 17.45 0 18a2 2 0 002 2c.55 0 1.05-.22 1.41-.59l8.03-8.04c2.23 1.05 4.97.67 6.82-1.16 1.57-1.56 2.07-3.77 1.54-5.77z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6hcgT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M19.56 17.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm3-7H9V5c0-.55-.45-1-1-1s-1 .45-1 1v2H5c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V9h2c.55 0 1-.45 1-1s-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h1w5S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm8.56 10.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ex7Ly":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = [
    "M1 7c.55 0 1-.45 1-1V2h4c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1zm5 1a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L4.41 10 5.7 8.71c.19-.18.3-.43.3-.71zm2-2c.28 0 .53-.11.71-.29L10 4.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C10.53 2.11 10.28 2 10 2s-.53.11-.71.29l-2 2A1.003 1.003 0 008 6zM6 18H2v-4c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm8-6a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l1.3 1.29-1.29 1.29c-.19.18-.3.43-.3.71zm5-12h-5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-7 14c-.28 0-.53.11-.71.29L10 15.59 8.71 14.3A.965.965 0 008 14a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0012 14zm7-1c-.55 0-1 .45-1 1v4h-4c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z"
];

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6ziR3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "SpinnerSize", ()=>SpinnerSize
);
parcelHelpers.export(exports, "Spinner", ()=>Spinner
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var SpinnerSize;
(function(SpinnerSize1) {
    SpinnerSize1[SpinnerSize1["SMALL"] = 20] = "SMALL";
    SpinnerSize1[SpinnerSize1["STANDARD"] = 50] = "STANDARD";
    SpinnerSize1[SpinnerSize1["LARGE"] = 100] = "LARGE";
})(SpinnerSize || (SpinnerSize = {}));
// see http://stackoverflow.com/a/18473154/3124288 for calculating arc path
var R = 45;
var SPINNER_TRACK = "M 50,50 m 0,-".concat(R, " a ").concat(R, ",").concat(R, " 0 1 1 0,").concat(R * 2, " a ").concat(R, ",").concat(R, " 0 1 1 0,-").concat(R * 2);
// unitless total length of SVG path, to which stroke-dash* properties are relative.
// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength
// this value is the result of `<path d={SPINNER_TRACK} />.getTotalLength()` and works in all browsers:
var PATH_LENGTH = 280;
var MIN_SIZE = 10;
var STROKE_WIDTH = 4;
var MIN_STROKE_WIDTH = 16;
var Spinner = /** @class */ function(_super) {
    _tslib.__extends(Spinner1, _super);
    function Spinner1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Spinner1.prototype.componentDidUpdate = function(prevProps) {
        if (prevProps.value !== this.props.value) // IE/Edge: re-render after changing value to force SVG update
        this.forceUpdate();
    };
    Spinner1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, intent = _b.intent, value = _b.value, _c = _b.tagName, tagName = _c === void 0 ? "div" : _c;
        var size = this.getSize();
        var classes = _classnamesDefault.default(_common.Classes.SPINNER, _common.Classes.intentClass(intent), (_a = {}, _a[_common.Classes.SPINNER_NO_SPIN] = value != null, _a), className);
        // keep spinner track width consistent at all sizes (down to about 10px).
        var strokeWidth = Math.min(MIN_STROKE_WIDTH, STROKE_WIDTH * SpinnerSize.LARGE / size);
        var strokeOffset = PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : _utils.clamp(value, 0, 1));
        // multiple DOM elements around SVG are necessary to properly isolate animation:
        // - SVG elements in IE do not support anim/trans so they must be set on a parent HTML element.
        // - SPINNER_ANIMATION isolates svg from parent display and is always centered inside root element.
        return _react.createElement(tagName, {
            className: classes,
            role: "progressbar"
        }, _react.createElement(tagName, {
            className: _common.Classes.SPINNER_ANIMATION
        }, _react.createElement("svg", {
            width: size,
            height: size,
            strokeWidth: strokeWidth.toFixed(2),
            viewBox: this.getViewBox(strokeWidth)
        }, _react.createElement("path", {
            className: _common.Classes.SPINNER_TRACK,
            d: SPINNER_TRACK
        }), _react.createElement("path", {
            className: _common.Classes.SPINNER_HEAD,
            d: SPINNER_TRACK,
            pathLength: PATH_LENGTH,
            strokeDasharray: "".concat(PATH_LENGTH, " ").concat(PATH_LENGTH),
            strokeDashoffset: strokeOffset
        }))));
    };
    Spinner1.prototype.validateProps = function(_a) {
        var _b = _a.className, className = _b === void 0 ? "" : _b, size = _a.size;
        if (size != null && (className.indexOf(_common.Classes.SMALL) >= 0 || className.indexOf(_common.Classes.LARGE) >= 0)) console.warn(_errors.SPINNER_WARN_CLASSES_SIZE);
    };
    /**
     * Resolve size to a pixel value.
     * Size can be set by className, props, default, or minimum constant.
     */ Spinner1.prototype.getSize = function() {
        var _a = this.props, _b = _a.className, className = _b === void 0 ? "" : _b, size = _a.size;
        if (size == null) {
            // allow Classes constants to determine default size.
            if (className.indexOf(_common.Classes.SMALL) >= 0) return SpinnerSize.SMALL;
            else if (className.indexOf(_common.Classes.LARGE) >= 0) return SpinnerSize.LARGE;
            return SpinnerSize.STANDARD;
        }
        return Math.max(MIN_SIZE, size);
    };
    /** Compute viewbox such that stroked track sits exactly at edge of image frame. */ Spinner1.prototype.getViewBox = function(strokeWidth) {
        var radius = R + strokeWidth / 2;
        var viewBoxX = (50 - radius).toFixed(2);
        var viewBoxWidth = (radius * 2).toFixed(2);
        return "".concat(viewBoxX, " ").concat(viewBoxX, " ").concat(viewBoxWidth, " ").concat(viewBoxWidth);
    };
    Spinner1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Spinner");
    return Spinner1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/props":"7F9ht","../../common/utils":"8MRas","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aVitu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Dialog", ()=>Dialog
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _buttons = require("../button/buttons");
var _html = require("../html/html");
var _icon = require("../icon/icon");
var _overlay = require("../overlay/overlay");
var Dialog = /** @class */ function(_super) {
    _tslib.__extends(Dialog1, _super);
    function Dialog1(props) {
        var _this = _super.call(this, props) || this;
        var id = _utils.uniqueId("bp-dialog");
        _this.titleId = "title-".concat(id);
        return _this;
    }
    Dialog1.prototype.render = function() {
        return _react.createElement(_overlay.Overlay, _tslib.__assign({}, this.props, {
            className: _common.Classes.OVERLAY_SCROLL_CONTAINER,
            hasBackdrop: true
        }), _react.createElement("div", {
            className: _common.Classes.DIALOG_CONTAINER
        }, _react.createElement("div", {
            className: _classnamesDefault.default(_common.Classes.DIALOG, this.props.className),
            role: "dialog",
            "aria-labelledby": this.props["aria-labelledby"] || (this.props.title ? this.titleId : undefined),
            "aria-describedby": this.props["aria-describedby"],
            style: this.props.style
        }, this.maybeRenderHeader(), this.props.children)));
    };
    Dialog1.prototype.validateProps = function(props) {
        if (props.title == null) {
            if (props.icon != null) console.warn(_errors.DIALOG_WARN_NO_HEADER_ICON);
            if (props.isCloseButtonShown != null) console.warn(_errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);
        }
    };
    Dialog1.prototype.maybeRenderCloseButton = function() {
        // show close button if prop is undefined or null
        // this gives us a behavior as if the default value were `true`
        if (this.props.isCloseButtonShown !== false) return _react.createElement(_buttons.Button, {
            "aria-label": "Close",
            className: _common.Classes.DIALOG_CLOSE_BUTTON,
            icon: _react.createElement(_icon.Icon, {
                icon: "small-cross",
                size: _icon.IconSize.LARGE
            }),
            minimal: true,
            onClick: this.props.onClose
        });
        else return undefined;
    };
    Dialog1.prototype.maybeRenderHeader = function() {
        var _a = this.props, icon = _a.icon, title = _a.title;
        if (title == null) return undefined;
        return _react.createElement("div", {
            className: _common.Classes.DIALOG_HEADER
        }, _react.createElement(_icon.Icon, {
            icon: icon,
            size: _icon.IconSize.LARGE,
            "aria-hidden": true,
            tabIndex: -1
        }), _react.createElement(_html.H4, {
            id: this.titleId
        }, title), this.maybeRenderCloseButton());
    };
    Dialog1.defaultProps = {
        canOutsideClickClose: true,
        isOpen: false
    };
    Dialog1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Dialog");
    return Dialog1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/props":"7F9ht","../../common/utils":"8MRas","../button/buttons":"lDi9s","../html/html":"iCwHB","../icon/icon":"7dRdu","../overlay/overlay":"ikpmN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iCwHB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "H1", ()=>H1
);
parcelHelpers.export(exports, "H2", ()=>H2
);
parcelHelpers.export(exports, "H3", ()=>H3
);
parcelHelpers.export(exports, "H4", ()=>H4
);
parcelHelpers.export(exports, "H5", ()=>H5
);
parcelHelpers.export(exports, "H6", ()=>H6
);
parcelHelpers.export(exports, "Blockquote", ()=>Blockquote
);
parcelHelpers.export(exports, "Code", ()=>Code
);
parcelHelpers.export(exports, "Pre", ()=>Pre
);
parcelHelpers.export(exports, "Label", ()=>Label
);
parcelHelpers.export(exports, "OL", ()=>OL
);
parcelHelpers.export(exports, "UL", ()=>UL
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _classes = require("../../common/classes");
function htmlElement(tagName, tagClassName) {
    /* eslint-disable-next-line react/display-name */ return function(props) {
        var className = props.className, elementRef = props.elementRef, children = props.children, htmlProps = _tslib.__rest(props, [
            "className",
            "elementRef",
            "children"
        ]);
        return _react.createElement(tagName, _tslib.__assign(_tslib.__assign({}, htmlProps), {
            className: _classnamesDefault.default(tagClassName, className),
            ref: elementRef
        }), children);
    };
}
var H1 = htmlElement("h1", _classes.HEADING);
var H2 = htmlElement("h2", _classes.HEADING);
var H3 = htmlElement("h3", _classes.HEADING);
var H4 = htmlElement("h4", _classes.HEADING);
var H5 = htmlElement("h5", _classes.HEADING);
var H6 = htmlElement("h6", _classes.HEADING);
var Blockquote = htmlElement("blockquote", _classes.BLOCKQUOTE);
var Code = htmlElement("code", _classes.CODE);
var Pre = htmlElement("pre", _classes.CODE_BLOCK);
var Label = htmlElement("label", _classes.LABEL);
var OL = htmlElement("ol", _classes.LIST);
var UL = htmlElement("ul", _classes.LIST);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common/classes":"6Ep96","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cU5A6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Breadcrumb", ()=>Breadcrumb
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _classes = require("../../common/classes");
var _icon = require("../icon/icon");
var Breadcrumb = function(props) {
    var _a;
    var classes = _classnamesDefault.default(_classes.BREADCRUMB, (_a = {}, _a[_classes.BREADCRUMB_CURRENT] = props.current, _a[_classes.DISABLED] = props.disabled, _a), props.className);
    var icon = props.icon != null ? _react.createElement(_icon.Icon, {
        title: props.iconTitle,
        icon: props.icon
    }) : undefined;
    if (props.href == null && props.onClick == null) return _react.createElement("span", {
        className: classes
    }, icon, props.text, props.children);
    return _react.createElement("a", {
        className: classes,
        href: props.href,
        onClick: props.disabled ? undefined : props.onClick,
        tabIndex: props.disabled ? undefined : 0,
        target: props.target
    }, icon, props.text, props.children);
};

},{"classnames":"jocGM","react":"21dqq","../../common/classes":"6Ep96","../icon/icon":"7dRdu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gvHUX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Breadcrumbs", ()=>Breadcrumbs
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _menu = require("../menu/menu");
var _menuItem = require("../menu/menuItem");
var _overflowList = require("../overflow-list/overflowList");
var _popover = require("../popover/popover");
var _breadcrumb = require("./breadcrumb");
var Breadcrumbs = /** @class */ function(_super) {
    _tslib.__extends(Breadcrumbs1, _super);
    function Breadcrumbs1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderOverflow = function(items) {
            var collapseFrom = _this.props.collapseFrom;
            var position = collapseFrom === _common.Boundary.END ? _common.Position.BOTTOM_RIGHT : _common.Position.BOTTOM_LEFT;
            var orderedItems = items;
            if (collapseFrom === _common.Boundary.START) // If we're collapsing from the start, the menu should be read from the bottom to the
            // top, continuing with the breadcrumbs to the right. Since this means the first
            // breadcrumb in the props must be the last in the menu, we need to reverse the overlow
            // order.
            orderedItems = items.slice().reverse();
            /* eslint-disable deprecation/deprecation */ return _react.createElement("li", null, _react.createElement(_popover.Popover, _tslib.__assign({
                position: position,
                disabled: orderedItems.length === 0,
                content: _react.createElement(_menu.Menu, null, orderedItems.map(_this.renderOverflowBreadcrumb))
            }, _this.props.popoverProps), _react.createElement("span", {
                className: _common.Classes.BREADCRUMBS_COLLAPSED
            })));
        /* eslint-enable deprecation/deprecation */ };
        _this.renderOverflowBreadcrumb = function(props, index) {
            var isClickable = props.href != null || props.onClick != null;
            var htmlProps = _common.removeNonHTMLProps(props);
            return _react.createElement(_menuItem.MenuItem, _tslib.__assign({
                disabled: !isClickable
            }, htmlProps, {
                text: props.text,
                key: index
            }));
        };
        _this.renderBreadcrumbWrapper = function(props, index) {
            var isCurrent = _this.props.items[_this.props.items.length - 1] === props;
            return _react.createElement("li", {
                key: index
            }, _this.renderBreadcrumb(props, isCurrent));
        };
        return _this;
    }
    Breadcrumbs1.prototype.render = function() {
        var _a = this.props, className = _a.className, collapseFrom = _a.collapseFrom, items = _a.items, minVisibleItems = _a.minVisibleItems, _b = _a.overflowListProps, overflowListProps = _b === void 0 ? {} : _b;
        return _react.createElement(_overflowList.OverflowList, _tslib.__assign({
            collapseFrom: collapseFrom,
            minVisibleItems: minVisibleItems,
            tagName: "ul"
        }, overflowListProps, {
            className: _classnamesDefault.default(_common.Classes.BREADCRUMBS, overflowListProps.className, className),
            items: items,
            overflowRenderer: this.renderOverflow,
            visibleItemRenderer: this.renderBreadcrumbWrapper
        }));
    };
    Breadcrumbs1.prototype.renderBreadcrumb = function(props, isCurrent) {
        if (isCurrent && this.props.currentBreadcrumbRenderer != null) return this.props.currentBreadcrumbRenderer(props);
        else if (this.props.breadcrumbRenderer != null) return this.props.breadcrumbRenderer(props);
        else // allow user to override 'current' prop
        return _react.createElement(_breadcrumb.Breadcrumb, _tslib.__assign({
            current: isCurrent
        }, props));
    };
    Breadcrumbs1.defaultProps = {
        collapseFrom: _common.Boundary.START
    };
    return Breadcrumbs1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../menu/menu":"025mK","../menu/menuItem":"3MFRd","../overflow-list/overflowList":"fGPil","../popover/popover":"kIaY0","./breadcrumb":"cU5A6","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"025mK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Menu", ()=>Menu
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var Menu = /** @class */ function(_super) {
    _tslib.__extends(Menu1, _super);
    function Menu1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Menu1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, children = _b.children, large = _b.large, ulRef = _b.ulRef, htmlProps = _tslib.__rest(_b, [
            "className",
            "children",
            "large",
            "ulRef"
        ]);
        var classes = _classnamesDefault.default(_common.Classes.MENU, (_a = {}, _a[_common.Classes.LARGE] = large, _a), className);
        return _react.createElement("ul", _tslib.__assign({}, htmlProps, {
            className: classes,
            ref: ulRef
        }), children);
    };
    Menu1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Menu");
    return Menu1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3MFRd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MenuItem", ()=>MenuItem
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _icon = require("../icon/icon");
var _popover = require("../popover/popover");
var _text = require("../text/text");
var _menu = require("./menu");
var MenuItem = /** @class */ function(_super) {
    _tslib.__extends(MenuItem1, _super);
    function MenuItem1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuItem1.prototype.render = function() {
        var _a, _b;
        var _c = this.props, // eslint-disable-next-line deprecation/deprecation
        active = _c.active, className = _c.className, children = _c.children, disabled = _c.disabled, icon = _c.icon, intent = _c.intent, labelClassName = _c.labelClassName, labelElement = _c.labelElement, multiline = _c.multiline, popoverProps = _c.popoverProps, selected = _c.selected, shouldDismissPopover = _c.shouldDismissPopover, text = _c.text, textClassName = _c.textClassName, _d = _c.tagName, tagName = _d === void 0 ? "a" : _d, htmlTitle = _c.htmlTitle, htmlProps = _tslib.__rest(_c, [
            "active",
            "className",
            "children",
            "disabled",
            "icon",
            "intent",
            "labelClassName",
            "labelElement",
            "multiline",
            "popoverProps",
            "selected",
            "shouldDismissPopover",
            "text",
            "textClassName",
            "tagName",
            "htmlTitle"
        ]);
        var hasIcon = icon != null;
        var hasSubmenu = children != null;
        var intentClass = _common.Classes.intentClass(intent);
        var anchorClasses = _classnamesDefault.default(_common.Classes.MENU_ITEM, intentClass, (_a = {}, _a[_common.Classes.ACTIVE] = active, _a[_common.Classes.DISABLED] = disabled, // prevent popover from closing when clicking on submenu trigger or disabled item
        _a[_common.Classes.POPOVER_DISMISS] = shouldDismissPopover && !disabled && !hasSubmenu, _a[_common.Classes.SELECTED] = selected || active && intentClass === undefined, _a), className);
        var target = _react.createElement(tagName, _tslib.__assign(_tslib.__assign(_tslib.__assign({
            tabIndex: 0
        }, htmlProps), disabled ? DISABLED_PROPS : {}), {
            className: anchorClasses
        }), hasIcon ? // wrap icon in a <span> in case `icon` is a custom element rather than a built-in icon identifier,
        // so that we always render this class
        _react.createElement("span", {
            className: _common.Classes.MENU_ITEM_ICON
        }, _react.createElement(_icon.Icon, {
            icon: icon,
            "aria-hidden": true,
            tabIndex: -1
        })) : undefined, _react.createElement(_text.Text, {
            className: _classnamesDefault.default(_common.Classes.FILL, textClassName),
            ellipsize: !multiline,
            title: htmlTitle
        }, text), this.maybeRenderLabel(labelElement), hasSubmenu ? _react.createElement(_icon.Icon, {
            className: _common.Classes.MENU_SUBMENU_ICON,
            title: "Open sub menu",
            icon: "caret-right"
        }) : undefined);
        var liClasses = _classnamesDefault.default((_b = {}, _b[_common.Classes.MENU_SUBMENU] = hasSubmenu, _b));
        return _react.createElement("li", {
            className: liClasses
        }, this.maybeRenderPopover(target, children));
    };
    MenuItem1.prototype.maybeRenderLabel = function(labelElement) {
        var _a = this.props, label = _a.label, labelClassName = _a.labelClassName;
        if (label == null && labelElement == null) return null;
        return _react.createElement("span", {
            className: _classnamesDefault.default(_common.Classes.MENU_ITEM_LABEL, labelClassName)
        }, label, labelElement);
    };
    MenuItem1.prototype.maybeRenderPopover = function(target, children) {
        if (children == null) return target;
        var _a = this.props, disabled = _a.disabled, popoverProps = _a.popoverProps;
        return /* eslint-disable-next-line deprecation/deprecation */ _react.createElement(_popover.Popover, _tslib.__assign({
            autoFocus: false,
            captureDismiss: false,
            disabled: disabled,
            enforceFocus: false,
            hoverCloseDelay: 0,
            interactionKind: _popover.PopoverInteractionKind.HOVER,
            modifiers: SUBMENU_POPOVER_MODIFIERS,
            position: _common.Position.RIGHT_TOP,
            usePortal: false
        }, popoverProps, {
            content: _react.createElement(_menu.Menu, null, children),
            minimal: true,
            popoverClassName: _classnamesDefault.default(_common.Classes.MENU_SUBMENU, popoverProps === null || popoverProps === void 0 ? void 0 : popoverProps.popoverClassName),
            target: target
        }));
    };
    MenuItem1.defaultProps = {
        active: false,
        disabled: false,
        multiline: false,
        popoverProps: {},
        selected: false,
        shouldDismissPopover: true,
        text: ""
    };
    MenuItem1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".MenuItem");
    return MenuItem1;
}(_common.AbstractPureComponent2);
var SUBMENU_POPOVER_MODIFIERS = {
    // 20px padding - scrollbar width + a bit
    flip: {
        boundariesElement: "viewport",
        padding: 20
    },
    // shift popover up 5px so MenuItems align
    offset: {
        offset: -5
    },
    preventOverflow: {
        boundariesElement: "viewport",
        padding: 20
    }
};
// props to ignore when disabled
var DISABLED_PROPS = {
    href: undefined,
    onClick: undefined,
    onMouseDown: undefined,
    onMouseEnter: undefined,
    onMouseLeave: undefined,
    tabIndex: -1
};

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../icon/icon":"7dRdu","../popover/popover":"kIaY0","../text/text":"ll8ip","./menu":"025mK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ll8ip":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Text", ()=>Text
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var Text = /** @class */ function(_super) {
    _tslib.__extends(Text1, _super);
    function Text1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isContentOverflowing: false,
            textContent: ""
        };
        _this.textRef = null;
        return _this;
    }
    Text1.prototype.componentDidMount = function() {
        this.update();
    };
    Text1.prototype.componentDidUpdate = function() {
        this.update();
    };
    Text1.prototype.render = function() {
        var _a;
        var _this = this;
        var _b = this.props, children = _b.children, className = _b.className, ellipsize = _b.ellipsize, _c = _b.tagName, tagName = _c === void 0 ? "div" : _c, title = _b.title, htmlProps = _tslib.__rest(_b, [
            "children",
            "className",
            "ellipsize",
            "tagName",
            "title"
        ]);
        var classes = _classnamesDefault.default(className, (_a = {}, _a[_common.Classes.TEXT_OVERFLOW_ELLIPSIS] = ellipsize, _a));
        return _react.createElement(tagName, _tslib.__assign(_tslib.__assign({}, htmlProps), {
            className: classes,
            ref: function(ref) {
                return _this.textRef = ref;
            },
            title: title !== null && title !== void 0 ? title : this.state.isContentOverflowing ? this.state.textContent : undefined
        }), children);
    };
    Text1.prototype.update = function() {
        var _a;
        if (((_a = this.textRef) === null || _a === void 0 ? void 0 : _a.textContent) == null) return;
        var newState = {
            isContentOverflowing: this.props.ellipsize && this.textRef.scrollWidth > this.textRef.clientWidth,
            textContent: this.textRef.textContent
        };
        this.setState(newState);
    };
    Text1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Text");
    Text1.defaultProps = {
        ellipsize: false
    };
    return Text1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fGPil":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OverflowDirection", ()=>OverflowDirection
);
parcelHelpers.export(exports, "OverflowList", ()=>OverflowList
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _boundary = require("../../common/boundary");
var _classes = require("../../common/classes");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _resizeSensor = require("../resize-sensor/resizeSensor");
var OverflowDirection;
(function(OverflowDirection1) {
    OverflowDirection1[OverflowDirection1["NONE"] = 0] = "NONE";
    OverflowDirection1[OverflowDirection1["GROW"] = 1] = "GROW";
    OverflowDirection1[OverflowDirection1["SHRINK"] = 2] = "SHRINK";
})(OverflowDirection || (OverflowDirection = {}));
var OverflowList = /** @class */ function(_super) {
    _tslib.__extends(OverflowList1, _super);
    function OverflowList1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            direction: OverflowDirection.NONE,
            lastOverflowCount: 0,
            overflow: [],
            visible: _this.props.items
        };
        /** A cache containing the widths of all elements being observed to detect growing/shrinking */ _this.previousWidths = new Map();
        _this.spacer = null;
        _this.resize = function(entries) {
            // if any parent is growing, assume we have more room than before
            var growing = entries.some(function(entry) {
                var previousWidth = _this.previousWidths.get(entry.target) || 0;
                return entry.contentRect.width > previousWidth;
            });
            _this.repartition(growing);
            entries.forEach(function(entry) {
                return _this.previousWidths.set(entry.target, entry.contentRect.width);
            });
        };
        return _this;
    }
    OverflowList1.ofType = function() {
        return OverflowList1;
    };
    OverflowList1.prototype.componentDidMount = function() {
        this.repartition(false);
    };
    OverflowList1.prototype.shouldComponentUpdate = function(_nextProps, nextState) {
        // We want this component to always re-render, even when props haven't changed, so that
        // changes in the renderers' behavior can be reflected.
        // The following statement prevents re-rendering only in the case where the state changes
        // identity (i.e. setState was called), but the state is still the same when
        // shallow-compared to the previous state.
        return !(this.state !== nextState && _utils.shallowCompareKeys(this.state, nextState));
    };
    OverflowList1.prototype.componentDidUpdate = function(prevProps, prevState) {
        var _a, _b;
        if (prevProps.observeParents !== this.props.observeParents) console.warn(_errors.OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED);
        if (prevProps.collapseFrom !== this.props.collapseFrom || prevProps.items !== this.props.items || prevProps.minVisibleItems !== this.props.minVisibleItems || prevProps.overflowRenderer !== this.props.overflowRenderer || prevProps.alwaysRenderOverflow !== this.props.alwaysRenderOverflow || prevProps.visibleItemRenderer !== this.props.visibleItemRenderer) // reset visible state if the above props change.
        this.setState({
            direction: OverflowDirection.GROW,
            lastOverflowCount: 0,
            overflow: [],
            visible: this.props.items
        });
        if (!_utils.shallowCompareKeys(prevState, this.state)) this.repartition(false);
        var _c = this.state, direction = _c.direction, overflow = _c.overflow, lastOverflowCount = _c.lastOverflowCount;
        if (// if a resize operation has just completed (transition to NONE)
        direction === OverflowDirection.NONE && direction !== prevState.direction && overflow.length !== lastOverflowCount) (_b = (_a = this.props).onOverflow) === null || _b === void 0 || _b.call(_a, overflow.slice());
    };
    OverflowList1.prototype.render = function() {
        var _this = this;
        var _a = this.props, className = _a.className, collapseFrom = _a.collapseFrom, observeParents = _a.observeParents, style = _a.style, _b = _a.tagName, tagName = _b === void 0 ? "div" : _b, visibleItemRenderer = _a.visibleItemRenderer;
        var overflow = this.maybeRenderOverflow();
        var list = _react.createElement(tagName, {
            className: _classnamesDefault.default(_classes.OVERFLOW_LIST, className),
            style: style
        }, collapseFrom === _boundary.Boundary.START ? overflow : null, this.state.visible.map(visibleItemRenderer), collapseFrom === _boundary.Boundary.END ? overflow : null, _react.createElement("div", {
            className: _classes.OVERFLOW_LIST_SPACER,
            ref: function(ref) {
                return _this.spacer = ref;
            }
        }));
        return _react.createElement(_resizeSensor.ResizeSensor, {
            onResize: this.resize,
            observeParents: observeParents
        }, list);
    };
    OverflowList1.prototype.maybeRenderOverflow = function() {
        var overflow = this.state.overflow;
        if (overflow.length === 0 && !this.props.alwaysRenderOverflow) return null;
        return this.props.overflowRenderer(overflow.slice());
    };
    OverflowList1.prototype.repartition = function(growing) {
        var _this = this;
        if (this.spacer == null) return;
        if (growing) this.setState(function(state) {
            return {
                direction: OverflowDirection.GROW,
                // store last overflow if this is the beginning of a resize (for check in componentDidUpdate).
                lastOverflowCount: state.direction === OverflowDirection.NONE ? state.overflow.length : state.lastOverflowCount,
                overflow: [],
                visible: _this.props.items
            };
        });
        else if (this.spacer.offsetWidth < 0.9) // spacer has flex-shrink and width 1px so if it's much smaller then we know to shrink
        this.setState(function(state) {
            if (state.visible.length <= _this.props.minVisibleItems) return null;
            var collapseFromStart = _this.props.collapseFrom === _boundary.Boundary.START;
            var visible = state.visible.slice();
            var next = collapseFromStart ? visible.shift() : visible.pop();
            if (next === undefined) return null;
            var overflow = collapseFromStart ? _tslib.__spreadArray(_tslib.__spreadArray([], state.overflow, true), [
                next
            ], false) : _tslib.__spreadArray([
                next
            ], state.overflow, true);
            return {
                // set SHRINK mode unless a GROW is already in progress.
                // GROW shows all items then shrinks until it settles, so we
                // preserve the fact that the original trigger was a GROW.
                direction: state.direction === OverflowDirection.NONE ? OverflowDirection.SHRINK : state.direction,
                overflow: overflow,
                visible: visible
            };
        });
        else // repartition complete!
        this.setState({
            direction: OverflowDirection.NONE
        });
    };
    OverflowList1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".OverflowList");
    OverflowList1.defaultProps = {
        alwaysRenderOverflow: false,
        collapseFrom: _boundary.Boundary.START,
        minVisibleItems: 0
    };
    return OverflowList1;
}(_react.Component);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common/boundary":"12gzq","../../common/classes":"6Ep96","../../common/errors":"7mLY3","../../common/props":"7F9ht","../../common/utils":"8MRas","../resize-sensor/resizeSensor":"kcRK5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1Hg3x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ButtonGroup", ()=>ButtonGroup
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var ButtonGroup = /** @class */ function(_super) {
    _tslib.__extends(ButtonGroup1, _super);
    function ButtonGroup1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonGroup1.prototype.render = function() {
        var _a;
        var _b = this.props, alignText = _b.alignText, className = _b.className, fill = _b.fill, minimal = _b.minimal, large = _b.large, vertical = _b.vertical, htmlProps = _tslib.__rest(_b, [
            "alignText",
            "className",
            "fill",
            "minimal",
            "large",
            "vertical"
        ]);
        var buttonGroupClasses = _classnamesDefault.default(_common.Classes.BUTTON_GROUP, (_a = {}, _a[_common.Classes.FILL] = fill, _a[_common.Classes.LARGE] = large, _a[_common.Classes.MINIMAL] = minimal, _a[_common.Classes.VERTICAL] = vertical, _a), _common.Classes.alignmentClass(alignText), className);
        return _react.createElement("div", _tslib.__assign({}, htmlProps, {
            className: buttonGroupClasses
        }), this.props.children);
    };
    ButtonGroup1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".ButtonGroup");
    return ButtonGroup1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lJ4y4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Callout", ()=>Callout
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _html = require("../html/html");
var _icon = require("../icon/icon");
var Callout = /** @class */ function(_super) {
    _tslib.__extends(Callout1, _super);
    function Callout1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Callout1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, children = _b.children, icon = _b.icon, intent = _b.intent, title = _b.title, htmlProps = _tslib.__rest(_b, [
            "className",
            "children",
            "icon",
            "intent",
            "title"
        ]);
        var iconName = this.getIconName(icon, intent);
        var classes = _classnamesDefault.default(_common.Classes.CALLOUT, _common.Classes.intentClass(intent), (_a = {}, _a[_common.Classes.CALLOUT_ICON] = iconName != null, _a), className);
        return _react.createElement("div", _tslib.__assign({
            className: classes
        }, htmlProps), iconName && _react.createElement(_icon.Icon, {
            icon: iconName,
            size: _icon.IconSize.LARGE,
            "aria-hidden": true,
            tabIndex: -1
        }), title && _react.createElement(_html.H4, null, title), children);
    };
    Callout1.prototype.getIconName = function(icon, intent) {
        // 1. no icon
        if (icon === null) return undefined;
        // 2. defined iconName prop
        if (icon !== undefined) return icon;
        // 3. default intent icon
        switch(intent){
            case _common.Intent.DANGER:
                return "error";
            case _common.Intent.PRIMARY:
                return "info-sign";
            case _common.Intent.WARNING:
                return "warning-sign";
            case _common.Intent.SUCCESS:
                return "tick";
            default:
                return undefined;
        }
    };
    Callout1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".Callout");
    return Callout1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../html/html":"iCwHB","../icon/icon":"7dRdu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lzOSv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Card", ()=>Card
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var Card = /** @class */ function(_super) {
    _tslib.__extends(Card1, _super);
    function Card1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Card1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, elevation = _b.elevation, interactive = _b.interactive, htmlProps = _tslib.__rest(_b, [
            "className",
            "elevation",
            "interactive"
        ]);
        var classes = _classnamesDefault.default(_common.Classes.CARD, (_a = {}, _a[_common.Classes.INTERACTIVE] = interactive, _a), _common.Classes.elevationClass(elevation), className);
        return _react.createElement("div", _tslib.__assign({
            className: classes
        }, htmlProps));
    };
    Card1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Card");
    Card1.defaultProps = {
        elevation: _common.Elevation.ZERO,
        interactive: false
    };
    return Card1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6FJtN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AnimationStates", ()=>AnimationStates
);
parcelHelpers.export(exports, "Collapse", ()=>Collapse
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var AnimationStates;
(function(AnimationStates1) {
    /**
     * The body is re-rendered, height is set to the measured body height and
     * the body Y is set to 0.
     */ AnimationStates1[AnimationStates1["OPEN_START"] = 0] = "OPEN_START";
    /**
     * Animation begins, height is set to auto. This is all animated, and on
     * complete, the state changes to OPEN.
     */ AnimationStates1[AnimationStates1["OPENING"] = 1] = "OPENING";
    /**
     * The collapse height is set to auto, and the body Y is set to 0 (so the
     * element can be seen as normal).
     */ AnimationStates1[AnimationStates1["OPEN"] = 2] = "OPEN";
    /**
     * Height has been changed from auto to the measured height of the body to
     * prepare for the closing animation in CLOSING.
     */ AnimationStates1[AnimationStates1["CLOSING_START"] = 3] = "CLOSING_START";
    /**
     * Height is set to 0 and the body Y is at -height. Both of these properties
     * are transformed, and then after the animation is complete, the state
     * changes to CLOSED.
     */ AnimationStates1[AnimationStates1["CLOSING"] = 4] = "CLOSING";
    /**
     * The contents of the collapse is not rendered, the collapse height is 0,
     * and the body Y is at -height (so that the bottom of the body is at Y=0).
     */ AnimationStates1[AnimationStates1["CLOSED"] = 5] = "CLOSED";
})(AnimationStates || (AnimationStates = {}));
var Collapse = /** @class */ function(_super) {
    _tslib.__extends(Collapse1, _super);
    function Collapse1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
            height: undefined,
            heightWhenOpen: undefined
        };
        // The element containing the contents of the collapse.
        _this.contents = null;
        _this.contentsRefHandler = function(el) {
            _this.contents = el;
            if (_this.contents != null) {
                var height = _this.contents.clientHeight;
                _this.setState({
                    animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
                    height: height === 0 ? undefined : "".concat(height, "px"),
                    heightWhenOpen: height === 0 ? undefined : height
                });
            }
        };
        return _this;
    }
    Collapse1.getDerivedStateFromProps = function(props, state) {
        var isOpen = props.isOpen;
        var animationState = state.animationState;
        if (isOpen) switch(animationState){
            case AnimationStates.OPEN:
                break;
            case AnimationStates.OPENING:
                break;
            default:
                return {
                    animationState: AnimationStates.OPEN_START
                };
        }
        else switch(animationState){
            case AnimationStates.CLOSED:
                break;
            case AnimationStates.CLOSING:
                break;
            default:
                // need to set an explicit height so that transition can work
                return {
                    animationState: AnimationStates.CLOSING_START,
                    height: "".concat(state.heightWhenOpen, "px")
                };
        }
        return null;
    };
    Collapse1.prototype.render = function() {
        var isContentVisible = this.state.animationState !== AnimationStates.CLOSED;
        var shouldRenderChildren = isContentVisible || this.props.keepChildrenMounted;
        var displayWithTransform = isContentVisible && this.state.animationState !== AnimationStates.CLOSING;
        var isAutoHeight = this.state.height === "auto";
        var containerStyle = {
            height: isContentVisible ? this.state.height : undefined,
            overflowY: isAutoHeight ? "visible" : undefined,
            // transitions don't work with height: auto
            transition: isAutoHeight ? "none" : undefined
        };
        var contentsStyle = {
            // only use heightWhenOpen while closing
            transform: displayWithTransform ? "translateY(0)" : "translateY(-".concat(this.state.heightWhenOpen, "px)"),
            // transitions don't work with height: auto
            transition: isAutoHeight ? "none" : undefined
        };
        return _react.createElement(this.props.component, {
            className: _classnamesDefault.default(_common.Classes.COLLAPSE, this.props.className),
            style: containerStyle
        }, _react.createElement("div", {
            className: _common.Classes.COLLAPSE_BODY,
            ref: this.contentsRefHandler,
            style: contentsStyle,
            "aria-hidden": !isContentVisible && this.props.keepChildrenMounted
        }, shouldRenderChildren ? this.props.children : null));
    };
    Collapse1.prototype.componentDidMount = function() {
        this.forceUpdate();
        // HACKHACK: this should probably be done in getSnapshotBeforeUpdate
        /* eslint-disable react/no-did-mount-set-state */ if (this.props.isOpen) this.setState({
            animationState: AnimationStates.OPEN,
            height: "auto"
        });
        else this.setState({
            animationState: AnimationStates.CLOSED,
            height: "0px"
        });
    /* eslint-disable react/no-did-mount-set-state */ };
    Collapse1.prototype.componentDidUpdate = function() {
        var _this = this;
        if (this.contents == null) return;
        var transitionDuration = this.props.transitionDuration;
        var animationState = this.state.animationState;
        if (animationState === AnimationStates.OPEN_START) {
            var clientHeight = this.contents.clientHeight;
            this.setState({
                animationState: AnimationStates.OPENING,
                height: "".concat(clientHeight, "px"),
                heightWhenOpen: clientHeight
            });
            this.setTimeout(function() {
                return _this.onDelayedStateChange();
            }, transitionDuration);
        } else if (animationState === AnimationStates.CLOSING_START) {
            var clientHeight_1 = this.contents.clientHeight;
            this.setTimeout(function() {
                return _this.setState({
                    animationState: AnimationStates.CLOSING,
                    height: "0px",
                    heightWhenOpen: clientHeight_1
                });
            });
            this.setTimeout(function() {
                return _this.onDelayedStateChange();
            }, transitionDuration);
        }
    };
    Collapse1.prototype.onDelayedStateChange = function() {
        switch(this.state.animationState){
            case AnimationStates.OPENING:
                this.setState({
                    animationState: AnimationStates.OPEN,
                    height: "auto"
                });
                break;
            case AnimationStates.CLOSING:
                this.setState({
                    animationState: AnimationStates.CLOSED
                });
                break;
            default:
                break;
        }
    };
    Collapse1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Collapse");
    Collapse1.defaultProps = {
        component: "div",
        isOpen: false,
        keepChildrenMounted: false,
        transitionDuration: 200
    };
    return Collapse1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"03E29":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CollapsibleList", ()=>CollapsibleList
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _boundary = require("../../common/boundary");
var _classes = require("../../common/classes");
var _errors = require("../../common/errors");
var _position = require("../../common/position");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _menu = require("../menu/menu");
var _menuItem = require("../menu/menuItem");
var _popover = require("../popover/popover");
/** @deprecated use `<OverflowList>` for automatic overflow based on available space. */ var CollapsibleList = /** @class */ function(_super) {
    _tslib.__extends(CollapsibleList1, _super);
    function CollapsibleList1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CollapsibleList1.prototype.render = function() {
        var _this = this;
        var collapseFrom = this.props.collapseFrom;
        var childrenLength = _react.Children.count(this.props.children);
        var _a = this.partitionChildren(), visibleChildren = _a[0], collapsedChildren = _a[1];
        var visibleItems = visibleChildren.map(function(child, index) {
            var absoluteIndex = collapseFrom === _boundary.Boundary.START ? childrenLength - 1 - index : index;
            return _react.createElement("li", {
                className: _this.props.visibleItemClassName,
                key: absoluteIndex
            }, _this.props.visibleItemRenderer(child.props, absoluteIndex));
        });
        if (collapseFrom === _boundary.Boundary.START) // reverse START list so separators appear before items
        visibleItems.reverse();
        // construct dropdown menu for collapsed items
        var collapsedPopover;
        if (collapsedChildren.length > 0) {
            var position = collapseFrom === _boundary.Boundary.END ? _position.Position.BOTTOM_RIGHT : _position.Position.BOTTOM_LEFT;
            /* eslint-disable deprecation/deprecation */ collapsedPopover = _react.createElement("li", {
                className: this.props.visibleItemClassName
            }, _react.createElement(_popover.Popover, _tslib.__assign({
                content: _react.createElement(_menu.Menu, null, collapsedChildren),
                position: position
            }, this.props.dropdownProps), this.props.dropdownTarget));
        /* eslint-enable deprecation/deprecation */ }
        return _react.createElement("ul", {
            className: _classnamesDefault.default(_classes.COLLAPSIBLE_LIST, this.props.className)
        }, collapseFrom === _boundary.Boundary.START ? collapsedPopover : null, visibleItems, collapseFrom === _boundary.Boundary.END ? collapsedPopover : null);
    };
    // splits the list of children into two arrays: visible and collapsed
    CollapsibleList1.prototype.partitionChildren = function() {
        var childrenArray = _react.Children.map(this.props.children, function(child, index) {
            if (!_utils.isElementOfType(child, _menuItem.MenuItem)) throw new Error(_errors.COLLAPSIBLE_LIST_INVALID_CHILD);
            return _react.cloneElement(child, {
                key: "visible-".concat(index)
            });
        });
        if (childrenArray == null) return [
            [],
            []
        ];
        if (this.props.collapseFrom === _boundary.Boundary.START) // reverse START list so we can always slice visible items from the front of the list
        childrenArray.reverse();
        var visibleItemCount = this.props.visibleItemCount;
        return [
            childrenArray.slice(0, visibleItemCount),
            childrenArray.slice(visibleItemCount)
        ];
    };
    CollapsibleList1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".CollapsibleList");
    CollapsibleList1.defaultProps = {
        collapseFrom: _boundary.Boundary.START,
        visibleItemCount: 3
    };
    return CollapsibleList1;
}(_react.Component);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common/boundary":"12gzq","../../common/classes":"6Ep96","../../common/errors":"7mLY3","../../common/position":"gwedn","../../common/props":"7F9ht","../../common/utils":"8MRas","../menu/menu":"025mK","../menu/menuItem":"3MFRd","../popover/popover":"kIaY0","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cmIQK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-disable deprecation/deprecation */ /** @deprecated use ContextMenu2 */ parcelHelpers.export(exports, "ContextMenuTarget", ()=>ContextMenuTarget
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _reactDom = require("react-dom");
var _errors = require("../../common/errors");
var _utils = require("../../common/utils");
var _isDarkTheme = require("../../common/utils/isDarkTheme");
var _contextMenu = require("./contextMenu");
function ContextMenuTarget(WrappedComponent) {
    var _a;
    if (!_utils.isFunction(WrappedComponent.prototype.renderContextMenu)) console.warn(_errors.CONTEXTMENU_WARN_DECORATOR_NO_METHOD);
    return _a = /** @class */ function(_super) {
        _tslib.__extends(ContextMenuTargetClass, _super);
        function ContextMenuTargetClass() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ContextMenuTargetClass.prototype.render = function() {
            var _this = this;
            var element = _super.prototype.render.call(this);
            if (element == null) // always return `element` in case caller is distinguishing between `null` and `undefined`
            return element;
            if (!_react.isValidElement(element)) {
                console.warn(_errors.CONTEXTMENU_WARN_DECORATOR_NEEDS_REACT_ELEMENT);
                return element;
            }
            var oldOnContextMenu = element.props.onContextMenu;
            var onContextMenu = function(e) {
                // support nested menus (inner menu target would have called preventDefault())
                if (e.defaultPrevented) return;
                if (_utils.isFunction(_this.renderContextMenu)) {
                    var menu = _this.renderContextMenu(e);
                    if (menu != null) {
                        // HACKHACK: see https://github.com/palantir/blueprint/issues/3979
                        /* eslint-disable-next-line react/no-find-dom-node */ var darkTheme = _isDarkTheme.isDarkTheme(_reactDom.findDOMNode(_this));
                        e.preventDefault();
                        _contextMenu.show(menu, {
                            left: e.clientX,
                            top: e.clientY
                        }, _this.onContextMenuClose, darkTheme);
                    }
                }
                oldOnContextMenu === null || oldOnContextMenu === void 0 || oldOnContextMenu(e);
            };
            return _react.cloneElement(element, {
                onContextMenu: onContextMenu
            });
        };
        return ContextMenuTargetClass;
    }(WrappedComponent), _a.displayName = "ContextMenuTarget(".concat(_utils.getDisplayName(WrappedComponent), ")"), _a;
}

},{"tslib":"45hme","react":"21dqq","react-dom":"j6uA9","../../common/errors":"7mLY3","../../common/utils":"8MRas","../../common/utils/isDarkTheme":"9wAay","./contextMenu":"jkqy3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gupDz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MultistepDialog", ()=>MultistepDialog
);
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _buttons = require("../button/buttons");
var _dialog = require("./dialog");
var _dialogStep = require("./dialogStep");
var PADDING_BOTTOM = 0;
var MIN_WIDTH = 800;
var MultistepDialog = /** @class */ function(_super) {
    _tslib.__extends(MultistepDialog1, _super);
    function MultistepDialog1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = _this.getInitialIndexFromProps(_this.props);
        _this.renderDialogStep = function(step, index) {
            var _a;
            var stepNumber = index + 1;
            var hasBeenViewed = _this.state.lastViewedIndex >= index;
            var currentlySelected = _this.state.selectedIndex === index;
            return _react.createElement("div", {
                className: _classnamesDefault.default(_common.Classes.DIALOG_STEP_CONTAINER, (_a = {}, _a[_common.Classes.ACTIVE] = currentlySelected, _a[_common.Classes.DIALOG_STEP_VIEWED] = hasBeenViewed, _a)),
                key: index
            }, _react.createElement("div", {
                className: _common.Classes.DIALOG_STEP,
                onClick: _this.handleClickDialogStep(index)
            }, _react.createElement("div", {
                className: _common.Classes.DIALOG_STEP_ICON
            }, stepNumber), _react.createElement("div", {
                className: _common.Classes.DIALOG_STEP_TITLE
            }, step.props.title)));
        };
        _this.handleClickDialogStep = function(index) {
            if (index > _this.state.lastViewedIndex) return;
            return _this.getDialogStepChangeHandler(index);
        };
        return _this;
    }
    MultistepDialog1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, navigationPosition = _b.navigationPosition, showCloseButtonInFooter = _b.showCloseButtonInFooter, isCloseButtonShown = _b.isCloseButtonShown, otherProps = _tslib.__rest(_b, [
            "className",
            "navigationPosition",
            "showCloseButtonInFooter",
            "isCloseButtonShown"
        ]);
        // Only one close button should be displayed. If the footer close button
        // is shown, we need to ensure the dialog close button is not displayed.
        var isCloseButtonVisible = !showCloseButtonInFooter && isCloseButtonShown;
        return _react.createElement(_dialog.Dialog, _tslib.__assign({
            isCloseButtonShown: isCloseButtonVisible
        }, otherProps, {
            className: _classnamesDefault.default((_a = {}, _a[_common.Classes.MULTISTEP_DIALOG_NAV_RIGHT] = navigationPosition === "right", _a[_common.Classes.MULTISTEP_DIALOG_NAV_TOP] = navigationPosition === "top", _a), className),
            style: this.getDialogStyle()
        }), _react.createElement("div", {
            className: _common.Classes.MULTISTEP_DIALOG_PANELS
        }, this.renderLeftPanel(), this.maybeRenderRightPanel()));
    };
    MultistepDialog1.prototype.componentDidUpdate = function(prevProps) {
        if ((prevProps.resetOnClose || prevProps.initialStepIndex !== this.props.initialStepIndex) && !prevProps.isOpen && this.props.isOpen) this.setState(this.getInitialIndexFromProps(this.props));
    };
    MultistepDialog1.prototype.getDialogStyle = function() {
        return _tslib.__assign({
            minWidth: MIN_WIDTH,
            paddingBottom: PADDING_BOTTOM
        }, this.props.style);
    };
    MultistepDialog1.prototype.renderLeftPanel = function() {
        return _react.createElement("div", {
            className: _common.Classes.MULTISTEP_DIALOG_LEFT_PANEL
        }, this.getDialogStepChildren().filter(isDialogStepElement).map(this.renderDialogStep));
    };
    MultistepDialog1.prototype.maybeRenderRightPanel = function() {
        var steps = this.getDialogStepChildren();
        if (steps.length <= this.state.selectedIndex) return null;
        var _a = steps[this.state.selectedIndex].props, className = _a.className, panel = _a.panel, panelClassName = _a.panelClassName;
        return _react.createElement("div", {
            className: _classnamesDefault.default(_common.Classes.MULTISTEP_DIALOG_RIGHT_PANEL, className, panelClassName)
        }, panel, this.renderFooter());
    };
    MultistepDialog1.prototype.renderFooter = function() {
        var _a = this.props, closeButtonProps = _a.closeButtonProps, isCloseButtonShown = _a.isCloseButtonShown, showCloseButtonInFooter = _a.showCloseButtonInFooter, onClose = _a.onClose;
        var isFooterCloseButtonVisible = showCloseButtonInFooter && isCloseButtonShown;
        var maybeCloseButton = !isFooterCloseButtonVisible ? undefined : _react.createElement(_buttons.Button, _tslib.__assign({
            text: "Close",
            onClick: onClose
        }, closeButtonProps));
        return _react.createElement("div", {
            className: _common.Classes.MULTISTEP_DIALOG_FOOTER
        }, maybeCloseButton, _react.createElement("div", {
            className: _common.Classes.DIALOG_FOOTER_ACTIONS
        }, this.renderButtons()));
    };
    MultistepDialog1.prototype.renderButtons = function() {
        var _a, _b;
        var selectedIndex = this.state.selectedIndex;
        var steps = this.getDialogStepChildren();
        var buttons = [];
        if (this.state.selectedIndex > 0) {
            var backButtonProps = (_a = steps[selectedIndex].props.backButtonProps) !== null && _a !== void 0 ? _a : this.props.backButtonProps;
            buttons.push(_react.createElement(_buttons.Button, _tslib.__assign({
                key: "back",
                onClick: this.getDialogStepChangeHandler(selectedIndex - 1),
                text: "Back"
            }, backButtonProps)));
        }
        if (selectedIndex === this.getDialogStepChildren().length - 1) buttons.push(_react.createElement(_buttons.Button, _tslib.__assign({
            intent: "primary",
            key: "final",
            text: "Submit"
        }, this.props.finalButtonProps)));
        else {
            var nextButtonProps = (_b = steps[selectedIndex].props.nextButtonProps) !== null && _b !== void 0 ? _b : this.props.nextButtonProps;
            buttons.push(_react.createElement(_buttons.Button, _tslib.__assign({
                intent: "primary",
                key: "next",
                onClick: this.getDialogStepChangeHandler(selectedIndex + 1),
                text: "Next"
            }, nextButtonProps)));
        }
        return buttons;
    };
    MultistepDialog1.prototype.getDialogStepChangeHandler = function(index) {
        var _this = this;
        return function(event) {
            if (_this.props.onChange !== undefined) {
                var steps = _this.getDialogStepChildren();
                var prevStepId = steps[_this.state.selectedIndex].props.id;
                var newStepId = steps[index].props.id;
                _this.props.onChange(newStepId, prevStepId, event);
            }
            _this.setState({
                lastViewedIndex: Math.max(_this.state.lastViewedIndex, index),
                selectedIndex: index
            });
        };
    };
    /** Filters children to only `<DialogStep>`s */ MultistepDialog1.prototype.getDialogStepChildren = function(props) {
        if (props === void 0) props = this.props;
        return _react.Children.toArray(props.children).filter(isDialogStepElement);
    };
    MultistepDialog1.prototype.getInitialIndexFromProps = function(props) {
        if (props.initialStepIndex !== undefined) {
            var boundedInitialIndex = Math.max(0, Math.min(props.initialStepIndex, this.getDialogStepChildren(props).length - 1));
            return {
                lastViewedIndex: boundedInitialIndex,
                selectedIndex: boundedInitialIndex
            };
        } else return {
            lastViewedIndex: 0,
            selectedIndex: 0
        };
    };
    MultistepDialog1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".MultistepDialog");
    MultistepDialog1.defaultProps = {
        canOutsideClickClose: true,
        isOpen: false,
        navigationPosition: "left",
        resetOnClose: true,
        showCloseButtonInFooter: false
    };
    return MultistepDialog1;
}(_common.AbstractPureComponent2);
function isDialogStepElement(child) {
    return _common.Utils.isElementOfType(child, _dialogStep.DialogStep);
}

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../button/buttons":"lDi9s","./dialog":"aVitu","./dialogStep":"hzES5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hzES5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DialogStep", ()=>DialogStep
);
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var DialogStep = /** @class */ function(_super) {
    _tslib.__extends(DialogStep1, _super);
    function DialogStep1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // this component is never rendered directly; see MultistepDialog#renderDialogStepPanel()
    /* istanbul ignore next */ DialogStep1.prototype.render = function() {
        var className = this.props.className;
        return _react.createElement("div", {
            className: _common.Classes.DIALOG_STEP_CONTAINER
        }, _react.createElement("div", {
            className: _classnamesDefault.default(_common.Classes.DIALOG_STEP, className),
            role: "dialogsteplist"
        }));
    };
    DialogStep1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".DialogStep");
    return DialogStep1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5lcjg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Divider", ()=>Divider
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _classes = require("../../common/classes");
var _props = require("../../common/props");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var Divider = /** @class */ function(_super) {
    _tslib.__extends(Divider1, _super);
    function Divider1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Divider1.prototype.render = function() {
        var _a = this.props, className = _a.className, _b = _a.tagName, tagName = _b === void 0 ? "div" : _b, htmlProps = _tslib.__rest(_a, [
            "className",
            "tagName"
        ]);
        var classes = _classnamesDefault.default(_classes.DIVIDER, className);
        return _react.createElement(tagName, _tslib.__assign(_tslib.__assign({}, htmlProps), {
            className: classes
        }));
    };
    Divider1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Divider");
    return Divider1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/classes":"6Ep96","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gdHwx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DrawerSize", ()=>DrawerSize
);
parcelHelpers.export(exports, "Drawer", ()=>Drawer
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _position = require("../../common/position");
var _props = require("../../common/props");
var _buttons = require("../button/buttons");
var _html = require("../html/html");
var _icon = require("../icon/icon");
var _overlay = require("../overlay/overlay");
var DrawerSize;
(function(DrawerSize1) {
    DrawerSize1["SMALL"] = "360px";
    DrawerSize1["STANDARD"] = "50%";
    DrawerSize1["LARGE"] = "90%";
})(DrawerSize || (DrawerSize = {}));
var Drawer = /** @class */ function(_super) {
    _tslib.__extends(Drawer1, _super);
    function Drawer1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Drawer1.prototype.render = function() {
        var _a, _b;
        var _c;
        var _d = this.props, size = _d.size, style = _d.style, position = _d.position;
        var realPosition = _position.getPositionIgnoreAngles(position);
        var classes = _classnamesDefault.default(_common.Classes.DRAWER, (_a = {}, _a[(_c = _common.Classes.positionClass(realPosition)) !== null && _c !== void 0 ? _c : ""] = true, _a), this.props.className);
        var styleProp = size == null ? style : _tslib.__assign(_tslib.__assign({}, style), (_b = {}, _b[_position.isPositionHorizontal(realPosition) ? "height" : "width"] = size, _b));
        return _react.createElement(_overlay.Overlay, _tslib.__assign({}, this.props, {
            className: _common.Classes.OVERLAY_CONTAINER
        }), _react.createElement("div", {
            className: classes,
            style: styleProp
        }, this.maybeRenderHeader(), this.props.children));
    };
    Drawer1.prototype.validateProps = function(props) {
        if (props.title == null) {
            if (props.icon != null) console.warn(_errors.DIALOG_WARN_NO_HEADER_ICON);
            if (props.isCloseButtonShown != null) console.warn(_errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);
        }
        if (props.position != null) {
            if (props.position !== _position.getPositionIgnoreAngles(props.position)) console.warn(_errors.DRAWER_ANGLE_POSITIONS_ARE_CASTED);
        }
    };
    Drawer1.prototype.maybeRenderCloseButton = function() {
        // `isCloseButtonShown` can't be defaulted through default props because of props validation
        // so this check actually defaults it to true (fails only if directly set to false)
        if (this.props.isCloseButtonShown !== false) return _react.createElement(_buttons.Button, {
            "aria-label": "Close",
            className: _common.Classes.DIALOG_CLOSE_BUTTON,
            icon: _react.createElement(_icon.Icon, {
                icon: "small-cross",
                size: _icon.IconSize.LARGE
            }),
            minimal: true,
            onClick: this.props.onClose
        });
        else return null;
    };
    Drawer1.prototype.maybeRenderHeader = function() {
        var _a = this.props, icon = _a.icon, title = _a.title;
        if (title == null) return null;
        return _react.createElement("div", {
            className: _common.Classes.DRAWER_HEADER
        }, _react.createElement(_icon.Icon, {
            icon: icon,
            size: _icon.IconSize.LARGE
        }), _react.createElement(_html.H4, null, title), this.maybeRenderCloseButton());
    };
    Drawer1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Drawer");
    Drawer1.defaultProps = {
        canOutsideClickClose: true,
        isOpen: false,
        position: "right",
        style: {}
    };
    return Drawer1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/position":"gwedn","../../common/props":"7F9ht","../button/buttons":"lDi9s","../html/html":"iCwHB","../icon/icon":"7dRdu","../overlay/overlay":"ikpmN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3W3rI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EditableText", ()=>EditableText
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _compatibility = require("../../compatibility");
var BUFFER_WIDTH_DEFAULT = 5;
var BUFFER_WIDTH_IE = 30;
var EditableText = /** @class */ function(_super) {
    _tslib.__extends(EditableText1, _super);
    function EditableText1(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.inputElement = null;
        _this.valueElement = null;
        _this.refHandlers = {
            content: function(spanElement) {
                _this.valueElement = spanElement;
            },
            input: function(input) {
                if (input != null) {
                    _this.inputElement = input;
                    // temporary fix for #3882
                    if (!_this.props.alwaysRenderInput) _this.inputElement.focus();
                    if (_this.state != null && _this.state.isEditing) {
                        var supportsSelection = inputSupportsSelection(input);
                        if (supportsSelection) {
                            var length_1 = input.value.length;
                            input.setSelectionRange(_this.props.selectAllOnFocus ? 0 : length_1, length_1);
                        }
                        if (!supportsSelection || !_this.props.selectAllOnFocus) input.scrollLeft = input.scrollWidth;
                    }
                }
            }
        };
        _this.cancelEditing = function() {
            var _a, _b, _c, _d;
            var _e = _this.state, lastValue = _e.lastValue, value = _e.value;
            _this.setState({
                isEditing: false,
                value: lastValue
            });
            if (value !== lastValue) (_b = (_a = _this.props).onChange) === null || _b === void 0 || _b.call(_a, lastValue);
            (_d = (_c = _this.props).onCancel) === null || _d === void 0 || _d.call(_c, lastValue);
        };
        _this.toggleEditing = function() {
            var _a, _b;
            if (_this.state.isEditing) {
                var value = _this.state.value;
                _this.setState({
                    isEditing: false,
                    lastValue: value
                });
                (_b = (_a = _this.props).onConfirm) === null || _b === void 0 || _b.call(_a, value);
            } else if (!_this.props.disabled) _this.setState({
                isEditing: true
            });
        };
        _this.handleFocus = function() {
            var _a = _this.props, alwaysRenderInput = _a.alwaysRenderInput, disabled = _a.disabled, selectAllOnFocus = _a.selectAllOnFocus;
            if (!disabled) _this.setState({
                isEditing: true
            });
            if (alwaysRenderInput && selectAllOnFocus && _this.inputElement != null) {
                var length_2 = _this.inputElement.value.length;
                _this.inputElement.setSelectionRange(0, length_2);
            }
        };
        _this.handleTextChange = function(event) {
            var _a, _b;
            var value = event.target.value;
            // state value should be updated only when uncontrolled
            if (_this.props.value == null) _this.setState({
                value: value
            });
            (_b = (_a = _this.props).onChange) === null || _b === void 0 || _b.call(_a, value);
        };
        _this.handleKeyEvent = function(event) {
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable-next-line deprecation/deprecation */ var altKey = event.altKey, ctrlKey = event.ctrlKey, metaKey = event.metaKey, shiftKey = event.shiftKey, which = event.which;
            if (which === _common.Keys.ESCAPE) {
                _this.cancelEditing();
                return;
            }
            var hasModifierKey = altKey || ctrlKey || metaKey || shiftKey;
            if (which === _common.Keys.ENTER) {
                // prevent IE11 from full screening with alt + enter
                // shift + enter adds a newline by default
                if (altKey || shiftKey) event.preventDefault();
                if (_this.props.confirmOnEnterKey && _this.props.multiline) {
                    if (event.target != null && hasModifierKey) {
                        insertAtCaret(event.target, "\n");
                        _this.handleTextChange(event);
                    } else _this.toggleEditing();
                } else if (!_this.props.multiline || hasModifierKey) _this.toggleEditing();
            }
        };
        var value1 = props.value == null ? props.defaultValue : props.value;
        _this.state = {
            inputHeight: 0,
            inputWidth: 0,
            isEditing: props.isEditing === true && props.disabled === false,
            lastValue: value1,
            value: value1
        };
        return _this;
    }
    EditableText1.prototype.render = function() {
        var _a;
        var _b;
        var _c = this.props, alwaysRenderInput = _c.alwaysRenderInput, disabled = _c.disabled, multiline = _c.multiline, contentId = _c.contentId;
        var value = (_b = this.props.value) !== null && _b !== void 0 ? _b : this.state.value;
        var hasValue = value != null && value !== "";
        var classes = _classnamesDefault.default(_common.Classes.EDITABLE_TEXT, _common.Classes.intentClass(this.props.intent), (_a = {}, _a[_common.Classes.DISABLED] = disabled, _a[_common.Classes.EDITABLE_TEXT_EDITING] = this.state.isEditing, _a[_common.Classes.EDITABLE_TEXT_PLACEHOLDER] = !hasValue, _a[_common.Classes.MULTILINE] = multiline, _a), this.props.className);
        var contentStyle;
        if (multiline) // set height only in multiline mode when not editing
        // otherwise we're measuring this element to determine appropriate height of text
        contentStyle = {
            height: !this.state.isEditing ? this.state.inputHeight : undefined
        };
        else // minWidth only applies in single line mode (multiline == width 100%)
        contentStyle = {
            height: this.state.inputHeight,
            lineHeight: this.state.inputHeight != null ? "".concat(this.state.inputHeight, "px") : undefined,
            minWidth: this.props.minWidth
        };
        // If we are always rendering an input, then NEVER make the container div focusable.
        // Otherwise, make container div focusable when not editing, so it can still be tabbed
        // to focus (when the input is rendered, it is itself focusable so container div doesn't need to be)
        var tabIndex = alwaysRenderInput || this.state.isEditing || disabled ? undefined : 0;
        // we need the contents to be rendered while editing so that we can measure their height
        // and size the container element responsively
        var shouldHideContents = alwaysRenderInput && !this.state.isEditing;
        var spanProps = contentId != null ? {
            id: contentId
        } : {};
        return _react.createElement("div", {
            className: classes,
            onFocus: this.handleFocus,
            tabIndex: tabIndex
        }, alwaysRenderInput || this.state.isEditing ? this.renderInput(value) : undefined, shouldHideContents ? undefined : _react.createElement("span", _tslib.__assign({}, spanProps, {
            className: _common.Classes.EDITABLE_TEXT_CONTENT,
            ref: this.refHandlers.content,
            style: contentStyle
        }), hasValue ? value : this.props.placeholder));
    };
    EditableText1.prototype.componentDidMount = function() {
        this.updateInputDimensions();
    };
    EditableText1.prototype.componentDidUpdate = function(prevProps, prevState) {
        var _a, _b;
        var newState = {};
        // allow setting the value to undefined/null in controlled mode
        if (this.props.value !== prevProps.value && (prevProps.value != null || this.props.value != null)) newState.value = this.props.value;
        if (this.props.isEditing != null && this.props.isEditing !== prevProps.isEditing) newState.isEditing = this.props.isEditing;
        if (this.props.disabled || this.props.disabled == null && prevProps.disabled) newState.isEditing = false;
        this.setState(newState);
        if (this.state.isEditing && !prevState.isEditing) (_b = (_a = this.props).onEdit) === null || _b === void 0 || _b.call(_a, this.state.value);
        // updateInputDimensions is an expensive method. Call it only when the props
        // it depends on change
        if (this.state.value !== prevState.value || this.props.alwaysRenderInput !== prevProps.alwaysRenderInput || this.props.maxLines !== prevProps.maxLines || this.props.minLines !== prevProps.minLines || this.props.minWidth !== prevProps.minWidth || this.props.multiline !== prevProps.multiline) this.updateInputDimensions();
    };
    EditableText1.prototype.renderInput = function(value) {
        var _a = this.props, disabled = _a.disabled, maxLength = _a.maxLength, multiline = _a.multiline, type = _a.type, placeholder = _a.placeholder;
        var props = {
            className: _common.Classes.EDITABLE_TEXT_INPUT,
            disabled: disabled,
            maxLength: maxLength,
            onBlur: this.toggleEditing,
            onChange: this.handleTextChange,
            onKeyDown: this.handleKeyEvent,
            placeholder: placeholder,
            value: value
        };
        var _b = this.state, inputHeight = _b.inputHeight, inputWidth = _b.inputWidth;
        if (inputHeight !== 0 && inputWidth !== 0) props.style = {
            height: inputHeight,
            lineHeight: !multiline && inputHeight != null ? "".concat(inputHeight, "px") : undefined,
            width: multiline ? "100%" : inputWidth
        };
        return multiline ? _react.createElement("textarea", _tslib.__assign({
            ref: this.refHandlers.input
        }, props)) : _react.createElement("input", _tslib.__assign({
            ref: this.refHandlers.input,
            type: type
        }, props));
    };
    EditableText1.prototype.updateInputDimensions = function() {
        if (this.valueElement != null) {
            var _a = this.props, maxLines = _a.maxLines, minLines = _a.minLines, minWidth = _a.minWidth, multiline = _a.multiline;
            var _b = this.valueElement, parentElement_1 = _b.parentElement, textContent = _b.textContent;
            var _c = this.valueElement, scrollHeight_1 = _c.scrollHeight, scrollWidth = _c.scrollWidth;
            var lineHeight = getLineHeight(this.valueElement);
            // add one line to computed <span> height if text ends in newline
            // because <span> collapses that trailing whitespace but <textarea> shows it
            if (multiline && this.state.isEditing && /\n$/.test(textContent !== null && textContent !== void 0 ? textContent : "")) scrollHeight_1 += lineHeight;
            if (lineHeight > 0) // line height could be 0 if the isNaN block from getLineHeight kicks in
            scrollHeight_1 = _utils.clamp(scrollHeight_1, minLines * lineHeight, maxLines * lineHeight);
            // Chrome's input caret height misaligns text so the line-height must be larger than font-size.
            // The computed scrollHeight must also account for a larger inherited line-height from the parent.
            scrollHeight_1 = Math.max(scrollHeight_1, getFontSize(this.valueElement) + 1, getLineHeight(parentElement_1));
            // Need to add a small buffer so text does not shift prior to resizing, causing an infinite loop.
            // IE needs a larger buffer than other browsers.
            scrollWidth += _compatibility.Browser.isInternetExplorer() ? BUFFER_WIDTH_IE : BUFFER_WIDTH_DEFAULT;
            this.setState({
                inputHeight: scrollHeight_1,
                inputWidth: Math.max(scrollWidth, minWidth)
            });
            // synchronizes the ::before pseudo-element's height while editing for Chrome 53
            if (multiline && this.state.isEditing) this.setTimeout(function() {
                return parentElement_1.style.height = "".concat(scrollHeight_1, "px");
            });
        }
    };
    EditableText1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".EditableText");
    EditableText1.defaultProps = {
        alwaysRenderInput: false,
        confirmOnEnterKey: false,
        defaultValue: "",
        disabled: false,
        maxLines: Infinity,
        minLines: 1,
        minWidth: 80,
        multiline: false,
        placeholder: "Click to Edit",
        type: "text"
    };
    return EditableText1;
}(_common.AbstractPureComponent2);
function getFontSize(element) {
    var fontSize = getComputedStyle(element).fontSize;
    return fontSize === "" ? 0 : parseInt(fontSize.slice(0, -2), 10);
}
function getLineHeight(element) {
    // getComputedStyle() => 18.0001px => 18
    var lineHeight = parseInt(getComputedStyle(element).lineHeight.slice(0, -2), 10);
    // this check will be true if line-height is a keyword like "normal"
    if (isNaN(lineHeight)) {
        // @see http://stackoverflow.com/a/18430767/6342931
        var line = document.createElement("span");
        line.innerHTML = "<br>";
        element.appendChild(line);
        var singleLineHeight = element.offsetHeight;
        line.innerHTML = "<br><br>";
        var doubleLineHeight = element.offsetHeight;
        element.removeChild(line);
        // this can return 0 in edge cases
        lineHeight = doubleLineHeight - singleLineHeight;
    }
    return lineHeight;
}
function insertAtCaret(el, text) {
    var selectionEnd = el.selectionEnd, selectionStart = el.selectionStart, value = el.value;
    if (selectionStart >= 0) {
        var before_1 = value.substring(0, selectionStart);
        var after_1 = value.substring(selectionEnd, value.length);
        var len = text.length;
        el.value = "".concat(before_1).concat(text).concat(after_1);
        el.selectionStart = selectionStart + len;
        el.selectionEnd = selectionStart + len;
    }
}
function inputSupportsSelection(input) {
    switch(input.type){
        // HTMLTextAreaElement
        case "textarea":
            return true;
        // HTMLInputElement
        // see https://html.spec.whatwg.org/multipage/input.html#do-not-apply
        case "text":
        case "search":
        case "tel":
        case "url":
        case "password":
            return true;
        default:
            return false;
    }
}

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../../common/utils":"8MRas","../../compatibility":"5a57V","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5a57V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _browser = require("./browser");
parcelHelpers.exportAll(_browser, exports);

},{"./browser":"iV4pG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iV4pG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Browser", ()=>Browser
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var userAgent = typeof navigator !== "undefined" ? navigator.userAgent : "";
var browser = {
    isEdge: /Edge/.test(userAgent),
    isInternetExplorer: /Trident|rv:11/.test(userAgent),
    isWebkit: /AppleWebKit/.test(userAgent)
};
var Browser = {
    isEdge: function() {
        return browser.isEdge;
    },
    isInternetExplorer: function() {
        return browser.isInternetExplorer;
    },
    isWebkit: function() {
        return browser.isWebkit;
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8C6YA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ControlGroup", ()=>ControlGroup
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var ControlGroup = /** @class */ function(_super) {
    _tslib.__extends(ControlGroup1, _super);
    function ControlGroup1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ControlGroup1.prototype.render = function() {
        var _a;
        var _b = this.props, children = _b.children, className = _b.className, fill = _b.fill, vertical = _b.vertical, htmlProps = _tslib.__rest(_b, [
            "children",
            "className",
            "fill",
            "vertical"
        ]);
        var rootClasses = _classnamesDefault.default(_common.Classes.CONTROL_GROUP, (_a = {}, _a[_common.Classes.FILL] = fill, _a[_common.Classes.VERTICAL] = vertical, _a), className);
        return _react.createElement("div", _tslib.__assign({}, htmlProps, {
            className: rootClasses
        }), children);
    };
    ControlGroup1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".ControlGroup");
    return ControlGroup1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2eMZi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Switch", ()=>Switch
);
parcelHelpers.export(exports, "Radio", ()=>Radio
);
parcelHelpers.export(exports, "Checkbox", ()=>Checkbox
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
// we need some empty interfaces to show up in docs
// HACKHACK: these components should go in separate files
/* eslint-disable max-classes-per-file, @typescript-eslint/no-empty-interface */ var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
/**
 * Renders common control elements, with additional props to customize appearance.
 * This component is not exported and is only used in this file for `Checkbox`, `Radio`, and `Switch` below.
 */ var Control = function(_a) {
    var _b;
    var alignIndicator = _a.alignIndicator, children = _a.children, className = _a.className, indicatorChildren = _a.indicatorChildren, inline = _a.inline, inputRef = _a.inputRef, label = _a.label, labelElement = _a.labelElement, large = _a.large, style = _a.style, type = _a.type, typeClassName = _a.typeClassName, _c = _a.tagName, tagName = _c === void 0 ? "label" : _c, htmlProps = _tslib.__rest(_a, [
        "alignIndicator",
        "children",
        "className",
        "indicatorChildren",
        "inline",
        "inputRef",
        "label",
        "labelElement",
        "large",
        "style",
        "type",
        "typeClassName",
        "tagName"
    ]);
    var classes = _classnamesDefault.default(_common.Classes.CONTROL, typeClassName, (_b = {}, _b[_common.Classes.DISABLED] = htmlProps.disabled, _b[_common.Classes.INLINE] = inline, _b[_common.Classes.LARGE] = large, _b), _common.Classes.alignmentClass(alignIndicator), className);
    return _react.createElement(tagName, {
        className: classes,
        style: style
    }, _react.createElement("input", _tslib.__assign({}, htmlProps, {
        ref: inputRef,
        type: type
    })), _react.createElement("span", {
        className: _common.Classes.CONTROL_INDICATOR
    }, indicatorChildren), label, labelElement, children);
};
var Switch = /** @class */ function(_super) {
    _tslib.__extends(Switch1, _super);
    function Switch1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Switch1.prototype.render = function() {
        var _a = this.props, innerLabelChecked = _a.innerLabelChecked, innerLabel = _a.innerLabel, controlProps = _tslib.__rest(_a, [
            "innerLabelChecked",
            "innerLabel"
        ]);
        var switchLabels = innerLabel || innerLabelChecked ? [
            _react.createElement("div", {
                key: "checked",
                className: _common.Classes.CONTROL_INDICATOR_CHILD
            }, _react.createElement("div", {
                className: _common.Classes.SWITCH_INNER_TEXT
            }, innerLabelChecked ? innerLabelChecked : innerLabel)),
            _react.createElement("div", {
                key: "unchecked",
                className: _common.Classes.CONTROL_INDICATOR_CHILD
            }, _react.createElement("div", {
                className: _common.Classes.SWITCH_INNER_TEXT
            }, innerLabel)), 
        ] : null;
        return _react.createElement(Control, _tslib.__assign({}, controlProps, {
            type: "checkbox",
            typeClassName: _common.Classes.SWITCH,
            indicatorChildren: switchLabels
        }));
    };
    Switch1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Switch");
    return Switch1;
}(_common.AbstractPureComponent2);
var Radio = /** @class */ function(_super) {
    _tslib.__extends(Radio1, _super);
    function Radio1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Radio1.prototype.render = function() {
        return _react.createElement(Control, _tslib.__assign({}, this.props, {
            type: "radio",
            typeClassName: _common.Classes.RADIO
        }));
    };
    Radio1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Radio");
    return Radio1;
}(_common.AbstractPureComponent2);
var Checkbox = /** @class */ function(_super) {
    _tslib.__extends(Checkbox1, _super);
    function Checkbox1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            indeterminate: _this.props.indeterminate || _this.props.defaultIndeterminate || false
        };
        // must maintain internal reference for `indeterminate` support
        _this.input = null;
        _this.handleInputRef = _common.refHandler(_this, "input", _this.props.inputRef);
        _this.handleChange = function(evt) {
            var _a, _b;
            var indeterminate = evt.target.indeterminate;
            // update state immediately only if uncontrolled
            if (_this.props.indeterminate == null) _this.setState({
                indeterminate: indeterminate
            });
            // otherwise wait for props change. always invoke handler.
            (_b = (_a = _this.props).onChange) === null || _b === void 0 || _b.call(_a, evt);
        };
        return _this;
    }
    Checkbox1.getDerivedStateFromProps = function(_a) {
        var indeterminate = _a.indeterminate;
        // put props into state if controlled by props
        if (indeterminate != null) return {
            indeterminate: indeterminate
        };
        return null;
    };
    Checkbox1.prototype.render = function() {
        var _a = this.props, defaultIndeterminate = _a.defaultIndeterminate, indeterminate = _a.indeterminate, controlProps = _tslib.__rest(_a, [
            "defaultIndeterminate",
            "indeterminate"
        ]);
        return _react.createElement(Control, _tslib.__assign({}, controlProps, {
            inputRef: this.handleInputRef,
            onChange: this.handleChange,
            type: "checkbox",
            typeClassName: _common.Classes.CHECKBOX
        }));
    };
    Checkbox1.prototype.componentDidMount = function() {
        this.updateIndeterminate();
    };
    Checkbox1.prototype.componentDidUpdate = function(prevProps) {
        this.updateIndeterminate();
        if (prevProps.inputRef !== this.props.inputRef) {
            _common.setRef(prevProps.inputRef, null);
            this.handleInputRef = _common.refHandler(this, "input", this.props.inputRef);
            _common.setRef(this.props.inputRef, this.input);
        }
    };
    Checkbox1.prototype.updateIndeterminate = function() {
        if (this.input != null) this.input.indeterminate = this.state.indeterminate;
    };
    Checkbox1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Checkbox");
    return Checkbox1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1CcCZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FileInput", ()=>FileInput
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
// TODO: write tests (ignoring for now to get a build passing quickly)
/* istanbul ignore next */ var FileInput = /** @class */ function(_super) {
    _tslib.__extends(FileInput1, _super);
    function FileInput1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleInputChange = function(e) {
            var _a, _b, _c, _d;
            (_b = (_a = _this.props).onInputChange) === null || _b === void 0 || _b.call(_a, e);
            (_d = (_c = _this.props.inputProps) === null || _c === void 0 ? void 0 : _c.onChange) === null || _d === void 0 || _d.call(_c, e);
        };
        return _this;
    }
    FileInput1.prototype.render = function() {
        var _a, _b, _c;
        var _d = this.props, buttonText = _d.buttonText, className = _d.className, disabled = _d.disabled, fill = _d.fill, hasSelection = _d.hasSelection, inputProps = _d.inputProps, large = _d.large, onInputChange = _d.onInputChange, text = _d.text, htmlProps = _tslib.__rest(_d, [
            "buttonText",
            "className",
            "disabled",
            "fill",
            "hasSelection",
            "inputProps",
            "large",
            "onInputChange",
            "text"
        ]);
        var rootClasses = _classnamesDefault.default(_common.Classes.FILE_INPUT, (_a = {}, _a[_common.Classes.FILE_INPUT_HAS_SELECTION] = hasSelection, _a[_common.Classes.DISABLED] = disabled, _a[_common.Classes.FILL] = fill, _a[_common.Classes.LARGE] = large, _a), className);
        var NS = _common.Classes.getClassNamespace();
        var uploadProps = (_b = {}, _b["".concat(NS, "-button-text")] = buttonText, _b.className = _classnamesDefault.default(_common.Classes.FILE_UPLOAD_INPUT, (_c = {}, _c[_common.Classes.FILE_UPLOAD_INPUT_CUSTOM_TEXT] = !!buttonText, _c)), _b);
        return _react.createElement("label", _tslib.__assign({}, htmlProps, {
            className: rootClasses
        }), _react.createElement("input", _tslib.__assign({}, inputProps, {
            onChange: this.handleInputChange,
            type: "file",
            disabled: disabled
        })), _react.createElement("span", _tslib.__assign({}, uploadProps), text));
    };
    FileInput1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".FileInput");
    FileInput1.defaultProps = {
        hasSelection: false,
        inputProps: {},
        text: "Choose file..."
    };
    return FileInput1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8TGbI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FormGroup", ()=>FormGroup
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var FormGroup = /** @class */ function(_super) {
    _tslib.__extends(FormGroup1, _super);
    function FormGroup1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FormGroup1.prototype.render = function() {
        var _a = this.props, children = _a.children, contentClassName = _a.contentClassName, helperText = _a.helperText, label = _a.label, labelFor = _a.labelFor, labelInfo = _a.labelInfo, style = _a.style, subLabel = _a.subLabel;
        return _react.createElement("div", {
            className: this.getClassName(),
            style: style
        }, label && _react.createElement("label", {
            className: _common.Classes.LABEL,
            htmlFor: labelFor
        }, label, " ", _react.createElement("span", {
            className: _common.Classes.TEXT_MUTED
        }, labelInfo)), subLabel && _react.createElement("div", {
            className: _common.Classes.FORM_GROUP_SUB_LABEL
        }, subLabel), _react.createElement("div", {
            className: _classnamesDefault.default(_common.Classes.FORM_CONTENT, contentClassName)
        }, children, helperText && _react.createElement("div", {
            className: _common.Classes.FORM_HELPER_TEXT
        }, helperText)));
    };
    FormGroup1.prototype.getClassName = function() {
        var _a;
        var _b = this.props, className = _b.className, disabled = _b.disabled, inline = _b.inline, intent = _b.intent;
        return _classnamesDefault.default(_common.Classes.FORM_GROUP, _common.Classes.intentClass(intent), (_a = {}, _a[_common.Classes.DISABLED] = disabled, _a[_common.Classes.INLINE] = inline, _a), className);
    };
    FormGroup1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".FormGroup");
    return FormGroup1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3i4VK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "InputGroup", ()=>InputGroup
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _icon = require("../icon/icon");
var _asyncControllableInput = require("./asyncControllableInput");
var InputGroup = /** @class */ function(_super) {
    _tslib.__extends(InputGroup1, _super);
    function InputGroup1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {};
        _this.leftElement = null;
        _this.rightElement = null;
        _this.refHandlers = {
            leftElement: function(ref) {
                return _this.leftElement = ref;
            },
            rightElement: function(ref) {
                return _this.rightElement = ref;
            }
        };
        return _this;
    }
    InputGroup1.prototype.render = function() {
        var _a;
        var _b = this.props, _c = _b.asyncControl, asyncControl = _c === void 0 ? false : _c, className = _b.className, disabled = _b.disabled, fill = _b.fill, inputRef = _b.inputRef, intent = _b.intent, large = _b.large, small = _b.small, round = _b.round;
        var inputGroupClasses = _classnamesDefault.default(_common.Classes.INPUT_GROUP, _common.Classes.intentClass(intent), (_a = {}, _a[_common.Classes.DISABLED] = disabled, _a[_common.Classes.FILL] = fill, _a[_common.Classes.LARGE] = large, _a[_common.Classes.SMALL] = small, _a[_common.Classes.ROUND] = round, _a), className);
        var style = _tslib.__assign(_tslib.__assign({}, this.props.style), {
            paddingLeft: this.state.leftElementWidth,
            paddingRight: this.state.rightElementWidth
        });
        var inputProps = _tslib.__assign(_tslib.__assign({
            type: "text"
        }, _props.removeNonHTMLProps(this.props)), {
            className: _common.Classes.INPUT,
            style: style
        });
        return _react.createElement("div", {
            className: inputGroupClasses
        }, this.maybeRenderLeftElement(), asyncControl ? _react.createElement(_asyncControllableInput.AsyncControllableInput, _tslib.__assign({}, inputProps, {
            inputRef: inputRef
        })) : _react.createElement("input", _tslib.__assign({}, inputProps, {
            ref: inputRef
        })), this.maybeRenderRightElement());
    };
    InputGroup1.prototype.componentDidMount = function() {
        this.updateInputWidth();
    };
    InputGroup1.prototype.componentDidUpdate = function(prevProps) {
        var _a = this.props, leftElement = _a.leftElement, rightElement = _a.rightElement;
        if (prevProps.leftElement !== leftElement || prevProps.rightElement !== rightElement) this.updateInputWidth();
    };
    InputGroup1.prototype.validateProps = function(props) {
        if (props.leftElement != null && props.leftIcon != null) console.warn(_errors.INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX);
    };
    InputGroup1.prototype.maybeRenderLeftElement = function() {
        var _a = this.props, leftElement = _a.leftElement, leftIcon = _a.leftIcon;
        if (leftElement != null) return _react.createElement("span", {
            className: _common.Classes.INPUT_LEFT_CONTAINER,
            ref: this.refHandlers.leftElement
        }, leftElement);
        else if (leftIcon != null) return _react.createElement(_icon.Icon, {
            icon: leftIcon,
            "aria-hidden": true,
            tabIndex: -1
        });
        return undefined;
    };
    InputGroup1.prototype.maybeRenderRightElement = function() {
        var rightElement = this.props.rightElement;
        if (rightElement == null) return undefined;
        return _react.createElement("span", {
            className: _common.Classes.INPUT_ACTION,
            ref: this.refHandlers.rightElement
        }, rightElement);
    };
    InputGroup1.prototype.updateInputWidth = function() {
        var _a = this.state, leftElementWidth = _a.leftElementWidth, rightElementWidth = _a.rightElementWidth;
        if (this.leftElement != null) {
            var clientWidth = this.leftElement.clientWidth;
            // small threshold to prevent infinite loops
            if (leftElementWidth === undefined || Math.abs(clientWidth - leftElementWidth) > 2) this.setState({
                leftElementWidth: clientWidth
            });
        } else this.setState({
            leftElementWidth: undefined
        });
        if (this.rightElement != null) {
            var clientWidth = this.rightElement.clientWidth;
            // small threshold to prevent infinite loops
            if (rightElementWidth === undefined || Math.abs(clientWidth - rightElementWidth) > 2) this.setState({
                rightElementWidth: clientWidth
            });
        } else this.setState({
            rightElementWidth: undefined
        });
    };
    InputGroup1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".InputGroup");
    return InputGroup1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/props":"7F9ht","../icon/icon":"7dRdu","./asyncControllableInput":"9KmBt","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9KmBt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "AsyncControllableInput", ()=>AsyncControllableInput
);
/* !
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _common = require("../../common");
/**
 * A stateful wrapper around the low-level <input> component which works around a
 * [React bug](https://github.com/facebook/react/issues/3926). This bug is reproduced when an input
 * receives CompositionEvents (for example, through IME composition) and has its value prop updated
 * asychronously. This might happen if a component chooses to do async validation of a value
 * returned by the input's `onChange` callback.
 *
 * Note: this component does not apply any Blueprint-specific styling.
 */ var AsyncControllableInput = /** @class */ function(_super) {
    _tslib.__extends(AsyncControllableInput1, _super);
    function AsyncControllableInput1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            hasPendingUpdate: false,
            isComposing: false,
            nextValue: _this.props.value,
            value: _this.props.value
        };
        _this.cancelPendingCompositionEnd = null;
        _this.handleCompositionStart = function(e) {
            var _a, _b, _c;
            (_a = _this.cancelPendingCompositionEnd) === null || _a === void 0 || _a.call(_this);
            _this.setState({
                isComposing: true
            });
            (_c = (_b = _this.props).onCompositionStart) === null || _c === void 0 || _c.call(_b, e);
        };
        _this.handleCompositionEnd = function(e) {
            var _a, _b;
            // In some non-latin languages, a keystroke can end a composition event and immediately afterwards start another.
            // This can lead to unexpected characters showing up in the text input. In order to circumvent this problem, we
            // use a timeout which creates a delay which merges the two composition events, creating a more natural and predictable UX.
            // `this.state.nextValue` will become "locked" (it cannot be overwritten by the `value` prop) until a delay (10ms) has
            // passed without a new composition event starting.
            _this.cancelPendingCompositionEnd = _this.setTimeout(function() {
                return _this.setState({
                    isComposing: false
                });
            }, AsyncControllableInput1.COMPOSITION_END_DELAY);
            (_b = (_a = _this.props).onCompositionEnd) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleChange = function(e) {
            var _a, _b;
            var value = e.target.value;
            _this.setState({
                nextValue: value
            });
            (_b = (_a = _this.props).onChange) === null || _b === void 0 || _b.call(_a, e);
        };
        return _this;
    }
    AsyncControllableInput1.getDerivedStateFromProps = function(nextProps, nextState) {
        if (nextState.isComposing || nextProps.value === undefined) // don't derive anything from props if:
        // - in uncontrolled mode, OR
        // - currently composing, since we'll do that after composition ends
        return null;
        var userTriggeredUpdate = nextState.nextValue !== nextState.value;
        if (userTriggeredUpdate) {
            if (nextProps.value === nextState.nextValue) {
                // parent has processed and accepted our update
                if (nextState.hasPendingUpdate) return {
                    value: nextProps.value,
                    hasPendingUpdate: false
                };
                else return {
                    value: nextState.nextValue
                };
            } else {
                if (nextProps.value === nextState.value) // we have sent the update to our parent, but it has not been processed yet. just wait.
                // DO NOT set nextValue here, since that will temporarily render a potentially stale controlled value,
                // causing the cursor to jump once the new value is accepted
                return {
                    hasPendingUpdate: true
                };
                // accept controlled update overriding user action
                return {
                    value: nextProps.value,
                    nextValue: nextProps.value,
                    hasPendingUpdate: false
                };
            }
        } else // accept controlled update, could be confirming or denying user action
        return {
            value: nextProps.value,
            nextValue: nextProps.value,
            hasPendingUpdate: false
        };
    };
    AsyncControllableInput1.prototype.render = function() {
        var _a = this.state, isComposing = _a.isComposing, hasPendingUpdate = _a.hasPendingUpdate, value = _a.value, nextValue = _a.nextValue;
        var _b = this.props, inputRef = _b.inputRef, restProps = _tslib.__rest(_b, [
            "inputRef"
        ]);
        return _react.createElement("input", _tslib.__assign({}, restProps, {
            ref: inputRef,
            // render the pending value even if it is not confirmed by a parent's async controlled update
            // so that the cursor does not jump to the end of input as reported in
            // https://github.com/palantir/blueprint/issues/4298
            value: isComposing || hasPendingUpdate ? nextValue : value,
            onCompositionStart: this.handleCompositionStart,
            onCompositionEnd: this.handleCompositionEnd,
            onChange: this.handleChange
        }));
    };
    AsyncControllableInput1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".AsyncControllableInput");
    /**
     * The amount of time (in milliseconds) which the input will wait after a compositionEnd event before
     * unlocking its state value for external updates via props. See `handleCompositionEnd` for more details.
     */ AsyncControllableInput1.COMPOSITION_END_DELAY = 10;
    return AsyncControllableInput1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","react":"21dqq","../../common":"6BNPY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i5ufe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NumericInput", ()=>NumericInput
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _buttonGroup = require("../button/buttonGroup");
var _buttons = require("../button/buttons");
var _controlGroup = require("./controlGroup");
var _inputGroup = require("./inputGroup");
var _numericInputUtils = require("./numericInputUtils");
var IncrementDirection;
(function(IncrementDirection1) {
    IncrementDirection1[IncrementDirection1["DOWN"] = -1] = "DOWN";
    IncrementDirection1[IncrementDirection1["UP"] = 1] = "UP";
})(IncrementDirection || (IncrementDirection = {}));
var NON_HTML_PROPS = [
    "allowNumericCharactersOnly",
    "buttonPosition",
    "clampValueOnBlur",
    "className",
    "defaultValue",
    "majorStepSize",
    "minorStepSize",
    "onButtonClick",
    "onValueChange",
    "selectAllOnFocus",
    "selectAllOnIncrement",
    "stepSize", 
];
var NumericInput = /** @class */ function(_super) {
    _tslib.__extends(NumericInput1, _super);
    function NumericInput1() {
        var _this = this;
        var _a1;
        _this = _super.apply(this, arguments) || this;
        _this.state = {
            currentImeInputInvalid: false,
            shouldSelectAfterUpdate: false,
            stepMaxPrecision: NumericInput1.getStepMaxPrecision(_this.props),
            value: _numericInputUtils.getValueOrEmptyValue((_a1 = _this.props.value) !== null && _a1 !== void 0 ? _a1 : _this.props.defaultValue)
        };
        // updating these flags need not trigger re-renders, so don't include them in this.state.
        _this.didPasteEventJustOccur = false;
        _this.delta = 0;
        _this.inputElement = null;
        _this.inputRef = _common.refHandler(_this, "inputElement", _this.props.inputRef);
        _this.incrementButtonHandlers = _this.getButtonEventHandlers(IncrementDirection.UP);
        _this.decrementButtonHandlers = _this.getButtonEventHandlers(IncrementDirection.DOWN);
        _this.handleButtonClick = function(e, direction) {
            var _a, _b;
            var delta = _this.updateDelta(direction, e);
            var nextValue = _this.incrementValue(delta);
            (_b = (_a = _this.props).onButtonClick) === null || _b === void 0 || _b.call(_a, Number(_numericInputUtils.parseStringToStringNumber(nextValue, _this.props.locale)), nextValue);
        };
        _this.stopContinuousChange = function() {
            _this.delta = 0;
            _this.clearTimeouts();
            clearInterval(_this.intervalId);
            document.removeEventListener("mouseup", _this.stopContinuousChange);
        };
        _this.handleContinuousChange = function() {
            var _a, _b, _c, _d;
            // If either min or max prop is set, when reaching the limit
            // the button will be disabled and stopContinuousChange will be never fired,
            // hence the need to check on each iteration to properly clear the timeout
            if (_this.props.min !== undefined || _this.props.max !== undefined) {
                var min = (_a = _this.props.min) !== null && _a !== void 0 ? _a : -Infinity;
                var max = (_b = _this.props.max) !== null && _b !== void 0 ? _b : Infinity;
                var valueAsNumber = Number(_numericInputUtils.parseStringToStringNumber(_this.state.value, _this.props.locale));
                if (valueAsNumber <= min || valueAsNumber >= max) {
                    _this.stopContinuousChange();
                    return;
                }
            }
            var nextValue = _this.incrementValue(_this.delta);
            (_d = (_c = _this.props).onButtonClick) === null || _d === void 0 || _d.call(_c, Number(_numericInputUtils.parseStringToStringNumber(nextValue, _this.props.locale)), nextValue);
        };
        // Callbacks - Input
        // =================
        _this.handleInputFocus = function(e) {
            var _a, _b;
            // update this state flag to trigger update for input selection (see componentDidUpdate)
            _this.setState({
                shouldSelectAfterUpdate: _this.props.selectAllOnFocus
            });
            (_b = (_a = _this.props).onFocus) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleInputBlur = function(e) {
            var _a, _b;
            // always disable this flag on blur so it's ready for next time.
            _this.setState({
                shouldSelectAfterUpdate: false
            });
            if (_this.props.clampValueOnBlur) {
                var value = e.target.value;
                _this.handleNextValue(_this.roundAndClampValue(value));
            }
            (_b = (_a = _this.props).onBlur) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleInputKeyDown = function(e) {
            var _a, _b;
            if (_this.props.disabled || _this.props.readOnly) return;
            // eslint-disable-next-line deprecation/deprecation
            var keyCode = e.keyCode;
            var direction;
            if (keyCode === _common.Keys.ARROW_UP) direction = IncrementDirection.UP;
            else if (keyCode === _common.Keys.ARROW_DOWN) direction = IncrementDirection.DOWN;
            if (direction !== undefined) {
                // when the input field has focus, some key combinations will modify
                // the field's selection range. we'll actually want to select all
                // text in the field after we modify the value on the following
                // lines. preventing the default selection behavior lets us do that
                // without interference.
                e.preventDefault();
                var delta = _this.updateDelta(direction, e);
                _this.incrementValue(delta);
            }
            (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleCompositionEnd = function(e) {
            if (_this.props.allowNumericCharactersOnly) {
                _this.handleNextValue(_numericInputUtils.sanitizeNumericInput(e.data, _this.props.locale));
                _this.setState({
                    currentImeInputInvalid: false
                });
            }
        };
        _this.handleCompositionUpdate = function(e) {
            if (_this.props.allowNumericCharactersOnly) {
                var data = e.data;
                var sanitizedValue = _numericInputUtils.sanitizeNumericInput(data, _this.props.locale);
                if (sanitizedValue.length === 0 && data.length > 0) _this.setState({
                    currentImeInputInvalid: true
                });
                else _this.setState({
                    currentImeInputInvalid: false
                });
            }
        };
        _this.handleInputKeyPress = function(e) {
            var _a, _b;
            // we prohibit keystrokes in onKeyPress instead of onKeyDown, because
            // e.key is not trustworthy in onKeyDown in all browsers.
            if (_this.props.allowNumericCharactersOnly && !_numericInputUtils.isValidNumericKeyboardEvent(e, _this.props.locale)) e.preventDefault();
            (_b = (_a = _this.props).onKeyPress) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleInputPaste = function(e) {
            var _a, _b;
            _this.didPasteEventJustOccur = true;
            (_b = (_a = _this.props).onPaste) === null || _b === void 0 || _b.call(_a, e);
        };
        _this.handleInputChange = function(e) {
            var value = e.target.value;
            var nextValue = value;
            if (_this.props.allowNumericCharactersOnly && _this.didPasteEventJustOccur) {
                _this.didPasteEventJustOccur = false;
                nextValue = _numericInputUtils.sanitizeNumericInput(value, _this.props.locale);
            }
            _this.handleNextValue(nextValue);
            _this.setState({
                shouldSelectAfterUpdate: false
            });
        };
        return _this;
    }
    NumericInput1.getDerivedStateFromProps = function(props, state) {
        var _a, _b;
        var nextState = {
            prevMaxProp: props.max,
            prevMinProp: props.min
        };
        var didMinChange = props.min !== state.prevMinProp;
        var didMaxChange = props.max !== state.prevMaxProp;
        var didBoundsChange = didMinChange || didMaxChange;
        // in controlled mode, use props.value
        // in uncontrolled mode, if state.value has not been assigned yet (upon initial mount), use props.defaultValue
        var value = (_b = (_a = props.value) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : state.value;
        var stepMaxPrecision = NumericInput1.getStepMaxPrecision(props);
        var sanitizedValue = value !== NumericInput1.VALUE_EMPTY ? NumericInput1.roundAndClampValue(value, stepMaxPrecision, props.min, props.max, 0, props.locale) : NumericInput1.VALUE_EMPTY;
        // if a new min and max were provided that cause the existing value to fall
        // outside of the new bounds, then clamp the value to the new valid range.
        if (didBoundsChange && sanitizedValue !== state.value) return _tslib.__assign(_tslib.__assign({}, nextState), {
            stepMaxPrecision: stepMaxPrecision,
            value: sanitizedValue
        });
        return _tslib.__assign(_tslib.__assign({}, nextState), {
            stepMaxPrecision: stepMaxPrecision,
            value: value
        });
    };
    // Value Helpers
    // =============
    NumericInput1.getStepMaxPrecision = function(props) {
        if (props.minorStepSize != null) return _common.Utils.countDecimalPlaces(props.minorStepSize);
        else return _common.Utils.countDecimalPlaces(props.stepSize);
    };
    NumericInput1.roundAndClampValue = function(value, stepMaxPrecision, min, max, delta, locale) {
        if (delta === void 0) delta = 0;
        if (!_numericInputUtils.isValueNumeric(value, locale)) return NumericInput1.VALUE_EMPTY;
        var currentValue = _numericInputUtils.parseStringToStringNumber(value, locale);
        var nextValue = _numericInputUtils.toMaxPrecision(Number(currentValue) + delta, stepMaxPrecision);
        var clampedValue = _numericInputUtils.clampValue(nextValue, min, max);
        return _numericInputUtils.toLocaleString(clampedValue, locale);
    };
    NumericInput1.prototype.render = function() {
        var _a;
        var _b = this.props, buttonPosition = _b.buttonPosition, className = _b.className, fill = _b.fill, large = _b.large;
        var containerClasses = _classnamesDefault.default(_common.Classes.NUMERIC_INPUT, (_a = {}, _a[_common.Classes.LARGE] = large, _a), className);
        var buttons = this.renderButtons();
        return _react.createElement(_controlGroup.ControlGroup, {
            className: containerClasses,
            fill: fill
        }, buttonPosition === _common.Position.LEFT && buttons, this.renderInput(), buttonPosition === _common.Position.RIGHT && buttons);
    };
    NumericInput1.prototype.componentDidUpdate = function(prevProps, prevState) {
        var _a, _b, _c;
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        if (prevProps.inputRef !== this.props.inputRef) {
            _common.setRef(prevProps.inputRef, null);
            this.inputRef = _common.refHandler(this, "inputElement", this.props.inputRef);
            _common.setRef(this.props.inputRef, this.inputElement);
        }
        if (this.state.shouldSelectAfterUpdate) (_a = this.inputElement) === null || _a === void 0 || _a.setSelectionRange(0, this.state.value.length);
        var didMinChange = this.props.min !== prevProps.min;
        var didMaxChange = this.props.max !== prevProps.max;
        var didBoundsChange = didMinChange || didMaxChange;
        var didLocaleChange = this.props.locale !== prevProps.locale;
        var didValueChange = this.state.value !== prevState.value;
        if (didBoundsChange && didValueChange || didLocaleChange && prevState.value !== NumericInput1.VALUE_EMPTY) {
            // we clamped the value due to a bounds change, so we should fire the change callback
            var valueToParse = didLocaleChange ? prevState.value : this.state.value;
            var valueAsString = _numericInputUtils.parseStringToStringNumber(valueToParse, prevProps.locale);
            var localizedValue = _numericInputUtils.toLocaleString(+valueAsString, this.props.locale);
            (_c = (_b = this.props).onValueChange) === null || _c === void 0 || _c.call(_b, +valueAsString, localizedValue, this.inputElement);
        }
    };
    NumericInput1.prototype.validateProps = function(nextProps) {
        var majorStepSize = nextProps.majorStepSize, max = nextProps.max, min = nextProps.min, minorStepSize = nextProps.minorStepSize, stepSize = nextProps.stepSize, value = nextProps.value;
        if (min != null && max != null && min > max) console.error(_errors.NUMERIC_INPUT_MIN_MAX);
        if (stepSize <= 0) console.error(_errors.NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE);
        if (minorStepSize && minorStepSize <= 0) console.error(_errors.NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE);
        if (majorStepSize && majorStepSize <= 0) console.error(_errors.NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE);
        if (minorStepSize && minorStepSize > stepSize) console.error(_errors.NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND);
        if (majorStepSize && majorStepSize < stepSize) console.error(_errors.NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND);
        // controlled mode
        if (value != null) {
            var stepMaxPrecision = NumericInput1.getStepMaxPrecision(nextProps);
            var sanitizedValue = NumericInput1.roundAndClampValue(value.toString(), stepMaxPrecision, min, max, 0, this.props.locale);
            var valueDoesNotMatch = sanitizedValue !== value.toString();
            var localizedValue = _numericInputUtils.toLocaleString(Number(_numericInputUtils.parseStringToStringNumber(value, this.props.locale)), this.props.locale);
            var isNotLocalized = sanitizedValue !== localizedValue;
            if (valueDoesNotMatch && isNotLocalized) console.warn(_errors.NUMERIC_INPUT_CONTROLLED_VALUE_INVALID);
        }
    };
    // Render Helpers
    // ==============
    NumericInput1.prototype.renderButtons = function() {
        var _a = this.props, intent = _a.intent, max = _a.max, min = _a.min, locale = _a.locale;
        var value = _numericInputUtils.parseStringToStringNumber(this.state.value, locale);
        var disabled = this.props.disabled || this.props.readOnly;
        var isIncrementDisabled = max !== undefined && value !== "" && +value >= max;
        var isDecrementDisabled = min !== undefined && value !== "" && +value <= min;
        return _react.createElement(_buttonGroup.ButtonGroup, {
            className: _common.Classes.FIXED,
            key: "button-group",
            vertical: true
        }, _react.createElement(_buttons.Button, _tslib.__assign({
            "aria-label": "increment",
            disabled: disabled || isIncrementDisabled,
            icon: "chevron-up",
            intent: intent
        }, this.incrementButtonHandlers)), _react.createElement(_buttons.Button, _tslib.__assign({
            "aria-label": "decrement",
            disabled: disabled || isDecrementDisabled,
            icon: "chevron-down",
            intent: intent
        }, this.decrementButtonHandlers)));
    };
    NumericInput1.prototype.renderInput = function() {
        var inputGroupHtmlProps = _common.removeNonHTMLProps(this.props, NON_HTML_PROPS, true);
        return _react.createElement(_inputGroup.InputGroup, _tslib.__assign({
            asyncControl: this.props.asyncControl,
            autoComplete: "off"
        }, inputGroupHtmlProps, {
            intent: this.state.currentImeInputInvalid ? _common.Intent.DANGER : this.props.intent,
            inputRef: this.inputRef,
            large: this.props.large,
            leftIcon: this.props.leftIcon,
            onFocus: this.handleInputFocus,
            onBlur: this.handleInputBlur,
            onChange: this.handleInputChange,
            onCompositionEnd: this.handleCompositionEnd,
            onCompositionUpdate: this.handleCompositionUpdate,
            onKeyDown: this.handleInputKeyDown,
            onKeyPress: this.handleInputKeyPress,
            onPaste: this.handleInputPaste,
            rightElement: this.props.rightElement,
            value: this.state.value
        }));
    };
    // Callbacks - Buttons
    // ===================
    NumericInput1.prototype.getButtonEventHandlers = function(direction) {
        var _this = this;
        return {
            // keydown is fired repeatedly when held so it's implicitly continuous
            onKeyDown: function(evt) {
                // eslint-disable-next-line deprecation/deprecation
                if (!_this.props.disabled && _common.Keys.isKeyboardClick(evt.keyCode)) _this.handleButtonClick(evt, direction);
            },
            onMouseDown: function(evt) {
                if (!_this.props.disabled) {
                    _this.handleButtonClick(evt, direction);
                    _this.startContinuousChange();
                }
            }
        };
    };
    NumericInput1.prototype.startContinuousChange = function() {
        var _this = this;
        // The button's onMouseUp event handler doesn't fire if the user
        // releases outside of the button, so we need to watch all the way
        // from the top.
        document.addEventListener("mouseup", this.stopContinuousChange);
        // Initial delay is slightly longer to prevent the user from
        // accidentally triggering the continuous increment/decrement.
        this.setTimeout(function() {
            _this.intervalId = window.setInterval(_this.handleContinuousChange, NumericInput1.CONTINUOUS_CHANGE_INTERVAL);
        }, NumericInput1.CONTINUOUS_CHANGE_DELAY);
    };
    // Data logic
    // ==========
    NumericInput1.prototype.handleNextValue = function(valueAsString) {
        var _a, _b;
        if (this.props.value == null) this.setState({
            value: valueAsString
        });
        (_b = (_a = this.props).onValueChange) === null || _b === void 0 || _b.call(_a, Number(_numericInputUtils.parseStringToStringNumber(valueAsString, this.props.locale)), valueAsString, this.inputElement);
    };
    NumericInput1.prototype.incrementValue = function(delta) {
        // pretend we're incrementing from 0 if currValue is empty
        var currValue = this.state.value === NumericInput1.VALUE_EMPTY ? NumericInput1.VALUE_ZERO : this.state.value;
        var nextValue = this.roundAndClampValue(currValue, delta);
        if (nextValue !== this.state.value) {
            this.handleNextValue(nextValue);
            this.setState({
                shouldSelectAfterUpdate: this.props.selectAllOnIncrement
            });
        }
        // return value used in continuous change updates
        return nextValue;
    };
    NumericInput1.prototype.getIncrementDelta = function(direction, isShiftKeyPressed, isAltKeyPressed) {
        var _a = this.props, majorStepSize = _a.majorStepSize, minorStepSize = _a.minorStepSize, stepSize = _a.stepSize;
        if (isShiftKeyPressed && majorStepSize != null) return direction * majorStepSize;
        else if (isAltKeyPressed && minorStepSize != null) return direction * minorStepSize;
        else return direction * stepSize;
    };
    NumericInput1.prototype.roundAndClampValue = function(value, delta) {
        if (delta === void 0) delta = 0;
        return NumericInput1.roundAndClampValue(value, this.state.stepMaxPrecision, this.props.min, this.props.max, delta, this.props.locale);
    };
    NumericInput1.prototype.updateDelta = function(direction, e) {
        this.delta = this.getIncrementDelta(direction, e.shiftKey, e.altKey);
        return this.delta;
    };
    NumericInput1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".NumericInput");
    NumericInput1.VALUE_EMPTY = "";
    NumericInput1.VALUE_ZERO = "0";
    NumericInput1.defaultProps = {
        allowNumericCharactersOnly: true,
        buttonPosition: _common.Position.RIGHT,
        clampValueOnBlur: false,
        defaultValue: NumericInput1.VALUE_EMPTY,
        large: false,
        majorStepSize: 10,
        minorStepSize: 0.1,
        selectAllOnFocus: false,
        selectAllOnIncrement: false,
        stepSize: 1
    };
    NumericInput1.CONTINUOUS_CHANGE_DELAY = 300;
    NumericInput1.CONTINUOUS_CHANGE_INTERVAL = 100;
    return NumericInput1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../button/buttonGroup":"1Hg3x","../button/buttons":"lDi9s","./controlGroup":"8C6YA","./inputGroup":"3i4VK","./numericInputUtils":"gKhFM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gKhFM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "toLocaleString", ()=>toLocaleString
);
parcelHelpers.export(exports, "clampValue", ()=>clampValue
);
parcelHelpers.export(exports, "getValueOrEmptyValue", ()=>getValueOrEmptyValue
);
/** Transforms the localized number (ex. "10,99") to a javascript recognizable string number (ex. "10.99")  */ parcelHelpers.export(exports, "parseStringToStringNumber", ()=>parseStringToStringNumber
);
/** Returns `true` if the string represents a valid numeric value, like "1e6". */ parcelHelpers.export(exports, "isValueNumeric", ()=>isValueNumeric
);
parcelHelpers.export(exports, "isValidNumericKeyboardEvent", ()=>isValidNumericKeyboardEvent
);
/**
 * Round the value to have _up to_ the specified maximum precision.
 *
 * This differs from `toFixed(5)` in that trailing zeroes are not added on
 * more precise values, resulting in shorter strings.
 */ parcelHelpers.export(exports, "toMaxPrecision", ()=>toMaxPrecision
);
/**
 * Convert full-width (Japanese) numbers to ASCII, and strip all characters that are not valid floating-point numeric characters
 */ parcelHelpers.export(exports, "sanitizeNumericInput", ()=>sanitizeNumericInput
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _utils = require("../../common/utils");
/** Returns the `decimal` number separator based on locale */ function getDecimalSeparator(locale) {
    var testNumber = 1.9;
    var testText = testNumber.toLocaleString(locale);
    var one = 1..toLocaleString(locale);
    var nine = 9..toLocaleString(locale);
    var pattern = "".concat(one, "(.+)").concat(nine);
    var result = new RegExp(pattern).exec(testText);
    return result && result[1] || ".";
}
function toLocaleString(num, locale) {
    if (locale === void 0) locale = "en-US";
    return sanitizeNumericInput(num.toLocaleString(locale), locale);
}
function clampValue(value, min, max) {
    // defaultProps won't work if the user passes in null, so just default
    // to +/- infinity here instead, as a catch-all.
    var adjustedMin = min != null ? min : -Infinity;
    var adjustedMax = max != null ? max : Infinity;
    return _utils.clamp(value, adjustedMin, adjustedMax);
}
function getValueOrEmptyValue(value) {
    if (value === void 0) value = "";
    return value.toString();
}
/** Transform the localized character (ex. "") to a javascript recognizable string number (ex. "10.99")  */ function transformLocalizedNumberToStringNumber(character, locale) {
    var charactersMap = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
    ].map(function(value) {
        return value.toLocaleString(locale);
    });
    var jsNumber = charactersMap.indexOf(character);
    if (jsNumber !== -1) return jsNumber;
    else return character;
}
function parseStringToStringNumber(value, locale) {
    var valueAsString = "" + value;
    if (parseFloat(valueAsString).toString() === value.toString()) return value.toString();
    if (locale !== undefined) {
        var decimalSeparator = getDecimalSeparator(locale);
        var sanitizedString = sanitizeNumericInput(valueAsString, locale);
        return sanitizedString.split("").map(function(character) {
            return transformLocalizedNumberToStringNumber(character, locale);
        }).join("").replace(decimalSeparator, ".");
    }
    return value.toString();
}
function isValueNumeric(value, locale) {
    // checking if a string is numeric in Typescript is a big pain, because
    // we can't simply toss a string parameter to isFinite. below is the
    // essential approach that jQuery uses, which involves subtracting a
    // parsed numeric value from the string representation of the value. we
    // need to cast the value to the `any` type to allow this operation
    // between dissimilar types.
    var stringToStringNumber = parseStringToStringNumber(value, locale);
    return value != null && stringToStringNumber - parseFloat(stringToStringNumber) + 1 >= 0;
}
function isValidNumericKeyboardEvent(e, locale) {
    // unit tests may not include e.key. don't bother disabling those events.
    if (e.key == null) return true;
    // allow modified key strokes that may involve letters and other
    // non-numeric/invalid characters (Cmd + A, Cmd + C, Cmd + V, Cmd + X).
    if (e.ctrlKey || e.altKey || e.metaKey) return true;
    // keys that print a single character when pressed have a `key` name of
    // length 1. every other key has a longer `key` name (e.g. "Backspace",
    // "ArrowUp", "Shift"). since none of those keys can print a character
    // to the field--and since they may have important native behaviors
    // beyond printing a character--we don't want to disable their effects.
    var isSingleCharKey = e.key.length === 1;
    if (!isSingleCharKey) return true;
    // now we can simply check that the single character that wants to be printed
    // is a floating-point number character that we're allowed to print.
    return isFloatingPointNumericCharacter(e.key, locale);
}
/**
 * A regex that matches a string of length 1 (i.e. a standalone character)
 * if and only if it is a floating-point number character as defined by W3C:
 * https://www.w3.org/TR/2012/WD-html-markup-20120329/datatypes.html#common.data.float
 *
 * Floating-point number characters are the only characters that can be
 * printed within a default input[type="number"]. This component should
 * behave the same way when this.props.allowNumericCharactersOnly = true.
 * See here for the input[type="number"].value spec:
 * https://www.w3.org/TR/2012/WD-html-markup-20120329/input.number.html#input.number.attrs.value
 */ function isFloatingPointNumericCharacter(character, locale) {
    if (locale !== undefined) {
        var decimalSeparator = getDecimalSeparator(locale).replace(".", "\\.");
        var numbers = [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
        ].map(function(value) {
            return value.toLocaleString(locale);
        }).join("");
        var localeFloatingPointNumericCharacterRegex = new RegExp("^[Ee" + numbers + "\\+\\-" + decimalSeparator + "]$");
        return localeFloatingPointNumericCharacterRegex.test(character);
    } else {
        var floatingPointNumericCharacterRegex = /^[Ee0-9\+\-\.]$/;
        return floatingPointNumericCharacterRegex.test(character);
    }
}
function toMaxPrecision(value, maxPrecision) {
    // round the value to have the specified maximum precision (toFixed is the wrong choice,
    // because it would show trailing zeros in the decimal part out to the specified precision)
    // source: http://stackoverflow.com/a/18358056/5199574
    var scaleFactor = Math.pow(10, maxPrecision);
    return Math.round(value * scaleFactor) / scaleFactor;
}
/**
 * Convert Japanese full-width numbers, e.g. '５', to ASCII, e.g. '5'
 * This should be called before performing any other numeric string input validation.
 */ function convertFullWidthNumbersToAscii(value) {
    return value.replace(/[\uFF10-\uFF19]/g, function(m) {
        return String.fromCharCode(m.charCodeAt(0) - 0xfee0);
    });
}
function sanitizeNumericInput(value, locale) {
    var valueChars = convertFullWidthNumbersToAscii(value).split("");
    var sanitizedValueChars = valueChars.filter(function(valueChar) {
        return isFloatingPointNumericCharacter(valueChar, locale);
    });
    return sanitizedValueChars.join("");
}

},{"../../common/utils":"8MRas","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i1Tq8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RadioGroup", ()=>RadioGroup
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _controls = require("./controls");
var counter = 0;
function nextName() {
    return "".concat(RadioGroup.displayName, "-").concat(counter++);
}
var RadioGroup = /** @class */ function(_super) {
    _tslib.__extends(RadioGroup1, _super);
    function RadioGroup1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // a unique name for this group, which can be overridden by `name` prop.
        _this.autoGroupName = nextName();
        return _this;
    }
    RadioGroup1.prototype.render = function() {
        var label = this.props.label;
        return _react.createElement("div", {
            className: this.props.className
        }, label == null ? null : _react.createElement("label", {
            className: _common.Classes.LABEL
        }, label), Array.isArray(this.props.options) ? this.renderOptions() : this.renderChildren());
    };
    RadioGroup1.prototype.validateProps = function() {
        if (this.props.children != null && this.props.options != null) console.warn(_errors.RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX);
    };
    RadioGroup1.prototype.renderChildren = function() {
        var _this = this;
        return _react.Children.map(this.props.children, function(child) {
            if (_utils.isElementOfType(child, _controls.Radio)) return _react.cloneElement(child, _this.getRadioProps(child.props));
            else return child;
        });
    };
    RadioGroup1.prototype.renderOptions = function() {
        var _this = this;
        var _a;
        return (_a = this.props.options) === null || _a === void 0 ? void 0 : _a.map(function(option) {
            return _react.createElement(_controls.Radio, _tslib.__assign({}, _this.getRadioProps(option), {
                key: option.value,
                labelElement: option.label || option.value
            }));
        });
    };
    RadioGroup1.prototype.getRadioProps = function(optionProps) {
        var name = this.props.name;
        var className = optionProps.className, disabled = optionProps.disabled, value = optionProps.value;
        return {
            checked: value === this.props.selectedValue,
            className: className,
            disabled: disabled || this.props.disabled,
            inline: this.props.inline,
            name: name == null ? this.autoGroupName : name,
            onChange: this.props.onChange,
            value: value
        };
    };
    RadioGroup1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".RadioGroup");
    return RadioGroup1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/props":"7F9ht","../../common/utils":"8MRas","./controls":"2eMZi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2qg2E":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TextArea", ()=>TextArea
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var TextArea = /** @class */ function(_super) {
    _tslib.__extends(TextArea1, _super);
    function TextArea1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {};
        // used to measure and set the height of the component on first mount
        _this.textareaElement = null;
        _this.handleRef = _common.refHandler(_this, "textareaElement", _this.props.inputRef);
        _this.handleChange = function(e) {
            if (_this.props.growVertically) _this.setState({
                height: e.target.scrollHeight
            });
            if (_this.props.onChange != null) _this.props.onChange(e);
        };
        return _this;
    }
    TextArea1.prototype.componentDidMount = function() {
        var _a;
        if (this.props.growVertically && this.textareaElement !== null) // HACKHACK: this should probably be done in getSnapshotBeforeUpdate
        /* eslint-disable-next-line react/no-did-mount-set-state */ this.setState({
            height: (_a = this.textareaElement) === null || _a === void 0 ? void 0 : _a.scrollHeight
        });
    };
    TextArea1.prototype.componentDidUpdate = function(prevProps) {
        if (prevProps.inputRef !== this.props.inputRef) {
            _common.setRef(prevProps.inputRef, null);
            this.handleRef = _common.refHandler(this, "textareaElement", this.props.inputRef);
            _common.setRef(this.props.inputRef, this.textareaElement);
        }
    };
    TextArea1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, fill = _b.fill, inputRef = _b.inputRef, intent = _b.intent, large = _b.large, small = _b.small, growVertically = _b.growVertically, htmlProps = _tslib.__rest(_b, [
            "className",
            "fill",
            "inputRef",
            "intent",
            "large",
            "small",
            "growVertically"
        ]);
        var rootClasses = _classnamesDefault.default(_common.Classes.INPUT, _common.Classes.intentClass(intent), (_a = {}, _a[_common.Classes.FILL] = fill, _a[_common.Classes.LARGE] = large, _a[_common.Classes.SMALL] = small, _a), className);
        // add explicit height style while preserving user-supplied styles if they exist
        var _c = htmlProps.style, style = _c === void 0 ? {} : _c;
        if (growVertically && this.state.height != null) // this style object becomes non-extensible when mounted (at least in the enzyme renderer),
        // so we make a new one to add a property
        style = _tslib.__assign(_tslib.__assign({}, style), {
            height: "".concat(this.state.height, "px")
        });
        return _react.createElement("textarea", _tslib.__assign({}, htmlProps, {
            className: rootClasses,
            onChange: this.handleChange,
            ref: this.handleRef,
            style: style
        }));
    };
    TextArea1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".TextArea");
    return TextArea1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6GeNU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HTMLSelect", ()=>HTMLSelect
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _classes = require("../../common/classes");
var _icon = require("../icon/icon");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var HTMLSelect = /** @class */ function(_super) {
    _tslib.__extends(HTMLSelect1, _super);
    function HTMLSelect1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HTMLSelect1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, disabled = _b.disabled, elementRef = _b.elementRef, fill = _b.fill, iconProps = _b.iconProps, large = _b.large, minimal = _b.minimal, _c = _b.options, options = _c === void 0 ? [] : _c, htmlProps = _tslib.__rest(_b, [
            "className",
            "disabled",
            "elementRef",
            "fill",
            "iconProps",
            "large",
            "minimal",
            "options"
        ]);
        var classes = _classnamesDefault.default(_classes.HTML_SELECT, (_a = {}, _a[_classes.DISABLED] = disabled, _a[_classes.FILL] = fill, _a[_classes.LARGE] = large, _a[_classes.MINIMAL] = minimal, _a), className);
        var optionChildren = options.map(function(option) {
            var props = typeof option === "object" ? option : {
                value: option
            };
            return _react.createElement("option", _tslib.__assign({}, props, {
                key: props.value,
                children: props.label || props.value
            }));
        });
        return _react.createElement("div", {
            className: classes
        }, _react.createElement("select", _tslib.__assign({
            disabled: disabled,
            ref: elementRef
        }, htmlProps, {
            multiple: false
        }), optionChildren, htmlProps.children), _react.createElement(_icon.Icon, _tslib.__assign({
            icon: "double-caret-vertical",
            title: "Open dropdown"
        }, iconProps)));
    };
    return HTMLSelect1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/classes":"6Ep96","../icon/icon":"7dRdu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Ndxk":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HTMLTable", ()=>HTMLTable
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var HTMLTable = /** @class */ function(_super) {
    _tslib.__extends(HTMLTable1, _super);
    function HTMLTable1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HTMLTable1.prototype.render = function() {
        var _a;
        // eslint-disable-next-line deprecation/deprecation
        var _b = this.props, bordered = _b.bordered, className = _b.className, condensed = _b.condensed, elementRef = _b.elementRef, interactive = _b.interactive, striped = _b.striped, htmlProps = _tslib.__rest(_b, [
            "bordered",
            "className",
            "condensed",
            "elementRef",
            "interactive",
            "striped"
        ]);
        var classes = _classnamesDefault.default(_common.Classes.HTML_TABLE, (_a = {}, _a[_common.Classes.HTML_TABLE_BORDERED] = bordered, _a[_common.Classes.HTML_TABLE_CONDENSED] = condensed, _a[_common.Classes.HTML_TABLE_STRIPED] = striped, _a[_common.Classes.INTERACTIVE] = interactive, _a), className);
        // eslint-disable-next-line @blueprintjs/html-components
        return _react.createElement("table", _tslib.__assign({}, htmlProps, {
            ref: elementRef,
            className: classes
        }));
    };
    return HTMLTable1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8rD26":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hotkey", ()=>_hotkey.Hotkey
);
parcelHelpers.export(exports, "KeyCombo", ()=>_keyCombo.KeyCombo
);
// eslint-disable-next-line import/no-cycle
parcelHelpers.export(exports, "HotkeysTarget", ()=>_hotkeysTarget.HotkeysTarget
);
parcelHelpers.export(exports, "comboMatches", ()=>_hotkeyParser.comboMatches
);
parcelHelpers.export(exports, "getKeyCombo", ()=>_hotkeyParser.getKeyCombo
);
parcelHelpers.export(exports, "getKeyComboString", ()=>_hotkeyParser.getKeyComboString
);
parcelHelpers.export(exports, "parseKeyCombo", ()=>_hotkeyParser.parseKeyCombo
);
// eslint-disable-next-line import/no-cycle
parcelHelpers.export(exports, "hideHotkeysDialog", ()=>_hotkeysDialog.hideHotkeysDialog
);
parcelHelpers.export(exports, "setHotkeysDialogProps", ()=>_hotkeysDialog.setHotkeysDialogProps
);
parcelHelpers.export(exports, "HotkeysDialog2", ()=>_hotkeysDialog2.HotkeysDialog2
);
parcelHelpers.export(exports, "HotkeysTarget2", ()=>_hotkeysTarget2.HotkeysTarget2
);
/*
 * Copyright 2020 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /* eslint-disable deprecation/deprecation */ var _hotkeysTypes = require("./hotkeysTypes");
parcelHelpers.exportAll(_hotkeysTypes, exports);
var _hotkeys = require("./hotkeys");
parcelHelpers.exportAll(_hotkeys, exports);
var _hotkey = require("./hotkey");
var _keyCombo = require("./keyCombo");
var _hotkeysTarget = require("./hotkeysTarget");
var _hotkeyParser = require("./hotkeyParser");
var _hotkeysDialog = require("./hotkeysDialog");
var _hotkeysDialog2 = require("./hotkeysDialog2");
var _hotkeysTarget2 = require("./hotkeysTarget2");

},{"./hotkeysTypes":"gLRDL","./hotkeys":"er5mX","./hotkey":"gYswr","./keyCombo":"3yFrp","./hotkeysTarget":"iSLr5","./hotkeyParser":"hMmvM","./hotkeysDialog":"7swaP","./hotkeysDialog2":"8aac5","./hotkeysTarget2":"2q3ln","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gLRDL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"er5mX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hotkeys", ()=>Hotkeys
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _utils = require("../../common/utils");
var _html = require("../html/html");
var _hotkey = require("./hotkey");
var Hotkeys = /** @class */ function(_super) {
    _tslib.__extends(Hotkeys1, _super);
    function Hotkeys1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Hotkeys1.prototype.render = function() {
        if (!_utils.isReactChildrenElementOrElements(this.props.children)) return null;
        var hotkeys = _react.Children.map(this.props.children, function(child) {
            return child.props;
        });
        // sort by group label alphabetically, prioritize globals
        hotkeys.sort(function(a, b) {
            if (a.global === b.global && a.group && b.group) return a.group.localeCompare(b.group);
            return a.global ? -1 : 1;
        });
        var lastGroup;
        var elems = [];
        for(var _i = 0, hotkeys_1 = hotkeys; _i < hotkeys_1.length; _i++){
            var hotkey = hotkeys_1[_i];
            var groupLabel = hotkey.group;
            if (groupLabel !== lastGroup) {
                elems.push(_react.createElement(_html.H4, {
                    key: "group-".concat(elems.length)
                }, groupLabel));
                lastGroup = groupLabel;
            }
            elems.push(_react.createElement(_hotkey.Hotkey, _tslib.__assign({
                key: elems.length
            }, hotkey)));
        }
        var rootClasses = _classnamesDefault.default(_common.Classes.HOTKEY_COLUMN, this.props.className);
        return _react.createElement("div", {
            className: rootClasses
        }, elems);
    };
    Hotkeys1.prototype.validateProps = function(props) {
        if (!_utils.isReactChildrenElementOrElements(props.children)) return;
        _react.Children.forEach(props.children, function(child) {
            if (!_utils.isElementOfType(child, _hotkey.Hotkey)) throw new Error(_errors.HOTKEYS_HOTKEY_CHILDREN);
        });
    };
    Hotkeys1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".Hotkeys");
    Hotkeys1.defaultProps = {
        tabIndex: 0
    };
    return Hotkeys1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/utils":"8MRas","../html/html":"iCwHB","./hotkey":"gYswr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gYswr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Hotkey", ()=>Hotkey
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _keyCombo = require("./keyCombo");
var Hotkey = /** @class */ function(_super) {
    _tslib.__extends(Hotkey1, _super);
    function Hotkey1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Hotkey1.prototype.render = function() {
        var _a = this.props, label = _a.label, className = _a.className, spreadableProps = _tslib.__rest(_a, [
            "label",
            "className"
        ]);
        var rootClasses = _classnamesDefault.default(_common.Classes.HOTKEY, className);
        return _react.createElement("div", {
            className: rootClasses
        }, _react.createElement("div", {
            className: _common.Classes.HOTKEY_LABEL
        }, label), _react.createElement(_keyCombo.KeyCombo, _tslib.__assign({}, spreadableProps)));
    };
    Hotkey1.prototype.validateProps = function(props) {
        if (props.global !== true && props.group == null) console.error("non-global <Hotkey>s must define a group");
    };
    Hotkey1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".Hotkey");
    Hotkey1.defaultProps = {
        allowInInput: false,
        disabled: false,
        global: false,
        preventDefault: false,
        stopPropagation: false
    };
    return Hotkey1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","./keyCombo":"3yFrp","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3yFrp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "KeyCombo", ()=>KeyCombo
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _icon = require("../icon/icon");
var _hotkeyParser = require("./hotkeyParser");
var KeyIcons = {
    alt: {
        icon: "key-option",
        iconTitle: "Alt/Option key"
    },
    cmd: {
        icon: "key-command",
        iconTitle: "Command key"
    },
    ctrl: {
        icon: "key-control",
        iconTitle: "Control key"
    },
    delete: {
        icon: "key-delete",
        iconTitle: "Delete key"
    },
    down: {
        icon: "arrow-down",
        iconTitle: "Down key"
    },
    enter: {
        icon: "key-enter",
        iconTitle: "Enter key"
    },
    left: {
        icon: "arrow-left",
        iconTitle: "Left key"
    },
    meta: {
        icon: "key-command",
        iconTitle: "Command key"
    },
    right: {
        icon: "arrow-right",
        iconTitle: "Right key"
    },
    shift: {
        icon: "key-shift",
        iconTitle: "Shift key"
    },
    up: {
        icon: "arrow-up",
        iconTitle: "Up key"
    }
};
var KeyCombo = /** @class */ function(_super) {
    _tslib.__extends(KeyCombo1, _super);
    function KeyCombo1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderKey = function(key, index) {
            var _a;
            var icon = KeyIcons[key];
            var reactKey = "key-".concat(index);
            return _react.createElement("kbd", {
                className: _classnamesDefault.default(_common.Classes.KEY, (_a = {}, _a[_common.Classes.MODIFIER_KEY] = icon != null, _a)),
                key: reactKey
            }, icon != null && _react.createElement(_icon.Icon, {
                icon: icon.icon,
                title: icon.iconTitle
            }), key);
        };
        _this.renderMinimalKey = function(key, index) {
            var icon = KeyIcons[key];
            return icon == null ? key : _react.createElement(_icon.Icon, {
                icon: icon.icon,
                title: icon.iconTitle,
                key: "key-".concat(index)
            });
        };
        return _this;
    }
    KeyCombo1.prototype.render = function() {
        var _a = this.props, className = _a.className, combo = _a.combo, minimal = _a.minimal;
        var keys = _hotkeyParser.normalizeKeyCombo(combo).map(function(key) {
            return key.length === 1 ? key.toUpperCase() : key;
        }).map(minimal ? this.renderMinimalKey : this.renderKey);
        return _react.createElement("span", {
            className: _classnamesDefault.default(_common.Classes.KEY_COMBO, className)
        }, keys);
    };
    KeyCombo1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".KeyCombo");
    return KeyCombo1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../icon/icon":"7dRdu","./hotkeyParser":"hMmvM","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hMmvM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "KeyCodes", ()=>KeyCodes
);
parcelHelpers.export(exports, "Modifiers", ()=>Modifiers
);
parcelHelpers.export(exports, "ModifierBitMasks", ()=>ModifierBitMasks
);
parcelHelpers.export(exports, "Aliases", ()=>Aliases
);
parcelHelpers.export(exports, "ShiftKeys", ()=>ShiftKeys
);
parcelHelpers.export(exports, "comboMatches", ()=>comboMatches
);
parcelHelpers.export(exports, "parseKeyCombo", ()=>parseKeyCombo
);
parcelHelpers.export(exports, "getKeyComboString", ()=>getKeyComboString
);
parcelHelpers.export(exports, "getKeyCombo", ()=>getKeyCombo
);
parcelHelpers.export(exports, "normalizeKeyCombo", ()=>normalizeKeyCombo
);
var KeyCodes = {
    8: "backspace",
    9: "tab",
    13: "enter",
    20: "capslock",
    27: "esc",
    32: "space",
    33: "pageup",
    34: "pagedown",
    35: "end",
    36: "home",
    37: "left",
    38: "up",
    39: "right",
    40: "down",
    45: "ins",
    46: "del",
    // number keys
    48: "0",
    49: "1",
    50: "2",
    51: "3",
    52: "4",
    53: "5",
    54: "6",
    55: "7",
    56: "8",
    57: "9",
    // alphabet
    65: "a",
    66: "b",
    67: "c",
    68: "d",
    69: "e",
    70: "f",
    71: "g",
    72: "h",
    73: "i",
    74: "j",
    75: "k",
    76: "l",
    77: "m",
    78: "n",
    79: "o",
    80: "p",
    81: "q",
    82: "r",
    83: "s",
    84: "t",
    85: "u",
    86: "v",
    87: "w",
    88: "x",
    89: "y",
    90: "z",
    // punctuation
    106: "*",
    107: "+",
    109: "-",
    110: ".",
    111: "/",
    186: ";",
    187: "=",
    188: ",",
    189: "-",
    190: ".",
    191: "/",
    192: "`",
    219: "[",
    220: "\\",
    221: "]",
    222: "'"
};
var Modifiers = {
    16: "shift",
    17: "ctrl",
    18: "alt",
    91: "meta",
    93: "meta",
    224: "meta"
};
var ModifierBitMasks = {
    alt: 1,
    ctrl: 2,
    meta: 4,
    shift: 8
};
var Aliases = {
    cmd: "meta",
    command: "meta",
    escape: "esc",
    minus: "-",
    mod: isMac() ? "meta" : "ctrl",
    option: "alt",
    plus: "+",
    return: "enter",
    win: "meta"
};
var ShiftKeys = {
    "~": "`",
    "!": "1",
    "@": "2",
    "#": "3",
    $: "4",
    "%": "5",
    "^": "6",
    "&": "7",
    "*": "8",
    "(": "9",
    ")": "0",
    _: "-",
    "+": "=",
    "{": "[",
    "}": "]",
    "|": "\\",
    ":": ";",
    '"': "'",
    "<": ",",
    ">": ".",
    "?": "/"
};
// tslint:enable object-literal-sort-keys
// Function keys
for(var i = 1; i <= 12; ++i)KeyCodes[111 + i] = "f" + i;
// Numpad
for(var i = 0; i <= 9; ++i)KeyCodes[96 + i] = "num" + i.toString();
function comboMatches(a, b) {
    return a.modifiers === b.modifiers && a.key === b.key;
}
var parseKeyCombo = function(combo) {
    var pieces = combo.replace(/\s/g, "").toLowerCase().split("+");
    var modifiers = 0;
    var key;
    for(var _i = 0, pieces_1 = pieces; _i < pieces_1.length; _i++){
        var piece = pieces_1[_i];
        if (piece === "") throw new Error("Failed to parse key combo \"".concat(combo, "\".\n                Valid key combos look like \"cmd + plus\", \"shift+p\", or \"!\""));
        if (Aliases[piece] != null) piece = Aliases[piece];
        if (ModifierBitMasks[piece] != null) modifiers += ModifierBitMasks[piece];
        else if (ShiftKeys[piece] != null) {
            modifiers += ModifierBitMasks.shift;
            key = ShiftKeys[piece];
        } else key = piece.toLowerCase();
    }
    return {
        modifiers: modifiers,
        key: key
    };
};
var getKeyComboString = function(e) {
    var keys = [];
    // modifiers first
    if (e.ctrlKey) keys.push("ctrl");
    if (e.altKey) keys.push("alt");
    if (e.shiftKey) keys.push("shift");
    if (e.metaKey) keys.push("meta");
    // HACKHACK: https://github.com/palantir/blueprint/issues/4165
    // eslint-disable-next-line deprecation/deprecation
    var which = e.which;
    if (Modifiers[which] != null) ;
    else if (KeyCodes[which] != null) keys.push(KeyCodes[which]);
    else // eslint-disable-next-line id-blacklist
    keys.push(String.fromCharCode(which).toLowerCase());
    // join keys with plusses
    return keys.join(" + ");
};
var getKeyCombo = function(e) {
    var key;
    // HACKHACK: https://github.com/palantir/blueprint/issues/4165
    // eslint-disable-next-line deprecation/deprecation
    var which = e.which;
    if (Modifiers[which] != null) ;
    else if (KeyCodes[which] != null) key = KeyCodes[which];
    else // eslint-disable-next-line id-blacklist
    key = String.fromCharCode(which).toLowerCase();
    var modifiers = 0;
    if (e.altKey) modifiers += ModifierBitMasks.alt;
    if (e.ctrlKey) modifiers += ModifierBitMasks.ctrl;
    if (e.metaKey) modifiers += ModifierBitMasks.meta;
    if (e.shiftKey) modifiers += ModifierBitMasks.shift;
    return {
        modifiers: modifiers,
        key: key
    };
};
var normalizeKeyCombo = function(combo, platformOverride) {
    var keys = combo.replace(/\s/g, "").split("+");
    return keys.map(function(key) {
        var keyName = Aliases[key] != null ? Aliases[key] : key;
        return keyName === "meta" ? isMac(platformOverride) ? "cmd" : "ctrl" : keyName;
    });
};
function isMac(platformOverride) {
    // HACKHACK: see https://github.com/palantir/blueprint/issues/5174
    // eslint-disable-next-line deprecation/deprecation
    var platform = platformOverride !== null && platformOverride !== void 0 ? platformOverride : typeof navigator !== "undefined" ? navigator.platform : undefined;
    return platform === undefined ? false : /Mac|iPod|iPhone|iPad/.test(platform);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iSLr5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/* eslint-disable deprecation/deprecation */ /** @deprecated use `useHotkeys` hook or `<HotkeysTarget2>` component */ parcelHelpers.export(exports, "HotkeysTarget", ()=>HotkeysTarget
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _errors = require("../../common/errors");
var _utils = require("../../common/utils");
var _hotkeysEvents = require("./hotkeysEvents");
function HotkeysTarget(WrappedComponent) {
    var _a1;
    if (!_utils.isFunction(WrappedComponent.prototype.renderHotkeys)) console.warn(_errors.HOTKEYS_WARN_DECORATOR_NO_METHOD);
    return _a1 = /** @class */ function(_super) {
        _tslib.__extends(HotkeysTargetClass, _super);
        function HotkeysTargetClass() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            /** @internal */ _this.globalHotkeysEvents = new _hotkeysEvents.HotkeysEvents(_hotkeysEvents.HotkeyScope.GLOBAL);
            /** @internal */ _this.localHotkeysEvents = new _hotkeysEvents.HotkeysEvents(_hotkeysEvents.HotkeyScope.LOCAL);
            return _this;
        }
        HotkeysTargetClass.prototype.componentDidMount = function() {
            if (_super.prototype.componentDidMount != null) _super.prototype.componentDidMount.call(this);
            // attach global key event listeners
            document.addEventListener("keydown", this.globalHotkeysEvents.handleKeyDown);
            document.addEventListener("keyup", this.globalHotkeysEvents.handleKeyUp);
        };
        HotkeysTargetClass.prototype.componentWillUnmount = function() {
            var _a;
            (_a = _super.prototype.componentWillUnmount) === null || _a === void 0 || _a.call(this);
            document.removeEventListener("keydown", this.globalHotkeysEvents.handleKeyDown);
            document.removeEventListener("keyup", this.globalHotkeysEvents.handleKeyUp);
            this.globalHotkeysEvents.clear();
            this.localHotkeysEvents.clear();
        };
        HotkeysTargetClass.prototype.render = function() {
            var _this = this;
            var element = _super.prototype.render.call(this);
            if (element == null) // always return `element` in case caller is distinguishing between `null` and `undefined`
            return element;
            if (!_react.isValidElement(element)) {
                console.warn(_errors.HOTKEYS_WARN_DECORATOR_NEEDS_REACT_ELEMENT);
                return element;
            }
            if (_utils.isFunction(this.renderHotkeys)) {
                var hotkeys = this.renderHotkeys();
                if (this.localHotkeysEvents) this.localHotkeysEvents.setHotkeys(hotkeys.props);
                if (this.globalHotkeysEvents) this.globalHotkeysEvents.setHotkeys(hotkeys.props);
                if (this.localHotkeysEvents.count() > 0) {
                    var tabIndex = hotkeys.props.tabIndex === undefined ? 0 : hotkeys.props.tabIndex;
                    var _a = element.props, existingKeyDown_1 = _a.onKeyDown, existingKeyUp_1 = _a.onKeyUp;
                    var handleKeyDownWrapper = function(e) {
                        _this.localHotkeysEvents.handleKeyDown(e.nativeEvent);
                        existingKeyDown_1 === null || existingKeyDown_1 === void 0 || existingKeyDown_1(e);
                    };
                    var handleKeyUpWrapper = function(e) {
                        _this.localHotkeysEvents.handleKeyUp(e.nativeEvent);
                        existingKeyUp_1 === null || existingKeyUp_1 === void 0 || existingKeyUp_1(e);
                    };
                    return _react.cloneElement(element, {
                        onKeyDown: handleKeyDownWrapper,
                        onKeyUp: handleKeyUpWrapper,
                        tabIndex: tabIndex
                    });
                }
            }
            return element;
        };
        return HotkeysTargetClass;
    }(WrappedComponent), _a1.displayName = "HotkeysTarget(".concat(_utils.getDisplayName(WrappedComponent), ")"), _a1;
}

},{"tslib":"45hme","react":"21dqq","../../common/errors":"7mLY3","../../common/utils":"8MRas","./hotkeysEvents":"9Fgz3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9Fgz3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HotkeyScope", ()=>HotkeyScope
);
parcelHelpers.export(exports, "HotkeysEvents", ()=>HotkeysEvents
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _react = require("react");
var _utils = require("../../common/utils");
var _hotkey = require("./hotkey");
var _hotkeyParser = require("./hotkeyParser");
var _hotkeysDialog = require("./hotkeysDialog");
var SHOW_DIALOG_KEY = "?";
var HotkeyScope;
(function(HotkeyScope1) {
    HotkeyScope1["LOCAL"] = "local";
    HotkeyScope1["GLOBAL"] = "global";
})(HotkeyScope || (HotkeyScope = {}));
var HotkeysEvents = /** @class */ function() {
    function HotkeysEvents1(scope) {
        var _this = this;
        this.scope = scope;
        this.actions = [];
        this.handleKeyDown = function(e) {
            var combo = _hotkeyParser.getKeyCombo(e);
            var isTextInput = _this.isTextInput(e);
            if (!isTextInput && _hotkeyParser.comboMatches(_hotkeyParser.parseKeyCombo(SHOW_DIALOG_KEY), combo)) {
                if (_hotkeysDialog.isHotkeysDialogShowing()) _hotkeysDialog.hideHotkeysDialogAfterDelay();
                else _hotkeysDialog.showHotkeysDialog(_this.actions.map(function(action) {
                    return action.props;
                }));
                return;
            } else if (_hotkeysDialog.isHotkeysDialogShowing()) return;
            _this.invokeNamedCallbackIfComboRecognized(combo, "onKeyDown", e);
        };
        this.handleKeyUp = function(e) {
            if (_hotkeysDialog.isHotkeysDialogShowing()) return;
            _this.invokeNamedCallbackIfComboRecognized(_hotkeyParser.getKeyCombo(e), "onKeyUp", e);
        };
    }
    HotkeysEvents1.prototype.count = function() {
        return this.actions.length;
    };
    HotkeysEvents1.prototype.clear = function() {
        this.actions = [];
    };
    HotkeysEvents1.prototype.setHotkeys = function(props) {
        var _this = this;
        var actions = [];
        _react.Children.forEach(props.children, function(child) {
            if (_utils.isElementOfType(child, _hotkey.Hotkey) && _this.isScope(child.props)) actions.push({
                combo: _hotkeyParser.parseKeyCombo(child.props.combo),
                props: child.props
            });
        });
        this.actions = actions;
    };
    HotkeysEvents1.prototype.invokeNamedCallbackIfComboRecognized = function(combo, callbackName, e) {
        var _a, _b;
        var isTextInput = this.isTextInput(e);
        for(var _i = 0, _c = this.actions; _i < _c.length; _i++){
            var action = _c[_i];
            var shouldIgnore = isTextInput && !action.props.allowInInput || action.props.disabled;
            if (!shouldIgnore && _hotkeyParser.comboMatches(action.combo, combo)) {
                if (action.props.preventDefault) e.preventDefault();
                if (action.props.stopPropagation) {
                    // set a flag just for unit testing. not meant to be referenced in feature work.
                    e.isPropagationStopped = true;
                    e.stopPropagation();
                }
                (_b = (_a = action.props)[callbackName]) === null || _b === void 0 || _b.call(_a, e);
            }
        }
    };
    HotkeysEvents1.prototype.isScope = function(props) {
        return (props.global ? HotkeyScope.GLOBAL : HotkeyScope.LOCAL) === this.scope;
    };
    HotkeysEvents1.prototype.isTextInput = function(e) {
        var elem = e.target;
        // we check these cases for unit testing, but this should not happen
        // during normal operation
        if (elem == null || elem.closest == null) return false;
        var editable = elem.closest("input, textarea, [contenteditable=true]");
        if (editable == null) return false;
        // don't let checkboxes, switches, and radio buttons prevent hotkey behavior
        if (editable.tagName.toLowerCase() === "input") {
            var inputType = editable.type;
            if (inputType === "checkbox" || inputType === "radio") return false;
        }
        // don't let read-only fields prevent hotkey behavior
        if (editable.readOnly) return false;
        return true;
    };
    return HotkeysEvents1;
}();

},{"react":"21dqq","../../common/utils":"8MRas","./hotkey":"gYswr","./hotkeyParser":"hMmvM","./hotkeysDialog":"7swaP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"7swaP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isHotkeysDialogShowing", ()=>isHotkeysDialogShowing
);
parcelHelpers.export(exports, "setHotkeysDialogProps", ()=>setHotkeysDialogProps
);
parcelHelpers.export(exports, "showHotkeysDialog", ()=>showHotkeysDialog
);
parcelHelpers.export(exports, "hideHotkeysDialog", ()=>hideHotkeysDialog
);
/**
 * Use this function instead of `hideHotkeysDialog` if you need to ensure that all hotkey listeners
 * have time to execute with the dialog in a consistent open state. This can avoid flickering the
 * dialog between open and closed states as successive listeners fire.
 */ parcelHelpers.export(exports, "hideHotkeysDialogAfterDelay", ()=>hideHotkeysDialogAfterDelay
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactDom = require("react-dom");
var _common = require("../../common");
var _components = require("../../components");
var _hotkey = require("./hotkey");
var _hotkeys = require("./hotkeys");
/**
 * The delay before showing or hiding the dialog. Should be long enough to
 * allow all registered hotkey listeners to execute first.
 */ var DELAY_IN_MS = 10;
var HotkeysDialog = /** @class */ function() {
    function HotkeysDialog1() {
        var _this = this;
        this.componentProps = {
            globalHotkeysGroup: "Global hotkeys"
        };
        this.container = null;
        this.hotkeysQueue = [];
        this.isDialogShowing = false;
        this.show = function() {
            _this.isDialogShowing = true;
            _this.render();
        };
        this.hide = function() {
            _this.isDialogShowing = false;
            _this.render();
        };
    }
    HotkeysDialog1.prototype.render = function() {
        if (this.container == null) this.container = this.getContainer();
        _reactDom.render(this.renderComponent(), this.container);
    };
    HotkeysDialog1.prototype.unmount = function() {
        if (this.container != null) {
            _reactDom.unmountComponentAtNode(this.container);
            this.container.remove();
            this.container = null;
        }
    };
    /**
     * Because hotkeys can be registered globally and locally and because
     * event ordering cannot be guaranteed, we use this debouncing method to
     * allow all hotkey listeners to fire and add their hotkeys to the dialog.
     *
     * 10msec after the last listener adds their hotkeys, we render the dialog
     * and clear the queue.
     */ HotkeysDialog1.prototype.enqueueHotkeysForDisplay = function(hotkeys) {
        this.hotkeysQueue.push(hotkeys);
        // reset timeout for debounce
        window.clearTimeout(this.showTimeoutToken);
        this.showTimeoutToken = window.setTimeout(this.show, DELAY_IN_MS);
    };
    HotkeysDialog1.prototype.hideAfterDelay = function() {
        window.clearTimeout(this.hideTimeoutToken);
        this.hideTimeoutToken = window.setTimeout(this.hide, DELAY_IN_MS);
    };
    HotkeysDialog1.prototype.isShowing = function() {
        return this.isDialogShowing;
    };
    HotkeysDialog1.prototype.getContainer = function() {
        if (this.container == null) {
            this.container = document.createElement("div");
            this.container.classList.add(_common.Classes.PORTAL);
            document.body.appendChild(this.container);
        }
        return this.container;
    };
    HotkeysDialog1.prototype.renderComponent = function() {
        return _react.createElement(_components.Dialog, _tslib.__assign({}, this.componentProps, {
            className: _classnamesDefault.default(_common.Classes.HOTKEY_DIALOG, this.componentProps.className),
            isOpen: this.isDialogShowing,
            onClose: this.hide
        }), _react.createElement("div", {
            className: _common.Classes.DIALOG_BODY
        }, this.renderHotkeys()));
    };
    HotkeysDialog1.prototype.renderHotkeys = function() {
        var _this = this;
        var hotkeys = this.emptyHotkeyQueue();
        var elements = hotkeys.map(function(hotkey, index) {
            var group = hotkey.global === true && hotkey.group == null ? _this.componentProps.globalHotkeysGroup : hotkey.group;
            return _react.createElement(_hotkey.Hotkey, _tslib.__assign({
                key: index
            }, hotkey, {
                group: group
            }));
        });
        return _react.createElement(_hotkeys.Hotkeys, null, elements);
    };
    HotkeysDialog1.prototype.emptyHotkeyQueue = function() {
        // flatten then empty the hotkeys queue
        var hotkeys = this.hotkeysQueue.reduce(function(arr, queued) {
            return arr.concat(queued);
        }, []);
        this.hotkeysQueue.length = 0;
        return hotkeys;
    };
    return HotkeysDialog1;
}();
// singleton instance
var HOTKEYS_DIALOG = new HotkeysDialog();
function isHotkeysDialogShowing() {
    return HOTKEYS_DIALOG.isShowing();
}
function setHotkeysDialogProps(props) {
    for(var key in props)if (props.hasOwnProperty(key)) HOTKEYS_DIALOG.componentProps[key] = props[key];
}
function showHotkeysDialog(hotkeys) {
    HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);
}
function hideHotkeysDialog() {
    HOTKEYS_DIALOG.hide();
}
function hideHotkeysDialogAfterDelay() {
    HOTKEYS_DIALOG.hideAfterDelay();
}

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","react-dom":"j6uA9","../../common":"6BNPY","../../components":"kz2Zc","./hotkey":"gYswr","./hotkeys":"er5mX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8aac5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HotkeysDialog2", ()=>HotkeysDialog2
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _dialog = require("../dialog/dialog");
var _hotkey = require("./hotkey");
var _hotkeys = require("./hotkeys");
var HotkeysDialog2 = function(_a) {
    var _b = _a.globalGroupName, globalGroupName = _b === void 0 ? "Global" : _b, hotkeys = _a.hotkeys, props = _tslib.__rest(_a, [
        "globalGroupName",
        "hotkeys"
    ]);
    return _react.createElement(_dialog.Dialog, _tslib.__assign({}, props, {
        className: _classnamesDefault.default(_common.Classes.HOTKEY_DIALOG, props.className)
    }), _react.createElement("div", {
        className: _common.Classes.DIALOG_BODY
    }, _react.createElement(_hotkeys.Hotkeys, null, hotkeys.map(function(hotkey, index) {
        return _react.createElement(_hotkey.Hotkey, _tslib.__assign({
            key: index
        }, hotkey, {
            group: hotkey.global === true && hotkey.group == null ? globalGroupName : hotkey.group
        }));
    }))));
};

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../dialog/dialog":"aVitu","./hotkey":"gYswr","./hotkeys":"er5mX","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2q3ln":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HotkeysTarget2", ()=>HotkeysTarget2
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _react = require("react");
var _errors = require("../../common/errors");
var _utils = require("../../common/utils");
var _hooks = require("../../hooks");
var HotkeysTarget2 = function(_a) {
    var children = _a.children, hotkeys = _a.hotkeys, options = _a.options;
    var _b = _hooks.useHotkeys(hotkeys, options), handleKeyDown = _b.handleKeyDown, handleKeyUp = _b.handleKeyUp;
    // run props validation
    _react.useEffect(function() {
        if (!_utils.isNodeEnv("production")) {
            if (typeof children !== "function" && hotkeys.some(function(h) {
                return !h.global;
            })) console.error(_errors.HOTKEYS_TARGET2_CHILDREN_LOCAL_HOTKEYS);
        }
    }, [
        hotkeys
    ]);
    if (typeof children === "function") return children({
        handleKeyDown: handleKeyDown,
        handleKeyUp: handleKeyUp
    });
    else return children;
};

},{"react":"21dqq","../../common/errors":"7mLY3","../../common/utils":"8MRas","../../hooks":"3bAWr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3bAWr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ parcelHelpers.export(exports, "useHotkeys", ()=>_useHotkeys.useHotkeys
);
var _useHotkeys = require("./hotkeys/useHotkeys");

},{"./hotkeys/useHotkeys":"cMaST","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cMaST":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * React hook to register global and local hotkeys for a component.
 *
 * @param keys list of hotkeys to configure
 * @param options hook options
 */ parcelHelpers.export(exports, "useHotkeys", ()=>useHotkeys
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _errors = require("../../common/errors");
var _hotkeyParser = require("../../components/hotkeys/hotkeyParser");
var _context = require("../../context");
function useHotkeys(keys, options) {
    if (options === void 0) options = {};
    var _a1 = options.document, document = _a1 === void 0 ? getDefaultDocument() : _a1, _b1 = options.showDialogKeyCombo, showDialogKeyCombo = _b1 === void 0 ? "?" : _b1;
    var localKeys = _react.useMemo(function() {
        return keys.filter(function(k) {
            return !k.global;
        }).map(function(k) {
            return {
                combo: _hotkeyParser.parseKeyCombo(k.combo),
                config: k
            };
        });
    }, [
        keys
    ]);
    var globalKeys = _react.useMemo(function() {
        return keys.filter(function(k) {
            return k.global;
        }).map(function(k) {
            return {
                combo: _hotkeyParser.parseKeyCombo(k.combo),
                config: k
            };
        });
    }, [
        keys
    ]);
    // register keys with global context
    var _c1 = _react.useContext(_context.HotkeysContext), state = _c1[0], dispatch = _c1[1];
    if (!state.hasProvider) _react.useEffect(function() {
        return console.warn(_errors.HOTKEYS_PROVIDER_NOT_FOUND);
    }, []);
    // we can still bind the hotkeys if there is no HotkeysProvider, they just won't show up in the dialog
    _react.useEffect(function() {
        var payload = _tslib.__spreadArray(_tslib.__spreadArray([], globalKeys.map(function(k) {
            return k.config;
        }), true), localKeys.map(function(k) {
            return k.config;
        }), true);
        dispatch({
            type: "ADD_HOTKEYS",
            payload: payload
        });
        return function() {
            return dispatch({
                type: "REMOVE_HOTKEYS",
                payload: payload
            });
        };
    }, [
        keys
    ]);
    var invokeNamedCallbackIfComboRecognized = function(global, combo, callbackName, e) {
        var _a, _b;
        var isTextInput = isTargetATextInput(e);
        for(var _i = 0, _c = global ? globalKeys : localKeys; _i < _c.length; _i++){
            var key = _c[_i];
            var _d = key.config, _e = _d.allowInInput, allowInInput = _e === void 0 ? false : _e, _f = _d.disabled, disabled = _f === void 0 ? false : _f, _g = _d.preventDefault, preventDefault = _g === void 0 ? false : _g, _h = _d.stopPropagation, stopPropagation = _h === void 0 ? false : _h;
            var shouldIgnore = isTextInput && !allowInInput || disabled;
            if (!shouldIgnore && _hotkeyParser.comboMatches(key.combo, combo)) {
                if (preventDefault) e.preventDefault();
                if (stopPropagation) {
                    // set a flag just for unit testing. not meant to be referenced in feature work.
                    e.isPropagationStopped = true;
                    e.stopPropagation();
                }
                (_b = (_a = key.config)[callbackName]) === null || _b === void 0 || _b.call(_a, e);
            }
        }
    };
    var handleGlobalKeyDown = _react.useCallback(function(e) {
        // special case for global keydown: if '?' is pressed, open the hotkeys dialog
        var combo = _hotkeyParser.getKeyCombo(e);
        var isTextInput = isTargetATextInput(e);
        if (!isTextInput && _hotkeyParser.comboMatches(_hotkeyParser.parseKeyCombo(showDialogKeyCombo), combo)) dispatch({
            type: "OPEN_DIALOG"
        });
        else invokeNamedCallbackIfComboRecognized(true, _hotkeyParser.getKeyCombo(e), "onKeyDown", e);
    }, [
        globalKeys
    ]);
    var handleGlobalKeyUp = _react.useCallback(function(e) {
        return invokeNamedCallbackIfComboRecognized(true, _hotkeyParser.getKeyCombo(e), "onKeyUp", e);
    }, [
        globalKeys
    ]);
    var handleLocalKeyDown = _react.useCallback(function(e) {
        return invokeNamedCallbackIfComboRecognized(false, _hotkeyParser.getKeyCombo(e.nativeEvent), "onKeyDown", e.nativeEvent);
    }, [
        localKeys
    ]);
    var handleLocalKeyUp = _react.useCallback(function(e) {
        return invokeNamedCallbackIfComboRecognized(false, _hotkeyParser.getKeyCombo(e.nativeEvent), "onKeyUp", e.nativeEvent);
    }, [
        localKeys
    ]);
    _react.useEffect(function() {
        // document is guaranteed to be defined inside effects
        document.addEventListener("keydown", handleGlobalKeyDown);
        document.addEventListener("keyup", handleGlobalKeyUp);
        return function() {
            document.removeEventListener("keydown", handleGlobalKeyDown);
            document.removeEventListener("keyup", handleGlobalKeyUp);
        };
    }, [
        handleGlobalKeyDown,
        handleGlobalKeyUp
    ]);
    return {
        handleKeyDown: handleLocalKeyDown,
        handleKeyUp: handleLocalKeyUp
    };
}
/**
 * @returns true if the event target is a text input which should take priority over hotkey bindings
 */ function isTargetATextInput(e) {
    var elem = e.target;
    // we check these cases for unit testing, but this should not happen
    // during normal operation
    if (elem == null || elem.closest == null) return false;
    var editable = elem.closest("input, textarea, [contenteditable=true]");
    if (editable == null) return false;
    // don't let checkboxes, switches, and radio buttons prevent hotkey behavior
    if (editable.tagName.toLowerCase() === "input") {
        var inputType = editable.type;
        if (inputType === "checkbox" || inputType === "radio") return false;
    }
    // don't let read-only fields prevent hotkey behavior
    if (editable.readOnly) return false;
    return true;
}
function getDefaultDocument() {
    if (typeof window === "undefined") return undefined;
    return window.document;
}

},{"tslib":"45hme","react":"21dqq","../../common/errors":"7mLY3","../../components/hotkeys/hotkeyParser":"hMmvM","../../context":"f9V4b","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f9V4b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ parcelHelpers.export(exports, "HotkeysContext", ()=>_hotkeysProvider.HotkeysContext
);
parcelHelpers.export(exports, "HotkeysProvider", ()=>_hotkeysProvider.HotkeysProvider
);
var _hotkeysProvider = require("./hotkeys/hotkeysProvider");

},{"./hotkeys/hotkeysProvider":"9ppXP","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9ppXP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HotkeysContext", ()=>HotkeysContext
);
parcelHelpers.export(exports, "HotkeysProvider", ()=>HotkeysProvider
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _utils = require("../../common/utils");
var _hotkeysDialog2 = require("../../components/hotkeys/hotkeysDialog2");
var initialHotkeysState = {
    hasProvider: false,
    hotkeys: [],
    isDialogOpen: false
};
var noOpDispatch = function() {
    return null;
};
var HotkeysContext = _react.createContext([
    initialHotkeysState,
    noOpDispatch
]);
var hotkeysReducer = function(state, action) {
    switch(action.type){
        case "ADD_HOTKEYS":
            // only pick up unique hotkeys which haven't been registered already
            var newUniqueHotkeys = [];
            for(var _i = 0, _a = action.payload; _i < _a.length; _i++){
                var a = _a[_i];
                var isUnique = true;
                for(var _b = 0, _c = state.hotkeys; _b < _c.length; _b++){
                    var b = _c[_b];
                    isUnique && (isUnique = !_utils.shallowCompareKeys(a, b, {
                        exclude: [
                            "onKeyDown",
                            "onKeyUp"
                        ]
                    }));
                }
                if (isUnique) newUniqueHotkeys.push(a);
            }
            return _tslib.__assign(_tslib.__assign({}, state), {
                hotkeys: _tslib.__spreadArray(_tslib.__spreadArray([], state.hotkeys, true), newUniqueHotkeys, true)
            });
        case "REMOVE_HOTKEYS":
            return _tslib.__assign(_tslib.__assign({}, state), {
                hotkeys: state.hotkeys.filter(function(key) {
                    return action.payload.indexOf(key) === -1;
                })
            });
        case "OPEN_DIALOG":
            return _tslib.__assign(_tslib.__assign({}, state), {
                isDialogOpen: true
            });
        case "CLOSE_DIALOG":
            return _tslib.__assign(_tslib.__assign({}, state), {
                isDialogOpen: false
            });
        default:
            return state;
    }
};
var HotkeysProvider = function(_a) {
    var _b;
    var children = _a.children, dialogProps = _a.dialogProps, renderDialog = _a.renderDialog, value = _a.value;
    var hasExistingContext = value != null;
    var _c = value !== null && value !== void 0 ? value : _react.useReducer(hotkeysReducer, _tslib.__assign(_tslib.__assign({}, initialHotkeysState), {
        hasProvider: true
    })), state = _c[0], dispatch = _c[1];
    var handleDialogClose = _react.useCallback(function() {
        return dispatch({
            type: "CLOSE_DIALOG"
        });
    }, []);
    var dialog = (_b = renderDialog === null || renderDialog === void 0 ? void 0 : renderDialog(state, {
        handleDialogClose: handleDialogClose
    })) !== null && _b !== void 0 ? _b : _react.createElement(_hotkeysDialog2.HotkeysDialog2, _tslib.__assign({}, dialogProps, {
        isOpen: state.isDialogOpen,
        hotkeys: state.hotkeys,
        onClose: handleDialogClose
    }));
    // if we are working with an existing context, we don't need to generate our own dialog
    return _react.createElement(HotkeysContext.Provider, {
        value: [
            state,
            dispatch
        ]
    }, children, hasExistingContext ? undefined : dialog);
};

},{"tslib":"45hme","react":"21dqq","../../common/utils":"8MRas","../../components/hotkeys/hotkeysDialog2":"8aac5","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1XXc1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MenuDivider", ()=>MenuDivider
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _classes = require("../../common/classes");
var _props = require("../../common/props");
var _html = require("../html/html");
var MenuDivider = /** @class */ function(_super) {
    _tslib.__extends(MenuDivider1, _super);
    function MenuDivider1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuDivider1.prototype.render = function() {
        var _a = this.props, className = _a.className, title = _a.title;
        if (title == null) // simple divider
        return _react.createElement("li", {
            className: _classnamesDefault.default(_classes.MENU_DIVIDER, className)
        });
        else // section header with title
        return _react.createElement("li", {
            className: _classnamesDefault.default(_classes.MENU_HEADER, className)
        }, _react.createElement(_html.H6, null, title));
    };
    MenuDivider1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".MenuDivider");
    return MenuDivider1;
}(_react.Component);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common/classes":"6Ep96","../../common/props":"7F9ht","../html/html":"iCwHB","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8zPlx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Navbar", ()=>Navbar
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _navbarDivider = require("./navbarDivider");
var _navbarGroup = require("./navbarGroup");
var _navbarHeading = require("./navbarHeading");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var Navbar = /** @class */ function(_super) {
    _tslib.__extends(Navbar1, _super);
    function Navbar1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Navbar1.prototype.render = function() {
        var _a;
        var _b = this.props, children = _b.children, className = _b.className, fixedToTop = _b.fixedToTop, htmlProps = _tslib.__rest(_b, [
            "children",
            "className",
            "fixedToTop"
        ]);
        var classes = _classnamesDefault.default(_common.Classes.NAVBAR, (_a = {}, _a[_common.Classes.FIXED_TOP] = fixedToTop, _a), className);
        return _react.createElement("div", _tslib.__assign({
            className: classes
        }, htmlProps), children);
    };
    Navbar1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Navbar");
    Navbar1.Divider = _navbarDivider.NavbarDivider;
    Navbar1.Group = _navbarGroup.NavbarGroup;
    Navbar1.Heading = _navbarHeading.NavbarHeading;
    return Navbar1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","./navbarDivider":"duZSg","./navbarGroup":"3XASG","./navbarHeading":"lU6pr","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"duZSg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavbarDivider", ()=>NavbarDivider
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var NavbarDivider = /** @class */ function(_super) {
    _tslib.__extends(NavbarDivider1, _super);
    function NavbarDivider1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarDivider1.prototype.render = function() {
        var _a = this.props, className = _a.className, htmlProps = _tslib.__rest(_a, [
            "className"
        ]);
        return _react.createElement("div", _tslib.__assign({
            className: _classnamesDefault.default(_common.Classes.NAVBAR_DIVIDER, className)
        }, htmlProps));
    };
    NavbarDivider1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".NavbarDivider");
    return NavbarDivider1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3XASG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavbarGroup", ()=>NavbarGroup
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var NavbarGroup = /** @class */ function(_super) {
    _tslib.__extends(NavbarGroup1, _super);
    function NavbarGroup1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarGroup1.prototype.render = function() {
        var _a = this.props, align = _a.align, children = _a.children, className = _a.className, htmlProps = _tslib.__rest(_a, [
            "align",
            "children",
            "className"
        ]);
        var classes = _classnamesDefault.default(_common.Classes.NAVBAR_GROUP, _common.Classes.alignmentClass(align), className);
        return _react.createElement("div", _tslib.__assign({
            className: classes
        }, htmlProps), children);
    };
    NavbarGroup1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".NavbarGroup");
    NavbarGroup1.defaultProps = {
        align: _common.Alignment.LEFT
    };
    return NavbarGroup1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lU6pr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NavbarHeading", ()=>NavbarHeading
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
// this component is simple enough that tests would be purely tautological.
/* istanbul ignore next */ var NavbarHeading = /** @class */ function(_super) {
    _tslib.__extends(NavbarHeading1, _super);
    function NavbarHeading1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarHeading1.prototype.render = function() {
        var _a = this.props, children = _a.children, className = _a.className, htmlProps = _tslib.__rest(_a, [
            "children",
            "className"
        ]);
        return _react.createElement("div", _tslib.__assign({
            className: _classnamesDefault.default(_common.Classes.NAVBAR_HEADING, className)
        }, htmlProps), children);
    };
    NavbarHeading1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".NavbarHeading");
    return NavbarHeading1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aOp9W":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "NonIdealState", ()=>NonIdealState
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _classes = require("../../common/classes");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _html = require("../html/html");
var _icon = require("../icon/icon");
var NonIdealState = /** @class */ function(_super) {
    _tslib.__extends(NonIdealState1, _super);
    function NonIdealState1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NonIdealState1.prototype.render = function() {
        var _a = this.props, action = _a.action, children = _a.children, className = _a.className, description = _a.description, title = _a.title;
        return _react.createElement("div", {
            className: _classnamesDefault.default(_classes.NON_IDEAL_STATE, className)
        }, this.maybeRenderVisual(), title && _react.createElement(_html.H4, null, title), description && _utils.ensureElement(description, "div"), action, children);
    };
    NonIdealState1.prototype.maybeRenderVisual = function() {
        var icon = this.props.icon;
        if (icon == null) return null;
        else return _react.createElement("div", {
            className: _classes.NON_IDEAL_STATE_VISUAL
        }, _react.createElement(_icon.Icon, {
            icon: icon,
            size: _icon.IconSize.LARGE * 3,
            "aria-hidden": true,
            tabIndex: -1
        }));
    };
    NonIdealState1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".NonIdealState");
    return NonIdealState1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/classes":"6Ep96","../../common/props":"7F9ht","../../common/utils":"8MRas","../html/html":"iCwHB","../icon/icon":"7dRdu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eTJPU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9eaQL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PanelStack", ()=>PanelStack
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactTransitionGroup = require("react-transition-group");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _panelView = require("./panelView");
/** @deprecated use `PanelStack2<T>` */ var PanelStack = /** @class */ function(_super) {
    _tslib.__extends(PanelStack1, _super);
    function PanelStack1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            direction: "push",
            stack: _this.props.stack != null ? _this.props.stack.slice().reverse() : _this.props.initialPanel !== undefined ? [
                _this.props.initialPanel
            ] : []
        };
        _this.renderPanel = function(panel, index) {
            var _a = _this.props, renderActivePanelOnly = _a.renderActivePanelOnly, _b = _a.showPanelHeader, showPanelHeader = _b === void 0 ? true : _b;
            var stack = _this.state.stack;
            // With renderActivePanelOnly={false} we would keep all the CSSTransitions rendered,
            // therefore they would not trigger the "enter" transition event as they were entered.
            // To force the enter event, we want to change the key, but stack.length is not enough
            // and a single panel should not rerender as long as it's hidden.
            // This key contains two parts: first one, stack.length - index is constant (and unique) for each panel,
            // second one, active changes only when the panel becomes or stops being active.
            var layer = stack.length - index;
            var key = renderActivePanelOnly ? stack.length : layer;
            return _react.createElement(_reactTransitionGroup.CSSTransition, {
                classNames: _common.Classes.PANEL_STACK,
                key: key,
                timeout: 400
            }, _react.createElement(_panelView.PanelView, {
                onClose: _this.handlePanelClose,
                onOpen: _this.handlePanelOpen,
                panel: panel,
                previousPanel: stack[index + 1],
                showHeader: showPanelHeader
            }));
        };
        _this.handlePanelClose = function(panel) {
            var _a, _b;
            var stack = _this.state.stack;
            // only remove this panel if it is at the top and not the only one.
            if (stack[0] !== panel || stack.length <= 1) return;
            (_b = (_a = _this.props).onClose) === null || _b === void 0 || _b.call(_a, panel);
            if (_this.props.stack == null) _this.setState(function(state) {
                return {
                    direction: "pop",
                    stack: state.stack.slice(1)
                };
            });
        };
        _this.handlePanelOpen = function(panel) {
            var _a, _b;
            (_b = (_a = _this.props).onOpen) === null || _b === void 0 || _b.call(_a, panel);
            if (_this.props.stack == null) _this.setState(function(state) {
                return {
                    direction: "push",
                    stack: _tslib.__spreadArray([
                        panel
                    ], state.stack, true)
                };
            });
        };
        return _this;
    }
    PanelStack1.prototype.componentDidUpdate = function(prevProps, prevState) {
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        // Always update local stack if stack prop changes
        if (this.props.stack !== prevProps.stack && prevProps.stack != null) this.setState({
            stack: this.props.stack.slice().reverse()
        });
        // Only update animation direction if stack length changes
        var stackLength = this.props.stack != null ? this.props.stack.length : 0;
        var prevStackLength = prevProps.stack != null ? prevProps.stack.length : 0;
        if (stackLength !== prevStackLength && prevProps.stack != null) this.setState({
            direction: prevProps.stack.length - this.props.stack.length < 0 ? "push" : "pop"
        });
    };
    PanelStack1.prototype.render = function() {
        var classes = _classnamesDefault.default(_common.Classes.PANEL_STACK, "".concat(_common.Classes.PANEL_STACK, "-").concat(this.state.direction), this.props.className);
        return _react.createElement(_reactTransitionGroup.TransitionGroup, {
            className: classes,
            component: "div"
        }, this.renderPanels());
    };
    PanelStack1.prototype.validateProps = function(props) {
        if (props.initialPanel == null && props.stack == null || props.initialPanel != null && props.stack != null) console.error(_errors.PANEL_STACK_INITIAL_PANEL_STACK_MUTEX);
        if (props.stack != null && props.stack.length === 0) console.error(_errors.PANEL_STACK_REQUIRES_PANEL);
    };
    PanelStack1.prototype.renderPanels = function() {
        var _a = this.props.renderActivePanelOnly, renderActivePanelOnly = _a === void 0 ? true : _a;
        var stack = this.state.stack;
        if (stack.length === 0) return null;
        var panelsToRender = renderActivePanelOnly ? [
            stack[0]
        ] : stack;
        var panelViews = panelsToRender.map(this.renderPanel).reverse();
        return panelViews;
    };
    return PanelStack1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","react-transition-group":"fZSkB","../../common":"6BNPY","../../common/errors":"7mLY3","./panelView":"a0PaY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"a0PaY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PanelView", ()=>PanelView
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _common = require("../../common");
var _buttons = require("../button/buttons");
var _text = require("../text/text");
var PanelView = /** @class */ function(_super) {
    _tslib.__extends(PanelView1, _super);
    function PanelView1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleClose = function() {
            return _this.props.onClose(_this.props.panel);
        };
        return _this;
    }
    PanelView1.prototype.render = function() {
        var _a = this.props, panel = _a.panel, onOpen = _a.onOpen;
        // two <span> tags in header ensure title is centered as long as
        // possible, due to `flex: 1` magic.
        return _react.createElement("div", {
            className: _common.Classes.PANEL_STACK_VIEW
        }, this.maybeRenderHeader(), _react.createElement(panel.component, _tslib.__assign({
            openPanel: onOpen,
            closePanel: this.handleClose
        }, panel.props)));
    };
    PanelView1.prototype.maybeRenderHeader = function() {
        if (!this.props.showHeader) return null;
        return _react.createElement("div", {
            className: _common.Classes.PANEL_STACK_HEADER
        }, _react.createElement("span", null, this.maybeRenderBack()), _react.createElement(_text.Text, {
            className: _common.Classes.HEADING,
            ellipsize: true,
            title: this.props.panel.htmlTitle
        }, this.props.panel.title), _react.createElement("span", null));
    };
    PanelView1.prototype.maybeRenderBack = function() {
        if (this.props.previousPanel === undefined) return null;
        return _react.createElement(_buttons.Button, {
            "aria-label": "Back",
            className: _common.Classes.PANEL_STACK_HEADER_BACK,
            icon: "chevron-left",
            minimal: true,
            onClick: this.handleClose,
            small: true,
            text: this.props.previousPanel.title,
            title: this.props.previousPanel.htmlTitle
        });
    };
    return PanelView1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","react":"21dqq","../../common":"6BNPY","../button/buttons":"lDi9s","../text/text":"ll8ip","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aH1jU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PanelStack2", ()=>PanelStack2
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactTransitionGroup = require("react-transition-group");
var _common = require("../../common");
var _panelView2 = require("./panelView2");
var PanelStack2 = function(props) {
    var _a1 = props.renderActivePanelOnly, renderActivePanelOnly = _a1 === void 0 ? true : _a1, _b = props.showPanelHeader, showPanelHeader = _b === void 0 ? true : _b, propsStack = props.stack;
    var _c = _react.useState("push"), direction = _c[0], setDirection = _c[1];
    var _d = _react.useState(props.initialPanel !== undefined ? [
        props.initialPanel
    ] : []), localStack = _d[0], setLocalStack = _d[1];
    var stack = _react.useMemo(function() {
        return propsStack != null ? propsStack.slice().reverse() : localStack;
    }, [
        localStack,
        propsStack, 
    ]);
    var stackLength = _react.useRef(stack.length);
    _react.useEffect(function() {
        if (stack.length !== stackLength.current) // Adjust the direction in case the stack size has changed, controlled or uncontrolled
        setDirection(stack.length - stackLength.current < 0 ? "pop" : "push");
        stackLength.current = stack.length;
    }, [
        stack
    ]);
    var handlePanelOpen = _react.useCallback(function(panel) {
        var _a;
        (_a = props.onOpen) === null || _a === void 0 || _a.call(props, panel);
        if (props.stack == null) setLocalStack(function(prevStack) {
            return _tslib.__spreadArray([
                panel
            ], prevStack, true);
        });
    }, [
        props.onOpen
    ]);
    var handlePanelClose = _react.useCallback(function(panel) {
        var _a;
        // only remove this panel if it is at the top and not the only one.
        if (stack[0] !== panel || stack.length <= 1) return;
        (_a = props.onClose) === null || _a === void 0 || _a.call(props, panel);
        if (props.stack == null) setLocalStack(function(prevStack) {
            return prevStack.slice(1);
        });
    }, [
        stack,
        props.onClose
    ]);
    // early return, after all hooks are called
    if (stack.length === 0) return null;
    var panelsToRender = renderActivePanelOnly ? [
        stack[0]
    ] : stack;
    var panels = panelsToRender.map(function(panel, index) {
        // With renderActivePanelOnly={false} we would keep all the CSSTransitions rendered,
        // therefore they would not trigger the "enter" transition event as they were entered.
        // To force the enter event, we want to change the key, but stack.length is not enough
        // and a single panel should not rerender as long as it's hidden.
        // This key contains two parts: first one, stack.length - index is constant (and unique) for each panel,
        // second one, active changes only when the panel becomes or stops being active.
        var layer = stack.length - index;
        var key = renderActivePanelOnly ? stack.length : layer;
        return _react.createElement(_reactTransitionGroup.CSSTransition, {
            classNames: _common.Classes.PANEL_STACK2,
            key: key,
            timeout: 400
        }, _react.createElement(_panelView2.PanelView2, {
            onClose: handlePanelClose,
            onOpen: handlePanelOpen,
            panel: panel,
            previousPanel: stack[index + 1],
            showHeader: showPanelHeader
        }));
    }).reverse();
    var classes = _classnamesDefault.default(_common.Classes.PANEL_STACK2, "".concat(_common.Classes.PANEL_STACK2, "-").concat(direction), props.className);
    return _react.createElement(_reactTransitionGroup.TransitionGroup, {
        className: classes,
        component: "div"
    }, panels);
};
PanelStack2.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".PanelStack2");

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","react-transition-group":"fZSkB","../../common":"6BNPY","./panelView2":"2PiFH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2PiFH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PanelView2", ()=>PanelView2
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _common = require("../../common");
var _buttons = require("../button/buttons");
var _text = require("../text/text");
var PanelView2 = function(props) {
    var handleClose = _react.useCallback(function() {
        return props.onClose(props.panel);
    }, [
        props.onClose,
        props.panel
    ]);
    var maybeBackButton = props.previousPanel === undefined ? null : _react.createElement(_buttons.Button, {
        "aria-label": "Back",
        className: _common.Classes.PANEL_STACK_HEADER_BACK,
        icon: "chevron-left",
        minimal: true,
        onClick: handleClose,
        small: true,
        text: props.previousPanel.title,
        title: props.previousPanel.htmlTitle
    });
    // `props.panel.renderPanel` is simply a function that returns a JSX.Element. It may be an FC which
    // uses hooks. In order to avoid React errors due to inconsistent hook calls, we must encapsulate
    // those hooks with their own lifecycle through a very simple wrapper component.
    var PanelWrapper = _react.useMemo(function() {
        return function() {
            // N.B. A type cast is required because of error TS2345, where technically `panel.props` could be
            // instantiated with a type unrelated to our generic constraint `T` here. We know
            // we're sending the right values here though, and it makes the consumer API for this
            // component type safe, so it's ok to do this...
            return props.panel.renderPanel(_tslib.__assign({
                closePanel: handleClose,
                openPanel: props.onOpen
            }, props.panel.props));
        };
    }, [
        props.panel,
        props.onOpen
    ]);
    return _react.createElement("div", {
        className: _common.Classes.PANEL_STACK2_VIEW
    }, props.showHeader && _react.createElement("div", {
        className: _common.Classes.PANEL_STACK2_HEADER
    }, _react.createElement("span", null, maybeBackButton), _react.createElement(_text.Text, {
        className: _common.Classes.HEADING,
        ellipsize: true,
        title: props.panel.htmlTitle
    }, props.panel.title), _react.createElement("span", null)), _react.createElement(PanelWrapper, null));
};
PanelView2.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".PanelView2");

},{"tslib":"45hme","react":"21dqq","../../common":"6BNPY","../button/buttons":"lDi9s","../text/text":"ll8ip","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cxkUE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "PopoverPosition", ()=>PopoverPosition
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _position = require("../../common/position");
var PopoverPosition = _tslib.__assign(_tslib.__assign({}, _position.Position), {
    AUTO: "auto",
    AUTO_END: "auto-end",
    AUTO_START: "auto-start"
});

},{"tslib":"45hme","../../common/position":"gwedn","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"22QiL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProgressBar", ()=>ProgressBar
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var ProgressBar = /** @class */ function(_super) {
    _tslib.__extends(ProgressBar1, _super);
    function ProgressBar1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProgressBar1.prototype.render = function() {
        var _a;
        var _b = this.props, _c = _b.animate, animate = _c === void 0 ? true : _c, className = _b.className, intent = _b.intent, _d = _b.stripes, stripes = _d === void 0 ? true : _d, value = _b.value;
        var classes = _classnamesDefault.default(_common.Classes.PROGRESS_BAR, _common.Classes.intentClass(intent), (_a = {}, _a[_common.Classes.PROGRESS_NO_ANIMATION] = !animate, _a[_common.Classes.PROGRESS_NO_STRIPES] = !stripes, _a), className);
        var percent = value == null ? undefined : 100 * _utils.clamp(value, 0, 1);
        // don't set width if value is null (rely on default CSS value)
        var width = percent == null ? undefined : percent + "%";
        return _react.createElement("div", {
            "aria-valuemax": 100,
            "aria-valuemin": 0,
            "aria-valuenow": percent == null ? undefined : Math.round(percent),
            className: classes,
            role: "progressbar"
        }, _react.createElement("div", {
            className: _common.Classes.PROGRESS_METER,
            style: {
                width: width
            }
        }));
    };
    ProgressBar1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".ProgressBar");
    return ProgressBar1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../../common/utils":"8MRas","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3gw4h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hPDcD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HandleType", ()=>HandleType
);
parcelHelpers.export(exports, "HandleInteractionKind", ()=>HandleInteractionKind
);
var HandleType = {
    /** A full handle appears as a small square. */ FULL: "full",
    /** A start handle appears as the left or top half of a square. */ START: "start",
    /** An end handle appears as the right or bottom half of a square. */ END: "end"
};
var HandleInteractionKind = {
    /** Locked handles prevent other handles from being dragged past then. */ LOCK: "lock",
    /** Push handles move overlapping handles with them as they are dragged. */ PUSH: "push",
    /**
     * Handles marked "none" are not interactive and do not appear in the UI.
     * They serve only to break the track into subsections that can be colored separately.
     */ NONE: "none"
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8DU1y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MultiSlider", ()=>MultiSlider
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _handle = require("./handle");
var _handleProps = require("./handleProps");
var _sliderUtils = require("./sliderUtils");
/**
 * SFC used to pass slider handle props to a `MultiSlider`.
 * This element is not rendered directly.
 */ var MultiSliderHandle = function() {
    return null;
};
MultiSliderHandle.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".MultiSliderHandle");
var MultiSlider = /** @class */ function(_super) {
    _tslib.__extends(MultiSlider1, _super);
    function MultiSlider1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            labelPrecision: getLabelPrecision(_this.props),
            tickSize: 0,
            tickSizeRatio: 0
        };
        _this.handleElements = [];
        _this.trackElement = null;
        _this.addHandleRef = function(ref) {
            if (ref != null) _this.handleElements.push(ref);
        };
        _this.maybeHandleTrackClick = function(event) {
            if (_this.canHandleTrackEvent(event)) {
                var foundHandle = _this.nearestHandleForValue(_this.handleElements, function(handle) {
                    return handle.mouseEventClientOffset(event);
                });
                if (foundHandle) foundHandle.beginHandleMovement(event);
            }
        };
        _this.maybeHandleTrackTouch = function(event) {
            if (_this.canHandleTrackEvent(event)) {
                var foundHandle = _this.nearestHandleForValue(_this.handleElements, function(handle) {
                    return handle.touchEventClientOffset(event);
                });
                if (foundHandle) foundHandle.beginHandleTouchMovement(event);
            }
        };
        _this.canHandleTrackEvent = function(event) {
            var target = event.target;
            // ensure event does not come from inside the handle
            return !_this.props.disabled && target.closest(".".concat(_common.Classes.SLIDER_HANDLE)) == null;
        };
        _this.getHandlerForIndex = function(index, callback) {
            return function(newValue) {
                callback === null || callback === void 0 || callback(_this.getNewHandleValues(newValue, index));
            };
        };
        _this.handleChange = function(newValues) {
            var _a1, _b;
            var handleProps = getSortedInteractiveHandleProps(_this.props);
            var oldValues = handleProps.map(function(handle) {
                return handle.value;
            });
            if (!_utils.arraysEqual(newValues, oldValues)) {
                (_b = (_a1 = _this.props).onChange) === null || _b === void 0 || _b.call(_a1, newValues);
                handleProps.forEach(function(handle, index) {
                    var _a;
                    if (oldValues[index] !== newValues[index]) (_a = handle.onChange) === null || _a === void 0 || _a.call(handle, newValues[index]);
                });
            }
        };
        _this.handleRelease = function(newValues) {
            var _a2, _b;
            var handleProps = getSortedInteractiveHandleProps(_this.props);
            (_b = (_a2 = _this.props).onRelease) === null || _b === void 0 || _b.call(_a2, newValues);
            handleProps.forEach(function(handle, index) {
                var _a;
                (_a = handle.onRelease) === null || _a === void 0 || _a.call(handle, newValues[index]);
            });
        };
        return _this;
    }
    MultiSlider1.getDerivedStateFromProps = function(props) {
        return {
            labelPrecision: MultiSlider1.getLabelPrecision(props)
        };
    };
    MultiSlider1.getLabelPrecision = function(_a) {
        var labelPrecision = _a.labelPrecision, stepSize = _a.stepSize;
        // infer default label precision from stepSize because that's how much the handle moves.
        return labelPrecision == null ? _utils.countDecimalPlaces(stepSize) : labelPrecision;
    };
    MultiSlider1.prototype.getSnapshotBeforeUpdate = function(prevProps) {
        var prevHandleProps = getSortedInteractiveHandleProps(prevProps);
        var newHandleProps = getSortedInteractiveHandleProps(this.props);
        if (newHandleProps.length !== prevHandleProps.length) // clear refs
        this.handleElements = [];
        return null;
    };
    MultiSlider1.prototype.render = function() {
        var _a;
        var _this = this;
        var classes = _classnamesDefault.default(_common.Classes.SLIDER, (_a = {}, _a[_common.Classes.DISABLED] = this.props.disabled, _a["".concat(_common.Classes.SLIDER, "-unlabeled")] = this.props.labelRenderer === false, _a[_common.Classes.VERTICAL] = this.props.vertical, _a), this.props.className);
        return _react.createElement("div", {
            className: classes,
            onMouseDown: this.maybeHandleTrackClick,
            onTouchStart: this.maybeHandleTrackTouch
        }, _react.createElement("div", {
            className: _common.Classes.SLIDER_TRACK,
            ref: function(ref) {
                return _this.trackElement = ref;
            }
        }, this.renderTracks()), _react.createElement("div", {
            className: _common.Classes.SLIDER_AXIS
        }, this.renderLabels()), this.renderHandles());
    };
    MultiSlider1.prototype.componentDidMount = function() {
        this.updateTickSize();
    };
    MultiSlider1.prototype.componentDidUpdate = function(prevProps, prevState) {
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        this.updateTickSize();
    };
    MultiSlider1.prototype.validateProps = function(props) {
        if (props.stepSize <= 0) throw new Error(_errors.SLIDER_ZERO_STEP);
        if (props.labelStepSize !== undefined && props.labelValues !== undefined) throw new Error(_errors.MULTISLIDER_WARN_LABEL_STEP_SIZE_LABEL_VALUES_MUTEX);
        if (props.labelStepSize !== undefined && props.labelStepSize <= 0) throw new Error(_errors.SLIDER_ZERO_LABEL_STEP);
        var anyInvalidChildren = false;
        _react.Children.forEach(props.children, function(child) {
            // allow boolean coercion to omit nulls and false values
            if (child && !_utils.isElementOfType(child, MultiSlider1.Handle)) anyInvalidChildren = true;
        });
        if (anyInvalidChildren) throw new Error(_errors.MULTISLIDER_INVALID_CHILD);
    };
    MultiSlider1.prototype.formatLabel = function(value, isHandleTooltip) {
        if (isHandleTooltip === void 0) isHandleTooltip = false;
        var labelRenderer = this.props.labelRenderer;
        if (labelRenderer === false) return undefined;
        else if (_utils.isFunction(labelRenderer)) return labelRenderer(value, {
            isHandleTooltip: isHandleTooltip
        });
        else return value.toFixed(this.state.labelPrecision);
    };
    MultiSlider1.prototype.renderLabels = function() {
        var _this = this;
        if (this.props.labelRenderer === false) return null;
        var values = this.getLabelValues();
        var _a = this.props, max = _a.max, min = _a.min;
        var labels = values.map(function(step, i) {
            var offsetPercentage = _sliderUtils.formatPercentage((step - min) / (max - min));
            var style = _this.props.vertical ? {
                bottom: offsetPercentage
            } : {
                left: offsetPercentage
            };
            return _react.createElement("div", {
                className: _common.Classes.SLIDER_LABEL,
                key: i,
                style: style
            }, _this.formatLabel(step));
        });
        return labels;
    };
    MultiSlider1.prototype.renderTracks = function() {
        var trackStops = getSortedHandleProps(this.props);
        trackStops.push({
            value: this.props.max
        });
        // render from current to previous, then increment previous
        var previous = {
            value: this.props.min
        };
        var handles = [];
        for(var index = 0; index < trackStops.length; index++){
            var current = trackStops[index];
            handles.push(this.renderTrackFill(index, previous, current));
            previous = current;
        }
        return handles;
    };
    MultiSlider1.prototype.renderTrackFill = function(index, start, end) {
        // ensure startRatio <= endRatio
        var _a = [
            this.getOffsetRatio(start.value),
            this.getOffsetRatio(end.value)
        ].sort(function(left, right) {
            return left - right;
        }), startRatio = _a[0], endRatio = _a[1];
        var startOffset = _sliderUtils.formatPercentage(startRatio);
        var endOffset = _sliderUtils.formatPercentage(1 - endRatio);
        var orientationStyle = this.props.vertical ? {
            bottom: startOffset,
            top: endOffset,
            left: 0
        } : {
            left: startOffset,
            right: endOffset,
            top: 0
        };
        var style = _tslib.__assign(_tslib.__assign({}, orientationStyle), start.trackStyleAfter || end.trackStyleBefore || {});
        var classes = _classnamesDefault.default(_common.Classes.SLIDER_PROGRESS, _common.Classes.intentClass(this.getTrackIntent(start, end)));
        return _react.createElement("div", {
            key: "track-".concat(index),
            className: classes,
            style: style
        });
    };
    MultiSlider1.prototype.renderHandles = function() {
        var _this = this;
        var _a3 = this.props, disabled = _a3.disabled, max = _a3.max, min = _a3.min, stepSize = _a3.stepSize, vertical = _a3.vertical;
        var handleProps = getSortedInteractiveHandleProps(this.props);
        if (handleProps.length === 0) return null;
        return handleProps.map(function(_a, index) {
            var _b;
            var value = _a.value, type = _a.type, className = _a.className;
            return _react.createElement(_handle.Handle, {
                className: _classnamesDefault.default((_b = {}, _b[_common.Classes.START] = type === _handleProps.HandleType.START, _b[_common.Classes.END] = type === _handleProps.HandleType.END, _b), className),
                disabled: disabled,
                key: "".concat(index, "-").concat(handleProps.length),
                label: _this.formatLabel(value, true),
                max: max,
                min: min,
                onChange: _this.getHandlerForIndex(index, _this.handleChange),
                onRelease: _this.getHandlerForIndex(index, _this.handleRelease),
                ref: _this.addHandleRef,
                stepSize: stepSize,
                tickSize: _this.state.tickSize,
                tickSizeRatio: _this.state.tickSizeRatio,
                value: value,
                vertical: vertical
            });
        });
    };
    MultiSlider1.prototype.nearestHandleForValue = function(handles, getOffset) {
        return _sliderUtils.argMin(handles, function(handle) {
            var offset = getOffset(handle);
            var offsetValue = handle.clientToValue(offset);
            var handleValue = handle.props.value;
            return Math.abs(offsetValue - handleValue);
        });
    };
    MultiSlider1.prototype.getNewHandleValues = function(newValue, oldIndex) {
        var handleProps = getSortedInteractiveHandleProps(this.props);
        var oldValues = handleProps.map(function(handle) {
            return handle.value;
        });
        var newValues = oldValues.slice();
        newValues[oldIndex] = newValue;
        newValues.sort(function(left, right) {
            return left - right;
        });
        var newIndex = newValues.indexOf(newValue);
        var lockIndex = this.findFirstLockedHandleIndex(oldIndex, newIndex);
        if (lockIndex === -1) _sliderUtils.fillValues(newValues, oldIndex, newIndex, newValue);
        else {
            // If pushing past a locked handle, discard the new value and only make the updates to clamp values against the lock.
            var lockValue = oldValues[lockIndex];
            _sliderUtils.fillValues(oldValues, oldIndex, lockIndex, lockValue);
            return oldValues;
        }
        return newValues;
    };
    MultiSlider1.prototype.findFirstLockedHandleIndex = function(startIndex, endIndex) {
        var inc = startIndex < endIndex ? 1 : -1;
        var handleProps = getSortedInteractiveHandleProps(this.props);
        for(var index = startIndex + inc; index !== endIndex + inc; index += inc){
            if (handleProps[index].interactionKind !== _handleProps.HandleInteractionKind.PUSH) return index;
        }
        return -1;
    };
    MultiSlider1.prototype.getLabelValues = function() {
        var _a = this.props, labelStepSize = _a.labelStepSize, labelValues = _a.labelValues, min = _a.min, max = _a.max;
        var values = [];
        if (labelValues !== undefined) values = labelValues.slice();
        else for(var i = min; i < max || _utils.approxEqual(i, max); i += labelStepSize !== null && labelStepSize !== void 0 ? labelStepSize : 1)values.push(i);
        return values;
    };
    MultiSlider1.prototype.getOffsetRatio = function(value) {
        return _utils.clamp((value - this.props.min) * this.state.tickSizeRatio, 0, 1);
    };
    MultiSlider1.prototype.getTrackIntent = function(start, end) {
        if (!this.props.showTrackFill) return _common.Intent.NONE;
        if (start.intentAfter !== undefined) return start.intentAfter;
        else if (end !== undefined && end.intentBefore !== undefined) return end.intentBefore;
        return this.props.defaultTrackIntent;
    };
    MultiSlider1.prototype.updateTickSize = function() {
        if (this.trackElement != null) {
            var trackSize = this.props.vertical ? this.trackElement.clientHeight : this.trackElement.clientWidth;
            var tickSizeRatio = 1 / (this.props.max - this.props.min);
            var tickSize = trackSize * tickSizeRatio;
            this.setState({
                tickSize: tickSize,
                tickSizeRatio: tickSizeRatio
            });
        }
    };
    MultiSlider1.defaultSliderProps = {
        disabled: false,
        max: 10,
        min: 0,
        showTrackFill: true,
        stepSize: 1,
        vertical: false
    };
    MultiSlider1.defaultProps = _tslib.__assign(_tslib.__assign({}, MultiSlider1.defaultSliderProps), {
        defaultTrackIntent: _common.Intent.NONE
    });
    MultiSlider1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".MultiSlider");
    MultiSlider1.Handle = MultiSliderHandle;
    return MultiSlider1;
}(_common.AbstractPureComponent2);
function getLabelPrecision(_a) {
    var labelPrecision = _a.labelPrecision, _b = _a.stepSize, stepSize = _b === void 0 ? MultiSlider.defaultSliderProps.stepSize : _b;
    // infer default label precision from stepSize because that's how much the handle moves.
    return labelPrecision == null ? _utils.countDecimalPlaces(stepSize) : labelPrecision;
}
function getSortedInteractiveHandleProps(props) {
    return getSortedHandleProps(props, function(childProps) {
        return childProps.interactionKind !== _handleProps.HandleInteractionKind.NONE;
    });
}
function getSortedHandleProps(_a, predicate) {
    var children = _a.children;
    if (predicate === void 0) predicate = function() {
        return true;
    };
    var maybeHandles = _react.Children.map(children, function(child) {
        return _utils.isElementOfType(child, MultiSlider.Handle) && predicate(child.props) ? child.props : null;
    });
    var handles = maybeHandles != null ? maybeHandles : [];
    handles = handles.filter(function(handle) {
        return handle !== null;
    });
    handles.sort(function(left, right) {
        return left.value - right.value;
    });
    return handles;
}

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/props":"7F9ht","../../common/utils":"8MRas","./handle":"fEOIS","./handleProps":"hPDcD","./sliderUtils":"8iIhm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fEOIS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Handle", ()=>Handle
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _sliderUtils = require("./sliderUtils");
// props that require number values, for validation
var NUMBER_PROPS = [
    "max",
    "min",
    "stepSize",
    "tickSize",
    "value"
];
/** Internal component for a Handle with click/drag/keyboard logic to determine a new value. */ var Handle = /** @class */ function(_super) {
    _tslib.__extends(Handle1, _super);
    function Handle1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isMoving: false
        };
        _this.handleElement = null;
        _this.refHandlers = {
            handle: function(el) {
                return _this.handleElement = el;
            }
        };
        _this.beginHandleMovement = function(event) {
            document.addEventListener("mousemove", _this.handleHandleMovement);
            document.addEventListener("mouseup", _this.endHandleMovement);
            _this.setState({
                isMoving: true
            });
            _this.changeValue(_this.clientToValue(_this.mouseEventClientOffset(event)));
        };
        _this.beginHandleTouchMovement = function(event) {
            document.addEventListener("touchmove", _this.handleHandleTouchMovement);
            document.addEventListener("touchend", _this.endHandleTouchMovement);
            document.addEventListener("touchcancel", _this.endHandleTouchMovement);
            _this.setState({
                isMoving: true
            });
            _this.changeValue(_this.clientToValue(_this.touchEventClientOffset(event)));
        };
        _this.getStyleProperties = function() {
            if (_this.handleElement == null) return {};
            // The handle midpoint of RangeSlider is actually shifted by a margin to
            // be on the edge of the visible handle element. Because the midpoint
            // calculation does not take this margin into account, we instead
            // measure the long side (which is equal to the short side plus the
            // margin).
            var _a = _this.props, _b = _a.min, min = _b === void 0 ? 0 : _b, tickSizeRatio = _a.tickSizeRatio, value = _a.value, vertical = _a.vertical;
            var handleMidpoint = _this.getHandleMidpointAndOffset(_this.handleElement, true).handleMidpoint;
            var offsetRatio = (value - min) * tickSizeRatio;
            var offsetCalc = "calc(".concat(_sliderUtils.formatPercentage(offsetRatio), " - ").concat(handleMidpoint, "px)");
            return vertical ? {
                bottom: offsetCalc
            } : {
                left: offsetCalc
            };
        };
        _this.endHandleMovement = function(event) {
            _this.handleMoveEndedAt(_this.mouseEventClientOffset(event));
        };
        _this.endHandleTouchMovement = function(event) {
            _this.handleMoveEndedAt(_this.touchEventClientOffset(event));
        };
        _this.handleMoveEndedAt = function(clientPixel) {
            var _a, _b;
            _this.removeDocumentEventListeners();
            _this.setState({
                isMoving: false
            });
            // always invoke onRelease; changeValue may call onChange if value is different
            var finalValue = _this.changeValue(_this.clientToValue(clientPixel));
            (_b = (_a = _this.props).onRelease) === null || _b === void 0 || _b.call(_a, finalValue);
        };
        _this.handleHandleMovement = function(event) {
            _this.handleMovedTo(_this.mouseEventClientOffset(event));
        };
        _this.handleHandleTouchMovement = function(event) {
            _this.handleMovedTo(_this.touchEventClientOffset(event));
        };
        _this.handleMovedTo = function(clientPixel) {
            if (_this.state.isMoving && !_this.props.disabled) _this.changeValue(_this.clientToValue(clientPixel));
        };
        _this.handleKeyDown = function(event) {
            var _a = _this.props, stepSize = _a.stepSize, value = _a.value;
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable-next-line deprecation/deprecation */ var which = event.which;
            if (which === _common.Keys.ARROW_DOWN || which === _common.Keys.ARROW_LEFT) {
                _this.changeValue(value - stepSize);
                // this key event has been handled! prevent browser scroll on up/down
                event.preventDefault();
            } else if (which === _common.Keys.ARROW_UP || which === _common.Keys.ARROW_RIGHT) {
                _this.changeValue(value + stepSize);
                event.preventDefault();
            }
        };
        _this.handleKeyUp = function(event) {
            var _a, _b;
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable-next-line deprecation/deprecation */ if ([
                _common.Keys.ARROW_UP,
                _common.Keys.ARROW_DOWN,
                _common.Keys.ARROW_LEFT,
                _common.Keys.ARROW_RIGHT
            ].indexOf(event.which) >= 0) (_b = (_a = _this.props).onRelease) === null || _b === void 0 || _b.call(_a, _this.props.value);
        };
        return _this;
    }
    Handle1.prototype.componentDidMount = function() {
        // The first time this component renders, it has no ref to the handle and thus incorrectly centers the handle.
        // Therefore, on the first mount, force a re-render to center the handle with the ref'd component.
        this.forceUpdate();
    };
    Handle1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, disabled = _b.disabled, label = _b.label;
        var isMoving = this.state.isMoving;
        return _react.createElement("span", {
            className: _classnamesDefault.default(_common.Classes.SLIDER_HANDLE, (_a = {}, _a[_common.Classes.ACTIVE] = isMoving, _a), className),
            onKeyDown: disabled ? undefined : this.handleKeyDown,
            onKeyUp: disabled ? undefined : this.handleKeyUp,
            onMouseDown: disabled ? undefined : this.beginHandleMovement,
            onTouchStart: disabled ? undefined : this.beginHandleTouchMovement,
            ref: this.refHandlers.handle,
            style: this.getStyleProperties(),
            tabIndex: 0
        }, label == null ? null : _react.createElement("span", {
            className: _common.Classes.SLIDER_LABEL
        }, label));
    };
    Handle1.prototype.componentWillUnmount = function() {
        this.removeDocumentEventListeners();
    };
    /** Convert client pixel to value between min and max. */ Handle1.prototype.clientToValue = function(clientPixel) {
        var _a = this.props, stepSize = _a.stepSize, tickSize = _a.tickSize, value = _a.value, vertical = _a.vertical;
        if (this.handleElement == null) return value;
        // #1769: this logic doesn't work perfectly when the tick size is
        // smaller than the handle size; it may be off by a tick or two.
        var clientPixelNormalized = vertical ? window.innerHeight - clientPixel : clientPixel;
        var handleCenterPixel = this.getHandleElementCenterPixel(this.handleElement);
        var pixelDelta = clientPixelNormalized - handleCenterPixel;
        if (isNaN(pixelDelta)) return value;
        // convert pixels to range value in increments of `stepSize`
        return value + Math.round(pixelDelta / (tickSize * stepSize)) * stepSize;
    };
    Handle1.prototype.mouseEventClientOffset = function(event) {
        return this.props.vertical ? event.clientY : event.clientX;
    };
    Handle1.prototype.touchEventClientOffset = function(event) {
        var touch = event.changedTouches[0];
        return this.props.vertical ? touch.clientY : touch.clientX;
    };
    Handle1.prototype.validateProps = function(props) {
        for(var _i = 0, NUMBER_PROPS_1 = NUMBER_PROPS; _i < NUMBER_PROPS_1.length; _i++){
            var prop = NUMBER_PROPS_1[_i];
            if (typeof props[prop] !== "number") throw new Error("[Blueprint] <Handle> requires number value for ".concat(prop, " prop"));
        }
    };
    /** Clamp value and invoke callback if it differs from current value */ Handle1.prototype.changeValue = function(newValue, callback) {
        if (callback === void 0) callback = this.props.onChange;
        newValue = this.clamp(newValue);
        if (!isNaN(newValue) && this.props.value !== newValue) callback === null || callback === void 0 || callback(newValue);
        return newValue;
    };
    /** Clamp value between min and max props */ Handle1.prototype.clamp = function(value) {
        return _utils.clamp(value, this.props.min, this.props.max);
    };
    Handle1.prototype.getHandleElementCenterPixel = function(handleElement) {
        var _a = this.getHandleMidpointAndOffset(handleElement), handleMidpoint = _a.handleMidpoint, handleOffset = _a.handleOffset;
        return handleOffset + handleMidpoint;
    };
    Handle1.prototype.getHandleMidpointAndOffset = function(handleElement, useOppositeDimension) {
        if (useOppositeDimension === void 0) useOppositeDimension = false;
        if (handleElement == null) return {
            handleMidpoint: 0,
            handleOffset: 0
        };
        var vertical = this.props.vertical;
        // getBoundingClientRect().height includes border size; clientHeight does not.
        var handleRect = handleElement.getBoundingClientRect();
        var sizeKey = vertical ? useOppositeDimension ? "width" : "height" : useOppositeDimension ? "height" : "width";
        // "bottom" value seems to be consistently incorrect, so explicitly
        // calculate it using the window offset instead.
        var handleOffset = vertical ? window.innerHeight - (handleRect.top + handleRect[sizeKey]) : handleRect.left;
        return {
            handleMidpoint: handleRect[sizeKey] / 2,
            handleOffset: handleOffset
        };
    };
    Handle1.prototype.removeDocumentEventListeners = function() {
        document.removeEventListener("mousemove", this.handleHandleMovement);
        document.removeEventListener("mouseup", this.endHandleMovement);
        document.removeEventListener("touchmove", this.handleHandleTouchMovement);
        document.removeEventListener("touchend", this.endHandleTouchMovement);
        document.removeEventListener("touchcancel", this.endHandleTouchMovement);
    };
    Handle1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".SliderHandle");
    return Handle1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../../common/utils":"8MRas","./sliderUtils":"8iIhm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8iIhm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /** Helper function for formatting ratios as CSS percentage values. */ parcelHelpers.export(exports, "formatPercentage", ()=>formatPercentage
);
/**
 * Mutates the values array by filling all the values between start and end index (inclusive) with the fill value.
 */ parcelHelpers.export(exports, "fillValues", ()=>fillValues
);
/**
 * Returns the minimum element of an array as determined by comparing the results of calling the arg function on each
 * element of the array. The function will only be called once per element.
 */ parcelHelpers.export(exports, "argMin", ()=>argMin
);
function formatPercentage(ratio) {
    return "".concat((ratio * 100).toFixed(2), "%");
}
function fillValues(values, startIndex, endIndex, fillValue) {
    var inc = startIndex < endIndex ? 1 : -1;
    for(var index = startIndex; index !== endIndex + inc; index += inc)values[index] = fillValue;
}
function argMin(values, argFn) {
    if (values.length === 0) return undefined;
    var minValue = values[0];
    var minArg = argFn(minValue);
    for(var index = 1; index < values.length; index++){
        var value = values[index];
        var arg = argFn(value);
        if (arg < minArg) {
            minValue = value;
            minArg = arg;
        }
    }
    return minValue;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hsX4m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RangeSlider", ()=>RangeSlider
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _props = require("../../common/props");
var _multiSlider = require("./multiSlider");
var RangeIndex;
(function(RangeIndex1) {
    RangeIndex1[RangeIndex1["START"] = 0] = "START";
    RangeIndex1[RangeIndex1["END"] = 1] = "END";
})(RangeIndex || (RangeIndex = {}));
var RangeSlider = /** @class */ function(_super) {
    _tslib.__extends(RangeSlider1, _super);
    function RangeSlider1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RangeSlider1.prototype.render = function() {
        var _a = this.props, value = _a.value, props = _tslib.__rest(_a, [
            "value"
        ]);
        return _react.createElement(_multiSlider.MultiSlider, _tslib.__assign({}, props), _react.createElement(_multiSlider.MultiSlider.Handle, {
            value: value[RangeIndex.START],
            type: "start",
            intentAfter: props.intent
        }), _react.createElement(_multiSlider.MultiSlider.Handle, {
            value: value[RangeIndex.END],
            type: "end"
        }));
    };
    RangeSlider1.prototype.validateProps = function(props) {
        var value = props.value;
        if (value == null || value[RangeIndex.START] == null || value[RangeIndex.END] == null) throw new Error(_errors.RANGESLIDER_NULL_VALUE);
    };
    RangeSlider1.defaultProps = _tslib.__assign(_tslib.__assign({}, _multiSlider.MultiSlider.defaultSliderProps), {
        intent: _common.Intent.PRIMARY,
        value: [
            0,
            10
        ]
    });
    RangeSlider1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".RangeSlider");
    return RangeSlider1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","react":"21dqq","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/props":"7F9ht","./multiSlider":"8DU1y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iMGKL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Slider", ()=>Slider
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _multiSlider = require("./multiSlider");
var Slider = /** @class */ function(_super) {
    _tslib.__extends(Slider1, _super);
    function Slider1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Slider1.prototype.render = function() {
        var _a = this.props, initialValue = _a.initialValue, intent = _a.intent, value = _a.value, onChange = _a.onChange, onRelease = _a.onRelease, props = _tslib.__rest(_a, [
            "initialValue",
            "intent",
            "value",
            "onChange",
            "onRelease"
        ]);
        return _react.createElement(_multiSlider.MultiSlider, _tslib.__assign({}, props), _react.createElement(_multiSlider.MultiSlider.Handle, {
            value: value,
            intentAfter: value < initialValue ? intent : undefined,
            intentBefore: value >= initialValue ? intent : undefined,
            onChange: onChange,
            onRelease: onRelease
        }), _react.createElement(_multiSlider.MultiSlider.Handle, {
            value: initialValue,
            interactionKind: "none"
        }));
    };
    Slider1.defaultProps = _tslib.__assign(_tslib.__assign({}, _multiSlider.MultiSlider.defaultSliderProps), {
        initialValue: 0,
        intent: _common.Intent.PRIMARY,
        value: 0
    });
    Slider1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Slider");
    return Slider1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","./multiSlider":"8DU1y","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aQHyU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tab", ()=>Tab
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var Tab = /** @class */ function(_super) {
    _tslib.__extends(Tab1, _super);
    function Tab1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // this component is never rendered directly; see Tabs#renderTabPanel()
    /* istanbul ignore next */ Tab1.prototype.render = function() {
        var _a = this.props, className = _a.className, panel = _a.panel;
        return _react.createElement("div", {
            className: _classnamesDefault.default(_common.Classes.TAB_PANEL, className),
            role: "tablist"
        }, panel);
    };
    Tab1.defaultProps = {
        disabled: false
    };
    Tab1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Tab");
    return Tab1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5IVoJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Expander", ()=>Expander
);
parcelHelpers.export(exports, "Tabs", ()=>Tabs
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _tab = require("./tab");
var _tabTitle = require("./tabTitle");
var Expander = function() {
    return _react.createElement("div", {
        className: _common.Classes.FLEX_EXPANDER
    });
};
var TAB_SELECTOR = ".".concat(_common.Classes.TAB);
var Tabs = /** @class */ function(_super) {
    _tslib.__extends(Tabs1, _super);
    function Tabs1(props) {
        var _this = _super.call(this, props) || this;
        _this.tablistElement = null;
        _this.refHandlers = {
            tablist: function(tabElement) {
                return _this.tablistElement = tabElement;
            }
        };
        _this.handleKeyDown = function(e) {
            var _a;
            var focusedElement = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest(TAB_SELECTOR);
            // rest of this is potentially expensive and futile, so bail if no tab is focused
            if (focusedElement == null) return;
            // must rely on DOM state because we have no way of mapping `focusedElement` to a JSX.Element
            var enabledTabElements = _this.getTabElements().filter(function(el) {
                return el.getAttribute("aria-disabled") === "false";
            });
            var focusedIndex = enabledTabElements.indexOf(focusedElement);
            var direction = _this.getKeyCodeDirection(e);
            if (focusedIndex >= 0 && direction !== undefined) {
                e.preventDefault();
                var length_1 = enabledTabElements.length;
                // auto-wrapping at 0 and `length`
                var nextFocusedIndex = (focusedIndex + direction + length_1) % length_1;
                enabledTabElements[nextFocusedIndex].focus();
            }
        };
        _this.handleKeyPress = function(e) {
            var targetTabElement = e.target.closest(TAB_SELECTOR);
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            // eslint-disable-next-line deprecation/deprecation
            if (targetTabElement != null && _common.Keys.isKeyboardClick(e.which)) {
                e.preventDefault();
                targetTabElement.click();
            }
        };
        _this.handleTabClick = function(newTabId, event) {
            var _a, _b;
            (_b = (_a = _this.props).onChange) === null || _b === void 0 || _b.call(_a, newTabId, _this.state.selectedTabId, event);
            if (_this.props.selectedTabId === undefined) _this.setState({
                selectedTabId: newTabId
            });
        };
        _this.renderTabPanel = function(tab) {
            var _a = tab.props, className = _a.className, panel = _a.panel, id = _a.id, panelClassName = _a.panelClassName;
            if (panel === undefined) return undefined;
            return _react.createElement("div", {
                "aria-labelledby": _tabTitle.generateTabTitleId(_this.props.id, id),
                "aria-hidden": id !== _this.state.selectedTabId,
                className: _classnamesDefault.default(_common.Classes.TAB_PANEL, className, panelClassName),
                id: _tabTitle.generateTabPanelId(_this.props.id, id),
                key: id,
                role: "tabpanel"
            }, panel);
        };
        _this.renderTabTitle = function(child) {
            if (isTabElement(child)) {
                var id = child.props.id;
                return _react.createElement(_tabTitle.TabTitle, _tslib.__assign({}, child.props, {
                    parentId: _this.props.id,
                    onClick: _this.handleTabClick,
                    selected: id === _this.state.selectedTabId
                }));
            }
            return child;
        };
        var selectedTabId = _this.getInitialSelectedTabId();
        _this.state = {
            selectedTabId: selectedTabId
        };
        return _this;
    }
    Tabs1.getDerivedStateFromProps = function(_a) {
        var selectedTabId = _a.selectedTabId;
        if (selectedTabId !== undefined) // keep state in sync with controlled prop, so state is canonical source of truth
        return {
            selectedTabId: selectedTabId
        };
        return null;
    };
    Tabs1.prototype.render = function() {
        var _a, _b;
        var _c = this.state, indicatorWrapperStyle = _c.indicatorWrapperStyle, selectedTabId = _c.selectedTabId;
        var tabTitles = _react.Children.map(this.props.children, this.renderTabTitle);
        var tabPanels = this.getTabChildren().filter(this.props.renderActiveTabPanelOnly ? function(tab) {
            return tab.props.id === selectedTabId;
        } : function() {
            return true;
        }).map(this.renderTabPanel);
        var tabIndicator = this.props.animate ? _react.createElement("div", {
            className: _common.Classes.TAB_INDICATOR_WRAPPER,
            style: indicatorWrapperStyle
        }, _react.createElement("div", {
            className: _common.Classes.TAB_INDICATOR
        })) : null;
        var classes = _classnamesDefault.default(_common.Classes.TABS, (_a = {}, _a[_common.Classes.VERTICAL] = this.props.vertical, _a), this.props.className);
        var tabListClasses = _classnamesDefault.default(_common.Classes.TAB_LIST, (_b = {}, _b[_common.Classes.LARGE] = this.props.large, _b));
        return _react.createElement("div", {
            className: classes
        }, _react.createElement("div", {
            className: tabListClasses,
            onKeyDown: this.handleKeyDown,
            onKeyPress: this.handleKeyPress,
            ref: this.refHandlers.tablist,
            role: "tablist"
        }, tabIndicator, tabTitles), tabPanels);
    };
    Tabs1.prototype.componentDidMount = function() {
        this.moveSelectionIndicator(false);
    };
    Tabs1.prototype.componentDidUpdate = function(prevProps, prevState) {
        if (this.state.selectedTabId !== prevState.selectedTabId) this.moveSelectionIndicator();
        else if (prevState.selectedTabId != null) {
            // comparing React nodes is difficult to do with simple logic, so
            // shallowly compare just their props as a workaround.
            var didChildrenChange = !_utils.arraysEqual(this.getTabChildrenProps(prevProps), this.getTabChildrenProps(), _utils.shallowCompareKeys);
            if (didChildrenChange) this.moveSelectionIndicator();
        }
    };
    Tabs1.prototype.getInitialSelectedTabId = function() {
        // NOTE: providing an unknown ID will hide the selection
        var _a = this.props, defaultSelectedTabId = _a.defaultSelectedTabId, selectedTabId = _a.selectedTabId;
        if (selectedTabId !== undefined) return selectedTabId;
        else if (defaultSelectedTabId !== undefined) return defaultSelectedTabId;
        else {
            // select first tab in absence of user input
            var tabs = this.getTabChildren();
            return tabs.length === 0 ? undefined : tabs[0].props.id;
        }
    };
    Tabs1.prototype.getKeyCodeDirection = function(e) {
        if (isEventKeyCode(e, _common.Keys.ARROW_LEFT, _common.Keys.ARROW_UP)) return -1;
        else if (isEventKeyCode(e, _common.Keys.ARROW_RIGHT, _common.Keys.ARROW_DOWN)) return 1;
        return undefined;
    };
    Tabs1.prototype.getTabChildrenProps = function(props) {
        if (props === void 0) props = this.props;
        return this.getTabChildren(props).map(function(child) {
            return child.props;
        });
    };
    /** Filters children to only `<Tab>`s */ Tabs1.prototype.getTabChildren = function(props) {
        if (props === void 0) props = this.props;
        return _react.Children.toArray(props.children).filter(isTabElement);
    };
    /** Queries root HTML element for all tabs with optional filter selector */ Tabs1.prototype.getTabElements = function(subselector) {
        if (subselector === void 0) subselector = "";
        if (this.tablistElement == null) return [];
        return Array.from(this.tablistElement.querySelectorAll(TAB_SELECTOR + subselector));
    };
    /**
     * Calculate the new height, width, and position of the tab indicator.
     * Store the CSS values so the transition animation can start.
     */ Tabs1.prototype.moveSelectionIndicator = function(animate) {
        if (animate === void 0) animate = true;
        if (this.tablistElement == null || !this.props.animate) return;
        var tabIdSelector = "".concat(TAB_SELECTOR, "[data-tab-id=\"").concat(this.state.selectedTabId, "\"]");
        var selectedTabElement = this.tablistElement.querySelector(tabIdSelector);
        var indicatorWrapperStyle = {
            display: "none"
        };
        if (selectedTabElement != null) {
            var clientHeight = selectedTabElement.clientHeight, clientWidth = selectedTabElement.clientWidth, offsetLeft = selectedTabElement.offsetLeft, offsetTop = selectedTabElement.offsetTop;
            indicatorWrapperStyle = {
                height: clientHeight,
                transform: "translateX(".concat(Math.floor(offsetLeft), "px) translateY(").concat(Math.floor(offsetTop), "px)"),
                width: clientWidth
            };
            if (!animate) indicatorWrapperStyle.transition = "none";
        }
        this.setState({
            indicatorWrapperStyle: indicatorWrapperStyle
        });
    };
    /** Insert a `Tabs.Expander` between any two children to right-align all subsequent children. */ Tabs1.Expander = Expander;
    Tabs1.Tab = _tab.Tab;
    Tabs1.defaultProps = {
        animate: true,
        large: false,
        renderActiveTabPanelOnly: false,
        vertical: false
    };
    Tabs1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Tabs");
    return Tabs1;
}(_common.AbstractPureComponent2);
function isEventKeyCode(e) {
    var codes = [];
    for(var _i = 1; _i < arguments.length; _i++)codes[_i - 1] = arguments[_i];
    // HACKHACK: https://github.com/palantir/blueprint/issues/4165
    // eslint-disable-next-line deprecation/deprecation
    return codes.indexOf(e.which) >= 0;
}
function isTabElement(child) {
    return _utils.isElementOfType(child, _tab.Tab);
}

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../../common/utils":"8MRas","./tab":"aQHyU","./tabTitle":"ghUwI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ghUwI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TabTitle", ()=>TabTitle
);
parcelHelpers.export(exports, "generateTabPanelId", ()=>generateTabPanelId
);
parcelHelpers.export(exports, "generateTabTitleId", ()=>generateTabTitleId
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var TabTitle = /** @class */ function(_super) {
    _tslib.__extends(TabTitle1, _super);
    function TabTitle1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleClick = function(e) {
            return _this.props.onClick(_this.props.id, e);
        };
        return _this;
    }
    TabTitle1.prototype.render = function() {
        var _a = this.props, className = _a.className, children = _a.children, disabled = _a.disabled, id = _a.id, parentId = _a.parentId, selected = _a.selected, title = _a.title, htmlProps = _tslib.__rest(_a, [
            "className",
            "children",
            "disabled",
            "id",
            "parentId",
            "selected",
            "title"
        ]);
        return _react.createElement("div", _tslib.__assign({}, _props.removeNonHTMLProps(htmlProps), {
            "aria-controls": generateTabPanelId(parentId, id),
            "aria-disabled": disabled,
            "aria-expanded": selected,
            "aria-selected": selected,
            className: _classnamesDefault.default(_common.Classes.TAB, className),
            "data-tab-id": id,
            id: generateTabTitleId(parentId, id),
            onClick: disabled ? undefined : this.handleClick,
            role: "tab",
            tabIndex: disabled ? undefined : selected ? 0 : -1
        }), title, children);
    };
    TabTitle1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".TabTitle");
    return TabTitle1;
}(_common.AbstractPureComponent2);
function generateTabPanelId(parentId, tabId) {
    return "".concat(_common.Classes.TAB_PANEL, "_").concat(parentId, "_").concat(tabId);
}
function generateTabTitleId(parentId, tabId) {
    return "".concat(_common.Classes.TAB, "-title_").concat(parentId, "_").concat(tabId);
}

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9uHiF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tag", ()=>Tag
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _utils = require("../../common/utils");
var _icon = require("../icon/icon");
var _text = require("../text/text");
var Tag = /** @class */ function(_super) {
    _tslib.__extends(Tag1, _super);
    function Tag1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onRemoveClick = function(e) {
            var _a, _b;
            (_b = (_a = _this.props).onRemove) === null || _b === void 0 || _b.call(_a, e, _this.props);
        };
        return _this;
    }
    Tag1.prototype.render = function() {
        var _a;
        var _b = this.props, active = _b.active, children = _b.children, className = _b.className, fill = _b.fill, icon = _b.icon, intent = _b.intent, interactive = _b.interactive, large = _b.large, minimal = _b.minimal, multiline = _b.multiline, onRemove = _b.onRemove, rightIcon = _b.rightIcon, round = _b.round, _c = _b.tabIndex, tabIndex = _c === void 0 ? 0 : _c, htmlTitle = _b.htmlTitle, elementRef = _b.elementRef, htmlProps = _tslib.__rest(_b, [
            "active",
            "children",
            "className",
            "fill",
            "icon",
            "intent",
            "interactive",
            "large",
            "minimal",
            "multiline",
            "onRemove",
            "rightIcon",
            "round",
            "tabIndex",
            "htmlTitle",
            "elementRef"
        ]);
        var isRemovable = _common.Utils.isFunction(onRemove);
        var tagClasses = _classnamesDefault.default(_common.Classes.TAG, _common.Classes.intentClass(intent), (_a = {}, _a[_common.Classes.ACTIVE] = active, _a[_common.Classes.FILL] = fill, _a[_common.Classes.INTERACTIVE] = interactive, _a[_common.Classes.LARGE] = large, _a[_common.Classes.MINIMAL] = minimal, _a[_common.Classes.ROUND] = round, _a), className);
        var isLarge = large || tagClasses.indexOf(_common.Classes.LARGE) >= 0;
        var removeButton = isRemovable ? _react.createElement("button", {
            "aria-label": "Remove",
            type: "button",
            className: _common.Classes.TAG_REMOVE,
            onClick: this.onRemoveClick,
            tabIndex: interactive ? tabIndex : undefined
        }, _react.createElement(_icon.Icon, {
            icon: "small-cross",
            size: isLarge ? _icon.IconSize.LARGE : _icon.IconSize.STANDARD
        })) : null;
        return _react.createElement("span", _tslib.__assign({}, htmlProps, {
            className: tagClasses,
            tabIndex: interactive ? tabIndex : undefined,
            ref: elementRef
        }), _react.createElement(_icon.Icon, {
            icon: icon
        }), !_utils.isReactNodeEmpty(children) && _react.createElement(_text.Text, {
            className: _common.Classes.FILL,
            ellipsize: !multiline,
            tagName: "span",
            title: htmlTitle
        }, children), _react.createElement(_icon.Icon, {
            icon: rightIcon
        }), removeButton);
    };
    Tag1.displayName = "".concat(_common.DISPLAYNAME_PREFIX, ".Tag");
    return Tag1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/utils":"8MRas","../icon/icon":"7dRdu","../text/text":"ll8ip","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"QDtNx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TagInput", ()=>TagInput
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _icon = require("../icon/icon");
var _tag = require("../tag/tag");
/** special value for absence of active tag */ var NONE = -1;
var TagInput = /** @class */ function(_super) {
    _tslib.__extends(TagInput1, _super);
    function TagInput1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            activeIndex: NONE,
            inputValue: _this.props.inputValue || "",
            isInputFocused: false
        };
        _this.inputElement = null;
        _this.handleRef = _common.refHandler(_this, "inputElement", _this.props.inputRef);
        _this.addTags = function(value, method) {
            if (method === void 0) method = "default";
            var _a = _this.props, inputValue = _a.inputValue, onAdd = _a.onAdd, onChange = _a.onChange, values = _a.values;
            var newValues = _this.getValues(value);
            var shouldClearInput = (onAdd === null || onAdd === void 0 ? void 0 : onAdd(newValues, method)) !== false && inputValue === undefined;
            // avoid a potentially expensive computation if this prop is omitted
            if (_common.Utils.isFunction(onChange)) shouldClearInput = onChange(_tslib.__spreadArray(_tslib.__spreadArray([], values, true), newValues, true)) !== false && shouldClearInput;
            // only explicit return false cancels text clearing
            if (shouldClearInput) _this.setState({
                inputValue: ""
            });
        };
        _this.maybeRenderTag = function(tag, index) {
            if (!tag) return null;
            var _a = _this.props, large = _a.large, tagProps = _a.tagProps;
            var props = _common.Utils.isFunction(tagProps) ? tagProps(tag, index) : tagProps;
            return _react.createElement(_tag.Tag, _tslib.__assign({
                active: index === _this.state.activeIndex,
                "data-tag-index": index,
                key: tag + "__" + index,
                large: large,
                onRemove: _this.props.disabled ? undefined : _this.handleRemoveTag
            }, props), tag);
        };
        _this.handleContainerClick = function() {
            var _a;
            (_a = _this.inputElement) === null || _a === void 0 || _a.focus();
        };
        _this.handleContainerBlur = function(_a) {
            var currentTarget = _a.currentTarget;
            _this.requestAnimationFrame(function() {
                // we only care if the blur event is leaving the container.
                // defer this check using rAF so activeElement will have updated.
                if (!currentTarget.contains(document.activeElement)) {
                    if (_this.props.addOnBlur && _this.state.inputValue !== undefined && _this.state.inputValue.length > 0) _this.addTags(_this.state.inputValue, "blur");
                    _this.setState({
                        activeIndex: NONE,
                        isInputFocused: false
                    });
                }
            });
        };
        _this.handleInputFocus = function(event) {
            var _a, _b;
            _this.setState({
                isInputFocused: true
            });
            (_b = (_a = _this.props.inputProps) === null || _a === void 0 ? void 0 : _a.onFocus) === null || _b === void 0 || _b.call(_a, event);
        };
        _this.handleInputChange = function(event) {
            var _a, _b, _c, _d;
            _this.setState({
                activeIndex: NONE,
                inputValue: event.currentTarget.value
            });
            (_b = (_a = _this.props).onInputChange) === null || _b === void 0 || _b.call(_a, event);
            (_d = (_c = _this.props.inputProps) === null || _c === void 0 ? void 0 : _c.onChange) === null || _d === void 0 || _d.call(_c, event);
        };
        _this.handleInputKeyDown = function(event) {
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable deprecation/deprecation */ var _a = event.currentTarget, selectionEnd = _a.selectionEnd, value = _a.value;
            var activeIndex = _this.state.activeIndex;
            var activeIndexToEmit = activeIndex;
            if (event.which === _common.Keys.ENTER && value.length > 0) _this.addTags(value, "default");
            else if (selectionEnd === 0 && _this.props.values.length > 0) {
                // cursor at beginning of input allows interaction with tags.
                // use selectionEnd to verify cursor position and no text selection.
                if (event.which === _common.Keys.ARROW_LEFT || event.which === _common.Keys.ARROW_RIGHT) {
                    var nextActiveIndex = _this.getNextActiveIndex(event.which === _common.Keys.ARROW_RIGHT ? 1 : -1);
                    if (nextActiveIndex !== activeIndex) {
                        event.stopPropagation();
                        activeIndexToEmit = nextActiveIndex;
                        _this.setState({
                            activeIndex: nextActiveIndex
                        });
                    }
                } else if (event.which === _common.Keys.BACKSPACE) _this.handleBackspaceToRemove(event);
                else if (event.which === _common.Keys.DELETE) _this.handleDeleteToRemove(event);
            }
            _this.invokeKeyPressCallback("onKeyDown", event, activeIndexToEmit);
        };
        _this.handleInputKeyUp = function(event) {
            _this.invokeKeyPressCallback("onKeyUp", event, _this.state.activeIndex);
        };
        _this.handleInputPaste = function(event) {
            var separator = _this.props.separator;
            var value = event.clipboardData.getData("text");
            if (!_this.props.addOnPaste || value.length === 0) return;
            // special case as a UX nicety: if the user pasted only one value with no delimiters in it, leave that value in
            // the input field so that the user can refine it before converting it to a tag manually.
            if (separator === false || value.split(separator).length === 1) return;
            event.preventDefault();
            _this.addTags(value, "paste");
        };
        _this.handleRemoveTag = function(event) {
            // using data attribute to simplify callback logic -- one handler for all children
            var index = +event.currentTarget.parentElement.getAttribute("data-tag-index");
            _this.removeIndexFromValues(index);
        };
        return _this;
    }
    TagInput1.getDerivedStateFromProps = function(props, state) {
        if (props.inputValue !== state.prevInputValueProp) return {
            inputValue: props.inputValue,
            prevInputValueProp: props.inputValue
        };
        return null;
    };
    TagInput1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, disabled = _b.disabled, fill = _b.fill, inputProps = _b.inputProps, intent = _b.intent, large = _b.large, leftIcon = _b.leftIcon, placeholder = _b.placeholder, values = _b.values;
        var classes = _classnamesDefault.default(_common.Classes.INPUT, _common.Classes.TAG_INPUT, (_a = {}, _a[_common.Classes.ACTIVE] = this.state.isInputFocused, _a[_common.Classes.DISABLED] = disabled, _a[_common.Classes.FILL] = fill, _a[_common.Classes.LARGE] = large, _a), _common.Classes.intentClass(intent), className);
        var isLarge = classes.indexOf(_common.Classes.LARGE) > NONE;
        // use placeholder prop only if it's defined and values list is empty or contains only falsy values
        var isSomeValueDefined = values.some(function(val) {
            return !!val;
        });
        var resolvedPlaceholder = placeholder == null || isSomeValueDefined ? inputProps === null || inputProps === void 0 ? void 0 : inputProps.placeholder : placeholder;
        return _react.createElement("div", {
            className: classes,
            onBlur: this.handleContainerBlur,
            onClick: this.handleContainerClick
        }, _react.createElement(_icon.Icon, {
            className: _common.Classes.TAG_INPUT_ICON,
            icon: leftIcon,
            size: isLarge ? _icon.IconSize.LARGE : _icon.IconSize.STANDARD
        }), _react.createElement("div", {
            className: _common.Classes.TAG_INPUT_VALUES
        }, values.map(this.maybeRenderTag), this.props.children, _react.createElement("input", _tslib.__assign({
            value: this.state.inputValue
        }, inputProps, {
            onFocus: this.handleInputFocus,
            onChange: this.handleInputChange,
            onKeyDown: this.handleInputKeyDown,
            onKeyUp: this.handleInputKeyUp,
            onPaste: this.handleInputPaste,
            placeholder: resolvedPlaceholder,
            ref: this.handleRef,
            className: _classnamesDefault.default(_common.Classes.INPUT_GHOST, inputProps === null || inputProps === void 0 ? void 0 : inputProps.className),
            disabled: disabled
        }))), this.props.rightElement);
    };
    TagInput1.prototype.componentDidUpdate = function(prevProps) {
        if (prevProps.inputRef !== this.props.inputRef) {
            _common.setRef(prevProps.inputRef, null);
            this.handleRef = _common.refHandler(this, "inputElement", this.props.inputRef);
            _common.setRef(this.props.inputRef, this.inputElement);
        }
    };
    TagInput1.prototype.getNextActiveIndex = function(direction) {
        var activeIndex = this.state.activeIndex;
        if (activeIndex === NONE) // nothing active & moving left: select last defined value. otherwise select nothing.
        return direction < 0 ? this.findNextIndex(this.props.values.length, -1) : NONE;
        else // otherwise, move in direction and clamp to bounds.
        // note that upper bound allows going one beyond last item
        // so focus can move off the right end, into the text input.
        return this.findNextIndex(activeIndex, direction);
    };
    TagInput1.prototype.findNextIndex = function(startIndex, direction) {
        var values = this.props.values;
        var index = startIndex + direction;
        while(index > 0 && index < values.length && !values[index])index += direction;
        return _common.Utils.clamp(index, 0, values.length);
    };
    /**
     * Splits inputValue on separator prop,
     * trims whitespace from each new value,
     * and ignores empty values.
     */ TagInput1.prototype.getValues = function(inputValue) {
        var separator = this.props.separator;
        // NOTE: split() typings define two overrides for string and RegExp.
        // this does not play well with our union prop type, so we'll just declare it as a valid type.
        return (separator === false ? [
            inputValue
        ] : inputValue.split(separator)).map(function(val) {
            return val.trim();
        }).filter(function(val) {
            return val.length > 0;
        });
    };
    TagInput1.prototype.handleBackspaceToRemove = function(event) {
        var previousActiveIndex = this.state.activeIndex;
        // always move leftward one item (this will focus last item if nothing is focused)
        this.setState({
            activeIndex: this.getNextActiveIndex(-1)
        });
        // delete item if there was a previous valid selection (ignore first backspace to focus last item)
        if (this.isValidIndex(previousActiveIndex)) {
            event.stopPropagation();
            this.removeIndexFromValues(previousActiveIndex);
        }
    };
    TagInput1.prototype.handleDeleteToRemove = function(event) {
        var activeIndex = this.state.activeIndex;
        if (this.isValidIndex(activeIndex)) {
            event.stopPropagation();
            this.removeIndexFromValues(activeIndex);
        }
    };
    /** Remove the item at the given index by invoking `onRemove` and `onChange` accordingly. */ TagInput1.prototype.removeIndexFromValues = function(index) {
        var _a = this.props, onChange = _a.onChange, onRemove = _a.onRemove, values = _a.values;
        onRemove === null || onRemove === void 0 || onRemove(values[index], index);
        onChange === null || onChange === void 0 || onChange(values.filter(function(_, i) {
            return i !== index;
        }));
    };
    TagInput1.prototype.invokeKeyPressCallback = function(propCallbackName, event, activeIndex) {
        var _a, _b, _c, _d;
        (_b = (_a = this.props)[propCallbackName]) === null || _b === void 0 || _b.call(_a, event, activeIndex === NONE ? undefined : activeIndex);
        (_d = (_c = this.props.inputProps)[propCallbackName]) === null || _d === void 0 || _d.call(_c, event);
    };
    /** Returns whether the given index represents a valid item in `this.props.values`. */ TagInput1.prototype.isValidIndex = function(index) {
        return index !== NONE && index < this.props.values.length;
    };
    TagInput1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".TagInput");
    TagInput1.defaultProps = {
        addOnBlur: false,
        addOnPaste: true,
        inputProps: {},
        separator: /[,\n\r]/,
        tagProps: {}
    };
    return TagInput1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../icon/icon":"7dRdu","../tag/tag":"9uHiF","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8nZR3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Toast", ()=>Toast
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _common = require("../../common");
var _props = require("../../common/props");
var _buttonGroup = require("../button/buttonGroup");
var _buttons = require("../button/buttons");
var _icon = require("../icon/icon");
var Toast = /** @class */ function(_super) {
    _tslib.__extends(Toast1, _super);
    function Toast1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleActionClick = function(e) {
            var _a, _b;
            (_b = (_a = _this.props.action) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 || _b.call(_a, e);
            _this.triggerDismiss(false);
        };
        _this.handleCloseClick = function() {
            return _this.triggerDismiss(false);
        };
        _this.startTimeout = function() {
            _this.clearTimeouts();
            if (_this.props.timeout > 0) _this.setTimeout(function() {
                return _this.triggerDismiss(true);
            }, _this.props.timeout);
        };
        return _this;
    }
    Toast1.prototype.render = function() {
        var _a = this.props, className = _a.className, icon = _a.icon, intent = _a.intent, message = _a.message;
        return _react.createElement("div", {
            className: _classnamesDefault.default(_common.Classes.TOAST, _common.Classes.intentClass(intent), className),
            onBlur: this.startTimeout,
            onFocus: this.clearTimeouts,
            onMouseEnter: this.clearTimeouts,
            onMouseLeave: this.startTimeout,
            tabIndex: 0
        }, _react.createElement(_icon.Icon, {
            icon: icon
        }), _react.createElement("span", {
            className: _common.Classes.TOAST_MESSAGE
        }, message), _react.createElement(_buttonGroup.ButtonGroup, {
            minimal: true
        }, this.maybeRenderActionButton(), _react.createElement(_buttons.Button, {
            "aria-label": "Close",
            icon: "cross",
            onClick: this.handleCloseClick
        })));
    };
    Toast1.prototype.componentDidMount = function() {
        this.startTimeout();
    };
    Toast1.prototype.componentDidUpdate = function(prevProps) {
        if (prevProps.timeout !== this.props.timeout) {
            if (this.props.timeout > 0) this.startTimeout();
            else this.clearTimeouts();
        }
    };
    Toast1.prototype.componentWillUnmount = function() {
        this.clearTimeouts();
    };
    Toast1.prototype.maybeRenderActionButton = function() {
        var action = this.props.action;
        if (action == null) return undefined;
        else return _react.createElement(_buttons.AnchorButton, _tslib.__assign({}, action, {
            intent: undefined,
            onClick: this.handleActionClick
        }));
    };
    Toast1.prototype.triggerDismiss = function(didTimeoutExpire) {
        var _a, _b;
        this.clearTimeouts();
        (_b = (_a = this.props).onDismiss) === null || _b === void 0 || _b.call(_a, didTimeoutExpire);
    };
    Toast1.defaultProps = {
        className: "",
        message: "",
        timeout: 5000
    };
    Toast1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Toast");
    return Toast1;
}(_common.AbstractPureComponent2);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common":"6BNPY","../../common/props":"7F9ht","../button/buttonGroup":"1Hg3x","../button/buttons":"lDi9s","../icon/icon":"7dRdu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6gg8h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Toaster", ()=>Toaster
);
parcelHelpers.export(exports, "OverlayToaster", ()=>OverlayToaster
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactDom = require("react-dom");
var _common = require("../../common");
var _errors = require("../../common/errors");
var _keys = require("../../common/keys");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _overlay = require("../overlay/overlay");
var _toast = require("./toast");
var Toaster = /** @class */ function(_super) {
    _tslib.__extends(Toaster1, _super);
    function Toaster1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            toasts: []
        };
        // auto-incrementing identifier for un-keyed toasts
        _this.toastId = 0;
        _this.renderToast = function(toast) {
            return _react.createElement(_toast.Toast, _tslib.__assign({}, toast, {
                onDismiss: _this.getDismissHandler(toast)
            }));
        };
        _this.getDismissHandler = function(toast) {
            return function(timeoutExpired) {
                _this.dismiss(toast.key, timeoutExpired);
            };
        };
        _this.handleClose = function(e) {
            // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable-next-line deprecation/deprecation */ if (e.which === _keys.ESCAPE) _this.clear();
        };
        return _this;
    }
    /**
     * Create a new `Toaster` instance that can be shared around your application.
     * The `Toaster` will be rendered into a new element appended to the given container.
     */ Toaster1.create = function(props, container) {
        if (container === void 0) container = document.body;
        if (props != null && props.usePortal != null && !_utils.isNodeEnv("production")) console.warn(_errors.TOASTER_WARN_INLINE);
        var containerElement = document.createElement("div");
        container.appendChild(containerElement);
        var toaster = _reactDom.render(_react.createElement(Toaster1, _tslib.__assign({}, props, {
            usePortal: false
        })), containerElement);
        if (toaster == null) throw new Error(_errors.TOASTER_CREATE_NULL);
        return toaster;
    };
    Toaster1.prototype.show = function(props, key) {
        if (this.props.maxToasts) // check if active number of toasts are at the maxToasts limit
        this.dismissIfAtLimit();
        var options = this.createToastOptions(props, key);
        if (key === undefined || this.isNewToastKey(key)) this.setState(function(prevState) {
            return {
                toasts: _tslib.__spreadArray([
                    options
                ], prevState.toasts, true)
            };
        });
        else this.setState(function(prevState) {
            return {
                toasts: prevState.toasts.map(function(t) {
                    return t.key === key ? options : t;
                })
            };
        });
        return options.key;
    };
    Toaster1.prototype.dismiss = function(key, timeoutExpired) {
        if (timeoutExpired === void 0) timeoutExpired = false;
        this.setState(function(_a1) {
            var toasts = _a1.toasts;
            return {
                toasts: toasts.filter(function(t) {
                    var _a;
                    var matchesKey = t.key === key;
                    if (matchesKey) (_a = t.onDismiss) === null || _a === void 0 || _a.call(t, timeoutExpired);
                    return !matchesKey;
                })
            };
        });
    };
    Toaster1.prototype.clear = function() {
        this.state.toasts.forEach(function(t) {
            var _a;
            return (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, false);
        });
        this.setState({
            toasts: []
        });
    };
    Toaster1.prototype.getToasts = function() {
        return this.state.toasts;
    };
    Toaster1.prototype.render = function() {
        var classes = _classnamesDefault.default(_common.Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);
        return _react.createElement(_overlay.Overlay, {
            autoFocus: this.props.autoFocus,
            canEscapeKeyClose: this.props.canEscapeKeyClear,
            canOutsideClickClose: false,
            className: classes,
            enforceFocus: false,
            hasBackdrop: false,
            isOpen: this.state.toasts.length > 0 || this.props.children != null,
            onClose: this.handleClose,
            shouldReturnFocusOnClose: false,
            // $pt-transition-duration * 3 + $pt-transition-duration / 2
            transitionDuration: 350,
            transitionName: _common.Classes.TOAST,
            usePortal: this.props.usePortal
        }, this.state.toasts.map(this.renderToast, this), this.props.children);
    };
    Toaster1.prototype.validateProps = function(_a) {
        var maxToasts = _a.maxToasts;
        // maximum number of toasts should not be a number less than 1
        if (maxToasts !== undefined && maxToasts < 1) throw new Error(_errors.TOASTER_MAX_TOASTS_INVALID);
    };
    Toaster1.prototype.isNewToastKey = function(key) {
        return this.state.toasts.every(function(toast) {
            return toast.key !== key;
        });
    };
    Toaster1.prototype.dismissIfAtLimit = function() {
        if (this.state.toasts.length === this.props.maxToasts) // dismiss the oldest toast to stay within the maxToasts limit
        this.dismiss(this.state.toasts[this.state.toasts.length - 1].key);
    };
    Toaster1.prototype.createToastOptions = function(props, key) {
        if (key === void 0) key = "toast-".concat(this.toastId++);
        // clone the object before adding the key prop to avoid leaking the mutation
        return _tslib.__assign(_tslib.__assign({}, props), {
            key: key
        });
    };
    Toaster1.prototype.getPositionClasses = function() {
        var positions = this.props.position.split("-");
        // NOTE that there is no -center class because that's the default style
        return _tslib.__spreadArray(_tslib.__spreadArray([], positions.map(function(p) {
            return "".concat(_common.Classes.TOAST_CONTAINER, "-").concat(p.toLowerCase());
        }), true), [
            "".concat(_common.Classes.TOAST_CONTAINER, "-").concat(this.props.usePortal ? "in-portal" : "inline"), 
        ], false);
    };
    Toaster1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Toaster");
    Toaster1.defaultProps = {
        autoFocus: false,
        canEscapeKeyClear: true,
        position: _common.Position.TOP,
        usePortal: true
    };
    return Toaster1;
}(_common.AbstractPureComponent2);
var OverlayToaster = Toaster;

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","react-dom":"j6uA9","../../common":"6BNPY","../../common/errors":"7mLY3","../../common/keys":"4SJW1","../../common/props":"7F9ht","../../common/utils":"8MRas","../overlay/overlay":"ikpmN","./toast":"8nZR3","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i1wQV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tree", ()=>Tree
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _classes = require("../../common/classes");
var _props = require("../../common/props");
var _utils = require("../../common/utils");
var _treeNode = require("./treeNode");
// eslint-disable-next-line @typescript-eslint/ban-types
var Tree = /** @class */ function(_super) {
    _tslib.__extends(Tree1, _super);
    function Tree1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.nodeRefs = {};
        _this.handleNodeCollapse = function(node, e) {
            _this.handlerHelper(_this.props.onNodeCollapse, node, e);
        };
        _this.handleNodeClick = function(node, e) {
            _this.handlerHelper(_this.props.onNodeClick, node, e);
        };
        _this.handleContentRef = function(node, element) {
            if (element != null) _this.nodeRefs[node.props.id] = element;
            else // don't want our object to get bloated with old keys
            delete _this.nodeRefs[node.props.id];
        };
        _this.handleNodeContextMenu = function(node, e) {
            _this.handlerHelper(_this.props.onNodeContextMenu, node, e);
        };
        _this.handleNodeDoubleClick = function(node, e) {
            _this.handlerHelper(_this.props.onNodeDoubleClick, node, e);
        };
        _this.handleNodeExpand = function(node, e) {
            _this.handlerHelper(_this.props.onNodeExpand, node, e);
        };
        _this.handleNodeMouseEnter = function(node, e) {
            _this.handlerHelper(_this.props.onNodeMouseEnter, node, e);
        };
        _this.handleNodeMouseLeave = function(node, e) {
            _this.handlerHelper(_this.props.onNodeMouseLeave, node, e);
        };
        return _this;
    }
    Tree1.ofType = function() {
        return Tree1;
    };
    Tree1.nodeFromPath = function(path, treeNodes) {
        if (path.length === 1) return treeNodes[path[0]];
        else return Tree1.nodeFromPath(path.slice(1), treeNodes[path[0]].childNodes);
    };
    Tree1.prototype.render = function() {
        return _react.createElement("div", {
            className: _classnamesDefault.default(_classes.TREE, this.props.className)
        }, this.renderNodes(this.props.contents, [], _classes.TREE_ROOT));
    };
    /**
     * Returns the underlying HTML element of the `Tree` node with an id of `nodeId`.
     * This element does not contain the children of the node, only its label and controls.
     * If the node is not currently mounted, `undefined` is returned.
     */ Tree1.prototype.getNodeContentElement = function(nodeId) {
        return this.nodeRefs[nodeId];
    };
    Tree1.prototype.renderNodes = function(treeNodes, currentPath, className) {
        var _this = this;
        if (treeNodes == null) return null;
        var nodeItems = treeNodes.map(function(node, i) {
            var elementPath = currentPath.concat(i);
            var TypedTreeNode = _treeNode.TreeNode.ofType();
            return _react.createElement(TypedTreeNode, _tslib.__assign({}, node, {
                key: node.id,
                contentRef: _this.handleContentRef,
                depth: elementPath.length - 1,
                onClick: _this.handleNodeClick,
                onContextMenu: _this.handleNodeContextMenu,
                onCollapse: _this.handleNodeCollapse,
                onDoubleClick: _this.handleNodeDoubleClick,
                onExpand: _this.handleNodeExpand,
                onMouseEnter: _this.handleNodeMouseEnter,
                onMouseLeave: _this.handleNodeMouseLeave,
                path: elementPath
            }), _this.renderNodes(node.childNodes, elementPath));
        });
        return _react.createElement("ul", {
            className: _classnamesDefault.default(_classes.TREE_NODE_LIST, className)
        }, nodeItems);
    };
    Tree1.prototype.handlerHelper = function(handlerFromProps, node, e) {
        if (_utils.isFunction(handlerFromProps)) {
            var nodeData = Tree1.nodeFromPath(node.props.path, this.props.contents);
            handlerFromProps(nodeData, node.props.path, e);
        }
    };
    Tree1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".Tree");
    return Tree1;
}(_react.Component);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common/classes":"6Ep96","../../common/props":"7F9ht","../../common/utils":"8MRas","./treeNode":"4cgOz","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4cgOz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TreeNode", ()=>TreeNode
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _classes = require("../../common/classes");
var _props = require("../../common/props");
var _collapse = require("../collapse/collapse");
var _icon = require("../icon/icon");
// eslint-disable-next-line @typescript-eslint/ban-types
var TreeNode = /** @class */ function(_super) {
    _tslib.__extends(TreeNode1, _super);
    function TreeNode1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleCaretClick = function(e) {
            var _a;
            e.stopPropagation();
            var _b = _this.props, isExpanded = _b.isExpanded, onCollapse = _b.onCollapse, onExpand = _b.onExpand;
            (_a = isExpanded ? onCollapse : onExpand) === null || _a === void 0 || _a(_this, e);
        };
        _this.handleClick = function(e) {
            var _a, _b;
            (_b = (_a = _this.props).onClick) === null || _b === void 0 || _b.call(_a, _this, e);
        };
        _this.handleContentRef = function(element) {
            var _a, _b;
            (_b = (_a = _this.props).contentRef) === null || _b === void 0 || _b.call(_a, _this, element);
        };
        _this.handleContextMenu = function(e) {
            var _a, _b;
            (_b = (_a = _this.props).onContextMenu) === null || _b === void 0 || _b.call(_a, _this, e);
        };
        _this.handleDoubleClick = function(e) {
            var _a, _b;
            (_b = (_a = _this.props).onDoubleClick) === null || _b === void 0 || _b.call(_a, _this, e);
        };
        _this.handleMouseEnter = function(e) {
            var _a, _b;
            (_b = (_a = _this.props).onMouseEnter) === null || _b === void 0 || _b.call(_a, _this, e);
        };
        _this.handleMouseLeave = function(e) {
            var _a, _b;
            (_b = (_a = _this.props).onMouseLeave) === null || _b === void 0 || _b.call(_a, _this, e);
        };
        return _this;
    }
    TreeNode1.ofType = function() {
        return TreeNode1;
    };
    TreeNode1.prototype.render = function() {
        var _a;
        var _b = this.props, children = _b.children, className = _b.className, disabled = _b.disabled, icon = _b.icon, isExpanded = _b.isExpanded, isSelected = _b.isSelected, label = _b.label;
        var classes = _classnamesDefault.default(_classes.TREE_NODE, (_a = {}, _a[_classes.DISABLED] = disabled, _a[_classes.TREE_NODE_SELECTED] = isSelected, _a[_classes.TREE_NODE_EXPANDED] = isExpanded, _a), className);
        var contentClasses = _classnamesDefault.default(_classes.TREE_NODE_CONTENT, "".concat(_classes.TREE_NODE_CONTENT, "-").concat(this.props.depth));
        var eventHandlers = disabled === true ? {} : {
            onClick: this.handleClick,
            onContextMenu: this.handleContextMenu,
            onDoubleClick: this.handleDoubleClick,
            onMouseEnter: this.handleMouseEnter,
            onMouseLeave: this.handleMouseLeave
        };
        return _react.createElement("li", {
            className: classes
        }, _react.createElement("div", _tslib.__assign({
            className: contentClasses,
            ref: this.handleContentRef
        }, eventHandlers), this.maybeRenderCaret(), _react.createElement(_icon.Icon, {
            className: _classes.TREE_NODE_ICON,
            icon: icon,
            "aria-hidden": true,
            tabIndex: -1
        }), _react.createElement("span", {
            className: _classes.TREE_NODE_LABEL
        }, label), this.maybeRenderSecondaryLabel()), _react.createElement(_collapse.Collapse, {
            isOpen: isExpanded
        }, children));
    };
    TreeNode1.prototype.maybeRenderCaret = function() {
        var _a = this.props, children = _a.children, isExpanded = _a.isExpanded, disabled = _a.disabled, _b = _a.hasCaret, hasCaret = _b === void 0 ? _react.Children.count(children) > 0 : _b;
        if (hasCaret) {
            var caretClasses = _classnamesDefault.default(_classes.TREE_NODE_CARET, isExpanded ? _classes.TREE_NODE_CARET_OPEN : _classes.TREE_NODE_CARET_CLOSED);
            var onClick = disabled === true ? undefined : this.handleCaretClick;
            return _react.createElement(_icon.Icon, {
                title: isExpanded ? "Collapse group" : "Expand group",
                className: caretClasses,
                onClick: onClick,
                icon: "chevron-right"
            });
        }
        return _react.createElement("span", {
            className: _classes.TREE_NODE_CARET_NONE
        });
    };
    TreeNode1.prototype.maybeRenderSecondaryLabel = function() {
        if (this.props.secondaryLabel != null) return _react.createElement("span", {
            className: _classes.TREE_NODE_SECONDARY_LABEL
        }, this.props.secondaryLabel);
        else return undefined;
    };
    TreeNode1.displayName = "".concat(_props.DISPLAYNAME_PREFIX, ".TreeNode");
    return TreeNode1;
}(_react.Component);

},{"tslib":"45hme","classnames":"jocGM","react":"21dqq","../../common/classes":"6Ep96","../../common/props":"7F9ht","../collapse/collapse":"6FJtN","../icon/icon":"7dRdu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6UFnv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DateUtils", ()=>_dateUtils
);
parcelHelpers.export(exports, "Classes", ()=>Classes
);
parcelHelpers.export(exports, "Months", ()=>_months.Months
);
parcelHelpers.export(exports, "TimeUnit", ()=>_timeUnit.TimeUnit
);
parcelHelpers.export(exports, "DateInput", ()=>_dateInput.DateInput
);
parcelHelpers.export(exports, "DatePicker", ()=>_datePicker.DatePicker
);
parcelHelpers.export(exports, "DateTimePicker", ()=>_dateTimePicker.DateTimePicker
);
parcelHelpers.export(exports, "DateRangeInput", ()=>_dateRangeInput.DateRangeInput
);
parcelHelpers.export(exports, "DateRangePicker", ()=>_dateRangePicker.DateRangePicker
);
parcelHelpers.export(exports, "TimePicker", ()=>_timePicker.TimePicker
);
parcelHelpers.export(exports, "TimePrecision", ()=>_timePicker.TimePrecision
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _classes = require("./common/classes");
var _dateUtils = require("./common/dateUtils");
var _months = require("./common/months");
var _timeUnit = require("./common/timeUnit");
var _dateInput = require("./dateInput");
var _datePicker = require("./datePicker");
var _dateTimePicker = require("./dateTimePicker");
var _dateRangeInput = require("./dateRangeInput");
var _dateRangePicker = require("./dateRangePicker");
var _timePicker = require("./timePicker");
var Classes = _classes;

},{"./common/classes":"fnsy0","./common/dateUtils":"gv7pK","./common/months":"bCsfG","./common/timeUnit":"1ryQa","./dateInput":false,"./datePicker":false,"./dateTimePicker":false,"./dateRangeInput":"8eGPa","./dateRangePicker":"4Jm3r","./timePicker":"iIEQm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fnsy0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DATEINPUT", ()=>DATEINPUT
);
parcelHelpers.export(exports, "DATEINPUT_POPOVER", ()=>DATEINPUT_POPOVER
);
parcelHelpers.export(exports, "DATEPICKER", ()=>DATEPICKER
);
parcelHelpers.export(exports, "DATEPICKER_CAPTION", ()=>DATEPICKER_CAPTION
);
parcelHelpers.export(exports, "DATEPICKER_CAPTION_CARET", ()=>DATEPICKER_CAPTION_CARET
);
parcelHelpers.export(exports, "DATEPICKER_CAPTION_MEASURE", ()=>DATEPICKER_CAPTION_MEASURE
);
parcelHelpers.export(exports, "DATEPICKER_CAPTION_SELECT", ()=>DATEPICKER_CAPTION_SELECT
);
parcelHelpers.export(exports, "DATEPICKER_DAY", ()=>DATEPICKER_DAY
);
parcelHelpers.export(exports, "DATEPICKER_DAY_DISABLED", ()=>DATEPICKER_DAY_DISABLED
);
parcelHelpers.export(exports, "DATEPICKER_DAY_OUTSIDE", ()=>DATEPICKER_DAY_OUTSIDE
);
parcelHelpers.export(exports, "DATEPICKER_DAY_SELECTED", ()=>DATEPICKER_DAY_SELECTED
);
parcelHelpers.export(exports, "DATEPICKER_DAY_IS_TODAY", ()=>DATEPICKER_DAY_IS_TODAY
);
parcelHelpers.export(exports, "DATEPICKER_DAY_WRAPPER", ()=>DATEPICKER_DAY_WRAPPER
);
parcelHelpers.export(exports, "DATEPICKER_FOOTER", ()=>DATEPICKER_FOOTER
);
parcelHelpers.export(exports, "DATEPICKER_MONTH_SELECT", ()=>DATEPICKER_MONTH_SELECT
);
parcelHelpers.export(exports, "DATEPICKER_YEAR_SELECT", ()=>DATEPICKER_YEAR_SELECT
);
parcelHelpers.export(exports, "DATEPICKER_NAVBAR", ()=>DATEPICKER_NAVBAR
);
parcelHelpers.export(exports, "DATEPICKER_NAVBUTTON", ()=>DATEPICKER_NAVBUTTON
);
parcelHelpers.export(exports, "DATEPICKER_TIMEPICKER_WRAPPER", ()=>DATEPICKER_TIMEPICKER_WRAPPER
);
parcelHelpers.export(exports, "DATERANGEPICKER", ()=>DATERANGEPICKER
);
parcelHelpers.export(exports, "DATERANGEPICKER_CONTIGUOUS", ()=>DATERANGEPICKER_CONTIGUOUS
);
parcelHelpers.export(exports, "DATERANGEPICKER_SINGLE_MONTH", ()=>DATERANGEPICKER_SINGLE_MONTH
);
parcelHelpers.export(exports, "DATERANGEPICKER_DAY_SELECTED_RANGE", ()=>DATERANGEPICKER_DAY_SELECTED_RANGE
);
parcelHelpers.export(exports, "DATERANGEPICKER_DAY_HOVERED_RANGE", ()=>DATERANGEPICKER_DAY_HOVERED_RANGE
);
parcelHelpers.export(exports, "DATERANGEPICKER_SHORTCUTS", ()=>DATERANGEPICKER_SHORTCUTS
);
parcelHelpers.export(exports, "DATERANGEPICKER_TIMEPICKERS", ()=>DATERANGEPICKER_TIMEPICKERS
);
parcelHelpers.export(exports, "DATETIMEPICKER", ()=>DATETIMEPICKER
);
parcelHelpers.export(exports, "TIMEPICKER", ()=>TIMEPICKER
);
parcelHelpers.export(exports, "TIMEPICKER_ARROW_BUTTON", ()=>TIMEPICKER_ARROW_BUTTON
);
parcelHelpers.export(exports, "TIMEPICKER_ARROW_ROW", ()=>TIMEPICKER_ARROW_ROW
);
parcelHelpers.export(exports, "TIMEPICKER_DIVIDER_TEXT", ()=>TIMEPICKER_DIVIDER_TEXT
);
parcelHelpers.export(exports, "TIMEPICKER_HOUR", ()=>TIMEPICKER_HOUR
);
parcelHelpers.export(exports, "TIMEPICKER_INPUT", ()=>TIMEPICKER_INPUT
);
parcelHelpers.export(exports, "TIMEPICKER_INPUT_ROW", ()=>TIMEPICKER_INPUT_ROW
);
parcelHelpers.export(exports, "TIMEPICKER_MILLISECOND", ()=>TIMEPICKER_MILLISECOND
);
parcelHelpers.export(exports, "TIMEPICKER_MINUTE", ()=>TIMEPICKER_MINUTE
);
parcelHelpers.export(exports, "TIMEPICKER_SECOND", ()=>TIMEPICKER_SECOND
);
parcelHelpers.export(exports, "TIMEPICKER_AMPM_SELECT", ()=>TIMEPICKER_AMPM_SELECT
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _core = require("@blueprintjs/core");
var NS = _core.Classes.getClassNamespace();
var DATEINPUT = "".concat(NS, "-dateinput");
var DATEINPUT_POPOVER = "".concat(DATEINPUT, "-popover");
var DATEPICKER = "".concat(NS, "-datepicker");
var DATEPICKER_CAPTION = "".concat(DATEPICKER, "-caption");
var DATEPICKER_CAPTION_CARET = "".concat(DATEPICKER_CAPTION, "-caret");
var DATEPICKER_CAPTION_MEASURE = "".concat(DATEPICKER_CAPTION, "-measure");
var DATEPICKER_CAPTION_SELECT = "".concat(DATEPICKER_CAPTION, "-select");
var DATEPICKER_DAY = "DayPicker-Day";
var DATEPICKER_DAY_DISABLED = "".concat(DATEPICKER_DAY, "--disabled");
var DATEPICKER_DAY_OUTSIDE = "".concat(DATEPICKER_DAY, "--outside");
var DATEPICKER_DAY_SELECTED = "".concat(DATEPICKER_DAY, "--selected");
var DATEPICKER_DAY_IS_TODAY = "".concat(DATEPICKER_DAY, "--isToday");
var DATEPICKER_DAY_WRAPPER = "".concat(DATEPICKER, "-day-wrapper");
var DATEPICKER_FOOTER = "".concat(DATEPICKER, "-footer");
var DATEPICKER_MONTH_SELECT = "".concat(DATEPICKER, "-month-select");
var DATEPICKER_YEAR_SELECT = "".concat(DATEPICKER, "-year-select");
var DATEPICKER_NAVBAR = "".concat(DATEPICKER, "-navbar");
var DATEPICKER_NAVBUTTON = "DayPicker-NavButton";
var DATEPICKER_TIMEPICKER_WRAPPER = "".concat(DATEPICKER, "-timepicker-wrapper");
var DATERANGEPICKER = "".concat(NS, "-daterangepicker");
var DATERANGEPICKER_CONTIGUOUS = "".concat(DATERANGEPICKER, "-contiguous");
var DATERANGEPICKER_SINGLE_MONTH = "".concat(DATERANGEPICKER, "-single-month");
var DATERANGEPICKER_DAY_SELECTED_RANGE = "".concat(DATEPICKER_DAY, "--selected-range");
var DATERANGEPICKER_DAY_HOVERED_RANGE = "".concat(DATEPICKER_DAY, "--hovered-range");
var DATERANGEPICKER_SHORTCUTS = "".concat(DATERANGEPICKER, "-shortcuts");
var DATERANGEPICKER_TIMEPICKERS = "".concat(DATERANGEPICKER, "-timepickers");
var DATETIMEPICKER = "".concat(NS, "-datetimepicker");
var TIMEPICKER = "".concat(NS, "-timepicker");
var TIMEPICKER_ARROW_BUTTON = "".concat(TIMEPICKER, "-arrow-button");
var TIMEPICKER_ARROW_ROW = "".concat(TIMEPICKER, "-arrow-row");
var TIMEPICKER_DIVIDER_TEXT = "".concat(TIMEPICKER, "-divider-text");
var TIMEPICKER_HOUR = "".concat(TIMEPICKER, "-hour");
var TIMEPICKER_INPUT = "".concat(TIMEPICKER, "-input");
var TIMEPICKER_INPUT_ROW = "".concat(TIMEPICKER, "-input-row");
var TIMEPICKER_MILLISECOND = "".concat(TIMEPICKER, "-millisecond");
var TIMEPICKER_MINUTE = "".concat(TIMEPICKER, "-minute");
var TIMEPICKER_SECOND = "".concat(TIMEPICKER, "-second");
var TIMEPICKER_AMPM_SELECT = "".concat(TIMEPICKER, "-ampm-select");

},{"@blueprintjs/core":"3LcXQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gv7pK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isDateValid", ()=>isDateValid
);
parcelHelpers.export(exports, "areEqual", ()=>areEqual
);
parcelHelpers.export(exports, "areRangesEqual", ()=>areRangesEqual
);
parcelHelpers.export(exports, "areSameDay", ()=>areSameDay
);
parcelHelpers.export(exports, "areSameMonth", ()=>areSameMonth
);
parcelHelpers.export(exports, "areSameTime", ()=>areSameTime
);
parcelHelpers.export(exports, "clone", ()=>clone
);
parcelHelpers.export(exports, "isDayInRange", ()=>isDayInRange
);
parcelHelpers.export(exports, "isDayRangeInRange", ()=>isDayRangeInRange
);
parcelHelpers.export(exports, "isMonthInRange", ()=>isMonthInRange
);
parcelHelpers.export(exports, "isTimeEqualOrGreaterThan", ()=>isTimeEqualOrGreaterThan
);
parcelHelpers.export(exports, "isTimeEqualOrSmallerThan", ()=>isTimeEqualOrSmallerThan
);
parcelHelpers.export(exports, "isTimeInRange", ()=>isTimeInRange
);
parcelHelpers.export(exports, "getTimeInRange", ()=>getTimeInRange
);
/**
 * Returns true if the time part of `date` is later than or equal to the time
 * part of `dateToCompare`. The day, month, and year parts will not be compared.
 */ parcelHelpers.export(exports, "isTimeSameOrAfter", ()=>isTimeSameOrAfter
);
/**
 * @returns a Date at the exact time-wise midpoint between startDate and endDate
 */ parcelHelpers.export(exports, "getDateBetween", ()=>getDateBetween
);
parcelHelpers.export(exports, "getDateTime", ()=>getDateTime
);
parcelHelpers.export(exports, "getDateOnlyWithTime", ()=>getDateOnlyWithTime
);
parcelHelpers.export(exports, "getDatePreviousMonth", ()=>getDatePreviousMonth
);
parcelHelpers.export(exports, "getDateNextMonth", ()=>getDateNextMonth
);
parcelHelpers.export(exports, "convert24HourMeridiem", ()=>convert24HourMeridiem
);
parcelHelpers.export(exports, "getIsPmFrom24Hour", ()=>getIsPmFrom24Hour
);
parcelHelpers.export(exports, "get12HourFrom24Hour", ()=>get12HourFrom24Hour
);
parcelHelpers.export(exports, "get24HourFrom12Hour", ()=>get24HourFrom12Hour
);
parcelHelpers.export(exports, "isToday", ()=>isToday
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _months = require("./months");
function isDateValid(date) {
    return date instanceof Date && !isNaN(date.valueOf());
}
function areEqual(date1, date2) {
    if (date1 == null && date2 == null) return true;
    else if (date1 == null || date2 == null) return false;
    else return date1.getTime() === date2.getTime();
}
function areRangesEqual(dateRange1, dateRange2) {
    if (dateRange1 == null && dateRange2 == null) return true;
    else if (dateRange1 == null || dateRange2 == null) return false;
    else {
        var start1 = dateRange1[0], end1 = dateRange1[1];
        var start2 = dateRange2[0], end2 = dateRange2[1];
        var areStartsEqual = start1 == null && start2 == null || areSameDay(start1, start2);
        var areEndsEqual = end1 == null && end2 == null || areSameDay(end1, end2);
        return areStartsEqual && areEndsEqual;
    }
}
function areSameDay(date1, date2) {
    return areSameMonth(date1, date2) && date1.getDate() === date2.getDate();
}
function areSameMonth(date1, date2) {
    return date1 != null && date2 != null && date1.getMonth() === date2.getMonth() && date1.getFullYear() === date2.getFullYear();
}
function areSameTime(date1, date2) {
    return date1 != null && date2 != null && date1.getHours() === date2.getHours() && date1.getMinutes() === date2.getMinutes() && date1.getSeconds() === date2.getSeconds() && date1.getMilliseconds() === date2.getMilliseconds();
}
function clone(d) {
    return new Date(d.getTime());
}
function isDayInRange(date, dateRange, exclusive) {
    if (exclusive === void 0) exclusive = false;
    if (date == null) return false;
    var day = clone(date);
    var start = clone(dateRange[0]);
    var end = clone(dateRange[1]);
    day.setHours(0, 0, 0, 0);
    start.setHours(0, 0, 0, 0);
    end.setHours(0, 0, 0, 0);
    return start <= day && day <= end && (!exclusive || !areSameDay(start, day) && !areSameDay(day, end));
}
function isDayRangeInRange(innerRange, outerRange) {
    return (innerRange[0] == null || isDayInRange(innerRange[0], outerRange)) && (innerRange[1] == null || isDayInRange(innerRange[1], outerRange));
}
function isMonthInRange(date, dateRange) {
    if (date == null) return false;
    var day = clone(date);
    var start = clone(dateRange[0]);
    var end = clone(dateRange[1]);
    day.setDate(1);
    start.setDate(1);
    end.setDate(1);
    day.setHours(0, 0, 0, 0);
    start.setHours(0, 0, 0, 0);
    end.setHours(0, 0, 0, 0);
    return start <= day && day <= end;
}
var isTimeEqualOrGreaterThan = function(time, timeToCompare) {
    return time.getTime() >= timeToCompare.getTime();
};
var isTimeEqualOrSmallerThan = function(time, timeToCompare) {
    return time.getTime() <= timeToCompare.getTime();
};
function isTimeInRange(date, minDate, maxDate) {
    var time = getDateOnlyWithTime(date);
    var minTime = getDateOnlyWithTime(minDate);
    var maxTime = getDateOnlyWithTime(maxDate);
    var isTimeGreaterThanMinTime = isTimeEqualOrGreaterThan(time, minTime);
    var isTimeSmallerThanMaxTime = isTimeEqualOrSmallerThan(time, maxTime);
    if (isTimeEqualOrSmallerThan(maxTime, minTime)) return isTimeGreaterThanMinTime || isTimeSmallerThanMaxTime;
    return isTimeGreaterThanMinTime && isTimeSmallerThanMaxTime;
}
function getTimeInRange(time, minTime, maxTime) {
    if (areSameTime(minTime, maxTime)) return maxTime;
    else if (isTimeInRange(time, minTime, maxTime)) return time;
    else if (isTimeSameOrAfter(time, maxTime)) return maxTime;
    return minTime;
}
function isTimeSameOrAfter(date, dateToCompare) {
    var time = getDateOnlyWithTime(date);
    var timeToCompare = getDateOnlyWithTime(dateToCompare);
    return isTimeEqualOrGreaterThan(time, timeToCompare);
}
function getDateBetween(dateRange) {
    var start = dateRange[0].getTime();
    var end = dateRange[1].getTime();
    var middle = start + (end - start) * 0.5;
    return new Date(middle);
}
function getDateTime(date, time) {
    if (date == null) return null;
    else if (time == null) // cannot use default argument because `null` is a common value in this package.
    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);
    else return new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());
}
function getDateOnlyWithTime(date) {
    return new Date(0, 0, 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());
}
function getDatePreviousMonth(date) {
    if (date.getMonth() === _months.Months.JANUARY) return new Date(date.getFullYear() - 1, _months.Months.DECEMBER);
    else return new Date(date.getFullYear(), date.getMonth() - 1);
}
function getDateNextMonth(date) {
    if (date.getMonth() === _months.Months.DECEMBER) return new Date(date.getFullYear() + 1, _months.Months.JANUARY);
    else return new Date(date.getFullYear(), date.getMonth() + 1);
}
function convert24HourMeridiem(hour, toPm) {
    if (hour < 0 || hour > 23) throw new Error("hour must be between [0,23] inclusive: got ".concat(hour));
    return toPm ? hour % 12 + 12 : hour % 12;
}
function getIsPmFrom24Hour(hour) {
    if (hour < 0 || hour > 23) throw new Error("hour must be between [0,23] inclusive: got ".concat(hour));
    return hour >= 12;
}
function get12HourFrom24Hour(hour) {
    if (hour < 0 || hour > 23) throw new Error("hour must be between [0,23] inclusive: got ".concat(hour));
    var newHour = hour % 12;
    return newHour === 0 ? 12 : newHour;
}
function get24HourFrom12Hour(hour, isPm) {
    if (hour < 1 || hour > 12) throw new Error("hour must be between [1,12] inclusive: got ".concat(hour));
    var newHour = hour === 12 ? 0 : hour;
    return isPm ? newHour + 12 : newHour;
}
function isToday(date) {
    return areSameDay(date, new Date());
}

},{"./months":"bCsfG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bCsfG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Months", ()=>Months
);
var Months;
(function(Months1) {
    Months1[Months1["JANUARY"] = 0] = "JANUARY";
    Months1[Months1["FEBRUARY"] = 1] = "FEBRUARY";
    Months1[Months1["MARCH"] = 2] = "MARCH";
    Months1[Months1["APRIL"] = 3] = "APRIL";
    Months1[Months1["MAY"] = 4] = "MAY";
    Months1[Months1["JUNE"] = 5] = "JUNE";
    Months1[Months1["JULY"] = 6] = "JULY";
    Months1[Months1["AUGUST"] = 7] = "AUGUST";
    Months1[Months1["SEPTEMBER"] = 8] = "SEPTEMBER";
    Months1[Months1["OCTOBER"] = 9] = "OCTOBER";
    Months1[Months1["NOVEMBER"] = 10] = "NOVEMBER";
    Months1[Months1["DECEMBER"] = 11] = "DECEMBER";
})(Months || (Months = {}));

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1ryQa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TimeUnit", ()=>TimeUnit
);
/** Returns the given time unit component of the date. */ parcelHelpers.export(exports, "getTimeUnit", ()=>getTimeUnit
);
/** Sets the given time unit to the given time in date object. Modifies given `date` object and returns it. */ parcelHelpers.export(exports, "setTimeUnit", ()=>setTimeUnit
);
/** Returns true if `time` is a valid value */ parcelHelpers.export(exports, "isTimeUnitValid", ()=>isTimeUnitValid
);
/** If unit of time is greater than max, returns min. If less than min, returns max. Otherwise, returns time. */ parcelHelpers.export(exports, "wrapTimeAtUnit", ()=>wrapTimeAtUnit
);
parcelHelpers.export(exports, "getTimeUnitClassName", ()=>getTimeUnitClassName
);
parcelHelpers.export(exports, "getTimeUnitMax", ()=>getTimeUnitMax
);
parcelHelpers.export(exports, "getTimeUnitMin", ()=>getTimeUnitMin
);
parcelHelpers.export(exports, "getDefaultMinTime", ()=>getDefaultMinTime
);
parcelHelpers.export(exports, "getDefaultMaxTime", ()=>getDefaultMaxTime
);
var _classes = require("./classes");
var _dateUtils = require("./dateUtils");
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _a;
var TimeUnit;
(function(TimeUnit1) {
    // NOTE: string enum so we can use it in Record<> type at the end of this file, which requires string keys
    TimeUnit1["HOUR_24"] = "hour24";
    TimeUnit1["HOUR_12"] = "hour12";
    TimeUnit1["MINUTE"] = "minute";
    TimeUnit1["SECOND"] = "second";
    TimeUnit1["MS"] = "ms";
})(TimeUnit || (TimeUnit = {}));
function getTimeUnit(unit, date) {
    switch(unit){
        case TimeUnit.HOUR_24:
            return date.getHours();
        case TimeUnit.HOUR_12:
            return _dateUtils.get12HourFrom24Hour(date.getHours());
        case TimeUnit.MINUTE:
            return date.getMinutes();
        case TimeUnit.SECOND:
            return date.getSeconds();
        case TimeUnit.MS:
            return date.getMilliseconds();
        default:
            throw Error("Invalid TimeUnit");
    }
}
function setTimeUnit(unit, time, date, isPm) {
    switch(unit){
        case TimeUnit.HOUR_24:
            date.setHours(time);
            break;
        case TimeUnit.HOUR_12:
            date.setHours(_dateUtils.get24HourFrom12Hour(time, isPm));
            break;
        case TimeUnit.MINUTE:
            date.setMinutes(time);
            break;
        case TimeUnit.SECOND:
            date.setSeconds(time);
            break;
        case TimeUnit.MS:
            date.setMilliseconds(time);
            break;
        default:
            throw Error("Invalid TimeUnit");
    }
    return date;
}
function isTimeUnitValid(unit, time) {
    return time != null && !isNaN(time) && getTimeUnitMin(unit) <= time && time <= getTimeUnitMax(unit);
}
function wrapTimeAtUnit(unit, time) {
    var max = getTimeUnitMax(unit);
    var min = getTimeUnitMin(unit);
    if (time > max) return min;
    else if (time < min) return max;
    return time;
}
function getTimeUnitClassName(unit) {
    return TimeUnitMetadata[unit].className;
}
function getTimeUnitMax(unit) {
    return TimeUnitMetadata[unit].max;
}
function getTimeUnitMin(unit) {
    return TimeUnitMetadata[unit].min;
}
function getDefaultMinTime() {
    return new Date(0, 0, 0, DEFAULT_MIN_HOUR, DEFAULT_MIN_MINUTE, DEFAULT_MIN_SECOND, DEFAULT_MIN_MILLISECOND);
}
function getDefaultMaxTime() {
    return new Date(0, 0, 0, DEFAULT_MAX_HOUR, DEFAULT_MAX_MINUTE, DEFAULT_MAX_SECOND, DEFAULT_MAX_MILLISECOND);
}
var DEFAULT_MIN_HOUR = 0;
var MERIDIEM_MIN_HOUR = 1;
var DEFAULT_MIN_MINUTE = 0;
var DEFAULT_MIN_SECOND = 0;
var DEFAULT_MIN_MILLISECOND = 0;
var DEFAULT_MAX_HOUR = 23;
var MERIDIEM_MAX_HOUR = 12;
var DEFAULT_MAX_MINUTE = 59;
var DEFAULT_MAX_SECOND = 59;
var DEFAULT_MAX_MILLISECOND = 999;
/**
 * A datastore (internal to this file) mapping TimeUnits to useful information about them.
 * Use the `get*` methods above to access these fields.
 */ var TimeUnitMetadata = (_a = {}, _a[TimeUnit.HOUR_24] = {
    className: _classes.TIMEPICKER_HOUR,
    max: DEFAULT_MAX_HOUR,
    min: DEFAULT_MIN_HOUR
}, _a[TimeUnit.HOUR_12] = {
    className: _classes.TIMEPICKER_HOUR,
    max: MERIDIEM_MAX_HOUR,
    min: MERIDIEM_MIN_HOUR
}, _a[TimeUnit.MINUTE] = {
    className: _classes.TIMEPICKER_MINUTE,
    max: DEFAULT_MAX_MINUTE,
    min: DEFAULT_MIN_MINUTE
}, _a[TimeUnit.SECOND] = {
    className: _classes.TIMEPICKER_SECOND,
    max: DEFAULT_MAX_SECOND,
    min: DEFAULT_MIN_SECOND
}, _a[TimeUnit.MS] = {
    className: _classes.TIMEPICKER_MILLISECOND,
    max: DEFAULT_MAX_MILLISECOND,
    min: DEFAULT_MIN_MILLISECOND
}, _a);

},{"./classes":"fnsy0","./dateUtils":"gv7pK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8eGPa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DateRangeInput", ()=>DateRangeInput
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactDayPicker = require("react-day-picker");
var _reactDayPickerDefault = parcelHelpers.interopDefault(_reactDayPicker);
var _core = require("@blueprintjs/core");
var _dateUtils = require("./common/dateUtils");
var _errors = require("./common/errors");
var _dateFormat = require("./dateFormat");
var _datePickerCore = require("./datePickerCore");
var _dateRangePicker = require("./dateRangePicker");
var DateRangeInput = /** @class */ function(_super) {
    _tslib.__extends(DateRangeInput1, _super);
    function DateRangeInput1(props1, context) {
        var _this = this;
        var _a1, _b1;
        _this = _super.call(this, props1, context) || this;
        _this.startInputElement = null;
        _this.endInputElement = null;
        _this.handleStartInputRef = _core.refHandler(_this, "startInputElement", (_a1 = _this.props.startInputProps) === null || _a1 === void 0 ? void 0 : _a1.inputRef);
        _this.handleEndInputRef = _core.refHandler(_this, "endInputElement", (_b1 = _this.props.endInputProps) === null || _b1 === void 0 ? void 0 : _b1.inputRef);
        _this.renderInputGroup = function(boundary) {
            var inputProps = _this.getInputProps(boundary);
            var handleInputEvent = boundary === _core.Boundary.START ? _this.handleStartInputEvent : _this.handleEndInputEvent;
            return _react.createElement(_core.InputGroup, _tslib.__assign({
                autoComplete: "off",
                disabled: inputProps.disabled || _this.props.disabled
            }, inputProps, {
                intent: _this.isInputInErrorState(boundary) ? _core.Intent.DANGER : inputProps.intent,
                inputRef: _this.getInputRef(boundary),
                onBlur: handleInputEvent,
                onChange: handleInputEvent,
                onClick: handleInputEvent,
                onFocus: handleInputEvent,
                onKeyDown: handleInputEvent,
                onMouseDown: handleInputEvent,
                placeholder: _this.getInputPlaceholderString(boundary),
                value: _this.getInputDisplayString(boundary)
            }));
        };
        // Callbacks - DateRangePicker
        // ===========================
        _this.handleDateRangePickerChange = function(selectedRange, didSubmitWithEnter) {
            var _a, _b;
            if (didSubmitWithEnter === void 0) didSubmitWithEnter = false;
            // ignore mouse events in the date-range picker if the popover is animating closed.
            if (!_this.state.isOpen) return;
            var selectedStart = selectedRange[0], selectedEnd = selectedRange[1];
            var isOpen = true;
            var isStartInputFocused;
            var isEndInputFocused;
            var startHoverString;
            var endHoverString;
            var boundaryToModify;
            if (selectedStart == null) {
                // focus the start field by default or if only an end date is specified
                if (_this.props.timePrecision == null) {
                    isStartInputFocused = true;
                    isEndInputFocused = false;
                } else {
                    isStartInputFocused = false;
                    isEndInputFocused = false;
                    boundaryToModify = _core.Boundary.START;
                }
                // for clarity, hide the hover string until the mouse moves over a different date
                startHoverString = null;
            } else if (selectedEnd == null) {
                // focus the end field if a start date is specified
                if (_this.props.timePrecision == null) {
                    isStartInputFocused = false;
                    isEndInputFocused = true;
                } else {
                    isStartInputFocused = false;
                    isEndInputFocused = false;
                    boundaryToModify = _core.Boundary.END;
                }
                endHoverString = null;
            } else if (_this.props.closeOnSelection) {
                isOpen = _this.getIsOpenValueWhenDateChanges(selectedStart, selectedEnd);
                isStartInputFocused = false;
                if (_this.props.timePrecision == null && didSubmitWithEnter) // if we submit via click or Tab, the focus will have moved already.
                // it we submit with Enter, the focus won't have moved, and setting
                // the flag to false won't have an effect anyway, so leave it true.
                isEndInputFocused = true;
                else {
                    isEndInputFocused = false;
                    boundaryToModify = _core.Boundary.END;
                }
            } else if (_this.state.lastFocusedField === _core.Boundary.START) {
                // keep the start field focused
                if (_this.props.timePrecision == null) {
                    isStartInputFocused = true;
                    isEndInputFocused = false;
                } else {
                    isStartInputFocused = false;
                    isEndInputFocused = false;
                    boundaryToModify = _core.Boundary.START;
                }
            } else if (_this.props.timePrecision == null) {
                // keep the end field focused
                isStartInputFocused = false;
                isEndInputFocused = true;
            } else {
                isStartInputFocused = false;
                isEndInputFocused = false;
                boundaryToModify = _core.Boundary.END;
            }
            var baseStateChange = {
                boundaryToModify: boundaryToModify,
                endHoverString: endHoverString,
                endInputString: _this.formatDate(selectedEnd),
                isEndInputFocused: isEndInputFocused,
                isOpen: isOpen,
                isStartInputFocused: isStartInputFocused,
                startHoverString: startHoverString,
                startInputString: _this.formatDate(selectedStart),
                wasLastFocusChangeDueToHover: false
            };
            if (_this.isControlled()) _this.setState(baseStateChange);
            else _this.setState(_tslib.__assign(_tslib.__assign({}, baseStateChange), {
                selectedEnd: selectedEnd,
                selectedStart: selectedStart
            }));
            (_b = (_a = _this.props).onChange) === null || _b === void 0 || _b.call(_a, selectedRange);
        };
        _this.handleShortcutChange = function(_, selectedShortcutIndex) {
            _this.setState({
                selectedShortcutIndex: selectedShortcutIndex
            });
        };
        _this.handleDateRangePickerHoverChange = function(hoveredRange, _hoveredDay, hoveredBoundary) {
            // ignore mouse events in the date-range picker if the popover is animating closed.
            if (!_this.state.isOpen) return;
            if (hoveredRange == null) {
                // undo whatever focus changes we made while hovering over various calendar dates
                var isEndInputFocused = _this.state.boundaryToModify === _core.Boundary.END;
                _this.setState({
                    endHoverString: null,
                    isEndInputFocused: isEndInputFocused,
                    isStartInputFocused: !isEndInputFocused,
                    lastFocusedField: _this.state.boundaryToModify,
                    startHoverString: null
                });
            } else {
                var hoveredStart = hoveredRange[0], hoveredEnd = hoveredRange[1];
                var isStartInputFocused = hoveredBoundary != null ? hoveredBoundary === _core.Boundary.START : _this.state.isStartInputFocused;
                var isEndInputFocused = hoveredBoundary != null ? hoveredBoundary === _core.Boundary.END : _this.state.isEndInputFocused;
                _this.setState({
                    endHoverString: _this.formatDate(hoveredEnd),
                    isEndInputFocused: isEndInputFocused,
                    isStartInputFocused: isStartInputFocused,
                    lastFocusedField: isStartInputFocused ? _core.Boundary.START : _core.Boundary.END,
                    shouldSelectAfterUpdate: _this.props.selectAllOnFocus,
                    startHoverString: _this.formatDate(hoveredStart),
                    wasLastFocusChangeDueToHover: true
                });
            }
        };
        // Callbacks - Input
        // =================
        // instantiate these two functions once so we don't have to for each callback on each render.
        _this.handleStartInputEvent = function(e) {
            _this.handleInputEvent(e, _core.Boundary.START);
        };
        _this.handleEndInputEvent = function(e) {
            _this.handleInputEvent(e, _core.Boundary.END);
        };
        _this.handleInputEvent = function(e, boundary) {
            var _a, _b, _c, _d, _f, _g;
            var inputProps = _this.getInputProps(boundary);
            switch(e.type){
                case "blur":
                    _this.handleInputBlur(e, boundary);
                    (_a = inputProps.onBlur) === null || _a === void 0 || _a.call(inputProps, e);
                    break;
                case "change":
                    _this.handleInputChange(e, boundary);
                    (_b = inputProps.onChange) === null || _b === void 0 || _b.call(inputProps, e);
                    break;
                case "click":
                    _this.handleInputClick(e);
                    (_c = inputProps.onClick) === null || _c === void 0 || _c.call(inputProps, e);
                    break;
                case "focus":
                    _this.handleInputFocus(e, boundary);
                    (_d = inputProps.onFocus) === null || _d === void 0 || _d.call(inputProps, e);
                    break;
                case "keydown":
                    _this.handleInputKeyDown(e);
                    (_f = inputProps.onKeyDown) === null || _f === void 0 || _f.call(inputProps, e);
                    break;
                case "mousedown":
                    _this.handleInputMouseDown();
                    (_g = inputProps.onMouseDown) === null || _g === void 0 || _g.call(inputProps, e);
                    break;
                default:
                    break;
            }
        };
        // add a keydown listener to persistently change focus when tabbing:
        // - if focused in start field, Tab moves focus to end field
        // - if focused in end field, Shift+Tab moves focus to start field
        _this.handleInputKeyDown = function(e) {
            // HACKHACK: https://github.com/palantir/blueprint/issues/4165
            /* eslint-disable deprecation/deprecation */ var isTabPressed = e.which === _core.Keys.TAB;
            var isEnterPressed = e.which === _core.Keys.ENTER;
            var isShiftPressed = e.shiftKey;
            var _a = _this.state, selectedStart = _a.selectedStart, selectedEnd = _a.selectedEnd;
            // order of JS events is our enemy here. when tabbing between fields,
            // this handler will fire in the middle of a focus exchange when no
            // field is currently focused. we work around this by referring to the
            // most recently focused field, rather than the currently focused field.
            var wasStartFieldFocused = _this.state.lastFocusedField === _core.Boundary.START;
            var wasEndFieldFocused = _this.state.lastFocusedField === _core.Boundary.END;
            // move focus to the other field
            if (isTabPressed) {
                var isEndInputFocused = void 0;
                var isStartInputFocused = void 0;
                var isOpen = true;
                if (wasStartFieldFocused && !isShiftPressed) {
                    isStartInputFocused = false;
                    isEndInputFocused = true;
                    // prevent the default focus-change behavior to avoid race conditions;
                    // we'll handle the focus change ourselves in componentDidUpdate.
                    e.preventDefault();
                } else if (wasEndFieldFocused && isShiftPressed) {
                    isStartInputFocused = true;
                    isEndInputFocused = false;
                    e.preventDefault();
                } else {
                    // don't prevent default here, otherwise Tab won't do anything.
                    isStartInputFocused = false;
                    isEndInputFocused = false;
                    isOpen = false;
                }
                _this.setState({
                    isEndInputFocused: isEndInputFocused,
                    isOpen: isOpen,
                    isStartInputFocused: isStartInputFocused,
                    wasLastFocusChangeDueToHover: false
                });
            } else if (wasStartFieldFocused && isEnterPressed) {
                var nextStartDate = _this.parseDate(_this.state.startInputString);
                _this.handleDateRangePickerChange([
                    nextStartDate,
                    selectedEnd
                ], true);
            } else if (wasEndFieldFocused && isEnterPressed) {
                var nextEndDate = _this.parseDate(_this.state.endInputString);
                _this.handleDateRangePickerChange([
                    selectedStart,
                    nextEndDate
                ], true);
            } else // let the default keystroke happen without side effects
            return;
        };
        _this.handleInputMouseDown = function() {
            // clicking in the field constitutes an explicit focus change. we update
            // the flag on "mousedown" instead of on "click", because it needs to be
            // set before onFocus is called ("click" triggers after "focus").
            _this.setState({
                wasLastFocusChangeDueToHover: false
            });
        };
        _this.handleInputClick = function(e) {
            // unless we stop propagation on this event, a click within an input
            // will close the popover almost as soon as it opens.
            e.stopPropagation();
        };
        _this.handleInputFocus = function(_e, boundary) {
            var _a;
            var _b = _this.getStateKeysAndValuesForBoundary(boundary), keys = _b.keys, values = _b.values;
            var inputString = _dateFormat.getFormattedDateString(values.selectedValue, _this.props, true);
            // change the boundary only if the user explicitly focused in the field.
            // focus changes from hovering don't count; they're just temporary.
            var boundaryToModify = _this.state.wasLastFocusChangeDueToHover ? _this.state.boundaryToModify : boundary;
            _this.setState((_a = {}, _a[keys.inputString] = inputString, _a[keys.isInputFocused] = true, _a.boundaryToModify = boundaryToModify, _a.isOpen = true, _a.lastFocusedField = boundary, _a.shouldSelectAfterUpdate = _this.props.selectAllOnFocus, _a.wasLastFocusChangeDueToHover = false, _a));
        };
        _this.handleInputBlur = function(_e, boundary) {
            var _a, _b, _c, _d;
            var _f, _g;
            var _h = _this.getStateKeysAndValuesForBoundary(boundary), keys = _h.keys, values = _h.values;
            var maybeNextDate = _this.parseDate(values.inputString);
            var isValueControlled = _this.isControlled();
            var nextState = (_a = {}, _a[keys.isInputFocused] = false, _a.shouldSelectAfterUpdate = false, _a);
            if (_this.isInputEmpty(values.inputString)) {
                if (isValueControlled) nextState = _tslib.__assign(_tslib.__assign({}, nextState), (_b = {}, _b[keys.inputString] = _dateFormat.getFormattedDateString(values.controlledValue, _this.props), _b));
                else nextState = _tslib.__assign(_tslib.__assign({}, nextState), (_c = {}, _c[keys.inputString] = null, _c[keys.selectedValue] = null, _c));
            } else if (!_this.isNextDateRangeValid(maybeNextDate, boundary)) {
                if (!isValueControlled) nextState = _tslib.__assign(_tslib.__assign({}, nextState), (_d = {}, _d[keys.inputString] = null, _d[keys.selectedValue] = maybeNextDate, _d));
                (_g = (_f = _this.props).onError) === null || _g === void 0 || _g.call(_f, _this.getDateRangeForCallback(maybeNextDate, boundary));
            }
            _this.setState(nextState);
        };
        _this.handleInputChange = function(e, boundary) {
            var _a, _b, _c, _d, _f;
            var _g, _h, _j, _k;
            var inputString = e.target.value;
            var keys = _this.getStateKeysAndValuesForBoundary(boundary).keys;
            var maybeNextDate = _this.parseDate(inputString);
            var isValueControlled = _this.isControlled();
            var nextState = {
                shouldSelectAfterUpdate: false
            };
            if (inputString.length === 0) {
                // this case will be relevant when we start showing the hovered range in the input
                // fields. goal is to show an empty field for clarity until the mouse moves over a
                // different date.
                var baseState = _tslib.__assign(_tslib.__assign({}, nextState), (_a = {}, _a[keys.inputString] = "", _a));
                if (isValueControlled) nextState = baseState;
                else nextState = _tslib.__assign(_tslib.__assign({}, baseState), (_b = {}, _b[keys.selectedValue] = null, _b));
                (_h = (_g = _this.props).onChange) === null || _h === void 0 || _h.call(_g, _this.getDateRangeForCallback(null, boundary));
            } else if (_this.isDateValidAndInRange(maybeNextDate)) {
                // note that error cases that depend on both fields (e.g. overlapping dates) should fall
                // through into this block so that the UI can update immediately, possibly with an error
                // message on the other field.
                // also, clear the hover string to ensure the most recent keystroke appears.
                var baseState = _tslib.__assign(_tslib.__assign({}, nextState), (_c = {}, _c[keys.hoverString] = null, _c[keys.inputString] = inputString, _c));
                if (isValueControlled) nextState = baseState;
                else nextState = _tslib.__assign(_tslib.__assign({}, baseState), (_d = {}, _d[keys.selectedValue] = maybeNextDate, _d));
                if (_this.isNextDateRangeValid(maybeNextDate, boundary)) (_k = (_j = _this.props).onChange) === null || _k === void 0 || _k.call(_j, _this.getDateRangeForCallback(maybeNextDate, boundary));
            } else // again, clear the hover string to ensure the most recent keystroke appears
            nextState = _tslib.__assign(_tslib.__assign({}, nextState), (_f = {}, _f[keys.inputString] = inputString, _f[keys.hoverString] = null, _f));
            _this.setState(nextState);
        };
        // Callbacks - Popover
        // ===================
        _this.handlePopoverClose = function(event) {
            var _a, _b;
            _this.setState({
                isOpen: false
            });
            (_b = (_a = _this.props.popoverProps).onClose) === null || _b === void 0 || _b.call(_a, event);
        };
        _this.getIsOpenValueWhenDateChanges = function(nextSelectedStart, nextSelectedEnd) {
            if (_this.props.closeOnSelection) {
                // trivial case when TimePicker is not shown
                if (_this.props.timePrecision == null) return false;
                var fallbackDate = new Date(new Date().setHours(0, 0, 0, 0));
                var _a = _this.getSelectedRange([
                    fallbackDate,
                    fallbackDate
                ]), selectedStart = _a[0], selectedEnd = _a[1];
                // case to check if the user has changed TimePicker values
                if (_dateUtils.areSameTime(selectedStart, nextSelectedStart) === true && _dateUtils.areSameTime(selectedEnd, nextSelectedEnd) === true) return false;
                return true;
            }
            return true;
        };
        _this.getInitialRange = function(props) {
            if (props === void 0) props = _this.props;
            var defaultValue = props.defaultValue, value = props.value;
            if (value != null) return value;
            else if (defaultValue != null) return defaultValue;
            else return [
                null,
                null
            ];
        };
        _this.getSelectedRange = function(fallbackRange) {
            var _a;
            var selectedStart;
            var selectedEnd;
            if (_this.isControlled()) _a = _this.props.value, selectedStart = _a[0], selectedEnd = _a[1];
            else {
                selectedStart = _this.state.selectedStart;
                selectedEnd = _this.state.selectedEnd;
            }
            // this helper function checks if the provided boundary date *would* overlap the selected
            // other boundary date. providing the already-selected start date simply tells us if we're
            // currently in an overlapping state.
            var doBoundaryDatesOverlap = _this.doBoundaryDatesOverlap(selectedStart, _core.Boundary.START);
            var dateRange = [
                selectedStart,
                doBoundaryDatesOverlap ? undefined : selectedEnd
            ];
            return dateRange.map(function(selectedBound, index) {
                var fallbackDate = fallbackRange != null ? fallbackRange[index] : undefined;
                return _this.isDateValidAndInRange(selectedBound) ? selectedBound : fallbackDate;
            });
        };
        _this.getInputDisplayString = function(boundary) {
            var values = _this.getStateKeysAndValuesForBoundary(boundary).values;
            var isInputFocused = values.isInputFocused, inputString = values.inputString, selectedValue = values.selectedValue, hoverString = values.hoverString;
            if (hoverString != null) return hoverString;
            else if (isInputFocused) return inputString == null ? "" : inputString;
            else if (selectedValue == null) return "";
            else if (_this.doesEndBoundaryOverlapStartBoundary(selectedValue, boundary)) return _this.props.overlappingDatesMessage;
            else return _dateFormat.getFormattedDateString(selectedValue, _this.props);
        };
        _this.getInputPlaceholderString = function(boundary) {
            var isStartBoundary = boundary === _core.Boundary.START;
            var isEndBoundary = boundary === _core.Boundary.END;
            var inputProps = _this.getInputProps(boundary);
            var isInputFocused = _this.getStateKeysAndValuesForBoundary(boundary).values.isInputFocused;
            // use the custom placeholder text for the input, if providied
            if (inputProps.placeholder != null) return inputProps.placeholder;
            else if (isStartBoundary) return isInputFocused ? _this.state.formattedMinDateString : "Start date";
            else if (isEndBoundary) return isInputFocused ? _this.state.formattedMaxDateString : "End date";
            else return "";
        };
        _this.getInputProps = function(boundary) {
            return boundary === _core.Boundary.START ? _this.props.startInputProps : _this.props.endInputProps;
        };
        _this.getInputRef = function(boundary) {
            return boundary === _core.Boundary.START ? _this.handleStartInputRef : _this.handleEndInputRef;
        };
        _this.getStateKeysAndValuesForBoundary = function(boundary) {
            var controlledRange = _this.props.value;
            if (boundary === _core.Boundary.START) return {
                keys: {
                    hoverString: "startHoverString",
                    inputString: "startInputString",
                    isInputFocused: "isStartInputFocused",
                    selectedValue: "selectedStart"
                },
                values: {
                    controlledValue: controlledRange != null ? controlledRange[0] : undefined,
                    hoverString: _this.state.startHoverString,
                    inputString: _this.state.startInputString,
                    isInputFocused: _this.state.isStartInputFocused,
                    selectedValue: _this.state.selectedStart
                }
            };
            else return {
                keys: {
                    hoverString: "endHoverString",
                    inputString: "endInputString",
                    isInputFocused: "isEndInputFocused",
                    selectedValue: "selectedEnd"
                },
                values: {
                    controlledValue: controlledRange != null ? controlledRange[1] : undefined,
                    hoverString: _this.state.endHoverString,
                    inputString: _this.state.endInputString,
                    isInputFocused: _this.state.isEndInputFocused,
                    selectedValue: _this.state.selectedEnd
                }
            };
        };
        _this.getDateRangeForCallback = function(currDate, currBoundary) {
            var otherBoundary = _this.getOtherBoundary(currBoundary);
            var otherDate = _this.getStateKeysAndValuesForBoundary(otherBoundary).values.selectedValue;
            return currBoundary === _core.Boundary.START ? [
                currDate,
                otherDate
            ] : [
                otherDate,
                currDate
            ];
        };
        _this.getOtherBoundary = function(boundary) {
            return boundary === _core.Boundary.START ? _core.Boundary.END : _core.Boundary.START;
        };
        _this.doBoundaryDatesOverlap = function(date, boundary) {
            var allowSingleDayRange = _this.props.allowSingleDayRange;
            var otherBoundary = _this.getOtherBoundary(boundary);
            var otherBoundaryDate = _this.getStateKeysAndValuesForBoundary(otherBoundary).values.selectedValue;
            if (date == null || otherBoundaryDate == null) return false;
            if (boundary === _core.Boundary.START) {
                var isAfter = date > otherBoundaryDate;
                return isAfter || !allowSingleDayRange && _reactDayPickerDefault.default.DateUtils.isSameDay(date, otherBoundaryDate);
            } else {
                var isBefore = date < otherBoundaryDate;
                return isBefore || !allowSingleDayRange && _reactDayPickerDefault.default.DateUtils.isSameDay(date, otherBoundaryDate);
            }
        };
        /**
         * Returns true if the provided boundary is an END boundary overlapping the
         * selected start date. (If the boundaries overlap, we consider the END
         * boundary to be erroneous.)
         */ _this.doesEndBoundaryOverlapStartBoundary = function(boundaryDate, boundary) {
            return boundary === _core.Boundary.START ? false : _this.doBoundaryDatesOverlap(boundaryDate, boundary);
        };
        _this.isControlled = function() {
            return _this.props.value !== undefined;
        };
        _this.isInputEmpty = function(inputString) {
            return inputString == null || inputString.length === 0;
        };
        _this.isInputInErrorState = function(boundary) {
            var values = _this.getStateKeysAndValuesForBoundary(boundary).values;
            var isInputFocused = values.isInputFocused, hoverString = values.hoverString, inputString = values.inputString, selectedValue = values.selectedValue;
            if (hoverString != null || _this.isInputEmpty(inputString)) // don't show an error state while we're hovering over a valid date.
            return false;
            var boundaryValue = isInputFocused ? _this.parseDate(inputString) : selectedValue;
            return boundaryValue != null && (!_this.isDateValidAndInRange(boundaryValue) || _this.doesEndBoundaryOverlapStartBoundary(boundaryValue, boundary));
        };
        _this.isDateValidAndInRange = function(date) {
            return _dateUtils.isDateValid(date) && _dateUtils.isDayInRange(date, [
                _this.props.minDate,
                _this.props.maxDate
            ]);
        };
        _this.reset(props1);
        return _this;
    }
    /**
     * Public method intended for unit testing only. Do not use in feature work!
     */ DateRangeInput1.prototype.reset = function(props) {
        if (props === void 0) props = this.props;
        var _a = this.getInitialRange(), selectedStart = _a[0], selectedEnd = _a[1];
        this.state = {
            formattedMaxDateString: this.getFormattedMinMaxDateString(props, "maxDate"),
            formattedMinDateString: this.getFormattedMinMaxDateString(props, "minDate"),
            isOpen: false,
            selectedEnd: selectedEnd,
            selectedShortcutIndex: -1,
            selectedStart: selectedStart
        };
    };
    DateRangeInput1.prototype.componentDidUpdate = function(prevProps, prevState) {
        var _a, _b, _c, _d, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        var _r = this.state, isStartInputFocused = _r.isStartInputFocused, isEndInputFocused = _r.isEndInputFocused, shouldSelectAfterUpdate = _r.shouldSelectAfterUpdate;
        if (((_a = prevProps.startInputProps) === null || _a === void 0 ? void 0 : _a.inputRef) !== ((_b = this.props.startInputProps) === null || _b === void 0 ? void 0 : _b.inputRef)) {
            _core.setRef((_c = prevProps.startInputProps) === null || _c === void 0 ? void 0 : _c.inputRef, null);
            this.handleStartInputRef = _core.refHandler(this, "startInputElement", (_d = this.props.startInputProps) === null || _d === void 0 ? void 0 : _d.inputRef);
            _core.setRef((_f = this.props.startInputProps) === null || _f === void 0 ? void 0 : _f.inputRef, this.startInputElement);
        }
        if (((_g = prevProps.endInputProps) === null || _g === void 0 ? void 0 : _g.inputRef) !== ((_h = this.props.endInputProps) === null || _h === void 0 ? void 0 : _h.inputRef)) {
            _core.setRef((_j = prevProps.endInputProps) === null || _j === void 0 ? void 0 : _j.inputRef, null);
            this.handleEndInputRef = _core.refHandler(this, "endInputElement", (_k = this.props.endInputProps) === null || _k === void 0 ? void 0 : _k.inputRef);
            _core.setRef((_l = this.props.endInputProps) === null || _l === void 0 ? void 0 : _l.inputRef, this.endInputElement);
        }
        var shouldFocusStartInput = this.shouldFocusInputRef(isStartInputFocused, this.startInputElement);
        var shouldFocusEndInput = this.shouldFocusInputRef(isEndInputFocused, this.endInputElement);
        if (shouldFocusStartInput) (_m = this.startInputElement) === null || _m === void 0 || _m.focus();
        else if (shouldFocusEndInput) (_o = this.endInputElement) === null || _o === void 0 || _o.focus();
        if (isStartInputFocused && shouldSelectAfterUpdate) (_p = this.startInputElement) === null || _p === void 0 || _p.select();
        else if (isEndInputFocused && shouldSelectAfterUpdate) (_q = this.endInputElement) === null || _q === void 0 || _q.select();
        var nextState = {};
        if (this.props.value !== prevProps.value) {
            var _s = this.getInitialRange(this.props), selectedStart = _s[0], selectedEnd = _s[1];
            nextState = _tslib.__assign(_tslib.__assign({}, nextState), {
                selectedStart: selectedStart,
                selectedEnd: selectedEnd
            });
        }
        // cache the formatted date strings to avoid computing on each render.
        if (this.props.minDate !== prevProps.minDate) {
            var formattedMinDateString = this.getFormattedMinMaxDateString(this.props, "minDate");
            nextState = _tslib.__assign(_tslib.__assign({}, nextState), {
                formattedMinDateString: formattedMinDateString
            });
        }
        if (this.props.maxDate !== prevProps.maxDate) {
            var formattedMaxDateString = this.getFormattedMinMaxDateString(this.props, "maxDate");
            nextState = _tslib.__assign(_tslib.__assign({}, nextState), {
                formattedMaxDateString: formattedMaxDateString
            });
        }
        this.setState(nextState);
    };
    DateRangeInput1.prototype.render = function() {
        var selectedShortcutIndex = this.state.selectedShortcutIndex;
        var _a = this.props.popoverProps, popoverProps = _a === void 0 ? {} : _a;
        var popoverContent = _react.createElement(_dateRangePicker.DateRangePicker, _tslib.__assign({}, this.props, {
            selectedShortcutIndex: selectedShortcutIndex,
            boundaryToModify: this.state.boundaryToModify,
            onChange: this.handleDateRangePickerChange,
            onShortcutChange: this.handleShortcutChange,
            onHoverChange: this.handleDateRangePickerHoverChange,
            value: this.getSelectedRange()
        }));
        var popoverClassName = _classnamesDefault.default(popoverProps.className, this.props.className);
        // allow custom props for the popover and each input group, but pass them in an order that
        // guarantees only some props are overridable.
        return /* eslint-disable-next-line deprecation/deprecation */ _react.createElement(_core.Popover, _tslib.__assign({
            isOpen: this.state.isOpen,
            position: _core.Position.BOTTOM_LEFT
        }, this.props.popoverProps, {
            autoFocus: false,
            className: popoverClassName,
            content: popoverContent,
            enforceFocus: false,
            onClose: this.handlePopoverClose
        }), _react.createElement("div", {
            className: _core.Classes.CONTROL_GROUP
        }, this.renderInputGroup(_core.Boundary.START), this.renderInputGroup(_core.Boundary.END)));
    };
    DateRangeInput1.prototype.validateProps = function(props) {
        if (props.value === null) throw new Error(_errors.DATERANGEINPUT_NULL_VALUE);
    };
    // Helpers
    // =======
    DateRangeInput1.prototype.shouldFocusInputRef = function(isFocused, inputRef) {
        return isFocused && inputRef !== undefined && document.activeElement !== inputRef;
    };
    DateRangeInput1.prototype.isNextDateRangeValid = function(nextDate, boundary) {
        return this.isDateValidAndInRange(nextDate) && !this.doBoundaryDatesOverlap(nextDate, boundary);
    };
    // this is a slightly kludgy function, but it saves us a good amount of repeated code between
    // the constructor and componentDidUpdate.
    DateRangeInput1.prototype.getFormattedMinMaxDateString = function(props, propName) {
        var date = props[propName];
        var defaultDate = DateRangeInput1.defaultProps[propName];
        // default values are applied only if a prop is strictly `undefined`
        // See: https://facebook.github.io/react/docs/react-component.html#defaultprops
        return _dateFormat.getFormattedDateString(date === undefined ? defaultDate : date, this.props);
    };
    DateRangeInput1.prototype.parseDate = function(dateString) {
        if (dateString === this.props.outOfRangeMessage || dateString === this.props.invalidDateMessage) return null;
        var _a = this.props, locale = _a.locale, parseDate = _a.parseDate;
        var newDate = parseDate(dateString, locale);
        return newDate === false ? new Date(undefined) : newDate;
    };
    DateRangeInput1.prototype.formatDate = function(date) {
        if (!this.isDateValidAndInRange(date)) return "";
        var _a = this.props, locale = _a.locale, formatDate = _a.formatDate;
        return formatDate(date, locale);
    };
    DateRangeInput1.defaultProps = {
        allowSingleDayRange: false,
        closeOnSelection: true,
        contiguousCalendarMonths: true,
        dayPickerProps: {},
        disabled: false,
        endInputProps: {},
        invalidDateMessage: "Invalid date",
        maxDate: _datePickerCore.getDefaultMaxDate(),
        minDate: _datePickerCore.getDefaultMinDate(),
        outOfRangeMessage: "Out of range",
        overlappingDatesMessage: "Overlapping dates",
        popoverProps: {},
        selectAllOnFocus: false,
        shortcuts: true,
        singleMonthOnly: false,
        startInputProps: {}
    };
    DateRangeInput1.displayName = "".concat(_core.DISPLAYNAME_PREFIX, ".DateRangeInput");
    return DateRangeInput1;
}(_core.AbstractPureComponent2);

},{"tslib":"cvpWy","classnames":"jocGM","react":"21dqq","react-day-picker":"fRWSE","@blueprintjs/core":"3LcXQ","./common/dateUtils":"gv7pK","./common/errors":"e5U9d","./dateFormat":"h0lxg","./datePickerCore":"1CpwQ","./dateRangePicker":"4Jm3r","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cvpWy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends
);
parcelHelpers.export(exports, "__assign", ()=>__assign
);
parcelHelpers.export(exports, "__rest", ()=>__rest
);
parcelHelpers.export(exports, "__decorate", ()=>__decorate
);
parcelHelpers.export(exports, "__param", ()=>__param
);
parcelHelpers.export(exports, "__metadata", ()=>__metadata
);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter
);
parcelHelpers.export(exports, "__generator", ()=>__generator
);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding
);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar
);
parcelHelpers.export(exports, "__values", ()=>__values
);
parcelHelpers.export(exports, "__read", ()=>__read
);
/** @deprecated */ parcelHelpers.export(exports, "__spread", ()=>__spread
);
/** @deprecated */ parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays
);
parcelHelpers.export(exports, "__spreadArray", ()=>__spreadArray
);
parcelHelpers.export(exports, "__await", ()=>__await
);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator
);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator
);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues
);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject
);
parcelHelpers.export(exports, "__importStar", ()=>__importStar
);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault
);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet
);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet
);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d1, b1) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d1, b1);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: n === "return"
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v1) {
        Promise.resolve(v1).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fRWSE":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _DayPicker = require('./DayPicker');
Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
        return _interopRequireDefault(_DayPicker).default;
    }
});
var _DateUtils = require('./DateUtils');
Object.defineProperty(exports, 'DateUtils', {
    enumerable: true,
    get: function get() {
        return _interopRequireDefault(_DateUtils).default;
    }
});
var _LocaleUtils = require('./LocaleUtils');
Object.defineProperty(exports, 'LocaleUtils', {
    enumerable: true,
    get: function get() {
        return _interopRequireDefault(_LocaleUtils).default;
    }
});
var _ModifiersUtils = require('./ModifiersUtils');
Object.defineProperty(exports, 'ModifiersUtils', {
    enumerable: true,
    get: function get() {
        return _interopRequireDefault(_ModifiersUtils).default;
    }
});
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

},{"./DayPicker":"g1LYL","./DateUtils":"bJNYo","./LocaleUtils":"2X2tT","./ModifiersUtils":"7e0BJ"}],"g1LYL":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ModifiersUtils = exports.LocaleUtils = exports.DateUtils = exports.DayPicker = undefined;
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
    }
    return target;
};
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _Caption = require('./Caption');
var _Caption2 = _interopRequireDefault(_Caption);
var _Navbar = require('./Navbar');
var _Navbar2 = _interopRequireDefault(_Navbar);
var _Month = require('./Month');
var _Month2 = _interopRequireDefault(_Month);
var _Weekday = require('./Weekday');
var _Weekday2 = _interopRequireDefault(_Weekday);
var _Helpers = require('./Helpers');
var Helpers = _interopRequireWildcard(_Helpers);
var _DateUtils = require('./DateUtils');
var DateUtils = _interopRequireWildcard(_DateUtils);
var _LocaleUtils = require('./LocaleUtils');
var LocaleUtils = _interopRequireWildcard(_LocaleUtils);
var _ModifiersUtils = require('./ModifiersUtils');
var ModifiersUtils = _interopRequireWildcard(_ModifiersUtils);
var _classNames = require('./classNames');
var _classNames2 = _interopRequireDefault(_classNames);
var _keys = require('./keys');
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) return obj;
    else {
        var newObj = {};
        if (obj != null) {
            for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
        newObj.default = obj;
        return newObj;
    }
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _objectWithoutProperties(obj, keys) {
    var target = {};
    for(var i in obj){
        if (keys.indexOf(i) >= 0) continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
        target[i] = obj[i];
    }
    return target;
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var DayPicker = exports.DayPicker = function(_Component) {
    _inherits(DayPicker1, _Component);
    function DayPicker1(props) {
        _classCallCheck(this, DayPicker1);
        var _this = _possibleConstructorReturn(this, (DayPicker1.__proto__ || Object.getPrototypeOf(DayPicker1)).call(this, props));
        _this.dayPicker = null;
        _this.showNextMonth = function(callback) {
            if (!_this.allowNextMonth()) return;
            var deltaMonths = _this.props.pagedNavigation ? _this.props.numberOfMonths : 1;
            var nextMonth = DateUtils.addMonths(_this.state.currentMonth, deltaMonths);
            _this.showMonth(nextMonth, callback);
        };
        _this.showPreviousMonth = function(callback) {
            if (!_this.allowPreviousMonth()) return;
            var deltaMonths = _this.props.pagedNavigation ? _this.props.numberOfMonths : 1;
            var previousMonth = DateUtils.addMonths(_this.state.currentMonth, -deltaMonths);
            _this.showMonth(previousMonth, callback);
        };
        _this.handleKeyDown = function(e) {
            e.persist();
            switch(e.keyCode){
                case _keys.LEFT:
                    if (_this.props.dir === 'rtl') _this.showNextMonth();
                    else _this.showPreviousMonth();
                    Helpers.cancelEvent(e);
                    break;
                case _keys.RIGHT:
                    if (_this.props.dir === 'rtl') _this.showPreviousMonth();
                    else _this.showNextMonth();
                    Helpers.cancelEvent(e);
                    break;
                case _keys.UP:
                    _this.showPreviousYear();
                    Helpers.cancelEvent(e);
                    break;
                case _keys.DOWN:
                    _this.showNextYear();
                    Helpers.cancelEvent(e);
                    break;
                default:
                    break;
            }
            if (_this.props.onKeyDown) _this.props.onKeyDown(e);
        };
        _this.handleDayKeyDown = function(day, modifiers, e) {
            e.persist();
            switch(e.keyCode){
                case _keys.LEFT:
                    Helpers.cancelEvent(e);
                    if (_this.props.dir === 'rtl') _this.focusNextDay(e.target);
                    else _this.focusPreviousDay(e.target);
                    break;
                case _keys.RIGHT:
                    Helpers.cancelEvent(e);
                    if (_this.props.dir === 'rtl') _this.focusPreviousDay(e.target);
                    else _this.focusNextDay(e.target);
                    break;
                case _keys.UP:
                    Helpers.cancelEvent(e);
                    _this.focusPreviousWeek(e.target);
                    break;
                case _keys.DOWN:
                    Helpers.cancelEvent(e);
                    _this.focusNextWeek(e.target);
                    break;
                case _keys.ENTER:
                case _keys.SPACE:
                    Helpers.cancelEvent(e);
                    if (_this.props.onDayClick) _this.handleDayClick(day, modifiers, e);
                    break;
                default:
                    break;
            }
            if (_this.props.onDayKeyDown) _this.props.onDayKeyDown(day, modifiers, e);
        };
        _this.handleDayClick = function(day, modifiers, e) {
            e.persist();
            if (modifiers[_this.props.classNames.outside] && _this.props.enableOutsideDaysClick) _this.handleOutsideDayClick(day);
            if (_this.props.onDayClick) _this.props.onDayClick(day, modifiers, e);
        };
        _this.handleTodayButtonClick = function(e) {
            var today = new Date();
            var month = new Date(today.getFullYear(), today.getMonth());
            _this.showMonth(month);
            e.target.blur();
            if (_this.props.onTodayButtonClick) {
                e.persist();
                _this.props.onTodayButtonClick(new Date(today.getFullYear(), today.getMonth(), today.getDate()), ModifiersUtils.getModifiersForDay(today, _this.props.modifiers), e);
            }
        };
        var currentMonth = _this.getCurrentMonthFromProps(props);
        _this.state = {
            currentMonth: currentMonth
        };
        return _this;
    }
    _createClass(DayPicker1, [
        {
            key: 'componentDidUpdate',
            value: function componentDidUpdate(prevProps) {
                // Changing the `month` props means changing the current displayed month
                if (prevProps.month !== this.props.month && !DateUtils.isSameMonth(prevProps.month, this.props.month)) {
                    var currentMonth = this.getCurrentMonthFromProps(this.props);
                    // eslint-disable-next-line react/no-did-update-set-state
                    this.setState({
                        currentMonth: currentMonth
                    });
                }
            }
        },
        {
            key: 'getCurrentMonthFromProps',
            /**
     * Return the month to be shown in the calendar based on the component props.
     *
     * @param {Object} props
     * @returns Date
     * @memberof DayPicker
     * @private
     */ value: function getCurrentMonthFromProps(props) {
                var initialMonth = Helpers.startOfMonth(props.month || props.initialMonth || new Date());
                var currentMonth = initialMonth;
                if (props.pagedNavigation && props.numberOfMonths > 1 && props.fromMonth) {
                    var fromMonth = Helpers.startOfMonth(props.fromMonth);
                    var diffInMonths = Helpers.getMonthsDiff(fromMonth, currentMonth);
                    currentMonth = DateUtils.addMonths(fromMonth, Math.floor(diffInMonths / props.numberOfMonths) * props.numberOfMonths);
                } else if (props.toMonth && props.numberOfMonths > 1 && Helpers.getMonthsDiff(currentMonth, props.toMonth) <= 0) currentMonth = DateUtils.addMonths(Helpers.startOfMonth(props.toMonth), 1 - this.props.numberOfMonths);
                return currentMonth;
            }
        },
        {
            key: 'getNextNavigableMonth',
            value: function getNextNavigableMonth() {
                return DateUtils.addMonths(this.state.currentMonth, this.props.numberOfMonths);
            }
        },
        {
            key: 'getPreviousNavigableMonth',
            value: function getPreviousNavigableMonth() {
                return DateUtils.addMonths(this.state.currentMonth, -1);
            }
        },
        {
            key: 'allowPreviousMonth',
            value: function allowPreviousMonth() {
                var previousMonth = DateUtils.addMonths(this.state.currentMonth, -1);
                return this.allowMonth(previousMonth);
            }
        },
        {
            key: 'allowNextMonth',
            value: function allowNextMonth() {
                var nextMonth = DateUtils.addMonths(this.state.currentMonth, this.props.numberOfMonths);
                return this.allowMonth(nextMonth);
            }
        },
        {
            key: 'allowMonth',
            value: function allowMonth(d) {
                var _props = this.props, fromMonth = _props.fromMonth, toMonth = _props.toMonth, canChangeMonth = _props.canChangeMonth;
                if (!canChangeMonth || fromMonth && Helpers.getMonthsDiff(fromMonth, d) < 0 || toMonth && Helpers.getMonthsDiff(toMonth, d) > 0) return false;
                return true;
            }
        },
        {
            key: 'allowYearChange',
            value: function allowYearChange() {
                return this.props.canChangeMonth;
            }
        },
        {
            key: 'showMonth',
            value: function showMonth(d, callback) {
                var _this2 = this;
                if (!this.allowMonth(d)) return;
                this.setState({
                    currentMonth: Helpers.startOfMonth(d)
                }, function() {
                    if (callback) callback();
                    if (_this2.props.onMonthChange) _this2.props.onMonthChange(_this2.state.currentMonth);
                });
            }
        },
        {
            key: 'showNextYear',
            value: function showNextYear() {
                if (!this.allowYearChange()) return;
                var nextMonth = DateUtils.addMonths(this.state.currentMonth, 12);
                this.showMonth(nextMonth);
            }
        },
        {
            key: 'showPreviousYear',
            value: function showPreviousYear() {
                if (!this.allowYearChange()) return;
                var nextMonth = DateUtils.addMonths(this.state.currentMonth, -12);
                this.showMonth(nextMonth);
            }
        },
        {
            key: 'focus',
            value: function focus() {
                this.wrapper.focus();
            }
        },
        {
            key: 'focusFirstDayOfMonth',
            value: function focusFirstDayOfMonth() {
                Helpers.getDayNodes(this.dayPicker, this.props.classNames)[0].focus();
            }
        },
        {
            key: 'focusLastDayOfMonth',
            value: function focusLastDayOfMonth() {
                var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
                dayNodes[dayNodes.length - 1].focus();
            }
        },
        {
            key: 'focusPreviousDay',
            value: function focusPreviousDay(dayNode) {
                var _this3 = this;
                var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
                var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
                if (dayNodeIndex === -1) return;
                if (dayNodeIndex === 0) this.showPreviousMonth(function() {
                    return _this3.focusLastDayOfMonth();
                });
                else dayNodes[dayNodeIndex - 1].focus();
            }
        },
        {
            key: 'focusNextDay',
            value: function focusNextDay(dayNode) {
                var _this4 = this;
                var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
                var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
                if (dayNodeIndex === -1) return;
                if (dayNodeIndex === dayNodes.length - 1) this.showNextMonth(function() {
                    return _this4.focusFirstDayOfMonth();
                });
                else dayNodes[dayNodeIndex + 1].focus();
            }
        },
        {
            key: 'focusNextWeek',
            value: function focusNextWeek(dayNode) {
                var _this5 = this;
                var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
                var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
                var isInLastWeekOfMonth = dayNodeIndex > dayNodes.length - 8;
                if (isInLastWeekOfMonth) this.showNextMonth(function() {
                    var daysAfterIndex = dayNodes.length - dayNodeIndex;
                    var nextMonthDayNodeIndex = 7 - daysAfterIndex;
                    Helpers.getDayNodes(_this5.dayPicker, _this5.props.classNames)[nextMonthDayNodeIndex].focus();
                });
                else dayNodes[dayNodeIndex + 7].focus();
            }
        },
        {
            key: 'focusPreviousWeek',
            value: function focusPreviousWeek(dayNode) {
                var _this6 = this;
                var dayNodes = Helpers.getDayNodes(this.dayPicker, this.props.classNames);
                var dayNodeIndex = Helpers.nodeListToArray(dayNodes).indexOf(dayNode);
                var isInFirstWeekOfMonth = dayNodeIndex <= 6;
                if (isInFirstWeekOfMonth) this.showPreviousMonth(function() {
                    var previousMonthDayNodes = Helpers.getDayNodes(_this6.dayPicker, _this6.props.classNames);
                    var startOfLastWeekOfMonth = previousMonthDayNodes.length - 7;
                    var previousMonthDayNodeIndex = startOfLastWeekOfMonth + dayNodeIndex;
                    previousMonthDayNodes[previousMonthDayNodeIndex].focus();
                });
                else dayNodes[dayNodeIndex - 7].focus();
            }
        },
        {
            key: 'handleOutsideDayClick',
            value: function handleOutsideDayClick(day) {
                var currentMonth = this.state.currentMonth;
                var numberOfMonths = this.props.numberOfMonths;
                var diffInMonths = Helpers.getMonthsDiff(currentMonth, day);
                if (diffInMonths > 0 && diffInMonths >= numberOfMonths) this.showNextMonth();
                else if (diffInMonths < 0) this.showPreviousMonth();
            }
        },
        {
            key: 'renderNavbar',
            value: function renderNavbar() {
                var _props2 = this.props, labels = _props2.labels, locale = _props2.locale, localeUtils = _props2.localeUtils, canChangeMonth = _props2.canChangeMonth, navbarElement = _props2.navbarElement, attributes = _objectWithoutProperties(_props2, [
                    'labels',
                    'locale',
                    'localeUtils',
                    'canChangeMonth',
                    'navbarElement'
                ]);
                if (!canChangeMonth) return null;
                var props = {
                    month: this.state.currentMonth,
                    classNames: this.props.classNames,
                    className: this.props.classNames.navBar,
                    nextMonth: this.getNextNavigableMonth(),
                    previousMonth: this.getPreviousNavigableMonth(),
                    showPreviousButton: this.allowPreviousMonth(),
                    showNextButton: this.allowNextMonth(),
                    onNextClick: this.showNextMonth,
                    onPreviousClick: this.showPreviousMonth,
                    dir: attributes.dir,
                    labels: labels,
                    locale: locale,
                    localeUtils: localeUtils
                };
                return _react2.default.isValidElement(navbarElement) ? _react2.default.cloneElement(navbarElement, props) : _react2.default.createElement(navbarElement, props);
            }
        },
        {
            key: 'renderMonths',
            value: function renderMonths() {
                var months = [];
                var firstDayOfWeek = Helpers.getFirstDayOfWeekFromProps(this.props);
                for(var i = 0; i < this.props.numberOfMonths; i += 1){
                    var month = DateUtils.addMonths(this.state.currentMonth, i);
                    months.push(_react2.default.createElement(_Month2.default, _extends({
                        key: i
                    }, this.props, {
                        month: month,
                        firstDayOfWeek: firstDayOfWeek,
                        onDayKeyDown: this.handleDayKeyDown,
                        onDayClick: this.handleDayClick
                    })));
                }
                if (this.props.reverseMonths) months.reverse();
                return months;
            }
        },
        {
            key: 'renderFooter',
            value: function renderFooter() {
                if (this.props.todayButton) return _react2.default.createElement('div', {
                    className: this.props.classNames.footer
                }, this.renderTodayButton());
                return null;
            }
        },
        {
            key: 'renderTodayButton',
            value: function renderTodayButton() {
                return _react2.default.createElement('button', {
                    type: 'button',
                    tabIndex: 0,
                    className: this.props.classNames.todayButton,
                    'aria-label': this.props.todayButton,
                    onClick: this.handleTodayButtonClick
                }, this.props.todayButton);
            }
        },
        {
            key: 'render',
            value: function render() {
                var _this7 = this;
                var className = this.props.classNames.container;
                if (!this.props.onDayClick) className = className + ' ' + this.props.classNames.interactionDisabled;
                if (this.props.className) className = className + ' ' + this.props.className;
                return _react2.default.createElement('div', _extends({}, this.props.containerProps, {
                    className: className,
                    ref: function ref(el) {
                        return _this7.dayPicker = el;
                    },
                    lang: this.props.locale
                }), _react2.default.createElement('div', {
                    className: this.props.classNames.wrapper,
                    ref: function ref(el) {
                        return _this7.wrapper = el;
                    },
                    tabIndex: this.props.canChangeMonth && typeof this.props.tabIndex !== 'undefined' ? this.props.tabIndex : -1,
                    onKeyDown: this.handleKeyDown,
                    onFocus: this.props.onFocus,
                    onBlur: this.props.onBlur
                }, this.renderNavbar(), _react2.default.createElement('div', {
                    className: this.props.classNames.months
                }, this.renderMonths()), this.renderFooter()));
            }
        }
    ]);
    return DayPicker1;
}(_react.Component);
DayPicker.defaultProps = {
    classNames: _classNames2.default,
    tabIndex: 0,
    numberOfMonths: 1,
    labels: {
        previousMonth: 'Previous Month',
        nextMonth: 'Next Month'
    },
    locale: 'en',
    localeUtils: LocaleUtils,
    showOutsideDays: false,
    enableOutsideDaysClick: true,
    fixedWeeks: false,
    canChangeMonth: true,
    reverseMonths: false,
    pagedNavigation: false,
    showWeekNumbers: false,
    showWeekDays: true,
    renderDay: function renderDay(day) {
        return day.getDate();
    },
    renderWeek: function renderWeek(weekNumber) {
        return weekNumber;
    },
    weekdayElement: _react2.default.createElement(_Weekday2.default, null),
    navbarElement: _react2.default.createElement(_Navbar2.default, {
        classNames: _classNames2.default
    }),
    captionElement: _react2.default.createElement(_Caption2.default, {
        classNames: _classNames2.default
    })
};
DayPicker.VERSION = '7.4.8';
DayPicker.DateUtils = DateUtils;
DayPicker.LocaleUtils = LocaleUtils;
DayPicker.ModifiersUtils = ModifiersUtils;
exports.DateUtils = DateUtils;
exports.LocaleUtils = LocaleUtils;
exports.ModifiersUtils = ModifiersUtils;
exports.default = DayPicker;

},{"react":"21dqq","./Caption":"g2MGx","./Navbar":"h6RO4","./Month":"5Prza","./Weekday":"hZYFT","./Helpers":"5rQEg","./DateUtils":"bJNYo","./LocaleUtils":"2X2tT","./ModifiersUtils":"7e0BJ","./classNames":"eEaDk","./keys":"bFngm"}],"g2MGx":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _LocaleUtils = require('./LocaleUtils');
var _LocaleUtils2 = _interopRequireDefault(_LocaleUtils);
var _keys = require('./keys');
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Caption = function(_Component) {
    _inherits(Caption1, _Component);
    function Caption1(props) {
        _classCallCheck(this, Caption1);
        var _this = _possibleConstructorReturn(this, (Caption1.__proto__ || Object.getPrototypeOf(Caption1)).call(this, props));
        _this.handleKeyUp = _this.handleKeyUp.bind(_this);
        return _this;
    }
    _createClass(Caption1, [
        {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps) {
                return nextProps.locale !== this.props.locale || nextProps.classNames !== this.props.classNames || nextProps.date.getMonth() !== this.props.date.getMonth() || nextProps.date.getFullYear() !== this.props.date.getFullYear();
            }
        },
        {
            key: 'handleKeyUp',
            value: function handleKeyUp(e) {
                if (e.keyCode === _keys.ENTER) this.props.onClick(e);
            }
        },
        {
            key: 'render',
            value: function render() {
                var _props = this.props, classNames = _props.classNames, date = _props.date, months = _props.months, locale = _props.locale, localeUtils = _props.localeUtils, onClick = _props.onClick;
                return _react2.default.createElement('div', {
                    className: classNames.caption,
                    role: 'heading',
                    'aria-live': 'polite'
                }, _react2.default.createElement('div', {
                    onClick: onClick,
                    onKeyUp: this.handleKeyUp
                }, months ? months[date.getMonth()] + ' ' + date.getFullYear() : localeUtils.formatMonthTitle(date, locale)));
            }
        }
    ]);
    return Caption1;
}(_react.Component);
Caption.defaultProps = {
    localeUtils: _LocaleUtils2.default
};
exports.default = Caption;

},{"react":"21dqq","./LocaleUtils":"2X2tT","./keys":"bFngm"}],"2X2tT":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.formatDay = formatDay;
exports.formatMonthTitle = formatMonthTitle;
exports.formatWeekdayShort = formatWeekdayShort;
exports.formatWeekdayLong = formatWeekdayLong;
exports.getFirstDayOfWeek = getFirstDayOfWeek;
exports.getMonths = getMonths;
var WEEKDAYS_LONG = [
    'Sunday',
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday'
];
var WEEKDAYS_SHORT = [
    'Su',
    'Mo',
    'Tu',
    'We',
    'Th',
    'Fr',
    'Sa'
];
var MONTHS = [
    'January',
    'February',
    'March',
    'April',
    'May',
    'June',
    'July',
    'August',
    'September',
    'October',
    'November',
    'December'
];
function formatDay(day) {
    return day.toDateString();
}
function formatMonthTitle(d) {
    return MONTHS[d.getMonth()] + ' ' + d.getFullYear();
}
function formatWeekdayShort(i) {
    return WEEKDAYS_SHORT[i];
}
function formatWeekdayLong(i) {
    return WEEKDAYS_LONG[i];
}
function getFirstDayOfWeek() {
    return 0;
}
function getMonths() {
    return MONTHS;
}
exports.default = {
    formatDay: formatDay,
    formatMonthTitle: formatMonthTitle,
    formatWeekdayShort: formatWeekdayShort,
    formatWeekdayLong: formatWeekdayLong,
    getFirstDayOfWeek: getFirstDayOfWeek,
    getMonths: getMonths
};

},{}],"bFngm":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
var LEFT = exports.LEFT = 37;
var UP = exports.UP = 38;
var RIGHT = exports.RIGHT = 39;
var DOWN = exports.DOWN = 40;
var ENTER = exports.ENTER = 13;
var SPACE = exports.SPACE = 32;
var ESC = exports.ESC = 27;
var TAB = exports.TAB = 9;

},{}],"h6RO4":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _classNames = require('./classNames');
var _classNames2 = _interopRequireDefault(_classNames);
var _keys = require('./keys');
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Navbar = function(_Component) {
    _inherits(Navbar1, _Component);
    function Navbar1() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Navbar1);
        for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Navbar1.__proto__ || Object.getPrototypeOf(Navbar1)).call.apply(_ref, [
            this
        ].concat(args))), _this), _this.handleNextClick = function() {
            if (_this.props.onNextClick) _this.props.onNextClick();
        }, _this.handlePreviousClick = function() {
            if (_this.props.onPreviousClick) _this.props.onPreviousClick();
        }, _this.handleNextKeyDown = function(e) {
            if (e.keyCode !== _keys.ENTER && e.keyCode !== _keys.SPACE) return;
            e.preventDefault();
            _this.handleNextClick();
        }, _this.handlePreviousKeyDown = function(e) {
            if (e.keyCode !== _keys.ENTER && e.keyCode !== _keys.SPACE) return;
            e.preventDefault();
            _this.handlePreviousClick();
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }
    _createClass(Navbar1, [
        {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps) {
                return nextProps.labels !== this.props.labels || nextProps.dir !== this.props.dir || this.props.showPreviousButton !== nextProps.showPreviousButton || this.props.showNextButton !== nextProps.showNextButton;
            }
        },
        {
            key: 'render',
            value: function render() {
                var _props = this.props, classNames = _props.classNames, className = _props.className, showPreviousButton = _props.showPreviousButton, showNextButton = _props.showNextButton, labels = _props.labels, dir = _props.dir;
                var previousClickHandler = void 0;
                var nextClickHandler = void 0;
                var previousKeyDownHandler = void 0;
                var nextKeyDownHandler = void 0;
                var shouldShowPrevious = void 0;
                var shouldShowNext = void 0;
                if (dir === 'rtl') {
                    previousClickHandler = this.handleNextClick;
                    nextClickHandler = this.handlePreviousClick;
                    previousKeyDownHandler = this.handleNextKeyDown;
                    nextKeyDownHandler = this.handlePreviousKeyDown;
                    shouldShowNext = showPreviousButton;
                    shouldShowPrevious = showNextButton;
                } else {
                    previousClickHandler = this.handlePreviousClick;
                    nextClickHandler = this.handleNextClick;
                    previousKeyDownHandler = this.handlePreviousKeyDown;
                    nextKeyDownHandler = this.handleNextKeyDown;
                    shouldShowNext = showNextButton;
                    shouldShowPrevious = showPreviousButton;
                }
                var previousClassName = shouldShowPrevious ? classNames.navButtonPrev : classNames.navButtonPrev + ' ' + classNames.navButtonInteractionDisabled;
                var nextClassName = shouldShowNext ? classNames.navButtonNext : classNames.navButtonNext + ' ' + classNames.navButtonInteractionDisabled;
                var previousButton = _react2.default.createElement('span', {
                    tabIndex: '0',
                    role: 'button',
                    'aria-label': labels.previousMonth,
                    key: 'previous',
                    className: previousClassName,
                    onKeyDown: shouldShowPrevious ? previousKeyDownHandler : undefined,
                    onClick: shouldShowPrevious ? previousClickHandler : undefined
                });
                var nextButton = _react2.default.createElement('span', {
                    tabIndex: '0',
                    role: 'button',
                    'aria-label': labels.nextMonth,
                    key: 'right',
                    className: nextClassName,
                    onKeyDown: shouldShowNext ? nextKeyDownHandler : undefined,
                    onClick: shouldShowNext ? nextClickHandler : undefined
                });
                return _react2.default.createElement('div', {
                    className: className || classNames.navBar
                }, dir === 'rtl' ? [
                    nextButton,
                    previousButton
                ] : [
                    previousButton,
                    nextButton
                ]);
            }
        }
    ]);
    return Navbar1;
}(_react.Component);
Navbar.defaultProps = {
    classNames: _classNames2.default,
    dir: 'ltr',
    labels: {
        previousMonth: 'Previous Month',
        nextMonth: 'Next Month'
    },
    showPreviousButton: true,
    showNextButton: true
};
exports.default = Navbar;

},{"react":"21dqq","./classNames":"eEaDk","./keys":"bFngm"}],"eEaDk":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
// Proxy object to map classnames when css modules are not used
exports.default = {
    container: 'DayPicker',
    wrapper: 'DayPicker-wrapper',
    interactionDisabled: 'DayPicker--interactionDisabled',
    months: 'DayPicker-Months',
    month: 'DayPicker-Month',
    navBar: 'DayPicker-NavBar',
    navButtonPrev: 'DayPicker-NavButton DayPicker-NavButton--prev',
    navButtonNext: 'DayPicker-NavButton DayPicker-NavButton--next',
    navButtonInteractionDisabled: 'DayPicker-NavButton--interactionDisabled',
    caption: 'DayPicker-Caption',
    weekdays: 'DayPicker-Weekdays',
    weekdaysRow: 'DayPicker-WeekdaysRow',
    weekday: 'DayPicker-Weekday',
    body: 'DayPicker-Body',
    week: 'DayPicker-Week',
    weekNumber: 'DayPicker-WeekNumber',
    day: 'DayPicker-Day',
    footer: 'DayPicker-Footer',
    todayButton: 'DayPicker-TodayButton',
    // default modifiers
    today: 'today',
    selected: 'selected',
    disabled: 'disabled',
    outside: 'outside'
};

},{}],"5Prza":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _Weekdays = require('./Weekdays');
var _Weekdays2 = _interopRequireDefault(_Weekdays);
var _Day = require('./Day');
var _Day2 = _interopRequireDefault(_Day);
var _keys = require('./keys');
var _ModifiersUtils = require('./ModifiersUtils');
var ModifiersUtils = _interopRequireWildcard(_ModifiersUtils);
var _Helpers = require('./Helpers');
var Helpers = _interopRequireWildcard(_Helpers);
var _DateUtils = require('./DateUtils');
var DateUtils = _interopRequireWildcard(_DateUtils);
function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) return obj;
    else {
        var newObj = {};
        if (obj != null) {
            for(var key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
        newObj.default = obj;
        return newObj;
    }
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Month = function(_Component) {
    _inherits(Month1, _Component);
    function Month1() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Month1);
        for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Month1.__proto__ || Object.getPrototypeOf(Month1)).call.apply(_ref, [
            this
        ].concat(args))), _this), _this.renderDay = function(day) {
            var monthNumber = _this.props.month.getMonth();
            var propModifiers = Helpers.getModifiersFromProps(_this.props);
            var dayModifiers = ModifiersUtils.getModifiersForDay(day, propModifiers);
            if (DateUtils.isSameDay(day, new Date()) && !Object.prototype.hasOwnProperty.call(propModifiers, _this.props.classNames.today)) dayModifiers.push(_this.props.classNames.today);
            if (day.getMonth() !== monthNumber) dayModifiers.push(_this.props.classNames.outside);
            var isOutside = day.getMonth() !== monthNumber;
            var tabIndex = -1;
            // Focus on the first day of the month
            if (_this.props.onDayClick && !isOutside && day.getDate() === 1) tabIndex = _this.props.tabIndex; // eslint-disable-line prefer-destructuring
            var key = '' + day.getFullYear() + day.getMonth() + day.getDate();
            var modifiers = {};
            dayModifiers.forEach(function(modifier) {
                modifiers[modifier] = true;
            });
            return _react2.default.createElement(_Day2.default, {
                key: '' + (isOutside ? 'outside-' : '') + key,
                classNames: _this.props.classNames,
                day: day,
                modifiers: modifiers,
                modifiersStyles: _this.props.modifiersStyles,
                empty: isOutside && !_this.props.showOutsideDays && !_this.props.fixedWeeks,
                tabIndex: tabIndex,
                ariaLabel: _this.props.localeUtils.formatDay(day, _this.props.locale),
                ariaDisabled: isOutside || dayModifiers.indexOf(_this.props.classNames.disabled) > -1,
                ariaSelected: dayModifiers.indexOf(_this.props.classNames.selected) > -1,
                onClick: _this.props.onDayClick,
                onFocus: _this.props.onDayFocus,
                onKeyDown: _this.props.onDayKeyDown,
                onMouseEnter: _this.props.onDayMouseEnter,
                onMouseLeave: _this.props.onDayMouseLeave,
                onMouseDown: _this.props.onDayMouseDown,
                onMouseUp: _this.props.onDayMouseUp,
                onTouchEnd: _this.props.onDayTouchEnd,
                onTouchStart: _this.props.onDayTouchStart
            }, _this.props.renderDay(day, modifiers));
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }
    _createClass(Month1, [
        {
            key: 'render',
            value: function render() {
                var _this2 = this;
                var _props = this.props, classNames = _props.classNames, month = _props.month, months = _props.months, fixedWeeks = _props.fixedWeeks, captionElement = _props.captionElement, weekdayElement = _props.weekdayElement, locale = _props.locale, localeUtils = _props.localeUtils, weekdaysLong = _props.weekdaysLong, weekdaysShort = _props.weekdaysShort, firstDayOfWeek = _props.firstDayOfWeek, onCaptionClick = _props.onCaptionClick, showWeekNumbers = _props.showWeekNumbers, showWeekDays = _props.showWeekDays, onWeekClick = _props.onWeekClick;
                var captionProps = {
                    date: month,
                    classNames: classNames,
                    months: months,
                    localeUtils: localeUtils,
                    locale: locale,
                    onClick: onCaptionClick ? function(e) {
                        return onCaptionClick(month, e);
                    } : undefined
                };
                var caption = _react2.default.isValidElement(captionElement) ? _react2.default.cloneElement(captionElement, captionProps) : _react2.default.createElement(captionElement, captionProps);
                var weeks = Helpers.getWeekArray(month, firstDayOfWeek, fixedWeeks);
                return _react2.default.createElement('div', {
                    className: classNames.month,
                    role: 'grid'
                }, caption, showWeekDays && _react2.default.createElement(_Weekdays2.default, {
                    classNames: classNames,
                    weekdaysShort: weekdaysShort,
                    weekdaysLong: weekdaysLong,
                    firstDayOfWeek: firstDayOfWeek,
                    showWeekNumbers: showWeekNumbers,
                    locale: locale,
                    localeUtils: localeUtils,
                    weekdayElement: weekdayElement
                }), _react2.default.createElement('div', {
                    className: classNames.body,
                    role: 'rowgroup'
                }, weeks.map(function(week) {
                    var weekNumber = void 0;
                    if (showWeekNumbers) weekNumber = DateUtils.getWeekNumber(week[6]);
                    return _react2.default.createElement('div', {
                        key: week[0].getTime(),
                        className: classNames.week,
                        role: 'row'
                    }, showWeekNumbers && _react2.default.createElement('div', {
                        className: classNames.weekNumber,
                        tabIndex: onWeekClick ? 0 : -1,
                        role: 'gridcell',
                        onClick: onWeekClick ? function(e) {
                            return onWeekClick(weekNumber, week, e);
                        } : undefined,
                        onKeyUp: onWeekClick ? function(e) {
                            return e.keyCode === _keys.ENTER && onWeekClick(weekNumber, week, e);
                        } : undefined
                    }, _this2.props.renderWeek(weekNumber, week, month)), week.map(_this2.renderDay));
                })));
            }
        }
    ]);
    return Month1;
}(_react.Component);
exports.default = Month;

},{"react":"21dqq","./Weekdays":"bGuU6","./Day":"dkvp6","./keys":"bFngm","./ModifiersUtils":"7e0BJ","./Helpers":"5rQEg","./DateUtils":"bJNYo"}],"bGuU6":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Weekdays = function(_Component) {
    _inherits(Weekdays1, _Component);
    function Weekdays1() {
        _classCallCheck(this, Weekdays1);
        return _possibleConstructorReturn(this, (Weekdays1.__proto__ || Object.getPrototypeOf(Weekdays1)).apply(this, arguments));
    }
    _createClass(Weekdays1, [
        {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps) {
                return this.props !== nextProps;
            }
        },
        {
            key: 'render',
            value: function render() {
                var _props = this.props, classNames = _props.classNames, firstDayOfWeek = _props.firstDayOfWeek, showWeekNumbers = _props.showWeekNumbers, weekdaysLong = _props.weekdaysLong, weekdaysShort = _props.weekdaysShort, locale = _props.locale, localeUtils = _props.localeUtils, weekdayElement = _props.weekdayElement;
                var days = [];
                for(var i = 0; i < 7; i += 1){
                    var weekday = (i + firstDayOfWeek) % 7;
                    var elementProps = {
                        key: i,
                        className: classNames.weekday,
                        weekday: weekday,
                        weekdaysLong: weekdaysLong,
                        weekdaysShort: weekdaysShort,
                        localeUtils: localeUtils,
                        locale: locale
                    };
                    var element = _react2.default.isValidElement(weekdayElement) ? _react2.default.cloneElement(weekdayElement, elementProps) : _react2.default.createElement(weekdayElement, elementProps);
                    days.push(element);
                }
                return _react2.default.createElement('div', {
                    className: classNames.weekdays,
                    role: 'rowgroup'
                }, _react2.default.createElement('div', {
                    className: classNames.weekdaysRow,
                    role: 'row'
                }, showWeekNumbers && _react2.default.createElement('div', {
                    className: classNames.weekday
                }), days));
            }
        }
    ]);
    return Weekdays1;
}(_react.Component);
exports.default = Weekdays;

},{"react":"21dqq"}],"dkvp6":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
    }
    return target;
};
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
var _DateUtils = require('./DateUtils');
var _Helpers = require('./Helpers');
var _classNames = require('./classNames');
var _classNames2 = _interopRequireDefault(_classNames);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
} /* eslint-disable jsx-a11y/no-static-element-interactions, react/forbid-prop-types */ 
function handleEvent(handler, day, modifiers) {
    if (!handler) return undefined;
    return function(e) {
        e.persist();
        handler(day, modifiers, e);
    };
}
var Day = function(_Component) {
    _inherits(Day1, _Component);
    function Day1() {
        _classCallCheck(this, Day1);
        return _possibleConstructorReturn(this, (Day1.__proto__ || Object.getPrototypeOf(Day1)).apply(this, arguments));
    }
    _createClass(Day1, [
        {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps) {
                var _this2 = this;
                var propNames = Object.keys(this.props);
                var nextPropNames = Object.keys(nextProps);
                if (propNames.length !== nextPropNames.length) return true;
                return propNames.some(function(name) {
                    if (name === 'modifiers' || name === 'modifiersStyles' || name === 'classNames') {
                        var prop = _this2.props[name];
                        var nextProp = nextProps[name];
                        var modifiers = Object.keys(prop);
                        var nextModifiers = Object.keys(nextProp);
                        if (modifiers.length !== nextModifiers.length) return true;
                        return modifiers.some(function(mod) {
                            return !(0, _Helpers.hasOwnProp)(nextProp, mod) || prop[mod] !== nextProp[mod];
                        });
                    }
                    if (name === 'day') return !(0, _DateUtils.isSameDay)(_this2.props[name], nextProps[name]);
                    return !(0, _Helpers.hasOwnProp)(nextProps, name) || _this2.props[name] !== nextProps[name];
                });
            }
        },
        {
            key: 'render',
            value: function render() {
                var _props = this.props, classNames = _props.classNames, modifiersStyles = _props.modifiersStyles, day = _props.day, tabIndex = _props.tabIndex, empty = _props.empty, modifiers = _props.modifiers, onMouseEnter = _props.onMouseEnter, onMouseLeave = _props.onMouseLeave, onMouseUp = _props.onMouseUp, onMouseDown = _props.onMouseDown, onClick = _props.onClick, onKeyDown = _props.onKeyDown, onTouchStart = _props.onTouchStart, onTouchEnd = _props.onTouchEnd, onFocus = _props.onFocus, ariaLabel = _props.ariaLabel, ariaDisabled = _props.ariaDisabled, ariaSelected = _props.ariaSelected, children = _props.children;
                var className = classNames.day;
                if (classNames !== _classNames2.default) // When using CSS modules prefix the modifier as required by the BEM syntax
                className += ' ' + Object.keys(modifiers).join(' ');
                else className += Object.keys(modifiers).map(function(modifier) {
                    return ' ' + className + '--' + modifier;
                }).join('');
                var style = void 0;
                if (modifiersStyles) Object.keys(modifiers).filter(function(modifier) {
                    return !!modifiersStyles[modifier];
                }).forEach(function(modifier) {
                    style = _extends({}, style, modifiersStyles[modifier]);
                });
                if (empty) return _react2.default.createElement('div', {
                    'aria-disabled': true,
                    className: className,
                    style: style
                });
                return _react2.default.createElement('div', {
                    className: className,
                    tabIndex: tabIndex,
                    style: style,
                    role: 'gridcell',
                    'aria-label': ariaLabel,
                    'aria-disabled': ariaDisabled,
                    'aria-selected': ariaSelected,
                    onClick: handleEvent(onClick, day, modifiers),
                    onKeyDown: handleEvent(onKeyDown, day, modifiers),
                    onMouseEnter: handleEvent(onMouseEnter, day, modifiers),
                    onMouseLeave: handleEvent(onMouseLeave, day, modifiers),
                    onMouseUp: handleEvent(onMouseUp, day, modifiers),
                    onMouseDown: handleEvent(onMouseDown, day, modifiers),
                    onTouchEnd: handleEvent(onTouchEnd, day, modifiers),
                    onTouchStart: handleEvent(onTouchStart, day, modifiers),
                    onFocus: handleEvent(onFocus, day, modifiers)
                }, children);
            }
        }
    ]);
    return Day1;
}(_react.Component);
Day.defaultProps = {
    tabIndex: -1
};
Day.defaultProps = {
    modifiers: {},
    modifiersStyles: {},
    empty: false
};
exports.default = Day;

},{"react":"21dqq","./DateUtils":"bJNYo","./Helpers":"5rQEg","./classNames":"eEaDk"}],"bJNYo":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.clone = clone;
exports.isDate = isDate;
exports.addMonths = addMonths;
exports.isSameDay = isSameDay;
exports.isSameMonth = isSameMonth;
exports.isDayBefore = isDayBefore;
exports.isDayAfter = isDayAfter;
exports.isPastDay = isPastDay;
exports.isFutureDay = isFutureDay;
exports.isDayBetween = isDayBetween;
exports.addDayToRange = addDayToRange;
exports.isDayInRange = isDayInRange;
exports.getWeekNumber = getWeekNumber;
/**
 * Clone a date object.
 *
 * @export
 * @param  {Date} d The date to clone
 * @return {Date} The cloned date
 */ function clone(d) {
    return new Date(d.getTime());
}
/**
 * Return `true` if the passed value is a valid JavaScript Date object.
 *
 * @export
 * @param {any} value
 * @returns {Boolean}
 */ function isDate(value) {
    return value instanceof Date && !isNaN(value.valueOf());
}
/**
 * Return `d` as a new date with `n` months added.
 *
 * @export
 * @param {Date} d
 * @param {number} n
 */ function addMonths(d, n) {
    var newDate = clone(d);
    newDate.setMonth(d.getMonth() + n);
    return newDate;
}
/**
 * Return `true` if two dates are the same day, ignoring the time.
 *
 * @export
 * @param  {Date}  d1
 * @param  {Date}  d2
 * @return {Boolean}
 */ function isSameDay(d1, d2) {
    if (!d1 || !d2) return false;
    return d1.getDate() === d2.getDate() && d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();
}
/**
 * Return `true` if two dates fall in the same month.
 *
 * @export
 * @param  {Date}  d1
 * @param  {Date}  d2
 * @return {Boolean}
 */ function isSameMonth(d1, d2) {
    if (!d1 || !d2) return false;
    return d1.getMonth() === d2.getMonth() && d1.getFullYear() === d2.getFullYear();
}
/**
 * Returns `true` if the first day is before the second day.
 *
 * @export
 * @param {Date} d1
 * @param {Date} d2
 * @returns {Boolean}
 */ function isDayBefore(d1, d2) {
    var day1 = clone(d1).setHours(0, 0, 0, 0);
    var day2 = clone(d2).setHours(0, 0, 0, 0);
    return day1 < day2;
}
/**
 * Returns `true` if the first day is after the second day.
 *
 * @export
 * @param {Date} d1
 * @param {Date} d2
 * @returns {Boolean}
 */ function isDayAfter(d1, d2) {
    var day1 = clone(d1).setHours(0, 0, 0, 0);
    var day2 = clone(d2).setHours(0, 0, 0, 0);
    return day1 > day2;
}
/**
 * Return `true` if a day is in the past, e.g. yesterday or any day
 * before yesterday.
 *
 * @export
 * @param  {Date}  d
 * @return {Boolean}
 */ function isPastDay(d) {
    var today = new Date();
    today.setHours(0, 0, 0, 0);
    return isDayBefore(d, today);
}
/**
 * Return `true` if a day is in the future, e.g. tomorrow or any day
 * after tomorrow.
 *
 * @export
 * @param  {Date}  d
 * @return {Boolean}
 */ function isFutureDay(d) {
    var tomorrow = new Date(new Date().getTime() + 86400000);
    tomorrow.setHours(0, 0, 0, 0);
    return d >= tomorrow;
}
/**
 * Return `true` if day `d` is between days `d1` and `d2`,
 * without including them.
 *
 * @export
 * @param  {Date}  d
 * @param  {Date}  d1
 * @param  {Date}  d2
 * @return {Boolean}
 */ function isDayBetween(d, d1, d2) {
    var date = clone(d);
    date.setHours(0, 0, 0, 0);
    return isDayAfter(date, d1) && isDayBefore(date, d2) || isDayAfter(date, d2) && isDayBefore(date, d1);
}
/**
 * Add a day to a range and return a new range. A range is an object with
 * `from` and `to` days.
 *
 * @export
 * @param {Date} day
 * @param {Object} range
 * @return {Object} Returns a new range object
 */ function addDayToRange(day) {
    var range = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        from: null,
        to: null
    };
    var from = range.from, to = range.to;
    if (!from) from = day;
    else if (from && to && isSameDay(from, to) && isSameDay(day, from)) {
        from = null;
        to = null;
    } else if (to && isDayBefore(day, from)) from = day;
    else if (to && isSameDay(day, to)) {
        from = day;
        to = day;
    } else {
        to = day;
        if (isDayBefore(to, from)) {
            to = from;
            from = day;
        }
    }
    return {
        from: from,
        to: to
    };
}
/**
 * Return `true` if a day is included in a range of days.
 *
 * @export
 * @param  {Date}  day
 * @param  {Object}  range
 * @return {Boolean}
 */ function isDayInRange(day, range) {
    var from = range.from, to = range.to;
    return from && isSameDay(day, from) || to && isSameDay(day, to) || from && to && isDayBetween(day, from, to);
}
/**
 * Return the year's week number (as per ISO, i.e. with the week starting from monday)
 * for the given day.
 *
 * @export
 * @param {Date} day
 * @returns {Number}
 */ function getWeekNumber(day) {
    var date = clone(day);
    date.setHours(0, 0, 0);
    date.setDate(date.getDate() + 4 - (date.getDay() || 7));
    return Math.ceil(((date - new Date(date.getFullYear(), 0, 1)) / 8.64e7 + 1) / 7);
}
exports.default = {
    addDayToRange: addDayToRange,
    addMonths: addMonths,
    clone: clone,
    getWeekNumber: getWeekNumber,
    isDate: isDate,
    isDayAfter: isDayAfter,
    isDayBefore: isDayBefore,
    isDayBetween: isDayBetween,
    isDayInRange: isDayInRange,
    isFutureDay: isFutureDay,
    isPastDay: isPastDay,
    isSameDay: isSameDay,
    isSameMonth: isSameMonth
};

},{}],"5rQEg":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
    }
    return target;
};
exports.cancelEvent = cancelEvent;
exports.getFirstDayOfMonth = getFirstDayOfMonth;
exports.getDaysInMonth = getDaysInMonth;
exports.getModifiersFromProps = getModifiersFromProps;
exports.getFirstDayOfWeekFromProps = getFirstDayOfWeekFromProps;
exports.isRangeOfDates = isRangeOfDates;
exports.getMonthsDiff = getMonthsDiff;
exports.getWeekArray = getWeekArray;
exports.startOfMonth = startOfMonth;
exports.getDayNodes = getDayNodes;
exports.nodeListToArray = nodeListToArray;
exports.hasOwnProp = hasOwnProp;
var _DateUtils = require('./DateUtils');
var _LocaleUtils = require('./LocaleUtils');
var _classNames = require('./classNames');
var _classNames2 = _interopRequireDefault(_classNames);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function cancelEvent(e) {
    e.preventDefault();
    e.stopPropagation();
}
function getFirstDayOfMonth(d) {
    return new Date(d.getFullYear(), d.getMonth(), 1, 12);
}
function getDaysInMonth(d) {
    var resultDate = getFirstDayOfMonth(d);
    resultDate.setMonth(resultDate.getMonth() + 1);
    resultDate.setDate(resultDate.getDate() - 1);
    return resultDate.getDate();
}
function getModifiersFromProps(props) {
    var modifiers = _extends({}, props.modifiers);
    if (props.selectedDays) modifiers[props.classNames.selected] = props.selectedDays;
    if (props.disabledDays) modifiers[props.classNames.disabled] = props.disabledDays;
    return modifiers;
}
function getFirstDayOfWeekFromProps(props) {
    var firstDayOfWeek = props.firstDayOfWeek, _props$locale = props.locale, locale = _props$locale === undefined ? 'en' : _props$locale, _props$localeUtils = props.localeUtils, localeUtils = _props$localeUtils === undefined ? {} : _props$localeUtils;
    if (!isNaN(firstDayOfWeek)) return firstDayOfWeek;
    if (localeUtils.getFirstDayOfWeek) return localeUtils.getFirstDayOfWeek(locale);
    return 0;
}
function isRangeOfDates(value) {
    return !!(value && value.from && value.to);
}
function getMonthsDiff(d1, d2) {
    return d2.getMonth() - d1.getMonth() + 12 * (d2.getFullYear() - d1.getFullYear());
}
function getWeekArray(d) {
    var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _LocaleUtils.getFirstDayOfWeek)();
    var fixedWeeks = arguments[2];
    var daysInMonth = getDaysInMonth(d);
    var dayArray = [];
    var week = [];
    var weekArray = [];
    for(var i = 1; i <= daysInMonth; i += 1)dayArray.push(new Date(d.getFullYear(), d.getMonth(), i, 12));
    dayArray.forEach(function(day) {
        if (week.length > 0 && day.getDay() === firstDayOfWeek) {
            weekArray.push(week);
            week = [];
        }
        week.push(day);
        if (dayArray.indexOf(day) === dayArray.length - 1) weekArray.push(week);
    });
    // unshift days to start the first week
    var firstWeek = weekArray[0];
    for(var _i = 7 - firstWeek.length; _i > 0; _i -= 1){
        var outsideDate = (0, _DateUtils.clone)(firstWeek[0]);
        outsideDate.setDate(firstWeek[0].getDate() - 1);
        firstWeek.unshift(outsideDate);
    }
    // push days until the end of the last week
    var lastWeek = weekArray[weekArray.length - 1];
    for(var _i2 = lastWeek.length; _i2 < 7; _i2 += 1){
        var _outsideDate = (0, _DateUtils.clone)(lastWeek[lastWeek.length - 1]);
        _outsideDate.setDate(lastWeek[lastWeek.length - 1].getDate() + 1);
        lastWeek.push(_outsideDate);
    }
    // add extra weeks to reach 6 weeks
    if (fixedWeeks && weekArray.length < 6) {
        var lastExtraWeek = void 0;
        for(var _i3 = weekArray.length; _i3 < 6; _i3 += 1){
            lastExtraWeek = weekArray[weekArray.length - 1];
            var lastDay = lastExtraWeek[lastExtraWeek.length - 1];
            var extraWeek = [];
            for(var j = 0; j < 7; j += 1){
                var _outsideDate2 = (0, _DateUtils.clone)(lastDay);
                _outsideDate2.setDate(lastDay.getDate() + j + 1);
                extraWeek.push(_outsideDate2);
            }
            weekArray.push(extraWeek);
        }
    }
    return weekArray;
}
function startOfMonth(d) {
    var newDate = (0, _DateUtils.clone)(d);
    newDate.setDate(1);
    newDate.setHours(12, 0, 0, 0); // always set noon to avoid time zone issues
    return newDate;
}
function getDayNodes(node, classNames) {
    var outsideClassName = void 0;
    if (classNames === _classNames2.default) // When using CSS modules prefix the modifier as required by the BEM syntax
    outsideClassName = classNames.day + '--' + classNames.outside;
    else outsideClassName = '' + classNames.outside;
    var dayQuery = classNames.day.replace(/ /g, '.');
    var outsideDayQuery = outsideClassName.replace(/ /g, '.');
    var selector = '.' + dayQuery + ':not(.' + outsideDayQuery + ')';
    return node.querySelectorAll(selector);
}
function nodeListToArray(nodeList) {
    return Array.prototype.slice.call(nodeList, 0);
}
function hasOwnProp(obj, prop) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
}

},{"./DateUtils":"bJNYo","./LocaleUtils":"2X2tT","./classNames":"eEaDk"}],"7e0BJ":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.dayMatchesModifier = dayMatchesModifier;
exports.getModifiersForDay = getModifiersForDay;
var _DateUtils = require('./DateUtils');
var _Helpers = require('./Helpers');
/**
 * Return `true` if a date matches the specified modifier.
 *
 * @export
 * @param {Date} day
 * @param {Any} modifier
 * @return {Boolean}
 */ function dayMatchesModifier(day, modifier) {
    if (!modifier) return false;
    var arr = Array.isArray(modifier) ? modifier : [
        modifier
    ];
    return arr.some(function(mod) {
        if (!mod) return false;
        if (mod instanceof Date) return (0, _DateUtils.isSameDay)(day, mod);
        if ((0, _Helpers.isRangeOfDates)(mod)) return (0, _DateUtils.isDayInRange)(day, mod);
        if (mod.after && mod.before && (0, _DateUtils.isDayAfter)(mod.before, mod.after)) return (0, _DateUtils.isDayAfter)(day, mod.after) && (0, _DateUtils.isDayBefore)(day, mod.before);
        if (mod.after && mod.before && ((0, _DateUtils.isDayAfter)(mod.after, mod.before) || (0, _DateUtils.isSameDay)(mod.after, mod.before))) return (0, _DateUtils.isDayAfter)(day, mod.after) || (0, _DateUtils.isDayBefore)(day, mod.before);
        if (mod.after) return (0, _DateUtils.isDayAfter)(day, mod.after);
        if (mod.before) return (0, _DateUtils.isDayBefore)(day, mod.before);
        if (mod.daysOfWeek) return mod.daysOfWeek.some(function(dayOfWeek) {
            return day.getDay() === dayOfWeek;
        });
        if (typeof mod === 'function') return mod(day);
        return false;
    });
}
/**
 * Return the modifiers matching the given day for the given
 * object of modifiers.
 *
 * @export
 * @param {Date} day
 * @param {Object} [modifiersObj={}]
 * @return {Array}
 */ function getModifiersForDay(day) {
    var modifiersObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return Object.keys(modifiersObj).reduce(function(modifiers, modifierName) {
        var value = modifiersObj[modifierName];
        if (dayMatchesModifier(day, value)) modifiers.push(modifierName);
        return modifiers;
    }, []);
}
exports.default = {
    dayMatchesModifier: dayMatchesModifier,
    getModifiersForDay: getModifiersForDay
};

},{"./DateUtils":"bJNYo","./Helpers":"5rQEg"}],"hZYFT":[function(require,module,exports) {
'use strict';
Object.defineProperty(exports, "__esModule", {
    value: true
});
var _createClass = function() {
    function defineProperties(target, props) {
        for(var i = 0; i < props.length; i++){
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();
var _react = require('react');
var _react2 = _interopRequireDefault(_react);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _possibleConstructorReturn(self, call) {
    if (!self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Weekday = function(_Component) {
    _inherits(Weekday1, _Component);
    function Weekday1() {
        _classCallCheck(this, Weekday1);
        return _possibleConstructorReturn(this, (Weekday1.__proto__ || Object.getPrototypeOf(Weekday1)).apply(this, arguments));
    }
    _createClass(Weekday1, [
        {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps) {
                return this.props !== nextProps;
            }
        },
        {
            key: 'render',
            value: function render() {
                var _props = this.props, weekday = _props.weekday, className = _props.className, weekdaysLong = _props.weekdaysLong, weekdaysShort = _props.weekdaysShort, localeUtils = _props.localeUtils, locale = _props.locale;
                var title = void 0;
                if (weekdaysLong) title = weekdaysLong[weekday];
                else title = localeUtils.formatWeekdayLong(weekday, locale);
                var content = void 0;
                if (weekdaysShort) content = weekdaysShort[weekday];
                else content = localeUtils.formatWeekdayShort(weekday, locale);
                return _react2.default.createElement('div', {
                    className: className,
                    role: 'columnheader'
                }, _react2.default.createElement('abbr', {
                    title: title
                }, content));
            }
        }
    ]);
    return Weekday1;
}(_react.Component);
exports.default = Weekday;

},{"react":"21dqq"}],"e5U9d":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DATEPICKER_DEFAULT_VALUE_INVALID", ()=>DATEPICKER_DEFAULT_VALUE_INVALID
);
parcelHelpers.export(exports, "DATEPICKER_INITIAL_MONTH_INVALID", ()=>DATEPICKER_INITIAL_MONTH_INVALID
);
parcelHelpers.export(exports, "DATEPICKER_MAX_DATE_INVALID", ()=>DATEPICKER_MAX_DATE_INVALID
);
parcelHelpers.export(exports, "DATEPICKER_VALUE_INVALID", ()=>DATEPICKER_VALUE_INVALID
);
parcelHelpers.export(exports, "DATERANGEPICKER_DEFAULT_VALUE_INVALID", ()=>DATERANGEPICKER_DEFAULT_VALUE_INVALID
);
parcelHelpers.export(exports, "DATERANGEPICKER_INITIAL_MONTH_INVALID", ()=>DATERANGEPICKER_INITIAL_MONTH_INVALID
);
parcelHelpers.export(exports, "DATERANGEPICKER_MAX_DATE_INVALID", ()=>DATERANGEPICKER_MAX_DATE_INVALID
);
parcelHelpers.export(exports, "DATERANGEPICKER_VALUE_INVALID", ()=>DATERANGEPICKER_VALUE_INVALID
);
parcelHelpers.export(exports, "DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID", ()=>DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID
);
parcelHelpers.export(exports, "DATERANGEINPUT_NULL_VALUE", ()=>DATERANGEINPUT_NULL_VALUE
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var ns = "[Blueprint]";
var DATEPICKER_DEFAULT_VALUE_INVALID = ns + " <DatePicker> defaultValue must be within minDate and maxDate bounds.";
var DATEPICKER_INITIAL_MONTH_INVALID = ns + " <DatePicker> initialMonth must be within minDate and maxDate bounds.";
var DATEPICKER_MAX_DATE_INVALID = ns + " <DatePicker> maxDate must be later than minDate.";
var DATEPICKER_VALUE_INVALID = ns + " <DatePicker> value prop must be within minDate and maxDate bounds.";
var DATERANGEPICKER_DEFAULT_VALUE_INVALID = DATEPICKER_DEFAULT_VALUE_INVALID.replace("DatePicker", "DateRangePicker");
var DATERANGEPICKER_INITIAL_MONTH_INVALID = DATEPICKER_INITIAL_MONTH_INVALID.replace("DatePicker", "DateRangePicker");
var DATERANGEPICKER_MAX_DATE_INVALID = DATEPICKER_MAX_DATE_INVALID.replace("DatePicker", "DateRangePicker");
var DATERANGEPICKER_VALUE_INVALID = DATEPICKER_VALUE_INVALID.replace("DatePicker", "DateRangePicker");
var DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID = "<DateRangePicker> preferredBoundaryToModify must be a valid Boundary if defined.";
var DATERANGEINPUT_NULL_VALUE = ns + " <DateRangeInput> value cannot be null. Pass undefined to clear the value and operate in" + " uncontrolled mode, or pass [null, null] to clear the value and continue operating in controlled mode.";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h0lxg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getFormattedDateString", ()=>getFormattedDateString
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _dateUtils = require("./common/dateUtils");
function getFormattedDateString(date, props, ignoreRange) {
    if (ignoreRange === void 0) ignoreRange = false;
    if (date == null) return "";
    else if (!_dateUtils.isDateValid(date)) return props.invalidDateMessage;
    else if (ignoreRange || _dateUtils.isDayInRange(date, [
        props.minDate,
        props.maxDate
    ])) return props.formatDate(date, props.locale);
    else return props.outOfRangeMessage;
}

},{"./common/dateUtils":"gv7pK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1CpwQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DISABLED_MODIFIER", ()=>DISABLED_MODIFIER
);
parcelHelpers.export(exports, "HOVERED_RANGE_MODIFIER", ()=>HOVERED_RANGE_MODIFIER
);
parcelHelpers.export(exports, "OUTSIDE_MODIFIER", ()=>OUTSIDE_MODIFIER
);
parcelHelpers.export(exports, "SELECTED_MODIFIER", ()=>SELECTED_MODIFIER
);
parcelHelpers.export(exports, "SELECTED_RANGE_MODIFIER", ()=>SELECTED_RANGE_MODIFIER
);
parcelHelpers.export(exports, "DISALLOWED_MODIFIERS", ()=>DISALLOWED_MODIFIERS
);
parcelHelpers.export(exports, "getDefaultMaxDate", ()=>getDefaultMaxDate
);
parcelHelpers.export(exports, "getDefaultMinDate", ()=>getDefaultMinDate
);
parcelHelpers.export(exports, "combineModifiers", ()=>combineModifiers
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _months = require("./common/months");
var DISABLED_MODIFIER = "disabled";
var HOVERED_RANGE_MODIFIER = "hovered-range";
var OUTSIDE_MODIFIER = "outside";
var SELECTED_MODIFIER = "selected";
var SELECTED_RANGE_MODIFIER = "selected-range";
var DISALLOWED_MODIFIERS = [
    DISABLED_MODIFIER,
    HOVERED_RANGE_MODIFIER,
    OUTSIDE_MODIFIER,
    SELECTED_MODIFIER,
    SELECTED_RANGE_MODIFIER, 
];
function getDefaultMaxDate() {
    var date = new Date();
    date.setMonth(date.getMonth() + 6);
    return date;
}
function getDefaultMinDate() {
    var date = new Date();
    date.setFullYear(date.getFullYear() - 20);
    date.setMonth(_months.Months.JANUARY, 1);
    return date;
}
function combineModifiers(baseModifiers, userModifiers) {
    var modifiers = baseModifiers;
    if (userModifiers != null) {
        modifiers = {};
        for(var _i = 0, _a = Object.keys(userModifiers); _i < _a.length; _i++){
            var key = _a[_i];
            if (DISALLOWED_MODIFIERS.indexOf(key) === -1) modifiers[key] = userModifiers[key];
        }
        for(var _b = 0, _c = Object.keys(baseModifiers); _b < _c.length; _b++){
            var key = _c[_b];
            modifiers[key] = baseModifiers[key];
        }
    }
    return modifiers;
}

},{"./common/months":"bCsfG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4Jm3r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DateRangePicker", ()=>DateRangePicker
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _reactDayPicker = require("react-day-picker");
var _reactDayPickerDefault = parcelHelpers.interopDefault(_reactDayPicker);
var _core = require("@blueprintjs/core");
var _classes = require("./common/classes");
var _dateUtils = require("./common/dateUtils");
var _errors = require("./common/errors");
var _monthAndYear = require("./common/monthAndYear");
var _datePickerCaption = require("./datePickerCaption");
var _datePickerCore = require("./datePickerCore");
var _datePickerNavbar = require("./datePickerNavbar");
var _dateRangeSelectionStrategy = require("./dateRangeSelectionStrategy");
var _shortcuts = require("./shortcuts");
var _timePicker = require("./timePicker");
var DateRangePicker = /** @class */ function(_super) {
    _tslib.__extends(DateRangePicker1, _super);
    function DateRangePicker1(props, context) {
        var _a1;
        var _this = _super.call(this, props, context) || this;
        // these will get merged with the user's own
        _this.modifiers = (_a1 = {}, _a1[_datePickerCore.SELECTED_RANGE_MODIFIER] = function(day) {
            var value = _this.state.value;
            return value[0] != null && value[1] != null && _dateUtils.isDayInRange(day, value, true);
        }, _a1["".concat(_datePickerCore.SELECTED_RANGE_MODIFIER, "-start")] = function(day) {
            return _dateUtils.areSameDay(_this.state.value[0], day);
        }, _a1["".concat(_datePickerCore.SELECTED_RANGE_MODIFIER, "-end")] = function(day) {
            return _dateUtils.areSameDay(_this.state.value[1], day);
        }, _a1[_datePickerCore.HOVERED_RANGE_MODIFIER] = function(day) {
            var _a = _this.state, hoverValue = _a.hoverValue, _b = _a.value, selectedStart = _b[0], selectedEnd = _b[1];
            if (selectedStart == null && selectedEnd == null) return false;
            if (hoverValue == null || hoverValue[0] == null || hoverValue[1] == null) return false;
            return _dateUtils.isDayInRange(day, hoverValue, true);
        }, _a1["".concat(_datePickerCore.HOVERED_RANGE_MODIFIER, "-start")] = function(day) {
            var hoverValue = _this.state.hoverValue;
            if (hoverValue == null || hoverValue[0] == null) return false;
            return _dateUtils.areSameDay(hoverValue[0], day);
        }, _a1["".concat(_datePickerCore.HOVERED_RANGE_MODIFIER, "-end")] = function(day) {
            var hoverValue = _this.state.hoverValue;
            if (hoverValue == null || hoverValue[1] == null) return false;
            return _dateUtils.areSameDay(hoverValue[1], day);
        }, _a1);
        _this.shouldHighlightCurrentDay = function(date) {
            var highlightCurrentDay = _this.props.highlightCurrentDay;
            return highlightCurrentDay && _dateUtils.isToday(date);
        };
        _this.getDateRangePickerModifiers = function() {
            var modifiers = _this.props.modifiers;
            return _datePickerCore.combineModifiers(_this.modifiers, _tslib.__assign({
                isToday: _this.shouldHighlightCurrentDay
            }, modifiers));
        };
        _this.renderDay = function(day) {
            var date = day.getDate();
            return _react.createElement("div", {
                className: _classes.DATEPICKER_DAY_WRAPPER
            }, date);
        };
        _this.disabledDays = function(day) {
            return !_dateUtils.isDayInRange(day, [
                _this.props.minDate,
                _this.props.maxDate
            ]);
        };
        _this.getDisabledDaysModifier = function() {
            var disabledDays = _this.props.dayPickerProps.disabledDays;
            return disabledDays instanceof Array ? _tslib.__spreadArray([
                _this.disabledDays
            ], disabledDays, true) : [
                _this.disabledDays,
                disabledDays
            ];
        };
        _this.handleTimeChange = function(newTime, dateIndex) {
            var _a, _b, _c, _d;
            (_b = (_a = _this.props.timePickerProps) === null || _a === void 0 ? void 0 : _a.onChange) === null || _b === void 0 || _b.call(_a, newTime);
            var _e = _this.state, value = _e.value, time = _e.time;
            var newValue = _dateUtils.getDateTime(value[dateIndex] != null ? _dateUtils.clone(value[dateIndex]) : new Date(), newTime);
            var newDateRange = [
                value[0],
                value[1]
            ];
            newDateRange[dateIndex] = newValue;
            var newTimeRange = [
                time[0],
                time[1]
            ];
            newTimeRange[dateIndex] = newTime;
            (_d = (_c = _this.props).onChange) === null || _d === void 0 || _d.call(_c, newDateRange);
            _this.setState({
                value: newDateRange,
                time: newTimeRange
            });
        };
        _this.handleTimeChangeLeftCalendar = function(time) {
            _this.handleTimeChange(time, 0);
        };
        _this.handleTimeChangeRightCalendar = function(time) {
            _this.handleTimeChange(time, 1);
        };
        _this.renderSingleNavbar = function(navbarProps) {
            return _react.createElement(_datePickerNavbar.DatePickerNavbar, _tslib.__assign({}, navbarProps, {
                maxDate: _this.props.maxDate,
                minDate: _this.props.minDate
            }));
        };
        _this.renderLeftNavbar = function(navbarProps) {
            return _react.createElement(_datePickerNavbar.DatePickerNavbar, _tslib.__assign({}, navbarProps, {
                hideRightNavButton: _this.props.contiguousCalendarMonths,
                maxDate: _this.props.maxDate,
                minDate: _this.props.minDate
            }));
        };
        _this.renderRightNavbar = function(navbarProps) {
            return _react.createElement(_datePickerNavbar.DatePickerNavbar, _tslib.__assign({}, navbarProps, {
                hideLeftNavButton: _this.props.contiguousCalendarMonths,
                maxDate: _this.props.maxDate,
                minDate: _this.props.minDate
            }));
        };
        _this.renderSingleCaption = function(captionProps) {
            return _react.createElement(_datePickerCaption.DatePickerCaption, _tslib.__assign({}, captionProps, {
                maxDate: _this.props.maxDate,
                minDate: _this.props.minDate,
                onMonthChange: _this.handleLeftMonthSelectChange,
                onYearChange: _this.handleLeftYearSelectChange,
                reverseMonthAndYearMenus: _this.props.reverseMonthAndYearMenus
            }));
        };
        _this.renderLeftCaption = function(captionProps) {
            return _react.createElement(_datePickerCaption.DatePickerCaption, _tslib.__assign({}, captionProps, {
                maxDate: _dateUtils.getDatePreviousMonth(_this.props.maxDate),
                minDate: _this.props.minDate,
                onMonthChange: _this.handleLeftMonthSelectChange,
                onYearChange: _this.handleLeftYearSelectChange,
                reverseMonthAndYearMenus: _this.props.reverseMonthAndYearMenus
            }));
        };
        _this.renderRightCaption = function(captionProps) {
            return _react.createElement(_datePickerCaption.DatePickerCaption, _tslib.__assign({}, captionProps, {
                maxDate: _this.props.maxDate,
                minDate: _dateUtils.getDateNextMonth(_this.props.minDate),
                onMonthChange: _this.handleRightMonthSelectChange,
                onYearChange: _this.handleRightYearSelectChange,
                reverseMonthAndYearMenus: _this.props.reverseMonthAndYearMenus
            }));
        };
        _this.handleDayMouseEnter = function(day, modifiers, e) {
            var _a, _b, _c, _d;
            (_b = (_a = _this.props.dayPickerProps).onDayMouseEnter) === null || _b === void 0 || _b.call(_a, day, modifiers, e);
            if (modifiers.disabled) return;
            var _e = _dateRangeSelectionStrategy.DateRangeSelectionStrategy.getNextState(_this.state.value, day, _this.props.allowSingleDayRange, _this.props.boundaryToModify), dateRange = _e.dateRange, boundary = _e.boundary;
            _this.setState({
                hoverValue: dateRange
            });
            (_d = (_c = _this.props).onHoverChange) === null || _d === void 0 || _d.call(_c, dateRange, day, boundary);
        };
        _this.handleDayMouseLeave = function(day, modifiers, e) {
            var _a, _b, _c, _d;
            (_b = (_a = _this.props.dayPickerProps).onDayMouseLeave) === null || _b === void 0 || _b.call(_a, day, modifiers, e);
            if (modifiers.disabled) return;
            _this.setState({
                hoverValue: undefined
            });
            (_d = (_c = _this.props).onHoverChange) === null || _d === void 0 || _d.call(_c, undefined, day, undefined);
        };
        _this.handleDayClick = function(day, modifiers, e) {
            var _a, _b;
            (_b = (_a = _this.props.dayPickerProps).onDayClick) === null || _b === void 0 || _b.call(_a, day, modifiers, e);
            if (modifiers.disabled) {
                // rerender base component to get around bug where you can navigate past bounds by clicking days
                _this.forceUpdate();
                return;
            }
            var nextValue = _dateRangeSelectionStrategy.DateRangeSelectionStrategy.getNextState(_this.state.value, day, _this.props.allowSingleDayRange, _this.props.boundaryToModify).dateRange;
            // update the hovered date range after click to show the newly selected
            // state, at leasts until the mouse moves again
            _this.handleDayMouseEnter(day, modifiers, e);
            _this.handleNextState(nextValue);
        };
        _this.handleShortcutClick = function(shortcut, selectedShortcutIndex) {
            var _a = _this.props, onChange = _a.onChange, contiguousCalendarMonths = _a.contiguousCalendarMonths, onShortcutChange = _a.onShortcutChange;
            var dateRange = shortcut.dateRange, includeTime = shortcut.includeTime;
            if (includeTime) {
                var newDateRange = [
                    dateRange[0],
                    dateRange[1]
                ];
                var newTimeRange = [
                    dateRange[0],
                    dateRange[1]
                ];
                var nextState = getStateChange(_this.state.value, dateRange, _this.state, contiguousCalendarMonths);
                _this.setState(_tslib.__assign(_tslib.__assign({}, nextState), {
                    time: newTimeRange
                }));
                onChange === null || onChange === void 0 || onChange(newDateRange);
            } else _this.handleNextState(dateRange);
            if (_this.props.selectedShortcutIndex === undefined) _this.setState({
                selectedShortcutIndex: selectedShortcutIndex
            });
            onShortcutChange === null || onShortcutChange === void 0 || onShortcutChange(shortcut, selectedShortcutIndex);
        };
        _this.handleNextState = function(nextValue) {
            var _a, _b;
            var value = _this.state.value;
            nextValue[0] = _dateUtils.getDateTime(nextValue[0], _this.state.time[0]);
            nextValue[1] = _dateUtils.getDateTime(nextValue[1], _this.state.time[1]);
            var nextState = getStateChange(value, nextValue, _this.state, _this.props.contiguousCalendarMonths);
            if (_this.props.value == null) _this.setState(nextState);
            (_b = (_a = _this.props).onChange) === null || _b === void 0 || _b.call(_a, nextValue);
        };
        _this.handleLeftMonthChange = function(newDate) {
            var _a, _b;
            var leftView = _monthAndYear.MonthAndYear.fromDate(newDate);
            (_b = (_a = _this.props.dayPickerProps).onMonthChange) === null || _b === void 0 || _b.call(_a, leftView.getFullDate());
            _this.updateLeftView(leftView);
        };
        _this.handleRightMonthChange = function(newDate) {
            var _a, _b;
            var rightView = _monthAndYear.MonthAndYear.fromDate(newDate);
            (_b = (_a = _this.props.dayPickerProps).onMonthChange) === null || _b === void 0 || _b.call(_a, rightView.getFullDate());
            _this.updateRightView(rightView);
        };
        _this.handleLeftMonthSelectChange = function(leftMonth) {
            var _a, _b;
            var leftView = new _monthAndYear.MonthAndYear(leftMonth, _this.state.leftView.getYear());
            (_b = (_a = _this.props.dayPickerProps).onMonthChange) === null || _b === void 0 || _b.call(_a, leftView.getFullDate());
            _this.updateLeftView(leftView);
        };
        _this.handleRightMonthSelectChange = function(rightMonth) {
            var _a, _b;
            var rightView = new _monthAndYear.MonthAndYear(rightMonth, _this.state.rightView.getYear());
            (_b = (_a = _this.props.dayPickerProps).onMonthChange) === null || _b === void 0 || _b.call(_a, rightView.getFullDate());
            _this.updateRightView(rightView);
        };
        /*
         * The min / max months are offset by one because we are showing two months.
         * We do a comparison check to see if
         *   a) the proposed [Month, Year] change throws the two calendars out of order
         *   b) the proposed [Month, Year] goes beyond the min / max months
         * and rectify appropriately.
         */ _this.handleLeftYearSelectChange = function(leftDisplayYear) {
            var _a, _b;
            var leftView = new _monthAndYear.MonthAndYear(_this.state.leftView.getMonth(), leftDisplayYear);
            (_b = (_a = _this.props.dayPickerProps).onMonthChange) === null || _b === void 0 || _b.call(_a, leftView.getFullDate());
            var _c = _this.props, minDate = _c.minDate, maxDate = _c.maxDate;
            var adjustedMaxDate = _dateUtils.getDatePreviousMonth(maxDate);
            var minMonthAndYear = new _monthAndYear.MonthAndYear(minDate.getMonth(), minDate.getFullYear());
            var maxMonthAndYear = new _monthAndYear.MonthAndYear(adjustedMaxDate.getMonth(), adjustedMaxDate.getFullYear());
            if (leftView.isBefore(minMonthAndYear)) leftView = minMonthAndYear;
            else if (leftView.isAfter(maxMonthAndYear)) leftView = maxMonthAndYear;
            var rightView = _this.state.rightView.clone();
            if (!leftView.isBefore(rightView) || _this.props.contiguousCalendarMonths) rightView = leftView.getNextMonth();
            _this.setViews(leftView, rightView);
        };
        _this.handleRightYearSelectChange = function(rightDisplayYear) {
            var _a, _b;
            var rightView = new _monthAndYear.MonthAndYear(_this.state.rightView.getMonth(), rightDisplayYear);
            (_b = (_a = _this.props.dayPickerProps).onMonthChange) === null || _b === void 0 || _b.call(_a, rightView.getFullDate());
            var _c = _this.props, minDate = _c.minDate, maxDate = _c.maxDate;
            var adjustedMinDate = _dateUtils.getDateNextMonth(minDate);
            var minMonthAndYear = _monthAndYear.MonthAndYear.fromDate(adjustedMinDate);
            var maxMonthAndYear = _monthAndYear.MonthAndYear.fromDate(maxDate);
            if (rightView.isBefore(minMonthAndYear)) rightView = minMonthAndYear;
            else if (rightView.isAfter(maxMonthAndYear)) rightView = maxMonthAndYear;
            var leftView = _this.state.leftView.clone();
            if (!rightView.isAfter(leftView) || _this.props.contiguousCalendarMonths) leftView = rightView.getPreviousMonth();
            _this.setViews(leftView, rightView);
        };
        var value1 = getInitialValue(props);
        var time1 = value1;
        var initialMonth = getInitialMonth(props, value1);
        // if the initial month is the last month of the picker's
        // allowable range, the react-day-picker library will show
        // the max month on the left and the *min* month on the right.
        // subtracting one avoids that weird, wraparound state (#289).
        var initialMonthEqualsMinMonth = _dateUtils.areSameMonth(initialMonth, props.minDate);
        var initalMonthEqualsMaxMonth = _dateUtils.areSameMonth(initialMonth, props.maxDate);
        if (!props.singleMonthOnly && !initialMonthEqualsMinMonth && initalMonthEqualsMaxMonth) initialMonth.setMonth(initialMonth.getMonth() - 1);
        // show the selected end date's encompassing month in the right view if
        // the calendars don't have to be contiguous.
        // if left view and right view months are the same, show next month in the right view.
        var leftView1 = _monthAndYear.MonthAndYear.fromDate(initialMonth);
        var rightDate = value1[1];
        var rightView1 = !props.contiguousCalendarMonths && rightDate != null && !_dateUtils.areSameMonth(initialMonth, rightDate) ? _monthAndYear.MonthAndYear.fromDate(rightDate) : leftView1.getNextMonth();
        _this.state = {
            hoverValue: [
                null,
                null
            ],
            leftView: leftView1,
            rightView: rightView1,
            selectedShortcutIndex: _this.props.selectedShortcutIndex !== undefined ? _this.props.selectedShortcutIndex : -1,
            time: time1,
            value: value1
        };
        return _this;
    }
    DateRangePicker1.prototype.render = function() {
        var _a;
        var _b = this.props, className = _b.className, contiguousCalendarMonths = _b.contiguousCalendarMonths, singleMonthOnly = _b.singleMonthOnly;
        var isShowingOneMonth = singleMonthOnly || _dateUtils.areSameMonth(this.props.minDate, this.props.maxDate);
        var classes = _classnamesDefault.default(_classes.DATEPICKER, _classes.DATERANGEPICKER, className, (_a = {}, _a[_classes.DATERANGEPICKER_CONTIGUOUS] = contiguousCalendarMonths, _a[_classes.DATERANGEPICKER_SINGLE_MONTH] = isShowingOneMonth, _a));
        // use the left DayPicker when we only need one
        return _react.createElement("div", {
            className: classes
        }, this.maybeRenderShortcuts(), _react.createElement("div", null, this.renderCalendars(isShowingOneMonth), this.maybeRenderTimePickers()));
    };
    DateRangePicker1.prototype.componentDidUpdate = function(prevProps, prevState) {
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        if (!_dateUtils.areRangesEqual(prevProps.value, this.props.value) || prevProps.contiguousCalendarMonths !== this.props.contiguousCalendarMonths) {
            var nextState = getStateChange(prevProps.value, this.props.value, this.state, prevProps.contiguousCalendarMonths);
            this.setState(nextState);
        }
        if (this.props.selectedShortcutIndex !== prevProps.selectedShortcutIndex) this.setState({
            selectedShortcutIndex: this.props.selectedShortcutIndex
        });
    };
    DateRangePicker1.prototype.validateProps = function(props) {
        var defaultValue = props.defaultValue, initialMonth = props.initialMonth, maxDate = props.maxDate, minDate = props.minDate, boundaryToModify = props.boundaryToModify, value = props.value;
        var dateRange = [
            minDate,
            maxDate
        ];
        if (defaultValue != null && !_dateUtils.isDayRangeInRange(defaultValue, dateRange)) console.error(_errors.DATERANGEPICKER_DEFAULT_VALUE_INVALID);
        if (initialMonth != null && !_dateUtils.isMonthInRange(initialMonth, dateRange)) console.error(_errors.DATERANGEPICKER_INITIAL_MONTH_INVALID);
        if (maxDate != null && minDate != null && maxDate < minDate && !_dateUtils.areSameDay(maxDate, minDate)) console.error(_errors.DATERANGEPICKER_MAX_DATE_INVALID);
        if (value != null && !_dateUtils.isDayRangeInRange(value, dateRange)) console.error(_errors.DATERANGEPICKER_VALUE_INVALID);
        if (boundaryToModify != null && boundaryToModify !== _core.Boundary.START && boundaryToModify !== _core.Boundary.END) console.error(_errors.DATERANGEPICKER_PREFERRED_BOUNDARY_TO_MODIFY_INVALID);
    };
    DateRangePicker1.prototype.maybeRenderShortcuts = function() {
        var shortcuts = this.props.shortcuts;
        if (shortcuts == null || shortcuts === false) return null;
        var selectedShortcutIndex = this.state.selectedShortcutIndex;
        var _a = this.props, allowSingleDayRange = _a.allowSingleDayRange, maxDate = _a.maxDate, minDate = _a.minDate, timePrecision = _a.timePrecision;
        return [
            _react.createElement(_shortcuts.Shortcuts, _tslib.__assign({
                key: "shortcuts"
            }, {
                allowSingleDayRange: allowSingleDayRange,
                maxDate: maxDate,
                minDate: minDate,
                selectedShortcutIndex: selectedShortcutIndex,
                shortcuts: shortcuts,
                timePrecision: timePrecision
            }, {
                onShortcutClick: this.handleShortcutClick
            })),
            _react.createElement(_core.Divider, {
                key: "div"
            }), 
        ];
    };
    DateRangePicker1.prototype.maybeRenderTimePickers = function() {
        var _a = this.props, timePrecision = _a.timePrecision, timePickerProps = _a.timePickerProps;
        if (timePrecision == null && timePickerProps === DateRangePicker1.defaultProps.timePickerProps) return null;
        return _react.createElement("div", {
            className: _classes.DATERANGEPICKER_TIMEPICKERS
        }, _react.createElement(_timePicker.TimePicker, _tslib.__assign({
            precision: timePrecision
        }, timePickerProps, {
            onChange: this.handleTimeChangeLeftCalendar,
            value: this.state.time[0]
        })), _react.createElement(_timePicker.TimePicker, _tslib.__assign({
            precision: timePrecision
        }, timePickerProps, {
            onChange: this.handleTimeChangeRightCalendar,
            value: this.state.time[1]
        })));
    };
    DateRangePicker1.prototype.renderCalendars = function(isShowingOneMonth) {
        var _a, _b, _c;
        var _d = this.props, dayPickerProps = _d.dayPickerProps, locale = _d.locale, localeUtils = _d.localeUtils, maxDate = _d.maxDate, minDate = _d.minDate;
        var dayPickerBaseProps = _tslib.__assign(_tslib.__assign({
            locale: locale,
            localeUtils: localeUtils,
            modifiers: this.getDateRangePickerModifiers(),
            showOutsideDays: true
        }, dayPickerProps), {
            disabledDays: this.getDisabledDaysModifier(),
            onDayClick: this.handleDayClick,
            onDayMouseEnter: this.handleDayMouseEnter,
            onDayMouseLeave: this.handleDayMouseLeave,
            selectedDays: this.state.value
        });
        if (isShowingOneMonth) return _react.createElement(_reactDayPickerDefault.default, _tslib.__assign({}, dayPickerBaseProps, {
            captionElement: this.renderSingleCaption,
            navbarElement: this.renderSingleNavbar,
            fromMonth: minDate,
            month: this.state.leftView.getFullDate(),
            numberOfMonths: 1,
            onMonthChange: this.handleLeftMonthChange,
            toMonth: maxDate,
            renderDay: (_a = dayPickerProps === null || dayPickerProps === void 0 ? void 0 : dayPickerProps.renderDay) !== null && _a !== void 0 ? _a : this.renderDay
        }));
        else return [
            _react.createElement(_reactDayPickerDefault.default, _tslib.__assign({
                key: "left"
            }, dayPickerBaseProps, {
                canChangeMonth: true,
                captionElement: this.renderLeftCaption,
                navbarElement: this.renderLeftNavbar,
                fromMonth: minDate,
                month: this.state.leftView.getFullDate(),
                numberOfMonths: 1,
                onMonthChange: this.handleLeftMonthChange,
                toMonth: _dateUtils.getDatePreviousMonth(maxDate),
                renderDay: (_b = dayPickerProps === null || dayPickerProps === void 0 ? void 0 : dayPickerProps.renderDay) !== null && _b !== void 0 ? _b : this.renderDay
            })),
            _react.createElement(_reactDayPickerDefault.default, _tslib.__assign({
                key: "right"
            }, dayPickerBaseProps, {
                canChangeMonth: true,
                captionElement: this.renderRightCaption,
                navbarElement: this.renderRightNavbar,
                fromMonth: _dateUtils.getDateNextMonth(minDate),
                month: this.state.rightView.getFullDate(),
                numberOfMonths: 1,
                onMonthChange: this.handleRightMonthChange,
                toMonth: maxDate,
                renderDay: (_c = dayPickerProps === null || dayPickerProps === void 0 ? void 0 : dayPickerProps.renderDay) !== null && _c !== void 0 ? _c : this.renderDay
            })), 
        ];
    };
    DateRangePicker1.prototype.updateLeftView = function(leftView) {
        var rightView = this.state.rightView.clone();
        if (!leftView.isBefore(rightView) || this.props.contiguousCalendarMonths) rightView = leftView.getNextMonth();
        this.setViews(leftView, rightView);
    };
    DateRangePicker1.prototype.updateRightView = function(rightView) {
        var leftView = this.state.leftView.clone();
        if (!rightView.isAfter(leftView) || this.props.contiguousCalendarMonths) leftView = rightView.getPreviousMonth();
        this.setViews(leftView, rightView);
    };
    DateRangePicker1.prototype.setViews = function(leftView, rightView) {
        this.setState({
            leftView: leftView,
            rightView: rightView
        });
    };
    DateRangePicker1.defaultProps = {
        allowSingleDayRange: false,
        contiguousCalendarMonths: true,
        dayPickerProps: {},
        maxDate: _datePickerCore.getDefaultMaxDate(),
        minDate: _datePickerCore.getDefaultMinDate(),
        reverseMonthAndYearMenus: false,
        shortcuts: true,
        singleMonthOnly: false,
        timePickerProps: {}
    };
    DateRangePicker1.displayName = "".concat(_core.DISPLAYNAME_PREFIX, ".DateRangePicker");
    return DateRangePicker1;
}(_core.AbstractPureComponent2);
function getStateChange(value, nextValue, state, contiguousCalendarMonths) {
    if (value != null && nextValue == null) return {
        value: [
            null,
            null
        ]
    };
    else if (nextValue != null) {
        var leftView = state.leftView.clone();
        var rightView = state.rightView.clone();
        var nextValueStartView = _monthAndYear.MonthAndYear.fromDate(nextValue[0]);
        var nextValueEndView = _monthAndYear.MonthAndYear.fromDate(nextValue[1]);
        // Only end date selected.
        // If the newly selected end date isn't in either of the displayed months, then
        //   - set the right DayPicker to the month of the selected end date
        //   - ensure the left DayPicker is before the right, changing if needed
        if (nextValueStartView == null && nextValueEndView != null) {
            if (!nextValueEndView.isSame(leftView) && !nextValueEndView.isSame(rightView)) {
                rightView = nextValueEndView;
                if (!leftView.isBefore(rightView)) leftView = rightView.getPreviousMonth();
            }
        } else if (nextValueStartView != null && nextValueEndView == null) // Only start date selected.
        // If the newly selected start date isn't in either of the displayed months, then
        //   - set the left DayPicker to the month of the selected start date
        //   - ensure the right DayPicker is before the left, changing if needed
        {
            if (!nextValueStartView.isSame(leftView) && !nextValueStartView.isSame(rightView)) {
                leftView = nextValueStartView;
                if (!rightView.isAfter(leftView)) rightView = leftView.getNextMonth();
            }
        } else if (nextValueStartView != null && nextValueEndView != null) {
            // Both start and end date months are identical
            // If the selected month isn't in either of the displayed months, then
            //   - set the left DayPicker to be the selected month
            //   - set the right DayPicker to +1
            if (nextValueStartView.isSame(nextValueEndView)) {
                if (leftView.isSame(nextValueStartView) || rightView.isSame(nextValueStartView)) ;
                else {
                    leftView = nextValueStartView;
                    rightView = nextValueStartView.getNextMonth();
                }
            } else {
                // Different start and end date months, adjust display months.
                if (!leftView.isSame(nextValueStartView)) {
                    leftView = nextValueStartView;
                    rightView = nextValueStartView.getNextMonth();
                }
                if (contiguousCalendarMonths === false && !rightView.isSame(nextValueEndView)) rightView = nextValueEndView;
            }
        }
        return {
            leftView: leftView,
            rightView: rightView,
            value: nextValue
        };
    } else if (contiguousCalendarMonths === true) // contiguousCalendarMonths is toggled on.
    // If the previous leftView and rightView are not contiguous, then set the right DayPicker to left + 1
    {
        if (!state.leftView.getNextMonth().isSameMonth(state.rightView)) {
            var nextRightView = state.leftView.getNextMonth();
            return {
                rightView: nextRightView
            };
        }
    }
    return {};
}
function getInitialValue(props) {
    if (props.value != null) return props.value;
    if (props.defaultValue != null) return props.defaultValue;
    return [
        null,
        null
    ];
}
function getInitialMonth(props, value) {
    var today = new Date();
    // != because we must have a real `Date` to begin the calendar on.
    if (props.initialMonth != null) return props.initialMonth;
    else if (value[0] != null) return _dateUtils.clone(value[0]);
    else if (value[1] != null) {
        var month = _dateUtils.clone(value[1]);
        if (!_dateUtils.areSameMonth(month, props.minDate)) month.setMonth(month.getMonth() - 1);
        return month;
    } else if (_dateUtils.isDayInRange(today, [
        props.minDate,
        props.maxDate
    ])) return today;
    else return _dateUtils.getDateBetween([
        props.minDate,
        props.maxDate
    ]);
}

},{"tslib":"cvpWy","classnames":"jocGM","react":"21dqq","react-day-picker":"fRWSE","@blueprintjs/core":"3LcXQ","./common/classes":"fnsy0","./common/dateUtils":"gv7pK","./common/errors":"e5U9d","./common/monthAndYear":"21zfW","./datePickerCaption":"5YRTl","./datePickerCore":"1CpwQ","./datePickerNavbar":"edrFh","./dateRangeSelectionStrategy":"iNg6I","./shortcuts":"4JqvT","./timePicker":"iIEQm","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"21zfW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MonthAndYear", ()=>MonthAndYear
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _dateUtils = require("./dateUtils");
var MonthAndYear = /** @class */ function() {
    function MonthAndYear1(month, year) {
        if (month !== null && year !== null) this.date = new Date(year, month);
        else this.date = new Date();
    }
    MonthAndYear1.fromDate = function(date) {
        return date == null ? undefined : new MonthAndYear1(date.getMonth(), date.getFullYear());
    };
    MonthAndYear1.prototype.clone = function() {
        return new MonthAndYear1(this.getMonth(), this.getYear());
    };
    MonthAndYear1.prototype.getFullDate = function() {
        return this.date;
    };
    MonthAndYear1.prototype.getMonth = function() {
        return this.date.getMonth();
    };
    MonthAndYear1.prototype.getYear = function() {
        return this.date.getFullYear();
    };
    MonthAndYear1.prototype.getPreviousMonth = function() {
        var previousMonthDate = _dateUtils.getDatePreviousMonth(this.date);
        return new MonthAndYear1(previousMonthDate.getMonth(), previousMonthDate.getFullYear());
    };
    MonthAndYear1.prototype.getNextMonth = function() {
        var nextMonthDate = _dateUtils.getDateNextMonth(this.date);
        return new MonthAndYear1(nextMonthDate.getMonth(), nextMonthDate.getFullYear());
    };
    MonthAndYear1.prototype.isBefore = function(monthAndYear) {
        return compareMonthAndYear(this, monthAndYear) < 0;
    };
    MonthAndYear1.prototype.isAfter = function(monthAndYear) {
        return compareMonthAndYear(this, monthAndYear) > 0;
    };
    MonthAndYear1.prototype.isSame = function(monthAndYear) {
        return compareMonthAndYear(this, monthAndYear) === 0;
    };
    MonthAndYear1.prototype.isSameMonth = function(monthAndYear) {
        return this.getMonth() === monthAndYear.getMonth();
    };
    return MonthAndYear1;
}();
// returns negative if left < right
// returns positive if left > right
// returns 0 if left === right
function compareMonthAndYear(firstMonthAndYear, secondMonthAndYear) {
    var firstMonth = firstMonthAndYear.getMonth();
    var firstYear = firstMonthAndYear.getYear();
    var secondMonth = secondMonthAndYear.getMonth();
    var secondYear = secondMonthAndYear.getYear();
    if (firstYear === secondYear) return firstMonth - secondMonth;
    else return firstYear - secondYear;
}

},{"./dateUtils":"gv7pK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"5YRTl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DatePickerCaption", ()=>DatePickerCaption
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("./common/classes");
var _dateUtils = require("./common/dateUtils");
var _utils = require("./common/utils");
var DatePickerCaption = /** @class */ function(_super) {
    _tslib.__extends(DatePickerCaption1, _super);
    function DatePickerCaption1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            monthRightOffset: 0
        };
        _this.handleMonthSelectChange = _this.dateChangeHandler(function(d, month) {
            return d.setMonth(month);
        }, _this.props.onMonthChange);
        _this.handleYearSelectChange = _this.dateChangeHandler(function(d, year) {
            return d.setFullYear(year);
        }, _this.props.onYearChange);
        return _this;
    }
    DatePickerCaption1.prototype.render = function() {
        var _this = this;
        var _a = this.props, date = _a.date, locale = _a.locale, localeUtils = _a.localeUtils, minDate = _a.minDate, maxDate = _a.maxDate, _b = _a.months, months = _b === void 0 ? localeUtils.getMonths(locale) : _b;
        var minYear = minDate.getFullYear();
        var maxYear = maxDate.getFullYear();
        var displayMonth = date.getMonth();
        var displayYear = date.getFullYear();
        // build the list of available months, limiting based on minDate and maxDate as necessary
        var startMonth = displayYear === minYear ? minDate.getMonth() : 0;
        var endMonth = displayYear === maxYear ? maxDate.getMonth() + 1 : undefined;
        var monthOptionElements = months.map(function(month, i) {
            return {
                label: month,
                value: i
            };
        }).slice(startMonth, endMonth);
        var years = [
            minYear
        ];
        for(var year = minYear + 1; year <= maxYear; ++year)years.push(year);
        // allow out-of-bounds years but disable the option. this handles the Dec 2016 case in #391.
        if (displayYear > maxYear) years.push({
            value: displayYear,
            disabled: true
        });
        this.displayedMonthText = months[displayMonth];
        var monthSelect = _react.createElement(_core.HTMLSelect, {
            iconProps: {
                style: {
                    right: this.state.monthRightOffset
                }
            },
            className: _classes.DATEPICKER_MONTH_SELECT,
            key: "month",
            minimal: true,
            onChange: this.handleMonthSelectChange,
            value: displayMonth,
            options: monthOptionElements
        });
        var yearSelect = _react.createElement(_core.HTMLSelect, {
            className: _classes.DATEPICKER_YEAR_SELECT,
            key: "year",
            minimal: true,
            onChange: this.handleYearSelectChange,
            value: displayYear,
            options: years
        });
        var orderedSelects = this.props.reverseMonthAndYearMenus ? [
            yearSelect,
            monthSelect
        ] : [
            monthSelect,
            yearSelect
        ];
        return _react.createElement("div", {
            className: this.props.classNames.caption
        }, _react.createElement("div", {
            className: _classes.DATEPICKER_CAPTION,
            ref: function(ref) {
                return _this.containerElement = ref;
            }
        }, orderedSelects), _react.createElement(_core.Divider, null));
    };
    DatePickerCaption1.prototype.componentDidMount = function() {
        var _this = this;
        this.requestAnimationFrame(function() {
            return _this.positionArrows();
        });
    };
    DatePickerCaption1.prototype.componentDidUpdate = function() {
        this.positionArrows();
    };
    DatePickerCaption1.prototype.positionArrows = function() {
        // measure width of text as rendered inside our container element.
        var monthTextWidth = _utils.measureTextWidth(this.displayedMonthText, _classes.DATEPICKER_CAPTION_MEASURE, this.containerElement);
        var monthSelectWidth = this.containerElement == null ? 0 : this.containerElement.firstElementChild.clientWidth;
        var rightOffset = Math.max(2, monthSelectWidth - monthTextWidth - _core.IconSize.STANDARD - 2);
        this.setState({
            monthRightOffset: rightOffset
        });
    };
    DatePickerCaption1.prototype.dateChangeHandler = function(updater, handler) {
        var _this = this;
        return function(e) {
            var _a, _b;
            var value = parseInt(e.target.value, 10);
            // ignore change events with invalid values to prevent crash on iOS Safari (#4178)
            if (isNaN(value)) return;
            var newDate = _dateUtils.clone(_this.props.date);
            updater(newDate, value);
            (_b = (_a = _this.props).onDateChange) === null || _b === void 0 || _b.call(_a, newDate);
            handler === null || handler === void 0 || handler(value);
        };
    };
    return DatePickerCaption1;
}(_core.AbstractPureComponent2);

},{"tslib":"cvpWy","react":"21dqq","@blueprintjs/core":"3LcXQ","./common/classes":"fnsy0","./common/dateUtils":"gv7pK","./common/utils":"cHCPH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cHCPH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Measure width in pixels of a string displayed with styles provided by `className`.
 * Should only be used if measuring can't be done with existing DOM elements.
 */ parcelHelpers.export(exports, "measureTextWidth", ()=>measureTextWidth
);
parcelHelpers.export(exports, "padWithZeroes", ()=>padWithZeroes
);
function measureTextWidth(text, className, containerElement) {
    if (className === void 0) className = "";
    if (containerElement === void 0) containerElement = document.body;
    if (containerElement == null) return 0;
    var span = document.createElement("span");
    span.classList.add(className);
    span.textContent = text;
    containerElement.appendChild(span);
    var spanWidth = span.offsetWidth;
    span.remove();
    return spanWidth;
}
function padWithZeroes(str, minLength) {
    if (str.length < minLength) return "".concat(stringRepeat("0", minLength - str.length)).concat(str);
    else return str;
}
function stringRepeat(str, numTimes) {
    return new Array(numTimes + 1).join(str);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"edrFh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DatePickerNavbar", ()=>DatePickerNavbar
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("./common/classes");
var _dateUtils = require("./common/dateUtils");
var DatePickerNavbar = /** @class */ function(_super) {
    _tslib.__extends(DatePickerNavbar1, _super);
    function DatePickerNavbar1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleNextClick = function() {
            return _this.props.onNextClick();
        };
        _this.handlePreviousClick = function() {
            return _this.props.onPreviousClick();
        };
        return _this;
    }
    DatePickerNavbar1.prototype.render = function() {
        var _a = this.props, classes = _a.classNames, month = _a.month, maxDate = _a.maxDate, minDate = _a.minDate;
        return _react.createElement("div", {
            className: _classnamesDefault.default(_classes.DATEPICKER_NAVBAR, classes.navBar)
        }, this.props.hideLeftNavButton || _react.createElement(_core.Button, {
            className: classes.navButtonPrev,
            disabled: _dateUtils.areSameMonth(month, minDate),
            icon: "chevron-left",
            minimal: true,
            onClick: this.handlePreviousClick
        }), this.props.hideRightNavButton || _react.createElement(_core.Button, {
            className: classes.navButtonNext,
            disabled: _dateUtils.areSameMonth(month, maxDate),
            icon: "chevron-right",
            minimal: true,
            onClick: this.handleNextClick
        }));
    };
    return DatePickerNavbar1;
}(_react.PureComponent);

},{"tslib":"cvpWy","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","./common/classes":"fnsy0","./common/dateUtils":"gv7pK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iNg6I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DateRangeSelectionStrategy", ()=>DateRangeSelectionStrategy
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _core = require("@blueprintjs/core");
var _dateUtils = require("./common/dateUtils");
var DateRangeSelectionStrategy = /** @class */ function() {
    function DateRangeSelectionStrategy1() {}
    /**
     * Returns the new date-range and the boundary that would be affected if `day` were clicked. The
     * affected boundary may be different from the provided `boundary` in some cases. For example,
     * clicking a particular boundary's selected date will always deselect it regardless of which
     * `boundary` you provide to this function (because it's simply a more intuitive interaction).
     */ DateRangeSelectionStrategy1.getNextState = function(currentRange, day, allowSingleDayRange, boundary) {
        if (boundary != null) return this.getNextStateForBoundary(currentRange, day, allowSingleDayRange, boundary);
        else return this.getDefaultNextState(currentRange, day, allowSingleDayRange);
    };
    DateRangeSelectionStrategy1.getNextStateForBoundary = function(currentRange, day, allowSingleDayRange, boundary) {
        var boundaryDate = this.getBoundaryDate(boundary, currentRange);
        var otherBoundary = this.getOtherBoundary(boundary);
        var otherBoundaryDate = this.getBoundaryDate(otherBoundary, currentRange);
        var nextBoundary;
        var nextDateRange;
        if (boundaryDate == null && otherBoundaryDate == null) {
            nextBoundary = boundary;
            nextDateRange = this.createRangeForBoundary(boundary, day, null);
        } else if (boundaryDate != null && otherBoundaryDate == null) {
            var nextBoundaryDate = _dateUtils.areSameDay(boundaryDate, day) ? null : day;
            nextBoundary = boundary;
            nextDateRange = this.createRangeForBoundary(boundary, nextBoundaryDate, null);
        } else if (boundaryDate == null && otherBoundaryDate != null) {
            if (_dateUtils.areSameDay(day, otherBoundaryDate)) {
                var nextDate = void 0;
                if (allowSingleDayRange) {
                    nextBoundary = boundary;
                    nextDate = otherBoundaryDate;
                } else {
                    nextBoundary = otherBoundary;
                    nextDate = null;
                }
                nextDateRange = this.createRangeForBoundary(boundary, nextDate, nextDate);
            } else if (this.isOverlappingOtherBoundary(boundary, day, otherBoundaryDate)) {
                nextBoundary = otherBoundary;
                nextDateRange = this.createRangeForBoundary(boundary, otherBoundaryDate, day);
            } else {
                nextBoundary = boundary;
                nextDateRange = this.createRangeForBoundary(boundary, day, otherBoundaryDate);
            }
        } else {
            // both boundaryDate and otherBoundaryDate are already defined
            if (_dateUtils.areSameDay(boundaryDate, day)) {
                var isSingleDayRangeSelected = _dateUtils.areSameDay(boundaryDate, otherBoundaryDate);
                var nextOtherBoundaryDate = isSingleDayRangeSelected ? null : otherBoundaryDate;
                nextBoundary = boundary;
                nextDateRange = this.createRangeForBoundary(boundary, null, nextOtherBoundaryDate);
            } else if (_dateUtils.areSameDay(day, otherBoundaryDate)) {
                var _a = allowSingleDayRange ? [
                    otherBoundaryDate,
                    otherBoundaryDate
                ] : [
                    boundaryDate,
                    null
                ], nextBoundaryDate = _a[0], nextOtherBoundaryDate = _a[1];
                nextBoundary = allowSingleDayRange ? boundary : otherBoundary;
                nextDateRange = this.createRangeForBoundary(boundary, nextBoundaryDate, nextOtherBoundaryDate);
            } else if (this.isOverlappingOtherBoundary(boundary, day, otherBoundaryDate)) {
                nextBoundary = boundary;
                nextDateRange = this.createRangeForBoundary(boundary, day, null);
            } else {
                // extend the date range with an earlier boundaryDate date
                nextBoundary = boundary;
                nextDateRange = this.createRangeForBoundary(boundary, day, otherBoundaryDate);
            }
        }
        return {
            dateRange: nextDateRange,
            boundary: nextBoundary
        };
    };
    DateRangeSelectionStrategy1.getDefaultNextState = function(selectedRange, day, allowSingleDayRange) {
        var start = selectedRange[0], end = selectedRange[1];
        var nextDateRange;
        if (start == null && end == null) nextDateRange = [
            day,
            null
        ];
        else if (start != null && end == null) nextDateRange = this.createRange(day, start, allowSingleDayRange);
        else if (start == null && end != null) nextDateRange = this.createRange(day, end, allowSingleDayRange);
        else {
            var isStart = _dateUtils.areSameDay(start, day);
            var isEnd = _dateUtils.areSameDay(end, day);
            if (isStart && isEnd) nextDateRange = [
                null,
                null
            ];
            else if (isStart) nextDateRange = [
                null,
                end
            ];
            else if (isEnd) nextDateRange = [
                start,
                null
            ];
            else nextDateRange = [
                day,
                null
            ];
        }
        return {
            dateRange: nextDateRange
        };
    };
    DateRangeSelectionStrategy1.getOtherBoundary = function(boundary) {
        return boundary === _core.Boundary.START ? _core.Boundary.END : _core.Boundary.START;
    };
    DateRangeSelectionStrategy1.getBoundaryDate = function(boundary, dateRange) {
        return boundary === _core.Boundary.START ? dateRange[0] : dateRange[1];
    };
    DateRangeSelectionStrategy1.isOverlappingOtherBoundary = function(boundary, boundaryDate, otherBoundaryDate) {
        return boundary === _core.Boundary.START ? boundaryDate > otherBoundaryDate : boundaryDate < otherBoundaryDate;
    };
    DateRangeSelectionStrategy1.createRangeForBoundary = function(boundary, boundaryDate, otherBoundaryDate) {
        return boundary === _core.Boundary.START ? [
            boundaryDate,
            otherBoundaryDate
        ] : [
            otherBoundaryDate,
            boundaryDate
        ];
    };
    DateRangeSelectionStrategy1.createRange = function(a, b, allowSingleDayRange) {
        // clicking the same date again will clear it
        if (!allowSingleDayRange && _dateUtils.areSameDay(a, b)) return [
            null,
            null
        ];
        return a < b ? [
            a,
            b
        ] : [
            b,
            a
        ];
    };
    return DateRangeSelectionStrategy1;
}();

},{"@blueprintjs/core":"3LcXQ","./common/dateUtils":"gv7pK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4JqvT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Shortcuts", ()=>Shortcuts
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("./common/classes");
var _dateUtils = require("./common/dateUtils");
var Shortcuts = /** @class */ function(_super) {
    _tslib.__extends(Shortcuts1, _super);
    function Shortcuts1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.getShorcutClickHandler = function(shortcut, index) {
            return function() {
                var onShortcutClick = _this.props.onShortcutClick;
                onShortcutClick(shortcut, index);
            };
        };
        _this.isShortcutInRange = function(shortcutDateRange) {
            var _a = _this.props, minDate = _a.minDate, maxDate = _a.maxDate;
            return _dateUtils.isDayRangeInRange(shortcutDateRange, [
                minDate,
                maxDate
            ]);
        };
        return _this;
    }
    Shortcuts1.prototype.render = function() {
        var _this = this;
        var shortcuts = this.props.shortcuts === true ? createDefaultShortcuts(this.props.allowSingleDayRange, this.props.timePrecision !== undefined, this.props.useSingleDateShortcuts === true) : this.props.shortcuts;
        var shortcutElements = shortcuts.map(function(shortcut, index) {
            return _react.createElement(_core.MenuItem, {
                active: _this.props.selectedShortcutIndex === index,
                disabled: !_this.isShortcutInRange(shortcut.dateRange),
                key: index,
                onClick: _this.getShorcutClickHandler(shortcut, index),
                shouldDismissPopover: false,
                text: shortcut.label
            });
        });
        return _react.createElement(_core.Menu, {
            className: _classes.DATERANGEPICKER_SHORTCUTS,
            tabIndex: 0
        }, shortcutElements);
    };
    Shortcuts1.defaultProps = {
        selectedShortcutIndex: -1
    };
    return Shortcuts1;
}(_react.PureComponent);
function createShortcut(label, dateRange) {
    return {
        dateRange: dateRange,
        label: label
    };
}
function createDefaultShortcuts(allowSingleDayRange, hasTimePrecision, useSingleDateShortcuts) {
    var today = new Date();
    var makeDate = function(action) {
        var returnVal = _dateUtils.clone(today);
        action(returnVal);
        returnVal.setDate(returnVal.getDate() + 1);
        return returnVal;
    };
    var tomorrow = makeDate(function() {
        return null;
    });
    var yesterday = makeDate(function(d) {
        return d.setDate(d.getDate() - 2);
    });
    var oneWeekAgo = makeDate(function(d) {
        return d.setDate(d.getDate() - 7);
    });
    var oneMonthAgo = makeDate(function(d) {
        return d.setMonth(d.getMonth() - 1);
    });
    var threeMonthsAgo = makeDate(function(d) {
        return d.setMonth(d.getMonth() - 3);
    });
    var sixMonthsAgo = makeDate(function(d) {
        return d.setMonth(d.getMonth() - 6);
    });
    var oneYearAgo = makeDate(function(d) {
        return d.setFullYear(d.getFullYear() - 1);
    });
    var twoYearsAgo = makeDate(function(d) {
        return d.setFullYear(d.getFullYear() - 2);
    });
    var singleDayShortcuts = allowSingleDayRange || useSingleDateShortcuts ? [
        createShortcut("Today", [
            today,
            hasTimePrecision ? tomorrow : today
        ]),
        createShortcut("Yesterday", [
            yesterday,
            hasTimePrecision ? today : yesterday
        ]), 
    ] : [];
    return _tslib.__spreadArray(_tslib.__spreadArray(_tslib.__spreadArray(_tslib.__spreadArray(_tslib.__spreadArray([], singleDayShortcuts, true), [
        createShortcut(useSingleDateShortcuts ? "1 week ago" : "Past week", [
            oneWeekAgo,
            today
        ]),
        createShortcut(useSingleDateShortcuts ? "1 month ago" : "Past month", [
            oneMonthAgo,
            today
        ]),
        createShortcut(useSingleDateShortcuts ? "3 months ago" : "Past 3 months", [
            threeMonthsAgo,
            today
        ])
    ], false), useSingleDateShortcuts ? [] : [
        createShortcut("Past 6 months", [
            sixMonthsAgo,
            today
        ])
    ], true), [
        createShortcut(useSingleDateShortcuts ? "1 year ago" : "Past year", [
            oneYearAgo,
            today
        ])
    ], false), useSingleDateShortcuts ? [] : [
        createShortcut("Past 2 years", [
            twoYearsAgo,
            today
        ])
    ], true);
}

},{"tslib":"cvpWy","react":"21dqq","@blueprintjs/core":"3LcXQ","./common/classes":"fnsy0","./common/dateUtils":"gv7pK","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iIEQm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TimePrecision", ()=>TimePrecision
);
parcelHelpers.export(exports, "TimePicker", ()=>TimePicker
);
/*
 * Copyright 2015 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("./common/classes");
var _dateUtils = require("./common/dateUtils");
var _timeUnit = require("./common/timeUnit");
var _utils = require("./common/utils");
var TimePrecision = {
    MILLISECOND: "millisecond",
    MINUTE: "minute",
    SECOND: "second"
};
var TimePicker = /** @class */ function(_super) {
    _tslib.__extends(TimePicker1, _super);
    function TimePicker1(props, context) {
        var _this = _super.call(this, props, context) || this;
        // begin method definitions: event handlers
        _this.getInputChangeHandler = function(unit) {
            return function(e) {
                var text = getStringValueFromInputEvent(e);
                switch(unit){
                    case _timeUnit.TimeUnit.HOUR_12:
                    case _timeUnit.TimeUnit.HOUR_24:
                        _this.setState({
                            hourText: text
                        });
                        break;
                    case _timeUnit.TimeUnit.MINUTE:
                        _this.setState({
                            minuteText: text
                        });
                        break;
                    case _timeUnit.TimeUnit.SECOND:
                        _this.setState({
                            secondText: text
                        });
                        break;
                    case _timeUnit.TimeUnit.MS:
                        _this.setState({
                            millisecondText: text
                        });
                        break;
                }
            };
        };
        _this.getInputBlurHandler = function(unit) {
            return function(e) {
                var _a, _b;
                var text = getStringValueFromInputEvent(e);
                _this.updateTime(parseInt(text, 10), unit);
                (_b = (_a = _this.props).onBlur) === null || _b === void 0 || _b.call(_a, e, unit);
            };
        };
        _this.getInputFocusHandler = function(unit) {
            return function(e) {
                var _a, _b;
                if (_this.props.selectAllOnFocus) e.currentTarget.select();
                (_b = (_a = _this.props).onFocus) === null || _b === void 0 || _b.call(_a, e, unit);
            };
        };
        _this.getInputKeyDownHandler = function(unit) {
            return function(e) {
                var _a;
                var _b, _c;
                handleKeyEvent(e, (_a = {}, _a[_core.Keys.ARROW_UP] = function() {
                    return _this.incrementTime(unit);
                }, _a[_core.Keys.ARROW_DOWN] = function() {
                    return _this.decrementTime(unit);
                }, _a[_core.Keys.ENTER] = function() {
                    e.currentTarget.blur();
                }, _a));
                (_c = (_b = _this.props).onKeyDown) === null || _c === void 0 || _c.call(_b, e, unit);
            };
        };
        _this.getInputKeyUpHandler = function(unit) {
            return function(e) {
                var _a, _b;
                (_b = (_a = _this.props).onKeyUp) === null || _b === void 0 || _b.call(_a, e, unit);
            };
        };
        _this.handleAmPmChange = function(e) {
            var isNextPm = e.currentTarget.value === "pm";
            if (isNextPm !== _this.state.isPm) {
                var hour_1 = _dateUtils.convert24HourMeridiem(_this.state.value.getHours(), isNextPm);
                _this.setState({
                    isPm: isNextPm
                }, function() {
                    return _this.updateTime(hour_1, _timeUnit.TimeUnit.HOUR_24);
                });
            }
        };
        _this.incrementTime = function(unit) {
            return _this.shiftTime(unit, 1);
        };
        _this.decrementTime = function(unit) {
            return _this.shiftTime(unit, -1);
        };
        _this.state = _this.getFullStateFromValue(_this.getInitialValue(), props.useAmPm);
        return _this;
    }
    TimePicker1.prototype.render = function() {
        var _a;
        var shouldRenderMilliseconds = this.props.precision === TimePrecision.MILLISECOND;
        var shouldRenderSeconds = shouldRenderMilliseconds || this.props.precision === TimePrecision.SECOND;
        var hourUnit = this.props.useAmPm ? _timeUnit.TimeUnit.HOUR_12 : _timeUnit.TimeUnit.HOUR_24;
        var classes = _classnamesDefault.default(_classes.TIMEPICKER, this.props.className, (_a = {}, _a[_core.Classes.DISABLED] = this.props.disabled, _a));
        return _react.createElement("div", {
            className: classes
        }, _react.createElement("div", {
            className: _classes.TIMEPICKER_ARROW_ROW
        }, this.maybeRenderArrowButton(true, hourUnit), this.maybeRenderArrowButton(true, _timeUnit.TimeUnit.MINUTE), shouldRenderSeconds && this.maybeRenderArrowButton(true, _timeUnit.TimeUnit.SECOND), shouldRenderMilliseconds && this.maybeRenderArrowButton(true, _timeUnit.TimeUnit.MS)), _react.createElement("div", {
            className: _classes.TIMEPICKER_INPUT_ROW
        }, this.renderInput(_classes.TIMEPICKER_HOUR, hourUnit, this.state.hourText), this.renderDivider(), this.renderInput(_classes.TIMEPICKER_MINUTE, _timeUnit.TimeUnit.MINUTE, this.state.minuteText), shouldRenderSeconds && this.renderDivider(), shouldRenderSeconds && this.renderInput(_classes.TIMEPICKER_SECOND, _timeUnit.TimeUnit.SECOND, this.state.secondText), shouldRenderMilliseconds && this.renderDivider("."), shouldRenderMilliseconds && this.renderInput(_classes.TIMEPICKER_MILLISECOND, _timeUnit.TimeUnit.MS, this.state.millisecondText)), this.maybeRenderAmPm(), _react.createElement("div", {
            className: _classes.TIMEPICKER_ARROW_ROW
        }, this.maybeRenderArrowButton(false, hourUnit), this.maybeRenderArrowButton(false, _timeUnit.TimeUnit.MINUTE), shouldRenderSeconds && this.maybeRenderArrowButton(false, _timeUnit.TimeUnit.SECOND), shouldRenderMilliseconds && this.maybeRenderArrowButton(false, _timeUnit.TimeUnit.MS)));
    };
    TimePicker1.prototype.componentDidUpdate = function(prevProps) {
        var didMinTimeChange = prevProps.minTime !== this.props.minTime;
        var didMaxTimeChange = prevProps.maxTime !== this.props.maxTime;
        var didBoundsChange = didMinTimeChange || didMaxTimeChange;
        var didPropValueChange = prevProps.value !== this.props.value;
        var shouldStateUpdate = didBoundsChange || didPropValueChange;
        var value = this.state.value;
        if (this.props.value == null) value = this.getInitialValue();
        if (didBoundsChange) value = _dateUtils.getTimeInRange(this.state.value, this.props.minTime, this.props.maxTime);
        if (this.props.value != null && !_dateUtils.areSameTime(this.props.value, prevProps.value)) value = this.props.value;
        if (shouldStateUpdate) this.setState(this.getFullStateFromValue(value, this.props.useAmPm));
    };
    // begin method definitions: rendering
    TimePicker1.prototype.maybeRenderArrowButton = function(isDirectionUp, timeUnit) {
        var _this = this;
        if (!this.props.showArrowButtons) return null;
        var classes = _classnamesDefault.default(_classes.TIMEPICKER_ARROW_BUTTON, _timeUnit.getTimeUnitClassName(timeUnit));
        var onClick = function() {
            return (isDirectionUp ? _this.incrementTime : _this.decrementTime)(timeUnit);
        };
        // set tabIndex=-1 to ensure a valid FocusEvent relatedTarget when focused
        return _react.createElement("span", {
            tabIndex: -1,
            className: classes,
            onClick: onClick
        }, _react.createElement(_core.Icon, {
            icon: isDirectionUp ? "chevron-up" : "chevron-down",
            title: isDirectionUp ? "Increase" : "Decrease"
        }));
    };
    TimePicker1.prototype.renderDivider = function(text) {
        if (text === void 0) text = ":";
        return _react.createElement("span", {
            className: _classes.TIMEPICKER_DIVIDER_TEXT
        }, text);
    };
    TimePicker1.prototype.renderInput = function(className, unit, value) {
        var _a;
        var isValid = _timeUnit.isTimeUnitValid(unit, parseInt(value, 10));
        var isHour = unit === _timeUnit.TimeUnit.HOUR_12 || unit === _timeUnit.TimeUnit.HOUR_24;
        return _react.createElement("input", {
            className: _classnamesDefault.default(_classes.TIMEPICKER_INPUT, (_a = {}, _a[_core.Classes.intentClass(_core.Intent.DANGER)] = !isValid, _a), className),
            onBlur: this.getInputBlurHandler(unit),
            onChange: this.getInputChangeHandler(unit),
            onFocus: this.getInputFocusHandler(unit),
            onKeyDown: this.getInputKeyDownHandler(unit),
            onKeyUp: this.getInputKeyUpHandler(unit),
            value: value,
            disabled: this.props.disabled,
            autoFocus: isHour && this.props.autoFocus
        });
    };
    TimePicker1.prototype.maybeRenderAmPm = function() {
        if (!this.props.useAmPm) return null;
        return _react.createElement(_core.HTMLSelect, {
            className: _classes.TIMEPICKER_AMPM_SELECT,
            disabled: this.props.disabled,
            onChange: this.handleAmPmChange,
            value: this.state.isPm ? "pm" : "am"
        }, _react.createElement("option", {
            value: "am"
        }, "AM"), _react.createElement("option", {
            value: "pm"
        }, "PM"));
    };
    // begin method definitions: state modification
    /**
     * Generates a full ITimePickerState object with all text fields set to formatted strings based on value
     */ TimePicker1.prototype.getFullStateFromValue = function(value, useAmPm) {
        var timeInRange = _dateUtils.getTimeInRange(value, this.props.minTime, this.props.maxTime);
        var hourUnit = useAmPm ? _timeUnit.TimeUnit.HOUR_12 : _timeUnit.TimeUnit.HOUR_24;
        /* tslint:disable:object-literal-sort-keys */ return {
            hourText: formatTime(timeInRange.getHours(), hourUnit),
            minuteText: formatTime(timeInRange.getMinutes(), _timeUnit.TimeUnit.MINUTE),
            secondText: formatTime(timeInRange.getSeconds(), _timeUnit.TimeUnit.SECOND),
            millisecondText: formatTime(timeInRange.getMilliseconds(), _timeUnit.TimeUnit.MS),
            value: timeInRange,
            isPm: _dateUtils.getIsPmFrom24Hour(timeInRange.getHours())
        };
    /* tslint:enable:object-literal-sort-keys */ };
    TimePicker1.prototype.shiftTime = function(unit, amount) {
        if (this.props.disabled) return;
        var newTime = _timeUnit.getTimeUnit(unit, this.state.value) + amount;
        this.updateTime(_timeUnit.wrapTimeAtUnit(unit, newTime), unit);
    };
    TimePicker1.prototype.updateTime = function(time, unit) {
        var newValue = _dateUtils.clone(this.state.value);
        if (_timeUnit.isTimeUnitValid(unit, time)) {
            _timeUnit.setTimeUnit(unit, time, newValue, this.state.isPm);
            if (_dateUtils.isTimeInRange(newValue, this.props.minTime, this.props.maxTime)) this.updateState({
                value: newValue
            });
            else this.updateState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));
        } else this.updateState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));
    };
    TimePicker1.prototype.updateState = function(state) {
        var _a, _b;
        var newState = state;
        var hasNewValue = newState.value != null && !_dateUtils.areSameTime(newState.value, this.state.value);
        if (this.props.value == null) {
            // component is uncontrolled
            if (hasNewValue) newState = this.getFullStateFromValue(newState.value, this.props.useAmPm);
            this.setState(newState);
        } else // component is controlled, and there's a new value
        // so set inputs' text based off of _old_ value and later fire onChange with new value
        if (hasNewValue) this.setState(this.getFullStateFromValue(this.state.value, this.props.useAmPm));
        else // no new value, this means only text has changed (from user typing)
        // we want inputs to change, so update state with new text for the inputs
        // but don't change actual value
        this.setState(_tslib.__assign(_tslib.__assign({}, newState), {
            value: _dateUtils.clone(this.state.value)
        }));
        if (hasNewValue) (_b = (_a = this.props).onChange) === null || _b === void 0 || _b.call(_a, newState.value);
    };
    TimePicker1.prototype.getInitialValue = function() {
        var value = this.props.minTime;
        if (this.props.value != null) value = this.props.value;
        else if (this.props.defaultValue != null) value = this.props.defaultValue;
        return value;
    };
    TimePicker1.defaultProps = {
        autoFocus: false,
        disabled: false,
        maxTime: _timeUnit.getDefaultMaxTime(),
        minTime: _timeUnit.getDefaultMinTime(),
        precision: TimePrecision.MINUTE,
        selectAllOnFocus: false,
        showArrowButtons: false,
        useAmPm: false
    };
    TimePicker1.displayName = "".concat(_core.DISPLAYNAME_PREFIX, ".TimePicker");
    return TimePicker1;
}(_react.Component);
function formatTime(time, unit) {
    switch(unit){
        case _timeUnit.TimeUnit.HOUR_24:
            return time.toString();
        case _timeUnit.TimeUnit.HOUR_12:
            return _dateUtils.get12HourFrom24Hour(time).toString();
        case _timeUnit.TimeUnit.MINUTE:
        case _timeUnit.TimeUnit.SECOND:
            return _utils.padWithZeroes(time.toString(), 2);
        case _timeUnit.TimeUnit.MS:
            return _utils.padWithZeroes(time.toString(), 3);
        default:
            throw Error("Invalid TimeUnit");
    }
}
function getStringValueFromInputEvent(e) {
    return e.target.value;
}
function handleKeyEvent(e, actions, preventDefault) {
    if (preventDefault === void 0) preventDefault = true;
    for(var _i = 0, _a = Object.keys(actions); _i < _a.length; _i++){
        var k = _a[_i];
        var key = Number(k);
        // HACKHACK: https://github.com/palantir/blueprint/issues/4165
        // eslint-disable-next-line deprecation/deprecation
        if (e.which === key) {
            if (preventDefault) e.preventDefault();
            actions[key]();
        }
    }
}

},{"tslib":"cvpWy","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","./common/classes":"fnsy0","./common/dateUtils":"gv7pK","./common/timeUnit":"1ryQa","./common/utils":"cHCPH","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9doIm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useAsync", ()=>_useAsyncDefault.default
);
parcelHelpers.export(exports, "usePaginated", ()=>_usePaginatedDefault.default
);
parcelHelpers.export(exports, "useLoadMore", ()=>_useLoadMoreDefault.default
);
parcelHelpers.export(exports, "UseRequestProvider", ()=>UseRequestProvider
);
parcelHelpers.export(exports, "UseAPIProvider", ()=>UseAPIProvider
);
/* eslint-disable react-hooks/rules-of-hooks */ var _react = require("react");
var _useAsync = require("./useAsync");
var _useAsyncDefault = parcelHelpers.interopDefault(_useAsync);
var _useLoadMore = require("./useLoadMore");
var _useLoadMoreDefault = parcelHelpers.interopDefault(_useLoadMore);
var _usePaginated = require("./usePaginated");
var _usePaginatedDefault = parcelHelpers.interopDefault(_usePaginated);
var _configContext = require("./configContext");
var _configContextDefault = parcelHelpers.interopDefault(_configContext);
var __assign = undefined && undefined.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = undefined && undefined.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
var __read = undefined && undefined.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spread = undefined && undefined.__spread || function() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
};
function useRequest(service, options) {
    if (options === void 0) options = {};
    var contextConfig = _react.useContext(_configContextDefault.default);
    var finalOptions = __assign(__assign({}, contextConfig), options);
    var paginated = finalOptions.paginated, loadMore = finalOptions.loadMore, requestMethod = finalOptions.requestMethod;
    var paginatedRef = _react.useRef(paginated);
    var loadMoreRef = _react.useRef(loadMore);
    if (paginatedRef.current !== paginated) throw Error('You should not modify the paginated of options');
    if (loadMoreRef.current !== loadMore) throw Error('You should not modify the loadMore of options');
    paginatedRef.current = paginated;
    loadMoreRef.current = loadMore; // @ts-ignore
    var fetchProxy = function fetchProxy() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
         // @ts-ignore
        return fetch.apply(void 0, __spread(args)).then(function(res) {
            if (res.ok) return res.json();
            throw new Error(res.statusText);
        });
    };
    var finalRequestMethod = requestMethod || fetchProxy;
    var promiseService;
    switch(typeof service){
        case 'string':
            promiseService = function promiseService() {
                return finalRequestMethod(service);
            };
            break;
        case 'object':
            var url_1 = service.url, rest_1 = __rest(service, [
                "url"
            ]);
            promiseService = function promiseService() {
                return requestMethod ? requestMethod(service) : fetchProxy(url_1, rest_1);
            };
            break;
        default:
            promiseService = function promiseService() {
                var args = [];
                for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
                return new Promise(function(resolve, reject) {
                    var s = service.apply(void 0, __spread(args));
                    var fn = s;
                    if (!s.then) switch(typeof s){
                        case 'string':
                            fn = finalRequestMethod(s);
                            break;
                        case 'object':
                            var url_2 = s.url, rest_2 = __rest(s, [
                                "url"
                            ]);
                            fn = requestMethod ? requestMethod(s) : fetchProxy(url_2, rest_2);
                            break;
                    }
                    fn.then(resolve)["catch"](reject);
                });
            };
    }
    if (loadMore) return _useLoadMoreDefault.default(promiseService, finalOptions);
    if (paginated) return _usePaginatedDefault.default(promiseService, finalOptions);
    return _useAsyncDefault.default(promiseService, finalOptions);
}
var UseRequestProvider = _configContextDefault.default.Provider; // UseAPIProvider 已经废弃，此处为了兼容 umijs 插件 plugin-request
var UseAPIProvider = UseRequestProvider;
exports.default = useRequest;

},{"react":"21dqq","./useAsync":"6v8Wx","./useLoadMore":"jsWD8","./usePaginated":"440bO","./configContext":"57KRf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6v8Wx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _lodashDebounce = require("lodash.debounce");
var _lodashDebounceDefault = parcelHelpers.interopDefault(_lodashDebounce);
var _lodashThrottle = require("lodash.throttle");
var _lodashThrottleDefault = parcelHelpers.interopDefault(_lodashThrottle);
var _react = require("react");
var _utils = require("./utils");
var _cache = require("./utils/cache");
var _limit = require("./utils/limit");
var _limitDefault = parcelHelpers.interopDefault(_limit);
var _usePersistFn = require("./utils/usePersistFn");
var _usePersistFnDefault = parcelHelpers.interopDefault(_usePersistFn);
var _useUpdateEffect = require("./utils/useUpdateEffect");
var _useUpdateEffectDefault = parcelHelpers.interopDefault(_useUpdateEffect);
var _windowFocus = require("./utils/windowFocus");
var _windowFocusDefault = parcelHelpers.interopDefault(_windowFocus);
var _windowVisible = require("./utils/windowVisible");
var _windowVisibleDefault = parcelHelpers.interopDefault(_windowVisible);
var __assign = undefined && undefined.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = undefined && undefined.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spread = undefined && undefined.__spread || function() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
};
var DEFAULT_KEY = 'AHOOKS_USE_REQUEST_DEFAULT_KEY';
var Fetch = /** @class */ function() {
    function Fetch1(service, config, subscribe, initState) {
        // 请求时序
        this.count = 0; // visible 后，是否继续轮询
        this.pollingWhenVisibleFlag = false;
        this.pollingTimer = undefined;
        this.loadingDelayTimer = undefined;
        this.unsubscribe = [];
        this.that = this;
        this.state = {
            loading: false,
            params: [],
            data: undefined,
            error: undefined,
            run: this.run.bind(this.that),
            mutate: this.mutate.bind(this.that),
            refresh: this.refresh.bind(this.that),
            cancel: this.cancel.bind(this.that),
            unmount: this.unmount.bind(this.that)
        };
        this.service = service;
        this.config = config;
        this.subscribe = subscribe;
        if (initState) this.state = __assign(__assign({}, this.state), initState);
        this.debounceRun = this.config.debounceInterval ? _lodashDebounceDefault.default(this._run, this.config.debounceInterval) : undefined;
        this.throttleRun = this.config.throttleInterval ? _lodashThrottleDefault.default(this._run, this.config.throttleInterval) : undefined;
        this.limitRefresh = _limitDefault.default(this.refresh.bind(this), this.config.focusTimespan);
        if (this.config.pollingInterval) this.unsubscribe.push(_windowVisibleDefault.default(this.rePolling.bind(this)));
        if (this.config.refreshOnWindowFocus) this.unsubscribe.push(_windowFocusDefault.default(this.limitRefresh.bind(this)));
    }
    Fetch1.prototype.setState = function(s) {
        if (s === void 0) s = {};
        this.state = __assign(__assign({}, this.state), s);
        this.subscribe(this.state);
    };
    Fetch1.prototype._run = function() {
        var _this = this;
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
         // 取消已有定时器
        if (this.pollingTimer) clearTimeout(this.pollingTimer);
         // 取消 loadingDelayTimer
        if (this.loadingDelayTimer) clearTimeout(this.loadingDelayTimer);
        this.count += 1; // 闭包存储当次请求的 count
        var currentCount = this.count;
        this.setState({
            loading: !this.config.loadingDelay,
            params: args
        });
        if (this.config.loadingDelay) this.loadingDelayTimer = setTimeout(function() {
            _this.setState({
                loading: true
            });
        }, this.config.loadingDelay);
        return this.service.apply(this, __spread(args)).then(function(res) {
            if (currentCount !== _this.count) // prevent run.then when request is canceled
            return new Promise(function() {});
            if (_this.loadingDelayTimer) clearTimeout(_this.loadingDelayTimer);
            var formattedResult = _this.config.formatResult ? _this.config.formatResult(res) : res;
            _this.setState({
                data: formattedResult,
                error: undefined,
                loading: false
            });
            if (_this.config.onSuccess) _this.config.onSuccess(formattedResult, args);
            return formattedResult;
        })["catch"](function(error) {
            if (currentCount !== _this.count) // prevent run.then when request is canceled
            return new Promise(function() {});
            if (_this.loadingDelayTimer) clearTimeout(_this.loadingDelayTimer);
            _this.setState({
                data: undefined,
                error: error,
                loading: false
            });
            if (_this.config.onError) _this.config.onError(error, args);
             // If throwOnError, user should catch the error self,
            // or the page will crash
            if (_this.config.throwOnError) throw error;
            console.error(error); // eslint-disable-next-line prefer-promise-reject-errors
            return Promise.reject('useRequest has caught the exception, if you need to handle the exception yourself, you can set options.throwOnError to true.');
        })["finally"](function() {
            if (currentCount === _this.count) {
                if (_this.config.pollingInterval) {
                    // 如果屏幕隐藏，并且 !pollingWhenHidden, 则停止轮询，并记录 flag，等 visible 时，继续轮询
                    if (!_utils.isDocumentVisible() && !_this.config.pollingWhenHidden) {
                        _this.pollingWhenVisibleFlag = true;
                        return;
                    }
                    _this.pollingTimer = setTimeout(function() {
                        _this._run.apply(_this, __spread(args));
                    }, _this.config.pollingInterval);
                }
            }
        });
    };
    Fetch1.prototype.run = function() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        if (this.debounceRun) {
            this.debounceRun.apply(this, __spread(args)); // TODO 如果 options 存在 debounceInterval，或 throttleInterval，则 run 和 refresh 不会返回 Promise。 带类型需要修复后，此处变成 return;。
            return Promise.resolve(null);
        }
        if (this.throttleRun) {
            this.throttleRun.apply(this, __spread(args));
            return Promise.resolve(null);
        }
        return this._run.apply(this, __spread(args));
    };
    Fetch1.prototype.cancel = function() {
        if (this.debounceRun) this.debounceRun.cancel();
        if (this.throttleRun) this.throttleRun.cancel();
        if (this.loadingDelayTimer) clearTimeout(this.loadingDelayTimer);
        if (this.pollingTimer) clearTimeout(this.pollingTimer);
        this.pollingWhenVisibleFlag = false;
        this.count += 1;
        this.setState({
            loading: false
        });
    };
    Fetch1.prototype.refresh = function() {
        return this.run.apply(this, __spread(this.state.params));
    };
    Fetch1.prototype.rePolling = function() {
        if (this.pollingWhenVisibleFlag) {
            this.pollingWhenVisibleFlag = false;
            this.refresh();
        }
    };
    Fetch1.prototype.mutate = function(data) {
        if (typeof data === 'function') this.setState({
            // eslint-disable-next-line react/no-access-state-in-setstate
            data: data(this.state.data) || {}
        });
        else this.setState({
            data: data
        });
    };
    Fetch1.prototype.unmount = function() {
        this.cancel();
        this.unsubscribe.forEach(function(s) {
            s();
        });
    };
    return Fetch1;
}();
function useAsync(service, options) {
    var _options = options || {};
    var _a1 = _options.refreshDeps, refreshDeps = _a1 === void 0 ? [] : _a1, _b = _options.manual, manual = _b === void 0 ? false : _b, _c = _options.onSuccess, onSuccess = _c === void 0 ? function() {} : _c, _d = _options.onError, onError = _d === void 0 ? function() {} : _d, _e = _options.defaultLoading, defaultLoading = _e === void 0 ? false : _e, loadingDelay = _options.loadingDelay, _f = _options.pollingInterval, pollingInterval = _f === void 0 ? 0 : _f, _g = _options.pollingWhenHidden, pollingWhenHidden = _g === void 0 ? true : _g, _h = _options.defaultParams, defaultParams = _h === void 0 ? [] : _h, _j = _options.refreshOnWindowFocus, refreshOnWindowFocus = _j === void 0 ? false : _j, _k = _options.focusTimespan, focusTimespan = _k === void 0 ? 5000 : _k, fetchKey = _options.fetchKey, cacheKey = _options.cacheKey, _l = _options.cacheTime, cacheTime = _l === void 0 ? 300000 : _l, _m = _options.staleTime, staleTime = _m === void 0 ? 0 : _m, debounceInterval = _options.debounceInterval, throttleInterval = _options.throttleInterval, initialData = _options.initialData, _o = _options.ready, ready = _o === void 0 ? true : _o, _p = _options.throwOnError, throwOnError = _p === void 0 ? false : _p;
    var newstFetchKey = _react.useRef(DEFAULT_KEY); // 持久化一些函数
    var servicePersist = _usePersistFnDefault.default(service);
    var onSuccessPersist = _usePersistFnDefault.default(onSuccess);
    var onErrorPersist = _usePersistFnDefault.default(onError);
    var fetchKeyPersist = _usePersistFnDefault.default(fetchKey);
    var formatResult;
    if ('formatResult' in _options) // eslint-disable-next-line prefer-destructuring
    formatResult = _options.formatResult;
    var formatResultPersist = _usePersistFnDefault.default(formatResult);
    var config = {
        formatResult: formatResultPersist,
        onSuccess: onSuccessPersist,
        onError: onErrorPersist,
        loadingDelay: loadingDelay,
        pollingInterval: pollingInterval,
        pollingWhenHidden: pollingWhenHidden,
        // refreshOnWindowFocus should not work on manual mode
        refreshOnWindowFocus: !manual && refreshOnWindowFocus,
        focusTimespan: focusTimespan,
        debounceInterval: debounceInterval,
        throttleInterval: throttleInterval,
        throwOnError: throwOnError
    };
    var subscribe = _usePersistFnDefault.default(function(key, data) {
        setFetches(function(s) {
            // eslint-disable-next-line no-param-reassign
            s[key] = data;
            return __assign({}, s);
        });
    });
    var _q = __read(_react.useState(function() {
        var _a; // 如果有 缓存，则从缓存中读数据
        if (cacheKey) {
            var cacheData_1 = (_a = _cache.getCache(cacheKey)) === null || _a === void 0 ? void 0 : _a.data;
            if (cacheData_1) {
                newstFetchKey.current = cacheData_1.newstFetchKey;
                /* 使用 initState, 重新 new Fetch */ var newFetches_1 = {};
                Object.keys(cacheData_1.fetches).forEach(function(key) {
                    var cacheFetch = cacheData_1.fetches[key];
                    var newFetch = new Fetch(servicePersist, config, subscribe.bind(null, key), {
                        loading: cacheFetch.loading,
                        params: cacheFetch.params,
                        data: cacheFetch.data,
                        error: cacheFetch.error
                    });
                    newFetches_1[key] = newFetch.state;
                });
                return newFetches_1;
            }
        }
        return {};
    }), 2), fetches = _q[0], setFetches = _q[1];
    var fetchesRef = _react.useRef(fetches);
    fetchesRef.current = fetches;
    var readyMemoryParams = _react.useRef();
    var run = _react.useCallback(function() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        if (!ready) {
            // 没有 ready, 记录请求参数，等 ready 后，发起请求用
            readyMemoryParams.current = args;
            return;
        }
        if (fetchKeyPersist) {
            var key = fetchKeyPersist.apply(void 0, __spread(args));
            newstFetchKey.current = key === undefined ? DEFAULT_KEY : key;
        }
        var currentFetchKey = newstFetchKey.current; // 这里必须用 fetchsRef，而不能用 fetches。
        // 否则在 reset 完，立即 run 的时候，这里拿到的 fetches 是旧的。
        var currentFetch = fetchesRef.current[currentFetchKey];
        if (!currentFetch) {
            var newFetch = new Fetch(servicePersist, config, subscribe.bind(null, currentFetchKey), {
                data: initialData
            });
            currentFetch = newFetch.state;
            setFetches(function(s) {
                // eslint-disable-next-line no-param-reassign
                s[currentFetchKey] = currentFetch;
                return __assign({}, s);
            });
        }
        return currentFetch.run.apply(currentFetch, __spread(args));
    }, [
        fetchKey,
        subscribe,
        ready
    ]);
    var runRef = _react.useRef(run);
    runRef.current = run; // cache
    _useUpdateEffectDefault.default(function() {
        if (cacheKey) _cache.setCache(cacheKey, cacheTime, {
            fetches: fetches,
            newstFetchKey: newstFetchKey.current
        });
    }, [
        cacheKey,
        fetches
    ]); // for ready
    var hasTriggeredByReady = _react.useRef(false);
    _useUpdateEffectDefault.default(function() {
        if (ready) {
            if (!hasTriggeredByReady.current && readyMemoryParams.current) runRef.current.apply(runRef, __spread(readyMemoryParams.current));
            hasTriggeredByReady.current = true;
        }
    }, [
        ready
    ]); // 第一次默认执行
    _react.useEffect(function() {
        var _a;
        if (!manual) {
            // 如果有缓存，则重新请求
            if (Object.keys(fetches).length > 0) {
                // 如果 staleTime 是 -1，则 cache 永不过期
                // 如果 statleTime 超期了，则重新请求
                var cacheStartTime = cacheKey && ((_a = _cache.getCache(cacheKey)) === null || _a === void 0 ? void 0 : _a.startTime) || 0;
                if (!(staleTime === -1 || new Date().getTime() - cacheStartTime <= staleTime)) /* 重新执行所有的 cache */ Object.values(fetches).forEach(function(f) {
                    f.refresh();
                });
            } else // 第一次默认执行，可以通过 defaultParams 设置参数
            runRef.current.apply(runRef, __spread(defaultParams));
        }
    }, []); // 重置 fetches
    var reset = _react.useCallback(function() {
        Object.values(fetchesRef.current).forEach(function(f) {
            f.unmount();
        });
        newstFetchKey.current = DEFAULT_KEY;
        setFetches({}); // 不写会有问题。如果不写，此时立即 run，会是老的数据
        fetchesRef.current = {};
    }, [
        setFetches
    ]); //  refreshDeps 变化，重新执行所有请求
    _useUpdateEffectDefault.default(function() {
        if (!manual) /* 全部重新执行 */ Object.values(fetchesRef.current).forEach(function(f) {
            f.refresh();
        });
    }, __spread(refreshDeps)); // 卸载组件触发
    _react.useEffect(function() {
        return function() {
            Object.values(fetchesRef.current).forEach(function(f) {
                f.unmount();
            });
        };
    }, []);
    var notExecutedWarning = _react.useCallback(function(name) {
        return function() {
            console.warn("You should't call " + name + " when service not executed once.");
        };
    }, []);
    return __assign(__assign({
        loading: ready && !manual || defaultLoading,
        data: initialData,
        error: undefined,
        params: [],
        cancel: notExecutedWarning('cancel'),
        refresh: notExecutedWarning('refresh'),
        mutate: notExecutedWarning('mutate')
    }, fetches[newstFetchKey.current] || {}), {
        run: run,
        fetches: fetches,
        reset: reset
    });
}
exports.default = useAsync;

},{"lodash.debounce":"3JP5n","lodash.throttle":"bGJVT","react":"21dqq","./utils":"jcwcI","./utils/cache":"emzoj","./utils/limit":"d6K6G","./utils/usePersistFn":"2S1vI","./utils/useUpdateEffect":"47KYa","./utils/windowFocus":"3Aqog","./utils/windowVisible":"cNsJG","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3JP5n":[function(require,module,exports) {
var global = arguments[3];
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ /** Used as the `TypeError` message for "Functions" methods. */ var FUNC_ERROR_TEXT = 'Expected a function';
/** Used as references for various `Number` constants. */ var NAN = 0 / 0;
/** `Object#toString` result references. */ var symbolTag = '[object Symbol]';
/** Used to match leading and trailing whitespace. */ var reTrim = /^\s+|\s+$/g;
/** Used to detect bad signed hexadecimal string values. */ var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
/** Used to detect binary string values. */ var reIsBinary = /^0b[01]+$/i;
/** Used to detect octal string values. */ var reIsOctal = /^0o[0-7]+$/i;
/** Built-in method references without a dependency on `root`. */ var freeParseInt = parseInt;
/** Detect free variable `global` from Node.js. */ var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
/** Detect free variable `self`. */ var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function('return this')();
/** Used for built-in method references. */ var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var objectToString = objectProto.toString;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeMax = Math.max, nativeMin = Math.min;
/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */ var now = function() {
    return root.Date.now();
};
/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */ function debounce(func, wait, options) {
    var lastArgs, lastThis, maxWait, result1, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
    if (typeof func != 'function') throw new TypeError(FUNC_ERROR_TEXT);
    wait = toNumber(wait) || 0;
    if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
    }
    function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result1 = func.apply(thisArg, args);
        return result1;
    }
    function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result1;
    }
    function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result = wait - timeSinceLastCall;
        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
    }
    function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }
    function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) return trailingEdge(time);
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
    }
    function trailingEdge(time) {
        timerId = undefined;
        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) return invokeFunc(time);
        lastArgs = lastThis = undefined;
        return result1;
    }
    function cancel() {
        if (timerId !== undefined) clearTimeout(timerId);
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
    }
    function flush() {
        return timerId === undefined ? result1 : trailingEdge(now());
    }
    function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
            if (timerId === undefined) return leadingEdge(lastCallTime);
            if (maxing) {
                // Handle invocations in a tight loop.
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
            }
        }
        if (timerId === undefined) timerId = setTimeout(timerExpired, wait);
        return result1;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
}
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */ function isObject(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
}
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */ function isObjectLike(value) {
    return !!value && typeof value == 'object';
}
/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */ function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
}
/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */ function toNumber(value) {
    if (typeof value == 'number') return value;
    if (isSymbol(value)) return NAN;
    if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
    }
    if (typeof value != 'string') return value === 0 ? value : +value;
    value = value.replace(reTrim, '');
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
module.exports = debounce;

},{}],"bGJVT":[function(require,module,exports) {
var global = arguments[3];
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ /** Used as the `TypeError` message for "Functions" methods. */ var FUNC_ERROR_TEXT = 'Expected a function';
/** Used as references for various `Number` constants. */ var NAN = 0 / 0;
/** `Object#toString` result references. */ var symbolTag = '[object Symbol]';
/** Used to match leading and trailing whitespace. */ var reTrim = /^\s+|\s+$/g;
/** Used to detect bad signed hexadecimal string values. */ var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
/** Used to detect binary string values. */ var reIsBinary = /^0b[01]+$/i;
/** Used to detect octal string values. */ var reIsOctal = /^0o[0-7]+$/i;
/** Built-in method references without a dependency on `root`. */ var freeParseInt = parseInt;
/** Detect free variable `global` from Node.js. */ var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
/** Detect free variable `self`. */ var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function('return this')();
/** Used for built-in method references. */ var objectProto = Object.prototype;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var objectToString = objectProto.toString;
/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeMax = Math.max, nativeMin = Math.min;
/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */ var now = function() {
    return root.Date.now();
};
/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */ function debounce(func, wait, options) {
    var lastArgs, lastThis, maxWait, result1, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
    if (typeof func != 'function') throw new TypeError(FUNC_ERROR_TEXT);
    wait = toNumber(wait) || 0;
    if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
    }
    function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result1 = func.apply(thisArg, args);
        return result1;
    }
    function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result1;
    }
    function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result = wait - timeSinceLastCall;
        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
    }
    function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
    }
    function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) return trailingEdge(time);
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
    }
    function trailingEdge(time) {
        timerId = undefined;
        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) return invokeFunc(time);
        lastArgs = lastThis = undefined;
        return result1;
    }
    function cancel() {
        if (timerId !== undefined) clearTimeout(timerId);
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
    }
    function flush() {
        return timerId === undefined ? result1 : trailingEdge(now());
    }
    function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
            if (timerId === undefined) return leadingEdge(lastCallTime);
            if (maxing) {
                // Handle invocations in a tight loop.
                timerId = setTimeout(timerExpired, wait);
                return invokeFunc(lastCallTime);
            }
        }
        if (timerId === undefined) timerId = setTimeout(timerExpired, wait);
        return result1;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
}
/**
 * Creates a throttled function that only invokes `func` at most once per
 * every `wait` milliseconds. The throttled function comes with a `cancel`
 * method to cancel delayed `func` invocations and a `flush` method to
 * immediately invoke them. Provide `options` to indicate whether `func`
 * should be invoked on the leading and/or trailing edge of the `wait`
 * timeout. The `func` is invoked with the last arguments provided to the
 * throttled function. Subsequent calls to the throttled function return the
 * result of the last `func` invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the throttled function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.throttle` and `_.debounce`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to throttle.
 * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=true]
 *  Specify invoking on the leading edge of the timeout.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new throttled function.
 * @example
 *
 * // Avoid excessively updating the position while scrolling.
 * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
 *
 * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
 * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
 * jQuery(element).on('click', throttled);
 *
 * // Cancel the trailing throttled invocation.
 * jQuery(window).on('popstate', throttled.cancel);
 */ function throttle(func, wait, options) {
    var leading = true, trailing = true;
    if (typeof func != 'function') throw new TypeError(FUNC_ERROR_TEXT);
    if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
    }
    return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
    });
}
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */ function isObject(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
}
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */ function isObjectLike(value) {
    return !!value && typeof value == 'object';
}
/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */ function isSymbol(value) {
    return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
}
/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */ function toNumber(value) {
    if (typeof value == 'number') return value;
    if (isSymbol(value)) return NAN;
    if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
    }
    if (typeof value != 'string') return value === 0 ? value : +value;
    value = value.replace(reTrim, '');
    var isBinary = reIsBinary.test(value);
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
}
module.exports = throttle;

},{}],"jcwcI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _utils = require("./utils");
parcelHelpers.exportAll(_utils, exports);

},{"./utils":"ijDsc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ijDsc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isDocumentVisible", ()=>isDocumentVisible
);
parcelHelpers.export(exports, "isOnline", ()=>isOnline
);
function isDocumentVisible() {
    if (typeof document !== 'undefined' && typeof document.visibilityState !== 'undefined') return document.visibilityState !== 'hidden';
    return true;
}
function isOnline() {
    if (typeof navigator.onLine !== 'undefined') return navigator.onLine;
    return true;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"emzoj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getCache", ()=>getCache
);
parcelHelpers.export(exports, "setCache", ()=>setCache
);
var cache = new Map();
var setCache = function setCache(key, cacheTime, data) {
    var currentCache = cache.get(key);
    if (currentCache === null || currentCache === void 0 ? void 0 : currentCache.timer) clearTimeout(currentCache.timer);
    var timer = undefined;
    if (cacheTime > -1) // 数据在不活跃 cacheTime 后，删除掉
    timer = setTimeout(function() {
        cache["delete"](key);
    }, cacheTime);
    cache.set(key, {
        data: data,
        timer: timer,
        startTime: new Date().getTime()
    });
};
var getCache = function getCache(key) {
    var currentCache = cache.get(key);
    return {
        data: currentCache === null || currentCache === void 0 ? void 0 : currentCache.data,
        startTime: currentCache === null || currentCache === void 0 ? void 0 : currentCache.startTime
    };
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"d6K6G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var __read = undefined && undefined.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spread = undefined && undefined.__spread || function() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
};
function limit(fn, timespan) {
    var pending = false;
    return function() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        if (pending) return;
        pending = true;
        fn.apply(void 0, __spread(args));
        setTimeout(function() {
            pending = false;
        }, timespan);
    };
}
exports.default = limit;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2S1vI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var __read = undefined && undefined.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spread = undefined && undefined.__spread || function() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
};
function usePersistFn(fn) {
    var ref = _react.useRef(function() {
        throw new Error('Cannot call an event handler while rendering.');
    });
    ref.current = fn;
    var persist = _react.useCallback(function() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        var refFn = ref.current;
        if (refFn) return refFn.apply(void 0, __spread(args));
    }, [
        ref
    ]);
    if (typeof fn === 'function') return persist;
    return undefined;
}
exports.default = usePersistFn;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"47KYa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var useUpdateEffect = function useUpdateEffect(effect, deps) {
    var isMounted = _react.useRef(false);
    _react.useEffect(function() {
        return function() {
            isMounted.current = false;
        };
    }, []);
    _react.useEffect(function() {
        if (!isMounted.current) isMounted.current = true;
        else return effect();
    }, deps);
};
exports.default = useUpdateEffect;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3Aqog":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// from swr
var _utils = require("./utils");
var listeners = [];
function subscribe(listener) {
    listeners.push(listener);
    return function unsubscribe() {
        var index = listeners.indexOf(listener);
        listeners.splice(index, 1);
    };
}
var eventsBinded = false;
if (typeof window !== 'undefined' && window.addEventListener && !eventsBinded) {
    var revalidate = function revalidate() {
        if (!_utils.isDocumentVisible() || !_utils.isOnline()) return;
        for(var i = 0; i < listeners.length; i++){
            var listener = listeners[i];
            listener();
        }
    };
    window.addEventListener('visibilitychange', revalidate, false);
    window.addEventListener('focus', revalidate, false); // only bind the events once
    eventsBinded = true;
}
exports.default = subscribe;

},{"./utils":"ijDsc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"cNsJG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// from swr
var _utils = require("./utils");
var listeners = [];
function subscribe(listener) {
    listeners.push(listener);
    return function unsubscribe() {
        var index = listeners.indexOf(listener);
        listeners.splice(index, 1);
    };
}
var eventsBinded = false;
if (typeof window !== 'undefined' && window.addEventListener && !eventsBinded) {
    var revalidate = function revalidate() {
        if (!_utils.isDocumentVisible()) return;
        for(var i = 0; i < listeners.length; i++){
            var listener = listeners[i];
            listener();
        }
    };
    window.addEventListener('visibilitychange', revalidate, false); // only bind the events once
    eventsBinded = true;
}
exports.default = subscribe;

},{"./utils":"ijDsc","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jsWD8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _useAsync = require("./useAsync");
var _useAsyncDefault = parcelHelpers.interopDefault(_useAsync);
var _useUpdateEffect = require("./utils/useUpdateEffect");
var _useUpdateEffectDefault = parcelHelpers.interopDefault(_useUpdateEffect);
var __assign = undefined && undefined.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = undefined && undefined.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
var __read = undefined && undefined.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spread = undefined && undefined.__spread || function() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
};
function useLoadMore(service, options) {
    var _a1 = options.refreshDeps, refreshDeps = _a1 === void 0 ? [] : _a1, ref = options.ref, isNoMore = options.isNoMore, _b1 = options.threshold, threshold = _b1 === void 0 ? 100 : _b1, fetchKey = options.fetchKey, restOptions = __rest(options, [
        "refreshDeps",
        "ref",
        "isNoMore",
        "threshold",
        "fetchKey"
    ]);
    var _c = __read(_react.useState(false), 2), loadingMore = _c[0], setLoadingMore = _c[1];
    _react.useEffect(function() {
        if (options.fetchKey) console.warn("useRequest loadMore mode don't need fetchKey!");
    }, []);
    var result = _useAsyncDefault.default(service, __assign(__assign({}, restOptions), {
        fetchKey: function fetchKey(d) {
            var _a;
            return ((_a = d === null || d === void 0 ? void 0 : d.list) === null || _a === void 0 ? void 0 : _a.length) || 0;
        },
        onSuccess: function onSuccess() {
            var params = [];
            for(var _i = 0; _i < arguments.length; _i++)params[_i] = arguments[_i];
            setLoadingMore(false);
            if (options.onSuccess) options.onSuccess.apply(options, __spread(params));
        }
    }));
    var data = result.data, run = result.run, params1 = result.params, reset = result.reset, loading = result.loading, fetches = result.fetches;
    var reload = _react.useCallback(function() {
        reset();
        var _a = __read(params1), restParams = _a.slice(1);
        run.apply(void 0, __spread([
            undefined
        ], restParams));
    }, [
        run,
        reset,
        params1
    ]);
    var reloadRef = _react.useRef(reload);
    reloadRef.current = reload;
    /* loadMore 场景下，如果 refreshDeps 变化，重置到第一页 */ _useUpdateEffectDefault.default(function() {
        /* 只有自动执行的场景， refreshDeps 才有效 */ if (!options.manual) reloadRef.current();
    }, __spread(refreshDeps));
    var dataGroup = _react.useMemo(function() {
        var listGroup = []; // 在 loadMore 时，不希望清空上一次的 data。需要把最后一个 非 loading 的请求 data，放回去。
        var lastNoLoadingData = data;
        Object.values(fetches).forEach(function(h) {
            var _a, _b;
            if ((_a = h.data) === null || _a === void 0 ? void 0 : _a.list) listGroup = listGroup.concat((_b = h.data) === null || _b === void 0 ? void 0 : _b.list);
            if (!h.loading) lastNoLoadingData = h.data;
        });
        return __assign(__assign({}, lastNoLoadingData), {
            list: listGroup
        });
    }, [
        fetches,
        data
    ]);
    var noMore = isNoMore ? !loading && !loadingMore && isNoMore(dataGroup) : false;
    var loadMore = _react.useCallback(function() {
        if (noMore) return;
        setLoadingMore(true);
        var _a = __read(params1), restParams = _a.slice(1);
        run.apply(void 0, __spread([
            dataGroup
        ], restParams));
    }, [
        noMore,
        run,
        dataGroup,
        params1
    ]);
    /* 上拉加载的方法 */ var scrollMethod = function scrollMethod() {
        if (loading || loadingMore || !ref || !ref.current) return;
        if (ref.current.scrollHeight - ref.current.scrollTop <= ref.current.clientHeight + threshold) loadMore();
    }; // 如果不用 ref，而用之前的 useCallbak，在某些情况下会出问题，造成拿到的 loading 不是最新的。
    // fix https://github.com/alibaba/hooks/issues/630
    var scrollMethodRef = _react.useRef(scrollMethod);
    scrollMethodRef.current = scrollMethod;
    /* 如果有 ref，则会上拉加载更多 */ _react.useEffect(function() {
        if (!ref || !ref.current) return function() {};
        var scrollTrigger = function scrollTrigger() {
            return scrollMethodRef.current();
        };
        ref.current.addEventListener('scroll', scrollTrigger);
        return function() {
            if (ref && ref.current) ref.current.removeEventListener('scroll', scrollTrigger);
        };
    }, [
        scrollMethodRef
    ]);
    return __assign(__assign({}, result), {
        data: dataGroup,
        reload: reload,
        loading: loading && dataGroup.list.length === 0,
        loadMore: loadMore,
        loadingMore: loadingMore,
        noMore: noMore
    });
}
exports.default = useLoadMore;

},{"react":"21dqq","./useAsync":"6v8Wx","./utils/useUpdateEffect":"47KYa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"440bO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _useAsync = require("./useAsync");
var _useAsyncDefault = parcelHelpers.interopDefault(_useAsync);
var _useUpdateEffect = require("./utils/useUpdateEffect");
var _useUpdateEffectDefault = parcelHelpers.interopDefault(_useUpdateEffect);
var __assign = undefined && undefined.__assign || function() {
    __assign = Object.assign || function(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = undefined && undefined.__rest || function(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
};
var __read = undefined && undefined.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
};
var __spread = undefined && undefined.__spread || function() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
};
function usePaginated(service, options) {
    var paginated = options.paginated, _a1 = options.defaultPageSize, defaultPageSize = _a1 === void 0 ? 10 : _a1, _b = options.refreshDeps, refreshDeps = _b === void 0 ? [] : _b, fetchKey = options.fetchKey, restOptions = __rest(options, [
        "paginated",
        "defaultPageSize",
        "refreshDeps",
        "fetchKey"
    ]);
    _react.useEffect(function() {
        if (fetchKey) console.error("useRequest pagination's fetchKey will not work!");
    }, []);
    var _c = _useAsyncDefault.default(service, __assign({
        defaultParams: [
            {
                current: 1,
                pageSize: defaultPageSize
            }
        ]
    }, restOptions)), data = _c.data, params = _c.params, run = _c.run, loading = _c.loading, rest = __rest(_c, [
        "data",
        "params",
        "run",
        "loading"
    ]);
    var _d = params && params[0] ? params[0] : {}, _e = _d.current, current = _e === void 0 ? 1 : _e, _f = _d.pageSize, pageSize = _f === void 0 ? defaultPageSize : _f, _g = _d.sorter, sorter = _g === void 0 ? {} : _g, _h = _d.filters, filters = _h === void 0 ? {} : _h; // 只改变 pagination，其他参数原样传递
    var runChangePagination = _react.useCallback(function(paginationParams) {
        var _a = __read(params), oldPaginationParams = _a[0], restParams = _a.slice(1);
        run.apply(void 0, __spread([
            __assign(__assign({}, oldPaginationParams), paginationParams)
        ], restParams));
    }, [
        run,
        params
    ]);
    var total = (data === null || data === void 0 ? void 0 : data.total) || 0;
    var totalPage = _react.useMemo(function() {
        return Math.ceil(total / pageSize);
    }, [
        pageSize,
        total
    ]);
    var onChange = _react.useCallback(function(c, p) {
        var toCurrent = c <= 0 ? 1 : c;
        var toPageSize = p <= 0 ? 1 : p;
        var tempTotalPage = Math.ceil(total / toPageSize);
        if (toCurrent > tempTotalPage) toCurrent = Math.max(1, tempTotalPage);
        runChangePagination({
            current: toCurrent,
            pageSize: toPageSize
        });
    }, [
        total,
        runChangePagination
    ]);
    var changeCurrent = _react.useCallback(function(c) {
        onChange(c, pageSize);
    }, [
        onChange,
        pageSize
    ]);
    var changePageSize = _react.useCallback(function(p) {
        onChange(current, p);
    }, [
        onChange,
        current
    ]);
    var changeCurrentRef = _react.useRef(changeCurrent);
    changeCurrentRef.current = changeCurrent;
    /* 分页场景下，如果 refreshDeps 变化，重置分页 */ _useUpdateEffectDefault.default(function() {
        /* 只有自动执行的场景， refreshDeps 才有效 */ if (!options.manual) changeCurrentRef.current(1);
    }, __spread(refreshDeps)); // 表格翻页 排序 筛选等
    var changeTable = _react.useCallback(function(p, f, s) {
        runChangePagination({
            current: p.current,
            pageSize: p.pageSize || defaultPageSize,
            filters: f,
            sorter: s
        });
    }, [
        filters,
        sorter,
        runChangePagination
    ]);
    return __assign({
        loading: loading,
        data: data,
        params: params,
        run: run,
        pagination: {
            current: current,
            pageSize: pageSize,
            total: total,
            totalPage: totalPage,
            onChange: onChange,
            changeCurrent: changeCurrent,
            changePageSize: changePageSize
        },
        tableProps: {
            dataSource: (data === null || data === void 0 ? void 0 : data.list) || [],
            loading: loading,
            onChange: changeTable,
            pagination: {
                current: current,
                pageSize: pageSize,
                total: total
            }
        },
        sorter: sorter,
        filters: filters
    }, rest);
}
exports.default = usePaginated;

},{"react":"21dqq","./useAsync":"6v8Wx","./utils/useUpdateEffect":"47KYa","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"57KRf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var ConfigContext = /*#__PURE__*/ _reactDefault.default.createContext({});
ConfigContext.displayName = 'UseRequestConfigContext';
exports.default = ConfigContext;

},{"react":"21dqq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"i6vsm":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /* eslint-disable deprecation/deprecation */ parcelHelpers.export(exports, "Cell", ()=>_cell.Cell
);
parcelHelpers.export(exports, "EditableCell", ()=>_editableCell.EditableCell
);
parcelHelpers.export(exports, "EditableCell2", ()=>_editableCell2.EditableCell2
);
parcelHelpers.export(exports, "JSONFormat", ()=>_jsonFormat.JSONFormat
);
parcelHelpers.export(exports, "TruncatedPopoverMode", ()=>_truncatedFormat.TruncatedPopoverMode
);
parcelHelpers.export(exports, "TruncatedFormat", ()=>_truncatedFormat.TruncatedFormat
);
parcelHelpers.export(exports, "Column", ()=>_column.Column
);
parcelHelpers.export(exports, "Clipboard", ()=>_index.Clipboard
);
parcelHelpers.export(exports, "Grid", ()=>_index.Grid
);
parcelHelpers.export(exports, "Rect", ()=>_index.Rect
);
parcelHelpers.export(exports, "RenderMode", ()=>_index.RenderMode
);
parcelHelpers.export(exports, "Utils", ()=>_index.Utils
);
parcelHelpers.export(exports, "Draggable", ()=>_draggable.Draggable
);
parcelHelpers.export(exports, "CopyCellsMenuItem", ()=>_menus.CopyCellsMenuItem
);
parcelHelpers.export(exports, "Orientation", ()=>_resizeHandle.Orientation
);
parcelHelpers.export(exports, "ResizeHandle", ()=>_resizeHandle.ResizeHandle
);
parcelHelpers.export(exports, "DragSelectable", ()=>_selectable.DragSelectable
);
parcelHelpers.export(exports, "ColumnHeaderCell", ()=>_columnHeaderCell.ColumnHeaderCell
);
parcelHelpers.export(exports, "HorizontalCellDivider", ()=>_columnHeaderCell.HorizontalCellDivider
);
parcelHelpers.export(exports, "RowHeaderCell", ()=>_rowHeaderCell.RowHeaderCell
);
parcelHelpers.export(exports, "EditableName", ()=>_editableName.EditableName
);
parcelHelpers.export(exports, "ColumnLoadingOption", ()=>_regions.ColumnLoadingOption
);
parcelHelpers.export(exports, "RegionCardinality", ()=>_regions.RegionCardinality
);
parcelHelpers.export(exports, "Regions", ()=>_regions.Regions
);
parcelHelpers.export(exports, "RowLoadingOption", ()=>_regions.RowLoadingOption
);
parcelHelpers.export(exports, "SelectionModes", ()=>_regions.SelectionModes
);
parcelHelpers.export(exports, "TableLoadingOption", ()=>_regions.TableLoadingOption
);
parcelHelpers.export(exports, "Table", ()=>_table.Table
);
parcelHelpers.export(exports, "Table2", ()=>_table2.Table2
);
var _cell = require("./cell/cell");
var _editableCell = require("./cell/editableCell");
var _editableCell2 = require("./cell/editableCell2");
var _jsonFormat = require("./cell/formats/jsonFormat");
var _truncatedFormat = require("./cell/formats/truncatedFormat");
var _column = require("./column");
var _index = require("./common/index");
var _draggable = require("./interactions/draggable");
var _menus = require("./interactions/menus");
var _resizeHandle = require("./interactions/resizeHandle");
var _selectable = require("./interactions/selectable");
var _columnHeaderCell = require("./headers/columnHeaderCell");
var _rowHeaderCell = require("./headers/rowHeaderCell");
var _editableName = require("./headers/editableName");
var _regions = require("./regions");
var _table = require("./table");
var _table2 = require("./table2");

},{"./cell/cell":"fhDSO","./cell/editableCell":false,"./cell/editableCell2":false,"./cell/formats/jsonFormat":"dMzZ6","./cell/formats/truncatedFormat":"hMWUN","./column":"lpdUA","./common/index":"kdBMl","./interactions/draggable":"3iPrI","./interactions/menus":"epbBF","./interactions/resizeHandle":"jMlCL","./interactions/selectable":"lssvA","./headers/columnHeaderCell":"2aZF9","./headers/rowHeaderCell":"fXVTu","./headers/editableName":false,"./regions":"8S4uE","./table":false,"./table2":"h2gol","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fhDSO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "emptyCellRenderer", ()=>emptyCellRenderer
);
parcelHelpers.export(exports, "Cell", ()=>Cell
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
var _loadableContent = require("../common/loadableContent");
var _jsonFormat = require("./formats/jsonFormat");
var _truncatedFormat = require("./formats/truncatedFormat");
var emptyCellRenderer = function() {
    return _react.createElement(Cell, null);
};
var Cell = /** @class */ function(_super) {
    _tslib.__extends(Cell1, _super);
    function Cell1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Cell1.prototype.shouldComponentUpdate = function(nextProps) {
        // deeply compare "style," because a new but identical object might have been provided.
        return !_core.Utils.shallowCompareKeys(this.props, nextProps, {
            exclude: [
                "style"
            ]
        }) || !_core.Utils.deepCompareKeys(this.props.style, nextProps.style);
    };
    Cell1.prototype.render = function() {
        var _a, _b;
        var _c = this.props, cellRef = _c.cellRef, tabIndex = _c.tabIndex, onKeyDown = _c.onKeyDown, onKeyUp = _c.onKeyUp, onKeyPress = _c.onKeyPress, style = _c.style, intent = _c.intent, interactive = _c.interactive, loading = _c.loading, tooltip = _c.tooltip, truncated = _c.truncated, className = _c.className, wrapText = _c.wrapText;
        var classes = _classnamesDefault.default(_classes.TABLE_CELL, _core.Classes.intentClass(intent), (_a = {}, _a[_classes.TABLE_CELL_INTERACTIVE] = interactive, _a[_core.Classes.LOADING] = loading, _a[_classes.TABLE_TRUNCATED_CELL] = truncated, _a), className);
        var textClasses = _classnamesDefault.default((_b = {}, _b[_classes.TABLE_TRUNCATED_TEXT] = truncated, _b[_classes.TABLE_NO_WRAP_TEXT] = !wrapText, _b));
        // add width and height to the children, for use in shouldComponentUpdate in truncatedFormat
        // note: these aren't actually used by truncated format, just in shouldComponentUpdate
        var modifiedChildren = _react.Children.map(this.props.children, function(child) {
            var isFormatElement = _core.Utils.isElementOfType(child, _truncatedFormat.TruncatedFormat) || _core.Utils.isElementOfType(child, _jsonFormat.JSONFormat);
            if (style != null && _react.isValidElement(child) && isFormatElement) return _react.cloneElement(child, {
                parentCellHeight: style.height === undefined ? undefined : parseInt(style.height.toString(), 10),
                parentCellWidth: style.width === undefined ? undefined : parseInt(style.width.toString(), 10)
            });
            return child;
        });
        var content = _react.createElement("div", {
            className: textClasses
        }, modifiedChildren);
        return _react.createElement("div", _tslib.__assign({
            className: classes,
            title: tooltip,
            ref: cellRef
        }, {
            style: style,
            tabIndex: tabIndex,
            onKeyDown: onKeyDown,
            onKeyUp: onKeyUp,
            onKeyPress: onKeyPress
        }), _react.createElement(_loadableContent.LoadableContent, {
            loading: loading !== null && loading !== void 0 ? loading : false,
            variableLength: true
        }, content));
    };
    Cell1.displayName = "".concat(_core.DISPLAYNAME_PREFIX, ".Cell");
    Cell1.defaultProps = {
        truncated: true,
        wrapText: false
    };
    return Cell1;
}(_react.Component);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","../common/loadableContent":"dapUX","./formats/jsonFormat":"dMzZ6","./formats/truncatedFormat":"hMWUN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"gB4KC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "__extends", ()=>__extends
);
parcelHelpers.export(exports, "__assign", ()=>__assign
);
parcelHelpers.export(exports, "__rest", ()=>__rest
);
parcelHelpers.export(exports, "__decorate", ()=>__decorate
);
parcelHelpers.export(exports, "__param", ()=>__param
);
parcelHelpers.export(exports, "__metadata", ()=>__metadata
);
parcelHelpers.export(exports, "__awaiter", ()=>__awaiter
);
parcelHelpers.export(exports, "__generator", ()=>__generator
);
parcelHelpers.export(exports, "__createBinding", ()=>__createBinding
);
parcelHelpers.export(exports, "__exportStar", ()=>__exportStar
);
parcelHelpers.export(exports, "__values", ()=>__values
);
parcelHelpers.export(exports, "__read", ()=>__read
);
/** @deprecated */ parcelHelpers.export(exports, "__spread", ()=>__spread
);
/** @deprecated */ parcelHelpers.export(exports, "__spreadArrays", ()=>__spreadArrays
);
parcelHelpers.export(exports, "__spreadArray", ()=>__spreadArray
);
parcelHelpers.export(exports, "__await", ()=>__await
);
parcelHelpers.export(exports, "__asyncGenerator", ()=>__asyncGenerator
);
parcelHelpers.export(exports, "__asyncDelegator", ()=>__asyncDelegator
);
parcelHelpers.export(exports, "__asyncValues", ()=>__asyncValues
);
parcelHelpers.export(exports, "__makeTemplateObject", ()=>__makeTemplateObject
);
parcelHelpers.export(exports, "__importStar", ()=>__importStar
);
parcelHelpers.export(exports, "__importDefault", ()=>__importDefault
);
parcelHelpers.export(exports, "__classPrivateFieldGet", ()=>__classPrivateFieldGet
);
parcelHelpers.export(exports, "__classPrivateFieldSet", ()=>__classPrivateFieldSet
);
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d1, b1) {
    extendStatics = Object.setPrototypeOf || ({
        __proto__: []
    }) instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d1, b1);
};
function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
        this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") {
        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
    return function(target, key) {
        decorator(target, key, paramIndex);
    };
}
function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
var __createBinding = Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
};
function __exportStar(m, o) {
    for(var p in m)if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error: error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spread() {
    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));
    return ar;
}
function __spreadArrays() {
    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;
    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];
    return r;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) {
        for(var i = 0, l = from.length, ar; i < l; i++)if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i;
    function verb(n) {
        if (g[n]) i[n] = function(v) {
            return new Promise(function(a, b) {
                q.push([
                    n,
                    v,
                    a,
                    b
                ]) > 1 || resume(n, v);
            });
        };
    }
    function resume(n, v) {
        try {
            step(g[n](v));
        } catch (e) {
            settle(q[0][3], e);
        }
    }
    function step(r) {
        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
        resume("next", value);
    }
    function reject(value) {
        resume("throw", value);
    }
    function settle(f, v) {
        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
}
function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function(e) {
        throw e;
    }), verb("return"), i[Symbol.iterator] = function() {
        return this;
    }, i;
    function verb(n, f) {
        i[n] = o[n] ? function(v) {
            return (p = !p) ? {
                value: __await(o[n](v)),
                done: n === "return"
            } : f ? f(v) : v;
        } : f;
    }
}
function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
        return this;
    }, i);
    function verb(n) {
        i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
                v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
        };
    }
    function settle(resolve, reject, d, v1) {
        Promise.resolve(v1).then(function(v) {
            resolve({
                value: v,
                done: d
            });
        }, reject);
    }
}
function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) Object.defineProperty(cooked, "raw", {
        value: raw
    });
    else cooked.raw = raw;
    return cooked;
}
var __setModuleDefault = Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
};
function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) {
        for(var k in mod)if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    }
    __setModuleDefault(result, mod);
    return result;
}
function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
        default: mod
    };
}
function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}
function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"76ljs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TABLE_BODY", ()=>TABLE_BODY
);
parcelHelpers.export(exports, "TABLE_BODY_CELLS", ()=>TABLE_BODY_CELLS
);
parcelHelpers.export(exports, "TABLE_BODY_SCROLL_CLIENT", ()=>TABLE_BODY_SCROLL_CLIENT
);
parcelHelpers.export(exports, "TABLE_BODY_VIRTUAL_CLIENT", ()=>TABLE_BODY_VIRTUAL_CLIENT
);
parcelHelpers.export(exports, "TABLE_BOTTOM_CONTAINER", ()=>TABLE_BOTTOM_CONTAINER
);
parcelHelpers.export(exports, "TABLE_CELL", ()=>TABLE_CELL
);
parcelHelpers.export(exports, "TABLE_CELL_CLIENT", ()=>TABLE_CELL_CLIENT
);
parcelHelpers.export(exports, "TABLE_CELL_GHOST", ()=>TABLE_CELL_GHOST
);
parcelHelpers.export(exports, "TABLE_CELL_INTERACTIVE", ()=>TABLE_CELL_INTERACTIVE
);
parcelHelpers.export(exports, "TABLE_CELL_LEDGER_EVEN", ()=>TABLE_CELL_LEDGER_EVEN
);
parcelHelpers.export(exports, "TABLE_CELL_LEDGER_ODD", ()=>TABLE_CELL_LEDGER_ODD
);
parcelHelpers.export(exports, "TABLE_COLUMN_HEADER_TR", ()=>TABLE_COLUMN_HEADER_TR
);
parcelHelpers.export(exports, "TABLE_COLUMN_HEADERS", ()=>TABLE_COLUMN_HEADERS
);
parcelHelpers.export(exports, "TABLE_COLUMN_HEADER_CELL", ()=>TABLE_COLUMN_HEADER_CELL
);
parcelHelpers.export(exports, "TABLE_COLUMN_NAME", ()=>TABLE_COLUMN_NAME
);
parcelHelpers.export(exports, "TABLE_COLUMN_NAME_TEXT", ()=>TABLE_COLUMN_NAME_TEXT
);
parcelHelpers.export(exports, "TABLE_CONTAINER", ()=>TABLE_CONTAINER
);
parcelHelpers.export(exports, "TABLE_DRAGGING", ()=>TABLE_DRAGGING
);
parcelHelpers.export(exports, "TABLE_EDITABLE_NAME", ()=>TABLE_EDITABLE_NAME
);
parcelHelpers.export(exports, "TABLE_EDITABLE_TEXT", ()=>TABLE_EDITABLE_TEXT
);
parcelHelpers.export(exports, "TABLE_FOCUS_REGION", ()=>TABLE_FOCUS_REGION
);
parcelHelpers.export(exports, "TABLE_HAS_INTERACTION_BAR", ()=>TABLE_HAS_INTERACTION_BAR
);
parcelHelpers.export(exports, "TABLE_HAS_REORDER_HANDLE", ()=>TABLE_HAS_REORDER_HANDLE
);
parcelHelpers.export(exports, "TABLE_HEADER", ()=>TABLE_HEADER
);
parcelHelpers.export(exports, "TABLE_HEADER_ACTIVE", ()=>TABLE_HEADER_ACTIVE
);
parcelHelpers.export(exports, "TABLE_HEADER_CONTENT", ()=>TABLE_HEADER_CONTENT
);
parcelHelpers.export(exports, "TABLE_HEADER_REORDERABLE", ()=>TABLE_HEADER_REORDERABLE
);
parcelHelpers.export(exports, "TABLE_HEADER_SELECTED", ()=>TABLE_HEADER_SELECTED
);
parcelHelpers.export(exports, "TABLE_HORIZONTAL_CELL_DIVIDER", ()=>TABLE_HORIZONTAL_CELL_DIVIDER
);
parcelHelpers.export(exports, "TABLE_HORIZONTAL_GUIDE", ()=>TABLE_HORIZONTAL_GUIDE
);
parcelHelpers.export(exports, "TABLE_INTERACTION_BAR", ()=>TABLE_INTERACTION_BAR
);
parcelHelpers.export(exports, "TABLE_LAST_IN_COLUMN", ()=>TABLE_LAST_IN_COLUMN
);
parcelHelpers.export(exports, "TABLE_LAST_IN_ROW", ()=>TABLE_LAST_IN_ROW
);
parcelHelpers.export(exports, "TABLE_MENU", ()=>TABLE_MENU
);
parcelHelpers.export(exports, "TABLE_NO_HORIZONTAL_SCROLL", ()=>TABLE_NO_HORIZONTAL_SCROLL
);
parcelHelpers.export(exports, "TABLE_NO_LAYOUT", ()=>TABLE_NO_LAYOUT
);
parcelHelpers.export(exports, "TABLE_NO_ROWS", ()=>TABLE_NO_ROWS
);
parcelHelpers.export(exports, "TABLE_NO_VERTICAL_SCROLL", ()=>TABLE_NO_VERTICAL_SCROLL
);
parcelHelpers.export(exports, "TABLE_NO_WRAP_TEXT", ()=>TABLE_NO_WRAP_TEXT
);
parcelHelpers.export(exports, "TABLE_NULL", ()=>TABLE_NULL
);
parcelHelpers.export(exports, "TABLE_OVERLAY", ()=>TABLE_OVERLAY
);
parcelHelpers.export(exports, "TABLE_OVERLAY_LAYER", ()=>TABLE_OVERLAY_LAYER
);
parcelHelpers.export(exports, "TABLE_OVERLAY_REORDERING_CURSOR", ()=>TABLE_OVERLAY_REORDERING_CURSOR
);
parcelHelpers.export(exports, "TABLE_POPOVER_WHITESPACE_NORMAL", ()=>TABLE_POPOVER_WHITESPACE_NORMAL
);
parcelHelpers.export(exports, "TABLE_POPOVER_WHITESPACE_PRE", ()=>TABLE_POPOVER_WHITESPACE_PRE
);
parcelHelpers.export(exports, "TABLE_QUADRANT", ()=>TABLE_QUADRANT
);
parcelHelpers.export(exports, "TABLE_QUADRANT_BODY_CONTAINER", ()=>TABLE_QUADRANT_BODY_CONTAINER
);
parcelHelpers.export(exports, "TABLE_QUADRANT_LEFT", ()=>TABLE_QUADRANT_LEFT
);
parcelHelpers.export(exports, "TABLE_QUADRANT_MAIN", ()=>TABLE_QUADRANT_MAIN
);
parcelHelpers.export(exports, "TABLE_QUADRANT_SCROLL_CONTAINER", ()=>TABLE_QUADRANT_SCROLL_CONTAINER
);
parcelHelpers.export(exports, "TABLE_QUADRANT_STACK", ()=>TABLE_QUADRANT_STACK
);
parcelHelpers.export(exports, "TABLE_QUADRANT_TOP", ()=>TABLE_QUADRANT_TOP
);
parcelHelpers.export(exports, "TABLE_QUADRANT_TOP_LEFT", ()=>TABLE_QUADRANT_TOP_LEFT
);
parcelHelpers.export(exports, "TABLE_REGION", ()=>TABLE_REGION
);
parcelHelpers.export(exports, "TABLE_REORDER_HANDLE", ()=>TABLE_REORDER_HANDLE
);
parcelHelpers.export(exports, "TABLE_REORDER_HANDLE_TARGET", ()=>TABLE_REORDER_HANDLE_TARGET
);
parcelHelpers.export(exports, "TABLE_REORDERING", ()=>TABLE_REORDERING
);
parcelHelpers.export(exports, "TABLE_RESIZE_GUIDES", ()=>TABLE_RESIZE_GUIDES
);
parcelHelpers.export(exports, "TABLE_RESIZE_HANDLE", ()=>TABLE_RESIZE_HANDLE
);
parcelHelpers.export(exports, "TABLE_RESIZE_HANDLE_TARGET", ()=>TABLE_RESIZE_HANDLE_TARGET
);
parcelHelpers.export(exports, "TABLE_RESIZE_HORIZONTAL", ()=>TABLE_RESIZE_HORIZONTAL
);
parcelHelpers.export(exports, "TABLE_RESIZE_SENSOR", ()=>TABLE_RESIZE_SENSOR
);
parcelHelpers.export(exports, "TABLE_RESIZE_SENSOR_EXPAND", ()=>TABLE_RESIZE_SENSOR_EXPAND
);
parcelHelpers.export(exports, "TABLE_RESIZE_SENSOR_SHRINK", ()=>TABLE_RESIZE_SENSOR_SHRINK
);
parcelHelpers.export(exports, "TABLE_RESIZE_VERTICAL", ()=>TABLE_RESIZE_VERTICAL
);
parcelHelpers.export(exports, "TABLE_ROUNDED_LAYOUT", ()=>TABLE_ROUNDED_LAYOUT
);
parcelHelpers.export(exports, "TABLE_ROW_HEADERS", ()=>TABLE_ROW_HEADERS
);
parcelHelpers.export(exports, "TABLE_ROW_HEADERS_CELLS_CONTAINER", ()=>TABLE_ROW_HEADERS_CELLS_CONTAINER
);
parcelHelpers.export(exports, "TABLE_ROW_NAME", ()=>TABLE_ROW_NAME
);
parcelHelpers.export(exports, "TABLE_ROW_NAME_TEXT", ()=>TABLE_ROW_NAME_TEXT
);
parcelHelpers.export(exports, "TABLE_SELECTION_ENABLED", ()=>TABLE_SELECTION_ENABLED
);
parcelHelpers.export(exports, "TABLE_SELECTION_REGION", ()=>TABLE_SELECTION_REGION
);
parcelHelpers.export(exports, "TABLE_TH_MENU", ()=>TABLE_TH_MENU
);
parcelHelpers.export(exports, "TABLE_TH_MENU_CONTAINER", ()=>TABLE_TH_MENU_CONTAINER
);
parcelHelpers.export(exports, "TABLE_TH_MENU_CONTAINER_BACKGROUND", ()=>TABLE_TH_MENU_CONTAINER_BACKGROUND
);
parcelHelpers.export(exports, "TABLE_TH_MENU_OPEN", ()=>TABLE_TH_MENU_OPEN
);
parcelHelpers.export(exports, "TABLE_THEAD", ()=>TABLE_THEAD
);
parcelHelpers.export(exports, "TABLE_TOP_CONTAINER", ()=>TABLE_TOP_CONTAINER
);
parcelHelpers.export(exports, "TABLE_TRUNCATED_CELL", ()=>TABLE_TRUNCATED_CELL
);
parcelHelpers.export(exports, "TABLE_TRUNCATED_FORMAT", ()=>TABLE_TRUNCATED_FORMAT
);
parcelHelpers.export(exports, "TABLE_TRUNCATED_FORMAT_TEXT", ()=>TABLE_TRUNCATED_FORMAT_TEXT
);
parcelHelpers.export(exports, "TABLE_TRUNCATED_POPOVER", ()=>TABLE_TRUNCATED_POPOVER
);
parcelHelpers.export(exports, "TABLE_TRUNCATED_POPOVER_TARGET", ()=>TABLE_TRUNCATED_POPOVER_TARGET
);
parcelHelpers.export(exports, "TABLE_TRUNCATED_TEXT", ()=>TABLE_TRUNCATED_TEXT
);
parcelHelpers.export(exports, "TABLE_TRUNCATED_VALUE", ()=>TABLE_TRUNCATED_VALUE
);
parcelHelpers.export(exports, "TABLE_VERTICAL_GUIDE", ()=>TABLE_VERTICAL_GUIDE
);
/** Return CSS class for table colummn index, whether or not 'pt-table-col-' prefix is included. */ parcelHelpers.export(exports, "columnIndexClass", ()=>columnIndexClass
);
/** Return CSS class for table row index, whether or not 'pt-table-row-' prefix is included. */ parcelHelpers.export(exports, "rowIndexClass", ()=>rowIndexClass
);
/** Return CSS class for table colummn cell index, whether or not 'pt-table-cell-col-' prefix is included. */ parcelHelpers.export(exports, "columnCellIndexClass", ()=>columnCellIndexClass
);
/** Return CSS class for table row cell index, whether or not 'pt-table-cell-row-' prefix is included. */ parcelHelpers.export(exports, "rowCellIndexClass", ()=>rowCellIndexClass
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _core = require("@blueprintjs/core");
var NS = _core.Classes.getClassNamespace();
var TABLE_BODY = "".concat(NS, "-table-body");
var TABLE_BODY_CELLS = "".concat(NS, "-table-body-cells");
var TABLE_BODY_SCROLL_CLIENT = "".concat(NS, "-table-body-scroll-client");
var TABLE_BODY_VIRTUAL_CLIENT = "".concat(NS, "-table-body-virtual-client");
var TABLE_BOTTOM_CONTAINER = "".concat(NS, "-table-bottom-container");
var TABLE_CELL = "".concat(NS, "-table-cell");
var TABLE_CELL_CLIENT = "".concat(NS, "-table-cell-client");
var TABLE_CELL_GHOST = "".concat(NS, "-table-cell-ghost");
var TABLE_CELL_INTERACTIVE = "".concat(NS, "-table-cell-interactive");
var TABLE_CELL_LEDGER_EVEN = "".concat(NS, "-table-cell-ledger-even");
var TABLE_CELL_LEDGER_ODD = "".concat(NS, "-table-cell-ledger-odd");
var TABLE_COLUMN_HEADER_TR = "".concat(NS, "-table-column-header-tr");
var TABLE_COLUMN_HEADERS = "".concat(NS, "-table-column-headers");
var TABLE_COLUMN_HEADER_CELL = "".concat(NS, "-table-column-header-cell");
var TABLE_COLUMN_NAME = "".concat(NS, "-table-column-name");
var TABLE_COLUMN_NAME_TEXT = "".concat(NS, "-table-column-name-text");
var TABLE_CONTAINER = "".concat(NS, "-table-container");
var TABLE_DRAGGING = "".concat(NS, "-table-dragging");
var TABLE_EDITABLE_NAME = "".concat(NS, "-table-editable-name");
var TABLE_EDITABLE_TEXT = "".concat(NS, "-table-editable-text");
var TABLE_FOCUS_REGION = "".concat(NS, "-table-focus-region");
var TABLE_HAS_INTERACTION_BAR = "".concat(NS, "-table-has-interaction-bar");
var TABLE_HAS_REORDER_HANDLE = "".concat(NS, "-table-has-reorder-handle");
var TABLE_HEADER = "".concat(NS, "-table-header");
var TABLE_HEADER_ACTIVE = "".concat(NS, "-table-header-active");
var TABLE_HEADER_CONTENT = "".concat(NS, "-table-header-content");
var TABLE_HEADER_REORDERABLE = "".concat(NS, "-table-header-reorderable");
var TABLE_HEADER_SELECTED = "".concat(NS, "-table-header-selected");
var TABLE_HORIZONTAL_CELL_DIVIDER = "".concat(NS, "-table-horizontal-cell-divider");
var TABLE_HORIZONTAL_GUIDE = "".concat(NS, "-table-horizontal-guide");
var TABLE_INTERACTION_BAR = "".concat(NS, "-table-interaction-bar");
var TABLE_LAST_IN_COLUMN = "".concat(NS, "-table-last-in-column");
var TABLE_LAST_IN_ROW = "".concat(NS, "-table-last-in-row");
var TABLE_MENU = "".concat(NS, "-table-menu");
var TABLE_NO_HORIZONTAL_SCROLL = "".concat(NS, "-table-no-horizontal-scroll");
var TABLE_NO_LAYOUT = "".concat(NS, "-table-no-layout");
var TABLE_NO_ROWS = "".concat(NS, "-table-no-rows");
var TABLE_NO_VERTICAL_SCROLL = "".concat(NS, "-table-no-vertical-scroll");
var TABLE_NO_WRAP_TEXT = "".concat(NS, "-table-no-wrap-text");
var TABLE_NULL = "".concat(NS, "-table-null");
var TABLE_OVERLAY = "".concat(NS, "-table-overlay");
var TABLE_OVERLAY_LAYER = "".concat(NS, "-table-overlay-layer");
var TABLE_OVERLAY_REORDERING_CURSOR = "".concat(NS, "-table-reordering-cursor-overlay");
var TABLE_POPOVER_WHITESPACE_NORMAL = "".concat(NS, "-table-popover-whitespace-normal");
var TABLE_POPOVER_WHITESPACE_PRE = "".concat(NS, "-table-popover-whitespace-pre");
var TABLE_QUADRANT = "".concat(NS, "-table-quadrant");
var TABLE_QUADRANT_BODY_CONTAINER = "".concat(NS, "-table-quadrant-body-container");
var TABLE_QUADRANT_LEFT = "".concat(NS, "-table-quadrant-left");
var TABLE_QUADRANT_MAIN = "".concat(NS, "-table-quadrant-main");
var TABLE_QUADRANT_SCROLL_CONTAINER = "".concat(NS, "-table-quadrant-scroll-container");
var TABLE_QUADRANT_STACK = "".concat(NS, "-table-quadrant-stack");
var TABLE_QUADRANT_TOP = "".concat(NS, "-table-quadrant-top");
var TABLE_QUADRANT_TOP_LEFT = "".concat(NS, "-table-quadrant-top-left");
var TABLE_REGION = "".concat(NS, "-table-region");
var TABLE_REORDER_HANDLE = "".concat(NS, "-table-reorder-handle");
var TABLE_REORDER_HANDLE_TARGET = "".concat(NS, "-table-reorder-handle-target");
var TABLE_REORDERING = "".concat(NS, "-table-reordering");
var TABLE_RESIZE_GUIDES = "".concat(NS, "-table-resize-guides");
var TABLE_RESIZE_HANDLE = "".concat(NS, "-table-resize-handle");
var TABLE_RESIZE_HANDLE_TARGET = "".concat(NS, "-table-resize-handle-target");
var TABLE_RESIZE_HORIZONTAL = "".concat(NS, "-table-resize-horizontal");
var TABLE_RESIZE_SENSOR = "".concat(NS, "-table-resize-sensor");
var TABLE_RESIZE_SENSOR_EXPAND = "".concat(NS, "-table-resize-sensor-expand");
var TABLE_RESIZE_SENSOR_SHRINK = "".concat(NS, "-table-resize-sensor-shrink");
var TABLE_RESIZE_VERTICAL = "".concat(NS, "-table-resize-vertical");
var TABLE_ROUNDED_LAYOUT = "".concat(NS, "-table-rounded-layout");
var TABLE_ROW_HEADERS = "".concat(NS, "-table-row-headers");
var TABLE_ROW_HEADERS_CELLS_CONTAINER = "".concat(NS, "-table-row-headers-cells-container");
var TABLE_ROW_NAME = "".concat(NS, "-table-row-name");
var TABLE_ROW_NAME_TEXT = "".concat(NS, "-table-row-name-text");
var TABLE_SELECTION_ENABLED = "".concat(NS, "-table-selection-enabled");
var TABLE_SELECTION_REGION = "".concat(NS, "-table-selection-region");
var TABLE_TH_MENU = "".concat(NS, "-table-th-menu");
var TABLE_TH_MENU_CONTAINER = "".concat(NS, "-table-th-menu-container");
var TABLE_TH_MENU_CONTAINER_BACKGROUND = "".concat(NS, "-table-th-menu-container-background");
var TABLE_TH_MENU_OPEN = "".concat(NS, "-table-th-menu-open");
var TABLE_THEAD = "".concat(NS, "-table-thead");
var TABLE_TOP_CONTAINER = "".concat(NS, "-table-top-container");
var TABLE_TRUNCATED_CELL = "".concat(NS, "-table-truncated-cell");
var TABLE_TRUNCATED_FORMAT = "".concat(NS, "-table-truncated-format");
var TABLE_TRUNCATED_FORMAT_TEXT = "".concat(NS, "-table-truncated-format-text");
var TABLE_TRUNCATED_POPOVER = "".concat(NS, "-table-truncated-popover");
var TABLE_TRUNCATED_POPOVER_TARGET = "".concat(NS, "-table-truncated-popover-target");
var TABLE_TRUNCATED_TEXT = "".concat(NS, "-table-truncated-text");
var TABLE_TRUNCATED_VALUE = "".concat(NS, "-table-truncated-value");
var TABLE_VERTICAL_GUIDE = "".concat(NS, "-table-vertical-guide");
/** Common code for row and column index class generator functions, since they're essentially the same. */ function dimensionIndexClass(classPrefix, index) {
    if (typeof index === "number") return "".concat(classPrefix).concat(index);
    return index.indexOf(classPrefix) === 0 ? index : "".concat(classPrefix).concat(index);
}
function columnIndexClass(columnIndex) {
    return dimensionIndexClass("".concat(NS, "-table-col-"), columnIndex);
}
function rowIndexClass(rowIndex) {
    return dimensionIndexClass("".concat(NS, "-table-row-"), rowIndex);
}
function columnCellIndexClass(columnIndex) {
    return dimensionIndexClass("".concat(NS, "-table-cell-col-"), columnIndex);
}
function rowCellIndexClass(rowIndex) {
    return dimensionIndexClass("".concat(NS, "-table-cell-row-"), rowIndex);
}

},{"@blueprintjs/core":"3LcXQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dapUX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LoadableContent", ()=>LoadableContent
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
// This class expects a single, non-string child.
var LoadableContent = /** @class */ function(_super) {
    _tslib.__extends(LoadableContent1, _super);
    function LoadableContent1(props) {
        var _this = _super.call(this, props) || this;
        _this.style = _this.calculateStyle(props.variableLength);
        return _this;
    }
    LoadableContent1.prototype.componentDidUpdate = function(prevProps) {
        if (!prevProps.loading && this.props.loading || prevProps.variableLength !== this.props.variableLength) this.style = this.calculateStyle(this.props.variableLength);
    };
    LoadableContent1.prototype.render = function() {
        if (this.props.loading) return _react.createElement("div", {
            className: _core.Classes.SKELETON,
            style: this.style
        });
        return _react.Children.only(this.props.children);
    };
    LoadableContent1.prototype.calculateStyle = function(variableLength) {
        if (variableLength === void 0) variableLength = false;
        var skeletonLength = variableLength ? 75 - Math.floor(Math.random() * 11) * 5 : 100;
        return {
            width: "".concat(skeletonLength, "%")
        };
    };
    return LoadableContent1;
}(_react.PureComponent);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dMzZ6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "JSONFormat", ()=>JSONFormat
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../../common/classes");
var _truncatedFormat = require("./truncatedFormat");
/* istanbul ignore next */ var JSONFormat = /** @class */ function(_super) {
    _tslib.__extends(JSONFormat1, _super);
    function JSONFormat1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    JSONFormat1.prototype.render = function() {
        var _a;
        var _b = this.props, children = _b.children, omitQuotesOnStrings = _b.omitQuotesOnStrings, stringify = _b.stringify;
        var showPopover = this.props.showPopover;
        // always hide popover if value is nully
        var isNully = children == null;
        if (isNully) showPopover = _truncatedFormat.TruncatedPopoverMode.NEVER;
        var className = _classnamesDefault.default(this.props.className, (_a = {}, _a[_classes.TABLE_NULL] = isNully, _a));
        var displayValue = "";
        if (omitQuotesOnStrings && typeof children === "string") displayValue = children;
        else displayValue = stringify(children);
        return _react.createElement(_truncatedFormat.TruncatedFormat, _tslib.__assign({}, this.props, {
            className: className,
            showPopover: showPopover
        }), displayValue);
    };
    JSONFormat1.displayName = "".concat(_core.DISPLAYNAME_PREFIX, ".JSONFormat");
    JSONFormat1.defaultProps = {
        omitQuotesOnStrings: true,
        stringify: function(obj) {
            return JSON.stringify(obj, null, 2);
        }
    };
    return JSONFormat1;
}(_react.Component);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../../common/classes":"76ljs","./truncatedFormat":"hMWUN","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hMWUN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TruncatedPopoverMode", ()=>TruncatedPopoverMode
);
parcelHelpers.export(exports, "TruncatedFormat", ()=>TruncatedFormat
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../../common/classes");
var _utils = require("../../common/utils");
var _locator = require("../../locator");
// amount in pixels that the content div width changes when truncated vs when
// not truncated. Note: could be modified by styles
// Note 2: this doesn't come from the width of the popover element, but the "right" style
// on the div, which comes from styles
var CONTENT_DIV_WIDTH_DELTA = 25;
var TruncatedPopoverMode;
(function(TruncatedPopoverMode1) {
    TruncatedPopoverMode1["ALWAYS"] = "always";
    TruncatedPopoverMode1["NEVER"] = "never";
    TruncatedPopoverMode1["WHEN_TRUNCATED"] = "when-truncated";
    TruncatedPopoverMode1["WHEN_TRUNCATED_APPROX"] = "when-truncated-approx";
})(TruncatedPopoverMode || (TruncatedPopoverMode = {}));
var TruncatedFormat = /** @class */ function(_super) {
    _tslib.__extends(TruncatedFormat1, _super);
    function TruncatedFormat1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isPopoverOpen: false,
            isTruncated: false
        };
        _this.handleContentDivRef = function(ref) {
            return _this.contentDiv = ref;
        };
        _this.handlePopoverOpen = function() {
            _this.setState({
                isPopoverOpen: true
            });
        };
        _this.handlePopoverClose = function() {
            _this.setState({
                isPopoverOpen: false
            });
        };
        return _this;
    }
    TruncatedFormat1.prototype.componentDidMount = function() {
        this.setTruncationState();
    };
    TruncatedFormat1.prototype.componentDidUpdate = function() {
        this.setTruncationState();
    };
    TruncatedFormat1.prototype.render = function() {
        var _a = this.props, children = _a.children, detectTruncation = _a.detectTruncation, truncateLength = _a.truncateLength, truncationSuffix = _a.truncationSuffix;
        var content = "" + children;
        var cellContent = content;
        if (!detectTruncation && truncateLength > 0 && cellContent.length > truncateLength) cellContent = cellContent.substring(0, truncateLength) + truncationSuffix;
        if (this.shouldShowPopover(content)) {
            var className = _classnamesDefault.default(this.props.className, _classes.TABLE_TRUNCATED_FORMAT);
            return _react.createElement("div", {
                className: className
            }, _react.createElement("div", {
                className: _classes.TABLE_TRUNCATED_VALUE,
                ref: this.handleContentDivRef
            }, cellContent), this.renderPopover());
        } else {
            var className = _classnamesDefault.default(this.props.className, _classes.TABLE_TRUNCATED_FORMAT_TEXT);
            return _react.createElement("div", {
                className: className,
                ref: this.handleContentDivRef
            }, cellContent);
        }
    };
    TruncatedFormat1.prototype.renderPopover = function() {
        var _a = this.props, children = _a.children, preformatted = _a.preformatted;
        // `<Popover>` will always check the content's position on update
        // regardless if it is open or not. This negatively affects perf due to
        // layout thrashing. So instead we manage the popover state ourselves
        // and mimic its popover target
        if (this.state.isPopoverOpen) {
            var popoverClasses = _classnamesDefault.default(_classes.TABLE_TRUNCATED_POPOVER, preformatted ? _classes.TABLE_POPOVER_WHITESPACE_PRE : _classes.TABLE_POPOVER_WHITESPACE_NORMAL);
            var popoverContent = _react.createElement("div", {
                className: popoverClasses
            }, children);
            return /* eslint-disable-next-line deprecation/deprecation */ _react.createElement(_core.Popover, {
                className: _classes.TABLE_TRUNCATED_POPOVER_TARGET,
                modifiers: {
                    preventOverflow: {
                        boundariesElement: "window"
                    }
                },
                content: popoverContent,
                position: _core.Position.BOTTOM,
                isOpen: true,
                onClose: this.handlePopoverClose
            }, _react.createElement(_core.Icon, {
                icon: "more"
            }));
        } else // NOTE: This structure matches what `<Popover>` does internally. If
        // `<Popover>` changes, this must be updated.
        return _react.createElement("span", {
            className: _classes.TABLE_TRUNCATED_POPOVER_TARGET,
            onClick: this.handlePopoverOpen
        }, _react.createElement(_core.Icon, {
            icon: "more"
        }));
    };
    TruncatedFormat1.prototype.shouldShowPopover = function(content) {
        var _a = this.props, detectTruncation = _a.detectTruncation, measureByApproxOptions = _a.measureByApproxOptions, showPopover = _a.showPopover, truncateLength = _a.truncateLength;
        switch(showPopover){
            case TruncatedPopoverMode.ALWAYS:
                return true;
            case TruncatedPopoverMode.NEVER:
                return false;
            case TruncatedPopoverMode.WHEN_TRUNCATED:
                return detectTruncation ? this.state.isTruncated : truncateLength > 0 && content.length > truncateLength;
            case TruncatedPopoverMode.WHEN_TRUNCATED_APPROX:
                if (!detectTruncation) return truncateLength > 0 && content.length > truncateLength;
                if (this.props.parentCellHeight == null || this.props.parentCellWidth == null) return false;
                var _b = measureByApproxOptions, approximateCharWidth = _b.approximateCharWidth, approximateLineHeight = _b.approximateLineHeight, cellHorizontalPadding = _b.cellHorizontalPadding, numBufferLines = _b.numBufferLines;
                var cellWidth = this.props.parentCellWidth;
                var approxCellHeight = _utils.Utils.getApproxCellHeight(content, cellWidth, approximateCharWidth, approximateLineHeight, cellHorizontalPadding, numBufferLines);
                var shouldTruncate = approxCellHeight > this.props.parentCellHeight;
                return shouldTruncate;
            default:
                return false;
        }
    };
    TruncatedFormat1.prototype.setTruncationState = function() {
        if (!this.props.detectTruncation || this.props.showPopover !== TruncatedPopoverMode.WHEN_TRUNCATED) return;
        if (this.contentDiv == null) {
            this.setState({
                isTruncated: false
            });
            return;
        }
        var isTruncated = this.state.isTruncated;
        // take all measurements at once to avoid excessive DOM reflows.
        var _a = this.contentDiv, containerHeight = _a.clientHeight, containerWidth = _a.clientWidth, actualContentHeight = _a.scrollHeight, contentWidth = _a.scrollWidth;
        // if the content is truncated, then a popover handle will be present as a
        // sibling of the content. we don't want to consider that handle when
        // calculating the width of the actual content, so subtract it.
        var actualContentWidth = isTruncated ? contentWidth - CONTENT_DIV_WIDTH_DELTA : contentWidth;
        // we of course truncate the content if it doesn't fit in the container. but we
        // also aggressively truncate if they're the same size with truncation enabled;
        // this addresses browser-crashing stack-overflow bugs at various zoom levels.
        // (see: https://github.com/palantir/blueprint/pull/1519)
        var shouldTruncate = isTruncated && actualContentWidth === containerWidth || actualContentWidth > containerWidth || actualContentHeight > containerHeight;
        this.setState({
            isTruncated: shouldTruncate
        });
    };
    TruncatedFormat1.displayName = "".concat(_core.DISPLAYNAME_PREFIX, ".TruncatedFormat");
    TruncatedFormat1.defaultProps = {
        detectTruncation: false,
        measureByApproxOptions: {
            approximateCharWidth: 8,
            approximateLineHeight: 18,
            cellHorizontalPadding: 2 * _locator.Locator.CELL_HORIZONTAL_PADDING,
            numBufferLines: 0
        },
        preformatted: false,
        showPopover: TruncatedPopoverMode.WHEN_TRUNCATED,
        truncateLength: 2000,
        truncationSuffix: "..."
    };
    return TruncatedFormat1;
}(_react.PureComponent);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../../common/classes":"76ljs","../../common/utils":"ee8Nq","../../locator":"fuMWh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ee8Nq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT", ()=>CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT
);
parcelHelpers.export(exports, "Utils", ()=>Utils
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _core = require("@blueprintjs/core");
var CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT = "bp-table-text-no-measure";
// supposed width of the icons placeholder
var EXCLUDED_ICON_PLACEHOLDER_WIDTH = _core.IconSize.STANDARD;
/**
 * Since Firefox doesn't provide a computed "font" property, we manually
 * construct it using the ordered properties that can be specifed in CSS.
 */ var CSS_FONT_PROPERTIES = [
    "font-style",
    "font-variant",
    "font-weight",
    "font-size",
    "font-family"
];
var Utils = {
    /**
     * Invokes the callback `n` times, collecting the results in an array, which
     * is the return value. Similar to _.times
     */ times: function(n, callback) {
        if (n < 0) throw new Error("[Blueprint] times() cannot be called with negative numbers.");
        var result = Array(n);
        for(var index = 0; index < n; index++)result[index] = callback(index);
        return result;
    },
    /**
     * Takes an array of numbers, returns an array of numbers of the same length in which each
     * value is the sum of current and previous values in the input array.
     *
     * Example input:  [10, 20, 50]
     *         output: [10, 30, 80]
     */ accumulate: function(numbers) {
        var result = [];
        var sum = 0;
        for(var _i = 0, numbers_1 = numbers; _i < numbers_1.length; _i++){
            var num = numbers_1[_i];
            sum += num;
            result.push(sum);
        }
        return result;
    },
    /**
     * Returns traditional spreadsheet-style column names
     * e.g. (A, B, ..., Z, AA, AB, ..., ZZ, AAA, AAB, ...).
     *
     * Note that this isn't technically mathematically equivalent to base 26 since
     * there is no zero element.
     */ toBase26Alpha: function(num) {
        var str = "";
        while(true){
            var letter = num % 26;
            // eslint-disable-next-line id-blacklist
            str = String.fromCharCode(65 + letter) + str;
            num = num - letter;
            if (num <= 0) return str;
            num = num / 26 - 1;
        }
    },
    /**
     * Returns traditional spreadsheet-style cell names
     * e.g. (A1, B2, ..., Z44, AA1) with rows 1-indexed.
     */ toBase26CellName: function(rowIndex, columnIndex) {
        return "".concat(Utils.toBase26Alpha(columnIndex)).concat(rowIndex + 1);
    },
    /**
     * Performs the binary search algorithm to find the index of the `value`
     * parameter in a sorted list of numbers. If `value` is not in the list, the
     * index where `value` can be inserted to maintain the sort is returned.
     *
     * Unlike a typical binary search implementation, we use a `lookup`
     * callback to access the sorted list of numbers instead of an array. This
     * avoids additional storage overhead.
     *
     * We use this to, for example, find the index of a row/col given its client
     * coordinate.
     *
     * Adapted from lodash https://github.com/lodash/lodash/blob/4.11.2/lodash.js#L3579
     *
     * @param value - the query value
     * @param high - the length of the sorted list of numbers
     * @param lookup - returns the number from the list at the supplied index
     */ binarySearch: function(value, high, lookup) {
        var low = 0;
        while(low < high){
            var mid = Math.floor((low + high) / 2.0);
            var computed = lookup(mid);
            if (computed < value) low = mid + 1;
            else high = mid;
        }
        return high;
    },
    /**
     * Returns a copy of the array that will have a length of the supplied parameter.
     * If the array is too long, it will be truncated. If it is too short, it will be
     * filled with the suppleid `fillValue` argument.
     *
     * @param array - the `Array` to copy and adjust
     * @param length - the target length of the array
     * @param fillValue - the value to add to the array if it is too short
     */ arrayOfLength: function(array, length, fillValue) {
        if (array.length > length) return array.slice(0, length);
        array = array.slice();
        while(array.length < length)array.push(fillValue);
        return array;
    },
    /**
     * Takes in one full array of values and one sparse array of the same
     * length and type. Returns a copy of the `defaults` array, where each
     * value is replaced with the corresponding non-null value at the same
     * index in `sparseOverrides`.
     *
     * @param defaults - the full array of default values
     * @param sparseOverrides - the sparse array of override values
     */ assignSparseValues: function(defaults, sparseOverrides) {
        if (sparseOverrides == null || defaults.length !== sparseOverrides.length) return defaults;
        defaults = defaults.slice();
        for(var i = 0; i < defaults.length; i++){
            var override = sparseOverrides[i];
            if (override != null) defaults[i] = override;
        }
        return defaults;
    },
    /**
     * Measures the bounds of supplied element's textContent.
     * We use the computed font from the supplied element and a non-DOM canvas
     * context to measure the text.
     */ measureElementTextContent: function(element) {
        var context = document.createElement("canvas").getContext("2d");
        var style = getComputedStyle(element, null);
        context.font = CSS_FONT_PROPERTIES.map(function(prop) {
            return style.getPropertyValue(prop);
        }).join(" ");
        return measureTextContentWithExclusions(context, element);
    },
    /**
     * Given a number, returns a value that is clamped within a
     * minimum/maximum bounded range. The minimum and maximum are optional. If
     * either is missing, that extrema limit is not applied.
     *
     * Assumes max >= min.
     */ clamp: function(value, min, max) {
        if (min != null && value < min) value = min;
        if (max != null && value > max) value = max;
        return value;
    },
    /**
     * When reordering a contiguous block of rows or columns to a new index, we show a preview guide
     * at the absolute index in the original ordering but emit the new index in the reordered list.
     * This function converts an absolute "guide" index to a relative "reordered" index.
     *
     * Example: Say we want to move the first three columns two spots to the right. While we drag, a
     * vertical guide is shown to preview where we'll be dropping the columns. (In the following
     * ASCII art, `*` denotes a selected column, `·` denotes a cell border, and `|` denotes a
     * vertical guide).
     *
     *     Before mousedown:
     *     · 0 · 1 · 2 · 3 · 4 · 5 ·
     *       *   *   *
     *
     *     During mousemove two spots to the right:
     *     · 0 · 1 · 2 · 3 · 4 | 5 ·
     *       *   *   *
     *
     *     After mouseup:
     *     · 3 · 4 · 0 · 1 · 2 · 5 ·
     *               *   *   *
     *
     * Note that moving the three columns beyond index 4 effectively moves them two spots rightward.
     *
     * In this case, the inputs to this function would be:
     *     - oldIndex: 0 (the left-most index of the selected column range in the original ordering)
     *     - newIndex: 5 (the index on whose left boundary the guide appears in the original ordering)
     *     - length: 3 (the number of columns to move)
     *
     * The return value will then be 2, the left-most index of the columns in the new ordering.
     */ guideIndexToReorderedIndex: function(oldIndex, newIndex, length) {
        if (newIndex < oldIndex) return newIndex;
        else if (oldIndex <= newIndex && newIndex < oldIndex + length) return oldIndex;
        else return Math.max(0, newIndex - length);
    },
    /**
     * When reordering a contiguous block of rows or columns to a new index, we show a preview guide
     * at the absolute index in the original ordering but emit the new index in the reordered list.
     * This function converts a relative "reordered"" index to an absolute "guide" index.
     *
     * For the scenario in the example above, the inputs to this function would be:
     *     - oldIndex: 0 (the left-most index of the selected column range in the original ordering)
     *     - newIndex: 2 (the left-most index of the selected column range in the new ordering)
     *     - length: 3 (the number of columns to move)
     *
     * The return value will then be 5, the index on whose left boundary the guide should appear in
     * the original ordering.
     */ reorderedIndexToGuideIndex: function(oldIndex, newIndex, length) {
        return newIndex <= oldIndex ? newIndex : newIndex + length;
    },
    /**
     * Returns a copy of the provided array with the `length` contiguous elements starting at the
     * `from` index reordered to start at the `to` index.
     *
     * For example, given the array [A,B,C,D,E,F], reordering the 3 contiguous elements starting at
     * index 1 (B, C, and D) to start at index 2 would yield [A,E,B,C,D,F].
     */ reorderArray: function(array, from, to, length) {
        if (length === void 0) length = 1;
        if (length === 0 || length === array.length || from === to) // return an unchanged copy
        return array.slice();
        if (length < 0 || length > array.length || from + length > array.length) return undefined;
        var before = array.slice(0, from);
        var within = array.slice(from, from + length);
        var after = array.slice(from + length);
        var result = [];
        var i = 0;
        var b = 0;
        var w = 0;
        var a = 0;
        while(i < to){
            if (b < before.length) {
                result.push(before[b]);
                b += 1;
            } else {
                result.push(after[a]);
                a += 1;
            }
            i += 1;
        }
        while(w < length){
            result.push(within[w]);
            w += 1;
            i += 1;
        }
        while(i < array.length){
            if (b < before.length) {
                result.push(before[b]);
                b += 1;
            } else {
                result.push(after[a]);
                a += 1;
            }
            i += 1;
        }
        return result;
    },
    /**
     * Returns true if the mouse event was triggered by the left mouse button.
     */ isLeftClick: function(event) {
        return event.button === 0;
    },
    getApproxCellHeight: function(cellText, columnWidth, approxCharWidth, approxLineHeight, horizontalPadding, numBufferLines) {
        var numCharsInCell = cellText == null ? 0 : cellText.length;
        var actualCellWidth = columnWidth;
        var availableCellWidth = actualCellWidth - horizontalPadding;
        var approxCharsPerLine = availableCellWidth / approxCharWidth;
        var approxNumLinesDesired = Math.ceil(numCharsInCell / approxCharsPerLine) + numBufferLines;
        var approxCellHeight = approxNumLinesDesired * approxLineHeight;
        return approxCellHeight;
    },
    /**
     * Shallow comparison of potentially sparse arrays.
     *
     * @returns true if the array values are equal
     */ compareSparseArrays: function(a, b) {
        return a !== undefined && b !== undefined && a.length === b.length && a.every(function(aValue, index) {
            return aValue === b[index];
        });
    }
};
// table is nearly deprecated, let's not block on code coverage
/* istanbul ignore next */ /**
 * Wrapper around Canvas measureText which applies some extra logic to optionally
 * exclude an element's text from the computation.
 */ function measureTextContentWithExclusions(context, element) {
    var _a1;
    var elementsToExclude = element.querySelectorAll(".".concat(CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT));
    var excludedElementsWidth = 0;
    if (elementsToExclude && elementsToExclude.length) elementsToExclude.forEach(function(e) {
        var _a;
        var excludedMetrics = context.measureText((_a = e.textContent) !== null && _a !== void 0 ? _a : "");
        excludedElementsWidth += excludedMetrics.width - EXCLUDED_ICON_PLACEHOLDER_WIDTH;
    });
    var metrics = context.measureText((_a1 = element.textContent) !== null && _a1 !== void 0 ? _a1 : "");
    var metricsWithExclusions = _tslib.__assign(_tslib.__assign({}, metrics), {
        width: metrics.width - excludedElementsWidth
    });
    return metricsWithExclusions;
}

},{"tslib":"gB4KC","@blueprintjs/core":"3LcXQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fuMWh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Locator", ()=>Locator
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _classes = require("./common/classes");
var _grid = require("./common/grid");
var _rect = require("./common/rect");
var _utils = require("./common/utils");
var Locator = /** @class */ function() {
    function Locator1(/* The root table element within which a click is deemed valid and relevant. */ tableElement, /* The scrollable element that wraps the cell container. */ scrollContainerElement, /* The element containing all body cells in the grid (excluding headers). */ cellContainerElement) {
        var _this = this;
        this.tableElement = tableElement;
        this.scrollContainerElement = scrollContainerElement;
        this.cellContainerElement = cellContainerElement;
        this.convertCellIndexToClientX = function(index) {
            return _this.grid.getCumulativeWidthAt(index);
        };
        this.convertCellMidpointToClientX = function(index) {
            var cellLeft = _this.grid.getCumulativeWidthBefore(index);
            var cellRight = _this.grid.getCumulativeWidthAt(index);
            return (cellLeft + cellRight) / 2;
        };
        this.convertCellIndexToClientY = function(index) {
            return _this.grid.getCumulativeHeightAt(index);
        };
        this.convertCellMidpointToClientY = function(index) {
            var cellTop = _this.grid.getCumulativeHeightBefore(index);
            var cellBottom = _this.grid.getCumulativeHeightAt(index);
            return (cellTop + cellBottom) / 2;
        };
        this.toGridX = function(clientX) {
            var gridOffsetFromPageLeft = _this.cellContainerElement.getBoundingClientRect().left;
            var scrollOffsetFromGridLeft = _this.scrollContainerElement.scrollLeft;
            var cursorOffsetFromGridLeft = clientX - (gridOffsetFromPageLeft + scrollOffsetFromGridLeft);
            var isCursorWithinFrozenColumns = _this.numFrozenColumns != null && _this.numFrozenColumns > 0 && cursorOffsetFromGridLeft <= _this.grid.getCumulativeWidthBefore(_this.numFrozenColumns);
            // the frozen-column region doesn't scroll, so ignore the scroll distance in that case
            return isCursorWithinFrozenColumns ? cursorOffsetFromGridLeft : cursorOffsetFromGridLeft + scrollOffsetFromGridLeft;
        };
        this.toGridY = function(clientY) {
            var gridOffsetFromPageTop = _this.cellContainerElement.getBoundingClientRect().top;
            var scrollOffsetFromGridTop = _this.scrollContainerElement.scrollTop;
            var cursorOffsetFromGridTop = clientY - (gridOffsetFromPageTop + scrollOffsetFromGridTop);
            var isCursorWithinFrozenRows = _this.numFrozenRows != null && _this.numFrozenRows > 0 && cursorOffsetFromGridTop <= _this.grid.getCumulativeHeightBefore(_this.numFrozenRows);
            return isCursorWithinFrozenRows ? cursorOffsetFromGridTop : cursorOffsetFromGridTop + scrollOffsetFromGridTop;
        };
        this.numFrozenRows = 0;
        this.numFrozenColumns = 0;
    }
    // Setters
    // =======
    Locator1.prototype.setGrid = function(grid) {
        this.grid = grid;
        return this;
    };
    Locator1.prototype.setNumFrozenRows = function(numFrozenRows) {
        this.numFrozenRows = numFrozenRows;
        return this;
    };
    Locator1.prototype.setNumFrozenColumns = function(numFrozenColumns) {
        this.numFrozenColumns = numFrozenColumns;
        return this;
    };
    // Getters
    // =======
    Locator1.prototype.getViewportRect = function() {
        return new _rect.Rect(this.scrollContainerElement.scrollLeft || 0, this.scrollContainerElement.scrollTop || 0, this.scrollContainerElement.clientWidth, this.scrollContainerElement.clientHeight);
    };
    Locator1.prototype.getWidestVisibleCellInColumn = function(columnIndex) {
        var columnCellSelector = this.getColumnCellSelector(columnIndex);
        var columnHeaderAndBodyCells = this.tableElement.querySelectorAll(columnCellSelector);
        var maxWidth = 0;
        for(var i = 0; i < columnHeaderAndBodyCells.length; i++){
            var contentWidth = _utils.Utils.measureElementTextContent(columnHeaderAndBodyCells.item(i)).width;
            var cellWidth = Math.ceil(contentWidth) + Locator1.CELL_HORIZONTAL_PADDING * 2;
            if (cellWidth > maxWidth) maxWidth = cellWidth;
        }
        return maxWidth;
    };
    Locator1.prototype.getTallestVisibleCellInColumn = function(columnIndex) {
        // consider only body cells, hence the extra Classes.TABLE_CELL specificity
        var columnCellSelector = this.getColumnCellSelector(columnIndex);
        var columnBodyCells = this.tableElement.querySelectorAll("".concat(columnCellSelector, ".").concat(_classes.TABLE_CELL));
        var maxHeight = 0;
        for(var i = 0; i < columnBodyCells.length; i++){
            var cell = columnBodyCells.item(i);
            var cellValue = cell.querySelector(".".concat(_classes.TABLE_TRUNCATED_VALUE));
            var cellTruncatedFormatText = cell.querySelector(".".concat(_classes.TABLE_TRUNCATED_FORMAT_TEXT));
            var cellTruncatedText = cell.querySelector(".".concat(_classes.TABLE_TRUNCATED_TEXT));
            var height = 0;
            if (cellValue != null) height = cellValue.scrollHeight;
            else if (cellTruncatedFormatText != null) height = cellTruncatedFormatText.scrollHeight;
            else if (cellTruncatedText != null) height = cellTruncatedText.scrollHeight;
            else // it's not anything we recognize, just use the current height of the cell
            height = cell.scrollHeight;
            if (height > maxHeight) maxHeight = height;
        }
        return maxHeight;
    };
    /**
     * Pass in an already-computed viewport rect here, if available, to reduce DOM reads.
     *
     * @returns whether the rendered rows overflow the visible viewport vertically, helpful for scrolling calculations
     */ Locator1.prototype.hasVerticalOverflow = function(columnHeaderHeight, viewportRect) {
        if (columnHeaderHeight === void 0) columnHeaderHeight = _grid.Grid.MIN_COLUMN_HEADER_HEIGHT;
        if (viewportRect === void 0) viewportRect = this.getViewportRect();
        if (this.grid === undefined) return false;
        return this.grid.getHeight() > viewportRect.height - columnHeaderHeight;
    };
    /**
     * Pass in an already-computed viewport rect here, if available, to reduce DOM reads.
     *
     * @returns whether the rendered columns overflow the visible viewport horizontally, helpful for scrolling calculations
     */ Locator1.prototype.hasHorizontalOverflow = function(rowHeaderWidth, viewportRect) {
        if (rowHeaderWidth === void 0) rowHeaderWidth = _grid.Grid.MIN_ROW_HEADER_WIDTH;
        if (viewportRect === void 0) viewportRect = this.getViewportRect();
        if (this.grid === undefined) return false;
        return this.grid.getWidth() > viewportRect.width - rowHeaderWidth;
    };
    // Converters
    // ==========
    Locator1.prototype.convertPointToColumn = function(clientX, useMidpoint) {
        var tableRect = this.getTableRect();
        if (this.grid === undefined || !tableRect.containsX(clientX)) return -1;
        var gridX = this.toGridX(clientX);
        var limit = useMidpoint ? this.grid.numCols : this.grid.numCols - 1;
        var lookupFn = useMidpoint ? this.convertCellMidpointToClientX : this.convertCellIndexToClientX;
        return _utils.Utils.binarySearch(gridX, limit, lookupFn);
    };
    Locator1.prototype.convertPointToRow = function(clientY, useMidpoint) {
        var tableRect = this.getTableRect();
        if (this.grid === undefined || !tableRect.containsY(clientY)) return -1;
        var gridY = this.toGridY(clientY);
        var limit = useMidpoint ? this.grid.numRows : this.grid.numRows - 1;
        var lookupFn = useMidpoint ? this.convertCellMidpointToClientY : this.convertCellIndexToClientY;
        return _utils.Utils.binarySearch(gridY, limit, lookupFn);
    };
    Locator1.prototype.convertPointToCell = function(clientX, clientY) {
        var gridX = this.toGridX(clientX);
        var gridY = this.toGridY(clientY);
        var col = _utils.Utils.binarySearch(gridX, this.grid.numCols - 1, this.convertCellIndexToClientX);
        var row = _utils.Utils.binarySearch(gridY, this.grid.numRows - 1, this.convertCellIndexToClientY);
        return {
            col: col,
            row: row
        };
    };
    // Private helpers
    // ===============
    Locator1.prototype.getColumnCellSelector = function(columnIndex) {
        // measure frozen columns in the LEFT quadrant; otherwise, they might
        // have been scrolled out of view, leading to wonky measurements (#1561)
        var isFrozenColumnIndex = columnIndex < this.numFrozenColumns;
        var quadrantClass = isFrozenColumnIndex ? _classes.TABLE_QUADRANT_LEFT : _classes.TABLE_QUADRANT_MAIN;
        var cellClass = _classes.columnCellIndexClass(columnIndex);
        return ".".concat(quadrantClass, " .").concat(cellClass);
    };
    Locator1.prototype.getTableRect = function() {
        return _rect.Rect.wrap(this.tableElement.getBoundingClientRect());
    };
    Locator1.CELL_HORIZONTAL_PADDING = 10;
    return Locator1;
}();

},{"./common/classes":"76ljs","./common/grid":"iVPk8","./common/rect":"9bJ19","./common/utils":"ee8Nq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iVPk8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Grid", ()=>Grid
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _regions = require("../regions");
var _classes = require("./classes");
var _rect = require("./rect");
var _utils = require("./utils");
/**
 * This class manages the sizes of grid cells using arrays of individual row/column sizes.
 */ var Grid = /** @class */ function() {
    /**
     * This constructor accumulates the heights and widths in `O(n)`, saving
     * time in later calculations.
     *
     * @param bleed - The number of rows/cols that we expand beyond the
     *     viewport (on all sides). This helps avoid displaying an empty
     *     viewport when the user scrolls quickly.
     */ function Grid1(rowHeights, columnWidths, bleed, ghostHeight, ghostWidth) {
        if (bleed === void 0) bleed = Grid1.DEFAULT_BLEED;
        if (ghostHeight === void 0) ghostHeight = Grid1.DEFAULT_GHOST_HEIGHT;
        if (ghostWidth === void 0) ghostWidth = Grid1.DEFAULT_GHOST_WIDTH;
        var _this = this;
        this.getCumulativeWidthBefore = function(index) {
            return index === 0 ? 0 : _this.getCumulativeWidthAt(index - 1);
        };
        this.getCumulativeWidthAt = function(index) {
            if (_this.numCols === 0) return _this.ghostWidth * index;
            else if (index >= _this.numCols) return _this.cumulativeColumnWidths[_this.numCols - 1] + _this.ghostWidth * (index - _this.numCols + 1);
            else return _this.cumulativeColumnWidths[index];
        };
        this.getCumulativeHeightBefore = function(index) {
            return index === 0 ? 0 : _this.getCumulativeHeightAt(index - 1);
        };
        this.getCumulativeHeightAt = function(index) {
            if (_this.numRows === 0) return _this.ghostHeight * index;
            else if (index >= _this.numRows) return _this.cumulativeRowHeights[_this.numRows - 1] + _this.ghostHeight * (index - _this.numRows + 1);
            else return _this.cumulativeRowHeights[index];
        };
        this.columnWidths = columnWidths;
        this.rowHeights = rowHeights;
        this.cumulativeColumnWidths = _utils.Utils.accumulate(columnWidths);
        this.cumulativeRowHeights = _utils.Utils.accumulate(rowHeights);
        this.numCols = columnWidths.length;
        this.numRows = rowHeights.length;
        this.bleed = bleed;
        this.ghostHeight = ghostHeight;
        this.ghostWidth = ghostWidth;
    }
    /**
     * Returns the `Rect` bounds of a cell in scrollpane client space.
     *
     * Scrollpane client coordinate space uses the origin of the scrollpane
     * client (the inside part that you're moving around).
     *
     * For example, let's say you're scrolling around a block of 1000 x 1000
     * cells. Regardless where you've scrolled, the first cell is always at
     * 0,0 in scrollpane client space. the cell to the right of it is always
     * at, e.g., 100,0.
     */ Grid1.prototype.getCellRect = function(rowIndex, columnIndex) {
        var height = this.rowHeights[rowIndex];
        var top = this.cumulativeRowHeights[rowIndex] - height;
        var width = this.columnWidths[columnIndex];
        var left = this.cumulativeColumnWidths[columnIndex] - width;
        return new _rect.Rect(left, top, width, height);
    };
    /**
     * Returns the `Rect` bounds of a cell in scrollpane client space.
     *
     * If the cell is beyond the bounds of the user-defined table cells, it is
     * considered a "ghost" cell. If a width/height is not defined for that
     * row/column, we use the default width/height.
     */ Grid1.prototype.getGhostCellRect = function(rowIndex, columnIndex) {
        var left = 0;
        var top = 0;
        var width = 0;
        var height = 0;
        if (rowIndex >= this.rowHeights.length) {
            height = this.ghostHeight;
            top = this.getHeight() + this.ghostHeight * (rowIndex - this.numRows);
        } else {
            height = this.rowHeights[rowIndex];
            top = this.cumulativeRowHeights[rowIndex] - height;
        }
        if (columnIndex >= this.columnWidths.length) {
            width = this.ghostWidth;
            left = this.getWidth() + this.ghostWidth * (columnIndex - this.numCols);
        } else {
            width = this.columnWidths[columnIndex];
            left = this.cumulativeColumnWidths[columnIndex] - width;
        }
        return new _rect.Rect(left, top, width, height);
    };
    /**
     * Returns the `Rect` with the base coordinate and height of the specified row.
     */ Grid1.prototype.getRowRect = function(rowIndex) {
        var height = this.rowHeights[rowIndex];
        var top = this.cumulativeRowHeights[rowIndex] - height;
        return new _rect.Rect(0, top, this.getWidth(), height);
    };
    /**
     * Returns the `Rect` with the base coordinate and width of the specified column.
     */ Grid1.prototype.getColumnRect = function(columnIndex) {
        var width = this.columnWidths[columnIndex];
        var left = this.cumulativeColumnWidths[columnIndex] - width;
        return new _rect.Rect(left, 0, width, this.getHeight());
    };
    /**
     * Returns the total width of the entire grid
     */ Grid1.prototype.getWidth = function() {
        return this.numCols === 0 ? 0 : this.cumulativeColumnWidths[this.numCols - 1];
    };
    /**
     * Returns the total width of the entire grid
     */ Grid1.prototype.getHeight = function() {
        return this.numRows === 0 ? 0 : this.cumulativeRowHeights[this.numRows - 1];
    };
    /**
     * Returns the `Rect` bounds of entire grid
     */ Grid1.prototype.getRect = function() {
        return new _rect.Rect(0, 0, this.getWidth(), this.getHeight());
    };
    /**
     * Maps each cell that intersects with the given `Rect` argument. The
     * indices of iteration are extended in both directions by the integer
     * `bleed` class property, then are clamped between 0 and the number of
     * rows/columns.
     *
     * Uses a binary search for each of the 4 edges of the bounds, resulting
     * in a runtime of `O(log(rows) + log(cols))` plus the `O(irows * icols)`
     * iteration of intersecting cells.
     */ Grid1.prototype.mapCellsInRect = function(rect, callback) {
        var results = [];
        if (rect == null) return results;
        var _a = this.getRowIndicesInRect({
            rect: rect
        }), rowIndexStart = _a.rowIndexStart, rowIndexEnd = _a.rowIndexEnd;
        var _b = this.getColumnIndicesInRect(rect), columnIndexStart = _b.columnIndexStart, columnIndexEnd = _b.columnIndexEnd;
        for(var rowIndex = rowIndexStart; rowIndex <= rowIndexEnd; rowIndex++)for(var columnIndex = columnIndexStart; columnIndex <= columnIndexEnd; columnIndex++)results.push(callback(rowIndex, columnIndex));
        return results;
    };
    /**
     * Maps each row that intersects with the given `Rect` argument.
     *
     * See Grid.mapCellsInRect for more details.
     */ Grid1.prototype.mapRowsInRect = function(rect, callback) {
        var results = [];
        if (rect == null) return results;
        var _a = this.getRowIndicesInRect({
            rect: rect
        }), rowIndexStart = _a.rowIndexStart, rowIndexEnd = _a.rowIndexEnd;
        for(var rowIndex = rowIndexStart; rowIndex <= rowIndexEnd; rowIndex++)results.push(callback(rowIndex));
        return results;
    };
    /**
     * Maps each column that intersects with the given `Rect` argument.
     *
     * See Grid.mapCellsInRect for more details.
     */ Grid1.prototype.mapColumnsInRect = function(rect, callback) {
        var results = [];
        if (rect == null) return results;
        var _a = this.getColumnIndicesInRect(rect), columnIndexStart = _a.columnIndexStart, columnIndexEnd = _a.columnIndexEnd;
        for(var columnIndex = columnIndexStart; columnIndex <= columnIndexEnd; columnIndex++)results.push(callback(columnIndex));
        return results;
    };
    /**
     * Returns the start and end indices of rows that intersect with the given
     * `Rect` argument.
     */ Grid1.prototype.getRowIndicesInRect = function(options) {
        var rect = options.rect, _a = options.includeGhostCells, includeGhostCells = _a === void 0 ? false : _a, _b = options.columnHeaderHeight, columnHeaderHeight = _b === void 0 ? 0 : _b, _c = options.limit, limit = _c === void 0 ? Grid1.DEFAULT_MAX_ROWS : _c;
        if (rect == null) return {
            rowIndexEnd: 0,
            rowIndexStart: 0
        };
        var searchEnd = includeGhostCells ? Math.max(this.numRows, Grid1.DEFAULT_MAX_ROWS) : this.numRows;
        var _d = rect.top, top = _d === void 0 ? 0 : _d, height = rect.height;
        var _e = this.getIndicesInInterval(top, top + (height - columnHeaderHeight), searchEnd, !includeGhostCells, this.getCumulativeHeightAt), start = _e.start, end = _e.end;
        var rowIndexEnd = limit > 0 && end - start > limit ? start + limit : end;
        return {
            rowIndexEnd: rowIndexEnd,
            rowIndexStart: start
        };
    };
    /**
     * Returns the start and end indices of columns that intersect with the
     * given `Rect` argument.
     */ Grid1.prototype.getColumnIndicesInRect = function(rect, includeGhostCells, limit) {
        if (includeGhostCells === void 0) includeGhostCells = false;
        if (limit === void 0) limit = Grid1.DEFAULT_MAX_COLUMNS;
        if (rect == null) return {
            columnIndexEnd: 0,
            columnIndexStart: 0
        };
        var searchEnd = includeGhostCells ? Math.max(this.numCols, Grid1.DEFAULT_MAX_COLUMNS) : this.numCols;
        var _a = rect.left, left = _a === void 0 ? 0 : _a, width = rect.width;
        var _b = this.getIndicesInInterval(left, left + width, searchEnd, !includeGhostCells, this.getCumulativeWidthAt), start = _b.start, end = _b.end;
        var columnIndexEnd = limit > 0 && end - start > limit ? start + limit : end;
        return {
            columnIndexEnd: columnIndexEnd,
            columnIndexStart: start
        };
    };
    Grid1.prototype.isGhostIndex = function(rowIndex, columnIndex) {
        return rowIndex >= this.numRows || columnIndex >= this.numCols;
    };
    Grid1.prototype.isGhostColumn = function(columnIndex) {
        return columnIndex >= this.numCols;
    };
    Grid1.prototype.getExtremaClasses = function(rowIndex, columnIndex, rowEnd, columnEnd) {
        if (rowIndex === rowEnd && columnIndex === columnEnd) return [
            _classes.TABLE_LAST_IN_COLUMN,
            _classes.TABLE_LAST_IN_ROW
        ];
        if (rowIndex === rowEnd) return [
            _classes.TABLE_LAST_IN_COLUMN
        ];
        if (columnIndex === columnEnd) return [
            _classes.TABLE_LAST_IN_ROW
        ];
        return [];
    };
    Grid1.prototype.getRegionStyle = function(region) {
        var cardinality = _regions.Regions.getRegionCardinality(region);
        switch(cardinality){
            case _regions.RegionCardinality.CELLS:
                var _a = region.rows, rowStart = _a[0], rowEnd = _a[1];
                var _b = region.cols, colStart = _b[0], colEnd = _b[1];
                // if the region is outside the bounds of the table, don't display it
                if (this.isGhostIndex(rowStart, colStart) || this.isGhostIndex(rowEnd, colEnd)) return {
                    display: "none"
                };
                var cellRect0 = this.getCellRect(rowStart, colStart);
                var cellRect1 = this.getCellRect(rowEnd, colEnd);
                var offsetLeft = colStart === 0 ? 0 : 1;
                var offsetTop = rowStart === 0 ? 0 : 1;
                var rect = cellRect0.union(cellRect1);
                rect.height += offsetTop;
                rect.left -= offsetLeft;
                rect.width += offsetLeft;
                rect.top -= offsetTop;
                return _tslib.__assign(_tslib.__assign({}, rect.style()), {
                    display: "block"
                });
            case _regions.RegionCardinality.FULL_COLUMNS:
                var _c = region.cols, colStart = _c[0], colEnd = _c[1];
                // if the region is outside the bounds of the table, don't display it
                if (this.isGhostIndex(0, colStart) || this.isGhostIndex(0, colEnd)) return {
                    display: "none"
                };
                var cellRect0 = this.getCellRect(0, colStart);
                var cellRect1 = this.getCellRect(0, colEnd);
                var rect = cellRect0.union(cellRect1);
                var offsetLeft = colStart === 0 ? 0 : 1;
                return {
                    bottom: 0,
                    display: "block",
                    left: rect.left - offsetLeft,
                    top: 0,
                    width: rect.width + offsetLeft
                };
            case _regions.RegionCardinality.FULL_ROWS:
                var _d = region.rows, rowStart = _d[0], rowEnd = _d[1];
                // if the region is outside the bounds of the table, don't display it
                if (this.isGhostIndex(rowStart, 0) || this.isGhostIndex(rowEnd, 0)) return {
                    display: "none"
                };
                var cellRect0 = this.getCellRect(rowStart, 0);
                var cellRect1 = this.getCellRect(rowEnd, 0);
                var rect = cellRect0.union(cellRect1);
                var offsetTop = rowStart === 0 ? 0 : 1;
                return {
                    display: "block",
                    height: rect.height + offsetTop,
                    left: 0,
                    right: 0,
                    top: rect.top - offsetTop
                };
            case _regions.RegionCardinality.FULL_TABLE:
                return {
                    bottom: 0,
                    display: "block",
                    left: 0,
                    right: 0,
                    top: 0
                };
            default:
                return {
                    display: "none"
                };
        }
    };
    Grid1.prototype.getIndicesInInterval = function(min, max, count, useEndBleed, lookup) {
        var start = _utils.Utils.binarySearch(min, count - 1, lookup);
        var end = _utils.Utils.binarySearch(max, count - 1, lookup);
        // correct exact pixel alignment
        if (start >= 0 && min === lookup(start)) start += 1;
        // apply bounded bleeds
        start = Math.max(0, start - this.bleed);
        if (useEndBleed) end = Math.min(count - 1, end + this.bleed);
        else end = Math.min(count - 1, end);
        return {
            start: start,
            end: end
        };
    };
    Grid1.DEFAULT_BLEED = 3;
    Grid1.DEFAULT_MAX_COLUMNS = 50;
    Grid1.DEFAULT_MAX_ROWS = 200;
    Grid1.DEFAULT_GHOST_HEIGHT = 20;
    Grid1.DEFAULT_GHOST_WIDTH = 150;
    // defined in headers/_common.scss
    Grid1.MIN_COLUMN_HEADER_HEIGHT = 30;
    // defined in headers/_common.scss
    Grid1.MIN_ROW_HEADER_WIDTH = 30;
    return Grid1;
}();

},{"tslib":"gB4KC","../regions":"8S4uE","./classes":"76ljs","./rect":"9bJ19","./utils":"ee8Nq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"8S4uE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RegionCardinality", ()=>RegionCardinality
);
parcelHelpers.export(exports, "SelectionModes", ()=>SelectionModes
);
parcelHelpers.export(exports, "ColumnLoadingOption", ()=>ColumnLoadingOption
);
parcelHelpers.export(exports, "RowLoadingOption", ()=>RowLoadingOption
);
parcelHelpers.export(exports, "TableLoadingOption", ()=>TableLoadingOption
);
parcelHelpers.export(exports, "Regions", ()=>Regions
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _classes = require("./common/classes");
var _utils = require("./common/utils");
var RegionCardinality;
(function(RegionCardinality1) {
    /**
     * A region that contains a finite rectangular group of table cells
     */ RegionCardinality1["CELLS"] = "cells";
    /**
     * A region that represents all cells within 1 or more rows.
     */ RegionCardinality1["FULL_ROWS"] = "full-rows";
    /**
     * A region that represents all cells within 1 or more columns.
     */ RegionCardinality1["FULL_COLUMNS"] = "full-columns";
    /**
     * A region that represents all cells in the table.
     */ RegionCardinality1["FULL_TABLE"] = "full-table";
})(RegionCardinality || (RegionCardinality = {}));
var SelectionModes = {
    ALL: [
        RegionCardinality.FULL_TABLE,
        RegionCardinality.FULL_COLUMNS,
        RegionCardinality.FULL_ROWS,
        RegionCardinality.CELLS, 
    ],
    COLUMNS_AND_CELLS: [
        RegionCardinality.FULL_COLUMNS,
        RegionCardinality.CELLS
    ],
    COLUMNS_ONLY: [
        RegionCardinality.FULL_COLUMNS
    ],
    NONE: [],
    ROWS_AND_CELLS: [
        RegionCardinality.FULL_ROWS,
        RegionCardinality.CELLS
    ],
    ROWS_ONLY: [
        RegionCardinality.FULL_ROWS
    ]
};
var ColumnLoadingOption;
(function(ColumnLoadingOption1) {
    ColumnLoadingOption1["CELLS"] = "cells";
    ColumnLoadingOption1["HEADER"] = "column-header";
})(ColumnLoadingOption || (ColumnLoadingOption = {}));
var RowLoadingOption;
(function(RowLoadingOption1) {
    RowLoadingOption1["CELLS"] = "cells";
    RowLoadingOption1["HEADER"] = "row-header";
})(RowLoadingOption || (RowLoadingOption = {}));
var TableLoadingOption;
(function(TableLoadingOption1) {
    TableLoadingOption1["CELLS"] = "cells";
    TableLoadingOption1["COLUMN_HEADERS"] = "column-header";
    TableLoadingOption1["ROW_HEADERS"] = "row-header";
})(TableLoadingOption || (TableLoadingOption = {}));
var Regions = /** @class */ function() {
    function Regions1() {}
    /**
     * Determines the cardinality of a region. We use null values to indicate
     * an unbounded interval. Therefore, an example of a region containing the
     * second and third columns would be:
     *
     * ```js
     * { rows: null, cols: [1, 2] }
     * ```
     *
     * In this case, this method would return `RegionCardinality.FULL_COLUMNS`.
     *
     * If both rows and columns are unbounded, then the region covers the
     * entire table. Therefore, a region like this:
     *
     * ```js
     * { rows: null, cols: null }
     * ```
     *
     * will return `RegionCardinality.FULL_TABLE`.
     *
     * An example of a region containing a single cell in the table would be:
     *
     * ```js
     * { rows: [5, 5], cols: [2, 2] }
     * ```
     *
     * In this case, this method would return `RegionCardinality.CELLS`.
     */ Regions1.getRegionCardinality = function(region) {
        if (region.cols != null && region.rows != null) return RegionCardinality.CELLS;
        else if (region.cols != null) return RegionCardinality.FULL_COLUMNS;
        else if (region.rows != null) return RegionCardinality.FULL_ROWS;
        else return RegionCardinality.FULL_TABLE;
    };
    Regions1.getFocusCellCoordinatesFromRegion = function(region) {
        var regionCardinality = Regions1.getRegionCardinality(region);
        // HACKHACK: non-null assertions ahead, consider designing some type guards instead
        switch(regionCardinality){
            case RegionCardinality.FULL_TABLE:
                return {
                    col: 0,
                    row: 0
                };
            case RegionCardinality.FULL_COLUMNS:
                return {
                    col: region.cols[0],
                    row: 0
                };
            case RegionCardinality.FULL_ROWS:
                return {
                    col: 0,
                    row: region.rows[0]
                };
            case RegionCardinality.CELLS:
                return {
                    col: region.cols[0],
                    row: region.rows[0]
                };
        }
    };
    /**
     * Returns a deep copy of the provided region.
     */ Regions1.copy = function(region) {
        var cardinality = Regions1.getRegionCardinality(region);
        // HACKHACK: non-null assertions ahead, consider designing some type guards instead
        // N.B. we need to be careful not to explicitly spell out `rows: undefined`
        // (e.g.) if the "rows" key is completely absent, otherwise
        // deep-equality checks will fail.
        if (cardinality === RegionCardinality.CELLS) return Regions1.cell(region.rows[0], region.cols[0], region.rows[1], region.cols[1]);
        else if (cardinality === RegionCardinality.FULL_COLUMNS) return Regions1.column(region.cols[0], region.cols[1]);
        else if (cardinality === RegionCardinality.FULL_ROWS) return Regions1.row(region.rows[0], region.rows[1]);
        else return Regions1.table();
    };
    /**
     * Returns a region containing one or more cells.
     */ Regions1.cell = function(row, col, row2, col2) {
        return {
            cols: this.normalizeInterval(col, col2),
            rows: this.normalizeInterval(row, row2)
        };
    };
    /**
     * Returns a region containing one or more full rows.
     */ Regions1.row = function(row, row2) {
        return {
            rows: this.normalizeInterval(row, row2)
        };
    };
    /**
     * Returns a region containing one or more full columns.
     */ Regions1.column = function(col, col2) {
        return {
            cols: this.normalizeInterval(col, col2)
        };
    };
    /**
     * Returns a region containing the entire table.
     */ Regions1.table = function() {
        return {};
    };
    /**
     * Adds the region to the end of a cloned copy of the supplied region
     * array.
     */ Regions1.add = function(regions, region) {
        var copy = regions.slice();
        copy.push(region);
        return copy;
    };
    /**
     * Replaces the region at the end of a cloned copy of the supplied region
     * array, or at the specific index if one is provided.
     */ Regions1.update = function(regions, region, index) {
        var copy = regions.slice();
        if (index != null) copy.splice(index, 1, region);
        else {
            copy.pop();
            copy.push(region);
        }
        return copy;
    };
    /**
     * Clamps the region's start and end indices between 0 and the provided
     * maximum values.
     */ Regions1.clampRegion = function(region, maxRowIndex, maxColumnIndex) {
        var nextRegion = Regions1.copy(region);
        if (region.rows != null) {
            nextRegion.rows[0] = _utils.Utils.clamp(region.rows[0], 0, maxRowIndex);
            nextRegion.rows[1] = _utils.Utils.clamp(region.rows[1], 0, maxRowIndex);
        }
        if (region.cols != null) {
            nextRegion.cols[0] = _utils.Utils.clamp(region.cols[0], 0, maxColumnIndex);
            nextRegion.cols[1] = _utils.Utils.clamp(region.cols[1], 0, maxColumnIndex);
        }
        return nextRegion;
    };
    /**
     * Returns true iff the specified region is equal to the last region in
     * the region list. This allows us to avoid immediate additive re-selection.
     */ Regions1.lastRegionIsEqual = function(regions, region) {
        if (regions == null || regions.length === 0) return false;
        var lastRegion = regions[regions.length - 1];
        return Regions1.regionsEqual(lastRegion, region);
    };
    /**
     * Returns the index of the region that is equal to the supplied
     * parameter. Returns -1 if no such region is found.
     */ Regions1.findMatchingRegion = function(regions, region) {
        if (regions == null) return -1;
        for(var i = 0; i < regions.length; i++){
            if (Regions1.regionsEqual(regions[i], region)) return i;
        }
        return -1;
    };
    /**
     * Returns the index of the region that wholly contains the supplied
     * parameter. Returns -1 if no such region is found.
     */ Regions1.findContainingRegion = function(regions, region) {
        if (regions == null) return -1;
        for(var i = 0; i < regions.length; i++){
            if (Regions1.regionContains(regions[i], region)) return i;
        }
        return -1;
    };
    /**
     * Returns true if the regions contain a region that has FULL_COLUMNS
     * cardinality and contains the specified column index.
     */ Regions1.hasFullColumn = function(regions, col) {
        if (regions == null) return false;
        for(var _i = 0, regions_1 = regions; _i < regions_1.length; _i++){
            var region = regions_1[_i];
            var cardinality = Regions1.getRegionCardinality(region);
            if (cardinality === RegionCardinality.FULL_TABLE) return true;
            if (cardinality === RegionCardinality.FULL_COLUMNS && Regions1.intervalContainsIndex(region.cols, col)) return true;
        }
        return false;
    };
    /**
     * Returns true if the regions contain a region that has FULL_ROWS
     * cardinality and contains the specified row index.
     */ Regions1.hasFullRow = function(regions, row) {
        if (regions == null) return false;
        for(var _i = 0, regions_2 = regions; _i < regions_2.length; _i++){
            var region = regions_2[_i];
            var cardinality = Regions1.getRegionCardinality(region);
            if (cardinality === RegionCardinality.FULL_TABLE) return true;
            if (cardinality === RegionCardinality.FULL_ROWS && Regions1.intervalContainsIndex(region.rows, row)) return true;
        }
        return false;
    };
    /**
     * Returns true if the regions contain a region that has FULL_TABLE cardinality
     */ Regions1.hasFullTable = function(regions) {
        if (regions == null) return false;
        for(var _i = 0, regions_3 = regions; _i < regions_3.length; _i++){
            var region = regions_3[_i];
            var cardinality = Regions1.getRegionCardinality(region);
            if (cardinality === RegionCardinality.FULL_TABLE) return true;
        }
        return false;
    };
    /**
     * Returns true if the regions fully contain the query region.
     */ Regions1.containsRegion = function(regions, query) {
        return Regions1.overlapsRegion(regions, query, false);
    };
    /**
     * Returns true if the regions at least partially overlap the query region.
     */ Regions1.overlapsRegion = function(regions, query, allowPartialOverlap) {
        if (allowPartialOverlap === void 0) allowPartialOverlap = false;
        var intervalCompareFn = allowPartialOverlap ? Regions1.intervalOverlaps : Regions1.intervalContains;
        if (regions == null || query == null) return false;
        for(var _i = 0, regions_4 = regions; _i < regions_4.length; _i++){
            var region = regions_4[_i];
            var cardinality = Regions1.getRegionCardinality(region);
            switch(cardinality){
                case RegionCardinality.FULL_TABLE:
                    return true;
                case RegionCardinality.FULL_COLUMNS:
                    if (intervalCompareFn(region.cols, query.cols)) return true;
                    continue;
                case RegionCardinality.FULL_ROWS:
                    if (intervalCompareFn(region.rows, query.rows)) return true;
                    continue;
                case RegionCardinality.CELLS:
                    if (intervalCompareFn(region.cols, query.cols) && intervalCompareFn(region.rows, query.rows)) return true;
                    continue;
                default:
                    break;
            }
        }
        return false;
    };
    Regions1.eachUniqueFullColumn = function(regions, iteratee) {
        if (regions == null || regions.length === 0 || iteratee == null) return;
        var seen = {};
        regions.forEach(function(region) {
            if (Regions1.getRegionCardinality(region) === RegionCardinality.FULL_COLUMNS) {
                var _a = region.cols, start = _a[0], end = _a[1];
                for(var col = start; col <= end; col++)if (!seen[col]) {
                    seen[col] = true;
                    iteratee(col);
                }
            }
        });
    };
    Regions1.eachUniqueFullRow = function(regions, iteratee) {
        if (regions == null || regions.length === 0 || iteratee == null) return;
        var seen = {};
        regions.forEach(function(region) {
            if (Regions1.getRegionCardinality(region) === RegionCardinality.FULL_ROWS) {
                var _a = region.rows, start = _a[0], end = _a[1];
                for(var row = start; row <= end; row++)if (!seen[row]) {
                    seen[row] = true;
                    iteratee(row);
                }
            }
        });
    };
    /**
     * Using the supplied array of non-contiguous `Region`s, this method
     * returns an ordered array of every unique cell that exists in those
     * regions.
     */ Regions1.enumerateUniqueCells = function(regions, numRows, numCols) {
        if (regions == null || regions.length === 0) return [];
        var seen = {};
        var list = [];
        for(var _i = 0, regions_5 = regions; _i < regions_5.length; _i++){
            var region = regions_5[_i];
            Regions1.eachCellInRegion(region, numRows, numCols, function(row, col) {
                // add to list if not seen
                var key = "".concat(row, "-").concat(col);
                if (seen[key] !== true) {
                    seen[key] = true;
                    list.push([
                        row,
                        col
                    ]);
                }
            });
        }
        // sort list by rows then columns
        list.sort(Regions1.rowFirstComparator);
        return list;
    };
    /**
     * Using the supplied region, returns an "equivalent" region of
     * type CELLS that define the bounds of the given region
     */ Regions1.getCellRegionFromRegion = function(region, numRows, numCols) {
        var regionCardinality = Regions1.getRegionCardinality(region);
        switch(regionCardinality){
            case RegionCardinality.FULL_TABLE:
                return Regions1.cell(0, 0, numRows - 1, numCols - 1);
            case RegionCardinality.FULL_COLUMNS:
                return Regions1.cell(0, region.cols[0], numRows - 1, region.cols[1]);
            case RegionCardinality.FULL_ROWS:
                return Regions1.cell(region.rows[0], 0, region.rows[1], numCols - 1);
            case RegionCardinality.CELLS:
                return Regions1.cell(region.rows[0], region.cols[0], region.rows[1], region.cols[1]);
        }
    };
    /**
     * Maps a dense array of cell coordinates to a sparse 2-dimensional array
     * of cell values.
     *
     * We create a new 2-dimensional array representing the smallest single
     * contiguous `Region` that contains all cells in the supplied array. We
     * invoke the mapper callback only on the cells in the supplied coordinate
     * array and store the result. Returns the resulting 2-dimensional array.
     *
     * If there is no contiguous `Region` which contains all the cells, we
     * return `undefined`.
     */ Regions1.sparseMapCells = function(cells, mapper) {
        var bounds = Regions1.getBoundingRegion(cells);
        if (bounds === undefined) return undefined;
        var numRows = bounds.rows[1] + 1 - bounds.rows[0];
        var numCols = bounds.cols[1] + 1 - bounds.cols[0];
        var result = _utils.Utils.times(numRows, function() {
            return new Array(numCols);
        });
        cells.forEach(function(_a) {
            var row = _a[0], col = _a[1];
            result[row - bounds.rows[0]][col - bounds.cols[0]] = mapper(row, col);
        });
        return result;
    };
    /**
     * Returns the smallest single contiguous `Region` that contains all cells in the
     * supplied array.
     */ Regions1.getBoundingRegion = function(cells) {
        var minRow;
        var maxRow;
        var minCol;
        var maxCol;
        for(var _i = 0, cells_1 = cells; _i < cells_1.length; _i++){
            var _a = cells_1[_i], row = _a[0], col = _a[1];
            minRow = minRow === undefined || row < minRow ? row : minRow;
            maxRow = maxRow === undefined || row > maxRow ? row : maxRow;
            minCol = minCol === undefined || col < minCol ? col : minCol;
            maxCol = maxCol === undefined || col > maxCol ? col : maxCol;
        }
        if (minRow === undefined || maxRow === undefined || minCol === undefined || maxCol === undefined) return undefined;
        return {
            cols: [
                minCol,
                maxCol
            ],
            rows: [
                minRow,
                maxRow
            ]
        };
    };
    Regions1.isValid = function(region) {
        if (region == null) return false;
        if (region.rows != null && (region.rows[0] < 0 || region.rows[1] < 0)) return false;
        if (region.cols != null && (region.cols[0] < 0 || region.cols[1] < 0)) return false;
        return true;
    };
    Regions1.isRegionValidForTable = function(region, numRows, numCols) {
        if (numRows === 0 || numCols === 0) return false;
        else if (region.rows != null && !intervalInRangeInclusive(region.rows, 0, numRows - 1)) return false;
        else if (region.cols != null && !intervalInRangeInclusive(region.cols, 0, numCols - 1)) return false;
        return true;
    };
    Regions1.joinStyledRegionGroups = function(selectedRegions, otherRegions, focusedCell) {
        var regionGroups = [];
        if (otherRegions != null) regionGroups = regionGroups.concat(otherRegions);
        if (selectedRegions != null && selectedRegions.length > 0) regionGroups.push({
            className: _classes.TABLE_SELECTION_REGION,
            regions: selectedRegions
        });
        if (focusedCell !== undefined) regionGroups.push({
            className: _classes.TABLE_FOCUS_REGION,
            regions: [
                Regions1.cell(focusedCell.row, focusedCell.col)
            ]
        });
        return regionGroups;
    };
    Regions1.regionsEqual = function(regionA, regionB) {
        return Regions1.intervalsEqual(regionA.rows, regionB.rows) && Regions1.intervalsEqual(regionA.cols, regionB.cols);
    };
    /**
     * Expands an old region to the minimal bounding region that also contains
     * the new region. If the regions have different cardinalities, then the new
     * region is returned. Useful for expanding a selected region on
     * shift+click, for instance.
     */ Regions1.expandRegion = function(oldRegion, newRegion) {
        var oldRegionCardinality = Regions1.getRegionCardinality(oldRegion);
        var newRegionCardinality = Regions1.getRegionCardinality(newRegion);
        if (newRegionCardinality !== oldRegionCardinality) return newRegion;
        switch(newRegionCardinality){
            case RegionCardinality.FULL_ROWS:
                var rowStart = Math.min(oldRegion.rows[0], newRegion.rows[0]);
                var rowEnd = Math.max(oldRegion.rows[1], newRegion.rows[1]);
                return Regions1.row(rowStart, rowEnd);
            case RegionCardinality.FULL_COLUMNS:
                var colStart = Math.min(oldRegion.cols[0], newRegion.cols[0]);
                var colEnd = Math.max(oldRegion.cols[1], newRegion.cols[1]);
                return Regions1.column(colStart, colEnd);
            case RegionCardinality.CELLS:
                var rowStart = Math.min(oldRegion.rows[0], newRegion.rows[0]);
                var colStart = Math.min(oldRegion.cols[0], newRegion.cols[0]);
                var rowEnd = Math.max(oldRegion.rows[1], newRegion.rows[1]);
                var colEnd = Math.max(oldRegion.cols[1], newRegion.cols[1]);
                return Regions1.cell(rowStart, colStart, rowEnd, colEnd);
            default:
                return Regions1.table();
        }
    };
    /**
     * Iterates over the cells within an `Region`, invoking the callback with
     * each cell's coordinates.
     */ Regions1.eachCellInRegion = function(region, numRows, numCols, iteratee) {
        var cardinality = Regions1.getRegionCardinality(region);
        switch(cardinality){
            case RegionCardinality.FULL_TABLE:
                for(var row = 0; row < numRows; row++)for(var col = 0; col < numCols; col++)iteratee(row, col);
                break;
            case RegionCardinality.FULL_COLUMNS:
                for(var row = 0; row < numRows; row++)for(var col = region.cols[0]; col <= region.cols[1]; col++)iteratee(row, col);
                break;
            case RegionCardinality.FULL_ROWS:
                for(var row = region.rows[0]; row <= region.rows[1]; row++)for(var col = 0; col < numCols; col++)iteratee(row, col);
                break;
            case RegionCardinality.CELLS:
                for(var row = region.rows[0]; row <= region.rows[1]; row++)for(var col = region.cols[0]; col <= region.cols[1]; col++)iteratee(row, col);
                break;
            default:
                break;
        }
    };
    Regions1.regionContains = function(regionA, regionB) {
        // containsRegion expects an array of regions as the first param
        return Regions1.overlapsRegion([
            regionA
        ], regionB, false);
    };
    Regions1.intervalsEqual = function(ivalA, ivalB) {
        if (ivalA == null) return ivalB == null;
        else if (ivalB == null) return false;
        else return ivalA[0] === ivalB[0] && ivalA[1] === ivalB[1];
    };
    Regions1.intervalContainsIndex = function(interval, index) {
        if (interval == null) return false;
        return interval[0] <= index && interval[1] >= index;
    };
    Regions1.intervalContains = function(ivalA, ivalB) {
        if (ivalA == null || ivalB == null) return false;
        return ivalA[0] <= ivalB[0] && ivalB[1] <= ivalA[1];
    };
    Regions1.intervalOverlaps = function(ivalA, ivalB) {
        if (ivalA == null || ivalB == null) return false;
        if (ivalA[1] < ivalB[0] || ivalA[0] > ivalB[1]) return false;
        return true;
    };
    Regions1.rowFirstComparator = function(a, b) {
        var rowDiff = a[0] - b[0];
        return rowDiff === 0 ? a[1] - b[1] : rowDiff;
    };
    Regions1.numericalComparator = function(a, b) {
        return a - b;
    };
    Regions1.normalizeInterval = function(coord, coord2) {
        if (coord2 == null) coord2 = coord;
        var interval = [
            coord,
            coord2
        ];
        interval.sort(Regions1.numericalComparator);
        return interval;
    };
    return Regions1;
}();
function intervalInRangeInclusive(interval, minInclusive, maxInclusive) {
    return inRangeInclusive(interval[0], minInclusive, maxInclusive) && inRangeInclusive(interval[1], minInclusive, maxInclusive);
}
function inRangeInclusive(value, minInclusive, maxInclusive) {
    return value >= minInclusive && value <= maxInclusive;
}

},{"./common/classes":"76ljs","./common/utils":"ee8Nq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9bJ19":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Rect", ()=>Rect
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ // HACKHACK: workaround for https://github.com/palantir/tslint/issues/1768
// eslint-disable  @typescript-eslint/adjacent-overload-signatures
/**
 * A simple object for storing the client bounds of HTMLElements. Since
 * ClientRects are immutable, this object enables editing and some simple
 * manipulation methods.
 */ var Rect = /** @class */ function() {
    function Rect1(left, top, width, height) {
        this.left = left;
        this.top = top;
        this.width = width;
        this.height = height;
    }
    /**
     * Returns the smallest Rect that entirely contains the supplied rects
     */ Rect1.union = function(anyRect0, anyRect1) {
        var rect0 = Rect1.wrap(anyRect0);
        var rect1 = Rect1.wrap(anyRect1);
        var top = Math.min(rect0.top, rect1.top);
        var left = Math.min(rect0.left, rect1.left);
        var bottom = Math.max(rect0.top + rect0.height, rect1.top + rect1.height);
        var right = Math.max(rect0.left + rect0.width, rect1.left + rect1.width);
        var height = bottom - top;
        var width = right - left;
        return new Rect1(left, top, width, height);
    };
    /**
     * Returns a new Rect that subtracts the origin of the second argument
     * from the first.
     */ Rect1.subtractOrigin = function(anyRect0, anyRect1) {
        var rect0 = Rect1.wrap(anyRect0);
        var rect1 = Rect1.wrap(anyRect1);
        return new Rect1(rect0.left - rect1.left, rect0.top - rect1.top, rect0.width, rect0.height);
    };
    /**
     * Returns the CSS properties representing the absolute positioning of
     * this Rect.
     */ Rect1.style = function(rect) {
        return {
            height: "".concat(rect.height, "px"),
            left: "".concat(rect.left, "px"),
            position: "absolute",
            top: "".concat(rect.top, "px"),
            width: "".concat(rect.width, "px")
        };
    };
    /**
     * Given a ClientRect or Rect object, returns a Rect object.
     */ Rect1.wrap = function(rect) {
        if (rect instanceof Rect1) return rect;
        else return new Rect1(rect.left, rect.top, rect.width, rect.height);
    };
    Rect1.prototype.subtractOrigin = function(anyRect) {
        return Rect1.subtractOrigin(this, anyRect);
    };
    Rect1.prototype.union = function(anyRect) {
        return Rect1.union(this, anyRect);
    };
    Rect1.prototype.style = function() {
        return Rect1.style(this);
    };
    Rect1.prototype.sizeStyle = function() {
        return {
            height: "".concat(this.height, "px"),
            width: "".concat(this.width, "px")
        };
    };
    Rect1.prototype.containsX = function(clientX) {
        return clientX >= this.left && clientX <= this.left + this.width;
    };
    Rect1.prototype.containsY = function(clientY) {
        return clientY >= this.top && clientY <= this.top + this.height;
    };
    Rect1.prototype.equals = function(rect) {
        return rect != null && this.left === rect.left && this.top === rect.top && this.width === rect.width && this.height === rect.height;
    };
    Rect1.ORIGIN = new Rect1(0, 0, 0, 0);
    return Rect1;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lpdUA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Column", ()=>Column
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _cell = require("./cell/cell");
var Column = /** @class */ function(_super) {
    _tslib.__extends(Column1, _super);
    function Column1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Column1.displayName = "".concat(_core.DISPLAYNAME_PREFIX, ".Column");
    Column1.defaultProps = {
        cellRenderer: _cell.emptyCellRenderer
    };
    return Column1;
}(_react.PureComponent);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","./cell/cell":"fhDSO","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kdBMl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ parcelHelpers.export(exports, "Clipboard", ()=>_clipboard.Clipboard
);
parcelHelpers.export(exports, "Grid", ()=>_grid.Grid
);
parcelHelpers.export(exports, "Rect", ()=>_rect.Rect
);
parcelHelpers.export(exports, "RenderMode", ()=>_renderMode.RenderMode
);
parcelHelpers.export(exports, "Utils", ()=>_utils.Utils
) // NOTE: The following are not exported in the public API:
 // - Errors
 // - internal/
;
var _clipboard = require("./clipboard");
var _grid = require("./grid");
var _rect = require("./rect");
var _renderMode = require("./renderMode");
var _utils = require("./utils");

},{"./clipboard":"dw2dA","./grid":"iVPk8","./rect":"9bJ19","./renderMode":"kUIjf","./utils":"ee8Nq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"dw2dA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Clipboard", ()=>Clipboard
);
var Clipboard = {
    /**
     * Overrides the inherited CSS of the element to make sure it is
     * selectable. This method also makes the element pseudo-invisible.
     *
     * @deprecated will be removed in v4.0
     */ applySelectableStyles: function(elem) {
        elem.style.overflow = "hidden";
        elem.style.height = "0px";
        elem.style.setProperty("-webkit-user-select", "all");
        elem.style.setProperty("-moz-user-select", "all");
        elem.style.setProperty("-ms-user-select", "all");
        elem.style.setProperty("user-select", "all");
        return elem;
    },
    /**
     * Copies table cells to the clipboard. The parameter is a row-major
     * 2-dimensional `Array` of strings and can contain nulls. We assume all
     * rows are the same length. If not, the cells will still be copied, but
     * the columns may not align.
     *
     * @returns a Promise which resolves or rejects if the copy succeeds.
     *
     * See `Clipboard.copy`
     */ copyCells: function(cells) {
        var tsv = cells.map(function(row) {
            return row.join("\t");
        }).join("\n");
        return navigator.clipboard.writeText(tsv);
    },
    /**
     * Copies the text to the clipboard.
     *
     * @returns a Promise which resolves or rejects if the copy succeeds.
     */ copyString: function(value) {
        return navigator.clipboard.writeText(value);
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kUIjf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RenderMode", ()=>RenderMode
);
var RenderMode;
(function(RenderMode1) {
    /**
     * Renders cells in batches across multiple animation frames. This improves
     * performance by spreading out work to keep a high FPS and avoid blocking
     * the UI, but it also introduces a noticeable scan-line rendering artifact
     * as successive batches of cells finish rendering.
     */ RenderMode1["BATCH"] = "batch";
    /**
     * Renders all cells synchronously on initial mount, then renders cells in
     * batches on successive updates (e.g. during scrolling). This helps to
     * remove visual rendering artifacts when the table is first rendered,
     * wihout slowing scrolling performance to a crawl.
     */ RenderMode1["BATCH_ON_UPDATE"] = "batch-on-update";
    /**
     * Disables the batch-rendering behavior, rendering all cells synchronously
     * at once. This may result in degraded performance on large tables and/or
     * on tables with complex cells.
     */ RenderMode1["NONE"] = "none";
})(RenderMode || (RenderMode = {}));

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3iPrI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Draggable", ()=>Draggable
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _reactDom = require("react-dom");
var _core = require("@blueprintjs/core");
var _dragEvents = require("./dragEvents");
var REATTACH_PROPS_KEYS = [
    "stopPropagation",
    "preventDefault"
];
/**
 * This component provides a simple interface for combined drag and/or click
 * events.
 *
 * Since the mouse interactions for drag and click are overloaded, here are
 * the events that will fire in these cases:
 *
 * A Click Interaction
 * 1. The user presses down on the render element, triggering the onActivate
 *    callback.
 * 2. The user releases the mouse button without moving it, triggering the
 *    onClick callback.
 *
 * A Drag Interaction
 * 1. The user presses down on the render element, triggering the onActivate
 *    callback.
 * 2. The user moves the mouse, triggering the onDragMove callback.
 * 3. The user moves the mouse, triggering the onDragMove callback.
 * 4. The user moves the mouse, triggering the onDragMove callback.
 * 5. The user releases the mouse button, triggering a final onDragMove
 *    callback as well as an onDragEnd callback.
 *
 * If `false` is returned from the onActivate callback, no further events
 * will be fired until the next activation.
 */ var Draggable = /** @class */ function(_super) {
    _tslib.__extends(Draggable1, _super);
    function Draggable1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Draggable1.prototype.render = function() {
        return _react.Children.only(this.props.children);
    };
    Draggable1.prototype.componentDidUpdate = function(prevProps) {
        var propsWhitelist = {
            include: REATTACH_PROPS_KEYS
        };
        if (this.events !== undefined && !_core.Utils.shallowCompareKeys(prevProps, this.props, propsWhitelist)) // HACKHACK: see https://github.com/palantir/blueprint/issues/3979
        // eslint-disable-next-line react/no-find-dom-node
        this.events.attach(_reactDom.findDOMNode(this), this.props);
    };
    Draggable1.prototype.componentDidMount = function() {
        this.events = new _dragEvents.DragEvents();
        // HACKHACK: see https://github.com/palantir/blueprint/issues/3979
        // eslint-disable-next-line react/no-find-dom-node
        this.events.attach(_reactDom.findDOMNode(this), this.props);
    };
    Draggable1.prototype.componentWillUnmount = function() {
        var _a;
        (_a = this.events) === null || _a === void 0 || _a.detach();
        delete this.events;
    };
    Draggable1.defaultProps = {
        preventDefault: true,
        stopPropagation: false
    };
    return Draggable1;
}(_react.PureComponent);

},{"tslib":"gB4KC","react":"21dqq","react-dom":"j6uA9","@blueprintjs/core":"3LcXQ","./dragEvents":"h0G2f","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h0G2f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DragEvents", ()=>DragEvents
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var DragEvents = /** @class */ function() {
    function DragEvents1() {
        var _this = this;
        this.isActivated = false;
        this.isDragging = false;
        this.handleMouseDown = function(event) {
            _this.initCoordinateData(event);
            if (_this.handler != null && _this.handler.onActivate != null) {
                var exitCode = _this.handler.onActivate(event);
                if (exitCode === false) return;
            }
            _this.isActivated = true;
            _this.maybeAlterEventChain(event);
            // It is possible that the mouseup would not be called after the initial
            // mousedown (for example if the mouse is moved out of the window). So,
            // we preemptively detach to avoid duplicate listeners.
            _this.detachDocumentEventListeners();
            _this.attachDocumentEventListeners();
        };
        this.handleMouseMove = function(event) {
            var _a, _b;
            _this.maybeAlterEventChain(event);
            if (_this.isActivated) _this.isDragging = true;
            if (_this.isDragging) {
                var coords = _this.updateCoordinateData(event);
                if (coords !== undefined) (_b = (_a = _this.handler) === null || _a === void 0 ? void 0 : _a.onDragMove) === null || _b === void 0 || _b.call(_a, event, coords);
            }
        };
        this.handleMouseUp = function(event) {
            var _a1, _b1, _c, _d;
            _this.maybeAlterEventChain(event);
            if (_this.handler != null) {
                if (_this.isDragging) {
                    var coords = _this.updateCoordinateData(event);
                    if (coords !== undefined) {
                        (_b1 = (_a1 = _this.handler) === null || _a1 === void 0 ? void 0 : _a1.onDragMove) === null || _b1 === void 0 || _b1.call(_a1, event, coords);
                        (_d = (_c = _this.handler) === null || _c === void 0 ? void 0 : _c.onDragEnd) === null || _d === void 0 || _d.call(_c, event, coords);
                    }
                } else if (_this.isActivated) {
                    if (_this.handler.onDoubleClick != null) {
                        if (_this.doubleClickTimeoutToken == null) // if this the first click of a possible double-click,
                        // we delay the firing of the click event by the
                        // timeout.
                        _this.doubleClickTimeoutToken = window.setTimeout(function() {
                            var _a, _b;
                            delete _this.doubleClickTimeoutToken;
                            (_b = (_a = _this.handler) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 || _b.call(_a, event);
                        }, DragEvents1.DOUBLE_CLICK_TIMEOUT_MSEC);
                        else {
                            // otherwise, this is the second click in the double-
                            // click so we cancel the single-click timeout and
                            // fire the double-click event.
                            window.clearTimeout(_this.doubleClickTimeoutToken);
                            delete _this.doubleClickTimeoutToken;
                            _this.handler.onDoubleClick(event);
                        }
                    } else if (_this.handler.onClick != null) _this.handler.onClick(event);
                }
            }
            _this.isActivated = false;
            _this.isDragging = false;
            _this.detachDocumentEventListeners();
        };
    }
    /**
     * Returns true if the event includes a modifier key that often adds the result of the drag
     * event to any existing state. For example, holding CTRL before dragging may select another
     * region in addition to an existing one, while the absence of a modifier key may clear the
     * existing selection first.
     *
     * @param event the mouse event for the drag interaction
     */ DragEvents1.isAdditive = function(event) {
        return event.ctrlKey || event.metaKey;
    };
    DragEvents1.prototype.attach = function(element, handler) {
        this.detach();
        this.handler = handler;
        this.element = element;
        if (this.isValidDragHandler(handler)) this.element.addEventListener("mousedown", this.handleMouseDown);
        return this;
    };
    DragEvents1.prototype.detach = function() {
        if (this.element != null) {
            this.element.removeEventListener("mousedown", this.handleMouseDown);
            this.detachDocumentEventListeners();
        }
    };
    DragEvents1.prototype.isValidDragHandler = function(handler) {
        return handler != null && (handler.onActivate != null || handler.onDragMove != null || handler.onDragEnd != null || handler.onClick != null || handler.onDoubleClick != null);
    };
    DragEvents1.prototype.attachDocumentEventListeners = function() {
        document.addEventListener("mousemove", this.handleMouseMove);
        document.addEventListener("mouseup", this.handleMouseUp);
    };
    DragEvents1.prototype.detachDocumentEventListeners = function() {
        document.removeEventListener("mousemove", this.handleMouseMove);
        document.removeEventListener("mouseup", this.handleMouseUp);
    };
    DragEvents1.prototype.initCoordinateData = function(event) {
        this.activationCoordinates = [
            event.clientX,
            event.clientY
        ];
        this.lastCoordinates = this.activationCoordinates;
    };
    DragEvents1.prototype.updateCoordinateData = function(event) {
        var _a;
        if (this.activationCoordinates === undefined) // invalid state; we should have activation by this point
        return undefined;
        var currentCoordinates = [
            event.clientX,
            event.clientY
        ];
        var lastCoordinates = (_a = this.lastCoordinates) !== null && _a !== void 0 ? _a : [
            0,
            0
        ];
        var deltaCoordinates = [
            currentCoordinates[0] - lastCoordinates[0],
            currentCoordinates[1] - lastCoordinates[1], 
        ];
        var offsetCoordinates = [
            currentCoordinates[0] - this.activationCoordinates[0],
            currentCoordinates[1] - this.activationCoordinates[1], 
        ];
        var data = {
            activation: this.activationCoordinates,
            current: currentCoordinates,
            delta: deltaCoordinates,
            last: lastCoordinates,
            offset: offsetCoordinates
        };
        this.lastCoordinates = [
            event.clientX,
            event.clientY
        ];
        return data;
    };
    DragEvents1.prototype.maybeAlterEventChain = function(event) {
        var _a, _b;
        if ((_a = this.handler) === null || _a === void 0 ? void 0 : _a.preventDefault) event.preventDefault();
        if ((_b = this.handler) === null || _b === void 0 ? void 0 : _b.stopPropagation) event.stopPropagation();
    };
    DragEvents1.DOUBLE_CLICK_TIMEOUT_MSEC = 500;
    return DragEvents1;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"epbBF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _copyCellsMenuItem = require("./copyCellsMenuItem");
parcelHelpers.exportAll(_copyCellsMenuItem, exports);
var _menuContext = require("./menuContext");
parcelHelpers.exportAll(_menuContext, exports);

},{"./copyCellsMenuItem":"91yQt","./menuContext":"57YHO","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"91yQt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CopyCellsMenuItem", ()=>CopyCellsMenuItem
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _clipboard = require("../../common/clipboard");
var _errors = require("../../common/errors");
var _regions = require("../../regions");
var CopyCellsMenuItem = /** @class */ function(_super) {
    _tslib.__extends(CopyCellsMenuItem1, _super);
    function CopyCellsMenuItem1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleClick = function() {
            var _a = _this.props, context = _a.context, getCellData = _a.getCellData, onCopy = _a.onCopy;
            var cells = context.getUniqueCells();
            var sparse = _regions.Regions.sparseMapCells(cells, getCellData);
            if (sparse !== undefined) _clipboard.Clipboard.copyCells(sparse).then(function() {
                return onCopy === null || onCopy === void 0 ? void 0 : onCopy(true);
            }).catch(function(reason) {
                console.error(_errors.TABLE_COPY_FAILED, reason);
                onCopy === null || onCopy === void 0 || onCopy(false);
            });
        };
        return _this;
    }
    CopyCellsMenuItem1.prototype.render = function() {
        var _a = this.props, context = _a.context, getCellData = _a.getCellData, onCopy = _a.onCopy, menuItemProps = _tslib.__rest(_a, [
            "context",
            "getCellData",
            "onCopy"
        ]);
        return _react.createElement(_core.MenuItem, _tslib.__assign({}, menuItemProps, {
            onClick: this.handleClick
        }));
    };
    return CopyCellsMenuItem1;
}(_react.PureComponent);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","../../common/clipboard":"dw2dA","../../common/errors":"9OyVd","../../regions":"8S4uE","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"9OyVd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "QUADRANT_ON_SCROLL_UNNECESSARILY_DEFINED", ()=>QUADRANT_ON_SCROLL_UNNECESSARILY_DEFINED
);
parcelHelpers.export(exports, "TABLE_EXPAND_FOCUSED_REGION_MULTI_COLUMN_REGION", ()=>TABLE_EXPAND_FOCUSED_REGION_MULTI_COLUMN_REGION
);
parcelHelpers.export(exports, "TABLE_EXPAND_FOCUSED_REGION_MULTI_ROW_REGION", ()=>TABLE_EXPAND_FOCUSED_REGION_MULTI_ROW_REGION
);
parcelHelpers.export(exports, "TABLE_NON_COLUMN_CHILDREN_WARNING", ()=>TABLE_NON_COLUMN_CHILDREN_WARNING
);
parcelHelpers.export(exports, "TABLE_NUM_FROZEN_COLUMNS_BOUND_WARNING", ()=>TABLE_NUM_FROZEN_COLUMNS_BOUND_WARNING
);
parcelHelpers.export(exports, "TABLE_NUM_FROZEN_COLUMNS_NEGATIVE", ()=>TABLE_NUM_FROZEN_COLUMNS_NEGATIVE
);
parcelHelpers.export(exports, "TABLE_NUM_FROZEN_ROWS_BOUND_WARNING", ()=>TABLE_NUM_FROZEN_ROWS_BOUND_WARNING
);
parcelHelpers.export(exports, "TABLE_NUM_FROZEN_ROWS_NEGATIVE", ()=>TABLE_NUM_FROZEN_ROWS_NEGATIVE
);
parcelHelpers.export(exports, "TABLE_NUM_ROWS_ROW_HEIGHTS_MISMATCH", ()=>TABLE_NUM_ROWS_ROW_HEIGHTS_MISMATCH
);
parcelHelpers.export(exports, "TABLE_NUM_ROWS_NEGATIVE", ()=>TABLE_NUM_ROWS_NEGATIVE
);
parcelHelpers.export(exports, "TABLE_NUM_COLUMNS_COLUMN_WIDTHS_MISMATCH", ()=>TABLE_NUM_COLUMNS_COLUMN_WIDTHS_MISMATCH
);
parcelHelpers.export(exports, "TABLE_UNMOUNTED_RESIZE_WARNING", ()=>TABLE_UNMOUNTED_RESIZE_WARNING
);
parcelHelpers.export(exports, "TABLE_INVALID_CELL_RENDERER_DEPS", ()=>TABLE_INVALID_CELL_RENDERER_DEPS
);
parcelHelpers.export(exports, "TABLE_COPY_FAILED", ()=>TABLE_COPY_FAILED
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var ns = "[Blueprint Table]";
var QUADRANT_ON_SCROLL_UNNECESSARILY_DEFINED = ns + " TableQuadrant onScroll need not be defined for any quadrant aside from the MAIN quadrant.";
var TABLE_EXPAND_FOCUSED_REGION_MULTI_COLUMN_REGION = ns + " Table cannot expand a FULL_COLUMNS selection using a multi-column region.";
var TABLE_EXPAND_FOCUSED_REGION_MULTI_ROW_REGION = ns + " Table cannot expand a FULL_COLUMNS selection using a multi-row region.";
var TABLE_NON_COLUMN_CHILDREN_WARNING = ns + " <Table> Children of Table must be Columns\"";
var TABLE_NUM_FROZEN_COLUMNS_BOUND_WARNING = ns + " Table numFrozenColumns must be in less than or equal to the number of columns. Clamping the value for you.";
var TABLE_NUM_FROZEN_COLUMNS_NEGATIVE = ns + " Table requires numFrozenColumns to be greater than or equal to 0.";
var TABLE_NUM_FROZEN_ROWS_BOUND_WARNING = ns + " Table numFrozenRows must be less than or equal to numRows. Clamping the value for you.";
var TABLE_NUM_FROZEN_ROWS_NEGATIVE = ns + " <Table> requires numFrozenRows to be greater than or equal to 0.";
var TABLE_NUM_ROWS_ROW_HEIGHTS_MISMATCH = ns + " Table requires rowHeights.length to equal numRows when both props are provided.";
var TABLE_NUM_ROWS_NEGATIVE = ns + " <Table> requires numRows to be greater than or equal to 0.";
var TABLE_NUM_COLUMNS_COLUMN_WIDTHS_MISMATCH = ns + " Table requires columnWidths.length to equal the number of <Column>s if provided.";
var TABLE_UNMOUNTED_RESIZE_WARNING = "".concat(ns, " Table resize method called while component is unmounted, this is a no-op.");
var TABLE_INVALID_CELL_RENDERER_DEPS = "".concat(ns, " cellRendererDependencies should either always be defined or undefined; this feature cannot be enabled during the component lifecycle");
var TABLE_COPY_FAILED = ns + " Copy failed.";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"57YHO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MenuContext", ()=>MenuContext
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _regions = require("../../regions");
var MenuContext = /** @class */ function() {
    function MenuContext1(target, selectedRegions, numRows, numCols) {
        this.target = target;
        this.selectedRegions = selectedRegions;
        this.numRows = numRows;
        this.numCols = numCols;
        this.regions = _regions.Regions.overlapsRegion(selectedRegions, target) ? selectedRegions : [
            target
        ];
    }
    MenuContext1.prototype.getTarget = function() {
        return this.target;
    };
    MenuContext1.prototype.getSelectedRegions = function() {
        return this.selectedRegions;
    };
    MenuContext1.prototype.getRegions = function() {
        return this.regions;
    };
    MenuContext1.prototype.getUniqueCells = function() {
        return _regions.Regions.enumerateUniqueCells(this.regions, this.numRows, this.numCols);
    };
    return MenuContext1;
}();

},{"../../regions":"8S4uE","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jMlCL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Orientation", ()=>Orientation
);
parcelHelpers.export(exports, "ResizeHandle", ()=>ResizeHandle
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _classes = require("../common/classes");
var _draggable = require("./draggable");
var Orientation;
(function(Orientation1) {
    Orientation1[Orientation1["HORIZONTAL"] = 1] = "HORIZONTAL";
    Orientation1[Orientation1["VERTICAL"] = 0] = "VERTICAL";
})(Orientation || (Orientation = {}));
var ResizeHandle = /** @class */ function(_super) {
    _tslib.__extends(ResizeHandle1, _super);
    function ResizeHandle1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isDragging: false
        };
        _this.handleActivate = function(event) {
            _this.setState({
                isDragging: true
            });
            _this.props.onLayoutLock(true);
            event.stopPropagation();
            event.stopImmediatePropagation();
            return true;
        };
        _this.handleDragMove = function(_event, coords) {
            var orientationIndex = _this.props.orientation;
            if (_this.props.onResizeMove != null) _this.props.onResizeMove(coords.offset[orientationIndex], coords.delta[orientationIndex]);
        };
        _this.handleDragEnd = function(_event, coords) {
            var orientationIndex = _this.props.orientation;
            _this.setState({
                isDragging: false
            });
            _this.props.onLayoutLock(false);
            if (_this.props.onResizeMove != null) _this.props.onResizeMove(coords.offset[orientationIndex], coords.delta[orientationIndex]);
            if (_this.props.onResizeEnd != null) _this.props.onResizeEnd(coords.offset[orientationIndex]);
        };
        _this.handleClick = function(_event) {
            _this.setState({
                isDragging: false
            });
            _this.props.onLayoutLock(false);
        };
        _this.handleDoubleClick = function(_event) {
            _this.setState({
                isDragging: false
            });
            _this.props.onLayoutLock(false);
            if (_this.props.onDoubleClick != null) _this.props.onDoubleClick();
        };
        return _this;
    }
    ResizeHandle1.prototype.render = function() {
        var _a, _b;
        var _c = this.props, onResizeMove = _c.onResizeMove, onResizeEnd = _c.onResizeEnd, onDoubleClick = _c.onDoubleClick, orientation = _c.orientation;
        if (onResizeMove == null && onResizeEnd == null && onDoubleClick == null) return undefined;
        var targetClasses = _classnamesDefault.default(_classes.TABLE_RESIZE_HANDLE_TARGET, (_a = {}, _a[_classes.TABLE_DRAGGING] = this.state.isDragging, _a[_classes.TABLE_RESIZE_HORIZONTAL] = orientation === Orientation.HORIZONTAL, _a[_classes.TABLE_RESIZE_VERTICAL] = orientation === Orientation.VERTICAL, _a), this.props.className);
        var handleClasses = _classnamesDefault.default(_classes.TABLE_RESIZE_HANDLE, (_b = {}, _b[_classes.TABLE_DRAGGING] = this.state.isDragging, _b));
        return _react.createElement(_draggable.Draggable, {
            onActivate: this.handleActivate,
            onClick: this.handleClick,
            onDoubleClick: this.handleDoubleClick,
            onDragEnd: this.handleDragEnd,
            onDragMove: this.handleDragMove
        }, _react.createElement("div", {
            className: targetClasses
        }, _react.createElement("div", {
            className: handleClasses
        })));
    };
    return ResizeHandle1;
}(_react.PureComponent);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","../common/classes":"76ljs","./draggable":"3iPrI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"lssvA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DragSelectable", ()=>DragSelectable
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _focusedCellUtils = require("../common/internal/focusedCellUtils");
var _platformUtils = require("../common/internal/platformUtils");
var _utils = require("../common/utils");
var _regions = require("../regions");
var _dragEvents = require("./dragEvents");
var _draggable = require("./draggable");
var DragSelectable = /** @class */ function(_super) {
    _tslib.__extends(DragSelectable1, _super);
    function DragSelectable1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.didExpandSelectionOnActivate = false;
        _this.lastEmittedSelectedRegions = null;
        _this.handleActivate = function(event) {
            var _a = _this.props, locateClick = _a.locateClick, selectedRegions = _a.selectedRegions, selectedRegionTransform = _a.selectedRegionTransform;
            if (_this.shouldIgnoreMouseDown(event)) return false;
            var region = locateClick(event);
            if (!_regions.Regions.isValid(region)) return false;
            if (selectedRegionTransform != null) region = selectedRegionTransform(region, event);
            var foundIndex = _regions.Regions.findMatchingRegion(selectedRegions, region);
            var matchesExistingSelection = foundIndex !== -1;
            if (matchesExistingSelection && _dragEvents.DragEvents.isAdditive(event)) {
                _this.handleClearSelectionAtIndex(foundIndex);
                // if we just deselected a selected region, a subsequent drag-move
                // could reselect it again and *also* clear other selections. that's
                // quite unintuitive, so ignore subsequent drag-move's.
                return false;
            }
            // we want to listen to subsequent drag-move's in all following cases,
            // so this mousedown can be the start of a new selection if desired.
            if (matchesExistingSelection) _this.handleClearAllSelectionsNotAtIndex(foundIndex);
            else if (_this.shouldExpandSelection(event)) _this.handleExpandSelection(region);
            else if (_this.shouldAddDisjointSelection(event)) _this.handleAddDisjointSelection(region);
            else _this.handleReplaceSelection(region);
            return true;
        };
        _this.handleDragMove = function(event, coords) {
            var _a = _this.props, enableMultipleSelection = _a.enableMultipleSelection, focusedCell = _a.focusedCell, locateClick = _a.locateClick, locateDrag = _a.locateDrag, selectedRegions = _a.selectedRegions, selectedRegionTransform = _a.selectedRegionTransform;
            var region = enableMultipleSelection ? locateDrag(event, coords, /* returnEndOnly? */ _this.didExpandSelectionOnActivate) : locateClick(event);
            if (region === undefined || !_regions.Regions.isValid(region)) return;
            else if (selectedRegionTransform != null) region = selectedRegionTransform(region, event, coords);
            var nextSelectedRegions = _this.didExpandSelectionOnActivate ? _this.expandSelectedRegions(selectedRegions, region, focusedCell) : _regions.Regions.update(selectedRegions, region);
            _this.maybeInvokeSelectionCallback(nextSelectedRegions);
            if (!enableMultipleSelection) {
                // move the focused cell with the selected region
                var lastIndex = nextSelectedRegions.length - 1;
                var mostRecentRegion = nextSelectedRegions[lastIndex];
                _this.invokeOnFocusCallbackForRegion(mostRecentRegion, lastIndex);
            }
        };
        _this.handleDragEnd = function() {
            _this.finishInteraction();
        };
        _this.handleClick = function() {
            _this.finishInteraction();
        };
        // Boolean checks
        // ==============
        _this.shouldExpandSelection = function(event) {
            var enableMultipleSelection = _this.props.enableMultipleSelection;
            return enableMultipleSelection && event.shiftKey;
        };
        _this.shouldAddDisjointSelection = function(event) {
            var enableMultipleSelection = _this.props.enableMultipleSelection;
            return enableMultipleSelection && _dragEvents.DragEvents.isAdditive(event);
        };
        // Update logic
        // ============
        _this.handleClearSelectionAtIndex = function(selectedRegionIndex) {
            var selectedRegions = _this.props.selectedRegions;
            // remove just the clicked region, leaving other selected regions in place
            var nextSelectedRegions = selectedRegions.slice();
            nextSelectedRegions.splice(selectedRegionIndex, 1);
            _this.maybeInvokeSelectionCallback(nextSelectedRegions);
            // if there are still any selections, move the focused cell to the
            // most recent selection. otherwise, don't update it.
            if (nextSelectedRegions.length > 0) {
                var lastIndex = nextSelectedRegions.length - 1;
                _this.invokeOnFocusCallbackForRegion(nextSelectedRegions[lastIndex], lastIndex);
            }
        };
        _this.handleClearAllSelectionsNotAtIndex = function(selectedRegionIndex) {
            var selectedRegions = _this.props.selectedRegions;
            var nextSelectedRegion = selectedRegions[selectedRegionIndex];
            _this.maybeInvokeSelectionCallback([
                nextSelectedRegion
            ]);
            _this.invokeOnFocusCallbackForRegion(nextSelectedRegion, 0);
        };
        _this.handleExpandSelection = function(region) {
            var _a = _this.props, focusedCell = _a.focusedCell, selectedRegions = _a.selectedRegions;
            _this.didExpandSelectionOnActivate = true;
            // there should be only one selected region after expanding. do not
            // update the focused cell.
            var nextSelectedRegions = _this.expandSelectedRegions(selectedRegions, region, focusedCell);
            _this.maybeInvokeSelectionCallback(nextSelectedRegions);
            // move the focused cell into the new region if there were no selections before
            if (selectedRegions == null || selectedRegions.length === 0) _this.invokeOnFocusCallbackForRegion(region);
        };
        _this.handleAddDisjointSelection = function(region) {
            var selectedRegions = _this.props.selectedRegions;
            // add the new region to the existing selections
            var nextSelectedRegions = _regions.Regions.add(selectedRegions, region);
            _this.maybeInvokeSelectionCallback(nextSelectedRegions);
            // put the focused cell in the new region
            _this.invokeOnFocusCallbackForRegion(region, nextSelectedRegions.length - 1);
        };
        _this.handleReplaceSelection = function(region) {
            // clear all selections and retain only the new one
            var nextSelectedRegions = [
                region
            ];
            _this.maybeInvokeSelectionCallback(nextSelectedRegions);
            // move the focused cell into the new selection
            _this.invokeOnFocusCallbackForRegion(region);
        };
        _this.invokeOnFocusCallbackForRegion = function(focusRegion, focusSelectionIndex) {
            if (focusSelectionIndex === void 0) focusSelectionIndex = 0;
            var onFocusedCell = _this.props.onFocusedCell;
            var focusedCellCoords = _regions.Regions.getFocusCellCoordinatesFromRegion(focusRegion);
            onFocusedCell(_focusedCellUtils.toFullCoordinates(focusedCellCoords, focusSelectionIndex));
        };
        // Other
        // =====
        _this.finishInteraction = function() {
            var _a, _b;
            (_b = (_a = _this.props).onSelectionEnd) === null || _b === void 0 || _b.call(_a, _this.props.selectedRegions);
            _this.didExpandSelectionOnActivate = false;
            _this.lastEmittedSelectedRegions = null;
        };
        return _this;
    }
    DragSelectable1.prototype.render = function() {
        var draggableProps = this.getDraggableProps();
        return _react.createElement(_draggable.Draggable, _tslib.__assign({}, draggableProps, {
            preventDefault: false
        }), this.props.children);
    };
    DragSelectable1.prototype.getDraggableProps = function() {
        return this.props.onSelection == null ? {} : {
            onActivate: this.handleActivate,
            onClick: this.handleClick,
            onDragEnd: this.handleDragEnd,
            onDragMove: this.handleDragMove
        };
    };
    DragSelectable1.prototype.shouldIgnoreMouseDown = function(event) {
        var _a = this.props, disabled = _a.disabled, _b = _a.ignoredSelectors, ignoredSelectors = _b === void 0 ? [] : _b;
        var element = event.target;
        var isLeftClick = _utils.Utils.isLeftClick(event);
        var isContextMenuTrigger = isLeftClick && event.ctrlKey && _platformUtils.isMac();
        var isDisabled = typeof disabled === "function" ? disabled(event) : disabled;
        return !isLeftClick || isContextMenuTrigger || isDisabled || ignoredSelectors.some(function(selector) {
            return element.closest(selector) != null;
        });
    };
    // Callbacks
    // =========
    DragSelectable1.prototype.maybeInvokeSelectionCallback = function(nextSelectedRegions) {
        var onSelection = this.props.onSelection;
        // invoke only if the selection changed. this is useful only on
        // mousemove; there's special handling for mousedown interactions that
        // target an already-selected region.
        if (this.lastEmittedSelectedRegions == null || !_core.Utils.deepCompareKeys(this.lastEmittedSelectedRegions, nextSelectedRegions)) {
            onSelection(nextSelectedRegions);
            this.lastEmittedSelectedRegions = nextSelectedRegions;
        }
    };
    /**
     * Expands the last-selected region to the new region, and replaces the
     * last-selected region with the expanded region. If a focused cell is provided,
     * the focused cell will serve as an anchor for the expansion.
     */ DragSelectable1.prototype.expandSelectedRegions = function(regions, region, focusedCell) {
        if (regions.length === 0) return [
            region
        ];
        else if (focusedCell != null) {
            var expandedRegion = _focusedCellUtils.expandFocusedRegion(focusedCell, region);
            return _regions.Regions.update(regions, expandedRegion);
        } else {
            var expandedRegion = _regions.Regions.expandRegion(regions[regions.length - 1], region);
            return _regions.Regions.update(regions, expandedRegion);
        }
    };
    DragSelectable1.defaultProps = {
        disabled: false,
        enableMultipleSelection: false,
        selectedRegions: []
    };
    return DragSelectable1;
}(_react.PureComponent);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/internal/focusedCellUtils":"iMxUs","../common/internal/platformUtils":"g8ztV","../common/utils":"ee8Nq","../regions":"8S4uE","./dragEvents":"h0G2f","./draggable":"3iPrI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iMxUs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Returns the `focusedSelectionIndex` if both the focused cell and that
 * property are defined, or the last index of `selectedRegions` otherwise. If
 * `selectedRegions` is empty, the function always returns `undefined`.
 */ parcelHelpers.export(exports, "getFocusedOrLastSelectedIndex", ()=>getFocusedOrLastSelectedIndex
);
/**
 * Returns the proper focused cell for the given set of initial conditions.
 */ parcelHelpers.export(exports, "getInitialFocusedCell", ()=>getInitialFocusedCell
);
/**
 * Returns `true` if the focused cell is located along the top boundary of the
 * provided region, or `false` otherwise.
 */ parcelHelpers.export(exports, "isFocusedCellAtRegionTop", ()=>isFocusedCellAtRegionTop
);
/**
 * Returns `true` if the focused cell is located along the bottom boundary of
 * the provided region, or `false` otherwise.
 */ parcelHelpers.export(exports, "isFocusedCellAtRegionBottom", ()=>isFocusedCellAtRegionBottom
);
/**
 * Returns `true` if the focused cell is located along the left boundary of the
 * provided region, or `false` otherwise.
 */ parcelHelpers.export(exports, "isFocusedCellAtRegionLeft", ()=>isFocusedCellAtRegionLeft
);
/**
 * Returns `true` if the focused cell is located along the right boundary of the
 * provided region, or `false` otherwise.
 */ parcelHelpers.export(exports, "isFocusedCellAtRegionRight", ()=>isFocusedCellAtRegionRight
);
/**
 * Returns a new cell-coordinates object that includes a focusSelectionIndex property.
 * The returned object will have the proper FocusedCellCoordinates type.
 */ parcelHelpers.export(exports, "toFullCoordinates", ()=>toFullCoordinates
);
/**
 * Expands an existing region to new region based on the current focused cell.
 * The focused cell is an invariant and should not move as a result of this
 * operation. This function is used, for instance, to expand a selected region
 * on shift+click.
 */ parcelHelpers.export(exports, "expandFocusedRegion", ()=>expandFocusedRegion
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _regions = require("../../regions");
var _errors = require("../errors");
function getFocusedOrLastSelectedIndex(selectedRegions, focusedCell) {
    if (selectedRegions.length === 0) return undefined;
    else if (focusedCell != null) return focusedCell.focusSelectionIndex;
    else return selectedRegions.length - 1;
}
function getInitialFocusedCell(enableFocusedCell, focusedCellFromProps, focusedCellFromState, selectedRegions) {
    if (!enableFocusedCell) return undefined;
    else if (focusedCellFromProps != null) // controlled mode
    return focusedCellFromProps;
    else if (focusedCellFromState != null) // use the current focused cell from state
    return focusedCellFromState;
    else if (selectedRegions.length > 0) {
        // focus the top-left cell of the last selection
        var lastIndex = selectedRegions.length - 1;
        return _tslib.__assign(_tslib.__assign({}, _regions.Regions.getFocusCellCoordinatesFromRegion(selectedRegions[lastIndex])), {
            focusSelectionIndex: lastIndex
        });
    } else // focus the top-left cell of the table
    return {
        col: 0,
        row: 0,
        focusSelectionIndex: 0
    };
}
function isFocusedCellAtRegionTop(region, focusedCell) {
    return region.rows != null && focusedCell.row === region.rows[0];
}
function isFocusedCellAtRegionBottom(region, focusedCell) {
    return region.rows != null && focusedCell.row === region.rows[1];
}
function isFocusedCellAtRegionLeft(region, focusedCell) {
    return region.cols != null && focusedCell.col === region.cols[0];
}
function isFocusedCellAtRegionRight(region, focusedCell) {
    return region.cols != null && focusedCell.col === region.cols[1];
}
function toFullCoordinates(cellCoords, focusSelectionIndex) {
    if (focusSelectionIndex === void 0) focusSelectionIndex = 0;
    return _tslib.__assign(_tslib.__assign({}, cellCoords), {
        focusSelectionIndex: focusSelectionIndex
    });
}
function expandFocusedRegion(focusedCell, newRegion) {
    switch(_regions.Regions.getRegionCardinality(newRegion)){
        case _regions.RegionCardinality.FULL_COLUMNS:
            var _a = getExpandedRegionIndices(focusedCell, newRegion, "col", "cols"), indexStart = _a[0], indexEnd = _a[1];
            return _regions.Regions.column(indexStart, indexEnd);
        case _regions.RegionCardinality.FULL_ROWS:
            var _b = getExpandedRegionIndices(focusedCell, newRegion, "row", "rows"), indexStart = _b[0], indexEnd = _b[1];
            return _regions.Regions.row(indexStart, indexEnd);
        case _regions.RegionCardinality.CELLS:
            var _c = getExpandedRegionIndices(focusedCell, newRegion, "row", "rows"), rowIndexStart = _c[0], rowIndexEnd = _c[1];
            var _d = getExpandedRegionIndices(focusedCell, newRegion, "col", "cols"), colIndexStart = _d[0], colIndexEnd = _d[1];
            return _regions.Regions.cell(rowIndexStart, colIndexStart, rowIndexEnd, colIndexEnd);
        default:
            // i.e. `case RegionCardinality.FULL_TABLE:`
            return _regions.Regions.table();
    }
}
function getExpandedRegionIndices(focusedCell, newRegion, focusedCellDimension, regionDimension) {
    var sourceIndex = focusedCell[focusedCellDimension];
    var _a = newRegion[regionDimension], destinationIndex = _a[0], destinationIndexEnd = _a[1];
    if (destinationIndex !== destinationIndexEnd) {
        if (regionDimension === "rows") throw new Error(_errors.TABLE_EXPAND_FOCUSED_REGION_MULTI_ROW_REGION);
        else if (regionDimension === "cols") throw new Error(_errors.TABLE_EXPAND_FOCUSED_REGION_MULTI_COLUMN_REGION);
    }
    return sourceIndex <= destinationIndex ? [
        sourceIndex,
        destinationIndex
    ] : [
        destinationIndex,
        sourceIndex
    ];
}

},{"tslib":"gB4KC","../../regions":"8S4uE","../errors":"9OyVd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"g8ztV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Returns `true` if `navigator.platform` matches a known Mac platform, or
 * `false` otherwise.
 */ parcelHelpers.export(exports, "isMac", ()=>isMac
);
parcelHelpers.export(exports, "isModKeyPressed", ()=>isModKeyPressed
);
function isMac(platformOverride) {
    // HACKHACK: see https://github.com/palantir/blueprint/issues/5174
    // eslint-disable-next-line deprecation/deprecation
    var platform = platformOverride !== null && platformOverride !== void 0 ? platformOverride : typeof navigator !== "undefined" ? navigator.platform : undefined;
    return platform === undefined ? false : /Mac|iPod|iPhone|iPad/.test(platform);
}
var isModKeyPressed = function(event, platformOverride) {
    var isMacPlatform = isMac(platformOverride);
    return isMacPlatform && event.metaKey || !isMacPlatform && event.ctrlKey;
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"2aZF9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HorizontalCellDivider", ()=>HorizontalCellDivider
);
parcelHelpers.export(exports, "ColumnHeaderCell", ()=>ColumnHeaderCell
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
var _context = require("../common/context");
var _loadableContent = require("../common/loadableContent");
var _utils = require("../common/utils");
var _headerCell = require("./headerCell");
function HorizontalCellDivider() {
    return _react.createElement("div", {
        className: _classes.TABLE_HORIZONTAL_CELL_DIVIDER
    });
}
var ColumnHeaderCell = /** @class */ function(_super) {
    _tslib.__extends(ColumnHeaderCell1, _super);
    function ColumnHeaderCell1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.context = {
            enableColumnInteractionBar: false
        };
        _this.state = {
            isActive: false
        };
        _this.handlePopoverOpened = function() {
            return _this.setState({
                isActive: true
            });
        };
        _this.handlePopoverClosing = function() {
            return _this.setState({
                isActive: false
            });
        };
        return _this;
    }
    /**
     * This method determines if a `MouseEvent` was triggered on a target that
     * should be used as the header click/drag target. This enables users of
     * this component to render fully interactive components in their header
     * cells without worry of selection or resize operations from capturing
     * their mouse events.
     */ ColumnHeaderCell1.isHeaderMouseTarget = function(target) {
        return target.classList.contains(_classes.TABLE_HEADER) || target.classList.contains(_classes.TABLE_COLUMN_NAME) || target.classList.contains(_classes.TABLE_INTERACTION_BAR) || target.classList.contains(_classes.TABLE_HEADER_CONTENT);
    };
    ColumnHeaderCell1.prototype.render = function() {
        var _a;
        var _b = this.props, // from IColumnHeaderCellProps
        enableColumnReordering = _b.enableColumnReordering, isColumnSelected = _b.isColumnSelected, menuIcon = _b.menuIcon, // from IColumnNameProps
        name = _b.name, nameRenderer = _b.nameRenderer, // from IHeaderProps
        spreadableProps = _tslib.__rest(_b, [
            "enableColumnReordering",
            "isColumnSelected",
            "menuIcon",
            "name",
            "nameRenderer"
        ]);
        var classes = _classnamesDefault.default(spreadableProps.className, _classes.TABLE_COLUMN_HEADER_CELL, (_a = {}, _a[_classes.TABLE_HAS_INTERACTION_BAR] = this.context.enableColumnInteractionBar, _a[_classes.TABLE_HAS_REORDER_HANDLE] = this.props.reorderHandle != null, _a));
        return _react.createElement(_headerCell.HeaderCell, _tslib.__assign({
            isReorderable: this.props.enableColumnReordering,
            isSelected: this.props.isColumnSelected
        }, spreadableProps, {
            className: classes
        }), this.renderName(), this.maybeRenderContent(), this.props.loading ? undefined : this.props.resizeHandle);
    };
    ColumnHeaderCell1.prototype.renderName = function() {
        var _a;
        var _b = this.props, index = _b.index, loading = _b.loading, name = _b.name, nameRenderer = _b.nameRenderer, reorderHandle = _b.reorderHandle;
        var dropdownMenu = this.maybeRenderDropdownMenu();
        var defaultName = _react.createElement("div", {
            className: _classes.TABLE_TRUNCATED_TEXT
        }, name);
        var nameComponent = _react.createElement(_loadableContent.LoadableContent, {
            loading: loading !== null && loading !== void 0 ? loading : false,
            variableLength: true
        }, (_a = nameRenderer === null || nameRenderer === void 0 ? void 0 : nameRenderer(name, index)) !== null && _a !== void 0 ? _a : defaultName);
        if (this.context.enableColumnInteractionBar) return _react.createElement("div", {
            className: _classes.TABLE_COLUMN_NAME,
            title: name
        }, _react.createElement("div", {
            className: _classes.TABLE_INTERACTION_BAR
        }, reorderHandle, dropdownMenu), _react.createElement(HorizontalCellDivider, null), _react.createElement("div", {
            className: _classes.TABLE_COLUMN_NAME_TEXT
        }, nameComponent));
        else return _react.createElement("div", {
            className: _classes.TABLE_COLUMN_NAME,
            title: name
        }, reorderHandle, dropdownMenu, _react.createElement("div", {
            className: _classes.TABLE_COLUMN_NAME_TEXT
        }, nameComponent));
    };
    ColumnHeaderCell1.prototype.maybeRenderContent = function() {
        if (this.props.children === null) return undefined;
        return _react.createElement("div", {
            className: _classes.TABLE_HEADER_CONTENT
        }, this.props.children);
    };
    ColumnHeaderCell1.prototype.maybeRenderDropdownMenu = function() {
        var _a;
        var _b = this.props, index = _b.index, menuIcon = _b.menuIcon, menuRenderer = _b.menuRenderer;
        if (!_core.Utils.isFunction(menuRenderer)) return undefined;
        var classes = _classnamesDefault.default(_classes.TABLE_TH_MENU_CONTAINER, _utils.CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT, (_a = {}, _a[_classes.TABLE_TH_MENU_OPEN] = this.state.isActive, _a));
        return _react.createElement("div", {
            className: classes
        }, _react.createElement("div", {
            className: _classes.TABLE_TH_MENU_CONTAINER_BACKGROUND
        }), _react.createElement(_core.Popover, {
            content: menuRenderer(index),
            position: _core.Position.BOTTOM,
            className: _classes.TABLE_TH_MENU,
            modifiers: {
                preventOverflow: {
                    boundariesElement: "window"
                }
            },
            onOpened: this.handlePopoverOpened,
            onClosing: this.handlePopoverClosing
        }, _react.createElement(_core.Icon, {
            icon: menuIcon
        })));
    };
    ColumnHeaderCell1.defaultProps = {
        isActive: false,
        menuIcon: "chevron-down"
    };
    ColumnHeaderCell1.contextTypes = _context.columnInteractionBarContextTypes;
    return ColumnHeaderCell1;
}(_core.AbstractPureComponent2);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","../common/context":"hbEMV","../common/loadableContent":"dapUX","../common/utils":"ee8Nq","./headerCell":"l4Pbi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"hbEMV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "columnInteractionBarContextTypes", ()=>columnInteractionBarContextTypes
);
/*
 * Copyright 2018 Palantir Technologies, Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _propTypes = require("prop-types");
var columnInteractionBarContextTypes = {
    enableColumnInteractionBar: _propTypes.bool
};

},{"prop-types":"7wKI2","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"l4Pbi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HeaderCell", ()=>HeaderCell
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
// eslint-disable-next-line deprecation/deprecation
var HeaderCell = /** @class */ function(_super) {
    _tslib.__extends(HeaderCell1, _super);
    function HeaderCell1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            isActive: false
        };
        return _this;
    }
    HeaderCell1.prototype.shouldComponentUpdate = function(nextProps) {
        return !_core.Utils.shallowCompareKeys(this.props, nextProps, {
            exclude: [
                "style"
            ]
        }) || !_core.Utils.deepCompareKeys(this.props, nextProps, [
            "style"
        ]);
    };
    HeaderCell1.prototype.renderContextMenu = function(_event) {
        var menuRenderer = this.props.menuRenderer;
        if (_core.Utils.isFunction(menuRenderer)) // the preferred way (a consistent function instance that won't cause as many re-renders)
        return menuRenderer(this.props.index);
        else return undefined;
    };
    HeaderCell1.prototype.render = function() {
        var _a;
        var classes = _classnamesDefault.default(_classes.TABLE_HEADER, (_a = {}, _a[_classes.TABLE_HEADER_ACTIVE] = this.props.isActive || this.state.isActive, _a[_classes.TABLE_HEADER_SELECTED] = this.props.isSelected, _a[_core.Classes.LOADING] = this.props.loading, _a), this.props.className);
        return _react.createElement("div", {
            className: classes,
            style: this.props.style
        }, this.props.children);
    };
    HeaderCell1 = _tslib.__decorate([
        _core.ContextMenuTarget
    ], HeaderCell1);
    return HeaderCell1;
}(_react.Component);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"fXVTu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RowHeaderCell", ()=>RowHeaderCell
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
var _loadableContent = require("../common/loadableContent");
var _headerCell = require("./headerCell");
var RowHeaderCell = /** @class */ function(_super) {
    _tslib.__extends(RowHeaderCell1, _super);
    function RowHeaderCell1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RowHeaderCell1.prototype.render = function() {
        var _a, _b;
        var _c = this.props, // from IRowHeaderCellProps
        enableRowReordering = _c.enableRowReordering, isRowSelected = _c.isRowSelected, name = _c.name, nameRenderer = _c.nameRenderer, // from IHeaderProps
        spreadableProps = _tslib.__rest(_c, [
            "enableRowReordering",
            "isRowSelected",
            "name",
            "nameRenderer"
        ]);
        var defaultName = _react.createElement("div", {
            className: _classes.TABLE_ROW_NAME_TEXT
        }, name);
        var nameComponent = _react.createElement(_loadableContent.LoadableContent, {
            loading: (_a = spreadableProps.loading) !== null && _a !== void 0 ? _a : false
        }, (_b = nameRenderer === null || nameRenderer === void 0 ? void 0 : nameRenderer(name, spreadableProps.index)) !== null && _b !== void 0 ? _b : defaultName);
        return _react.createElement(_headerCell.HeaderCell, _tslib.__assign({
            isReorderable: this.props.enableRowReordering,
            isSelected: this.props.isRowSelected
        }, spreadableProps), _react.createElement("div", {
            className: _classes.TABLE_ROW_NAME
        }, nameComponent), this.props.children, spreadableProps.loading ? undefined : spreadableProps.resizeHandle);
    };
    return RowHeaderCell1;
}(_core.AbstractPureComponent2);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","../common/loadableContent":"dapUX","./headerCell":"l4Pbi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"h2gol":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Table2", ()=>Table2
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _column = require("./column");
var _classes = require("./common/classes");
var _context = require("./common/context");
var _errors = require("./common/errors");
var _grid = require("./common/grid");
var _focusedCellUtils = require("./common/internal/focusedCellUtils");
var _scrollUtils = require("./common/internal/scrollUtils");
var _rect = require("./common/rect");
var _renderMode = require("./common/renderMode");
var _utils = require("./common/utils");
var _columnHeader = require("./headers/columnHeader");
var _columnHeaderCell = require("./headers/columnHeaderCell");
var _rowHeader = require("./headers/rowHeader");
var _resizeSensor = require("./interactions/resizeSensor");
var _guides = require("./layers/guides");
var _regions = require("./layers/regions");
var _locator = require("./locator");
var _tableQuadrant = require("./quadrants/tableQuadrant");
var _tableQuadrantStack = require("./quadrants/tableQuadrantStack");
var _regions1 = require("./regions");
var _resizeRows = require("./resizeRows");
var _table2Utils = require("./table2Utils");
var _tableBody = require("./tableBody");
var _tableHotkeys = require("./tableHotkeys");
var _tableUtils = require("./tableUtils");
var Table2 = /** @class */ function(_super) {
    _tslib.__extends(Table21, _super);
    function Table21(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.hotkeys = [];
        _this.grid = null;
        _this.refHandlers = {
            cellContainer: function(ref) {
                return _this.cellContainerElement = ref;
            },
            columnHeader: function(ref) {
                _this.columnHeaderElement = ref;
                if (ref != null) _this.columnHeaderHeight = Math.max(ref.clientHeight, _grid.Grid.MIN_COLUMN_HEADER_HEIGHT);
            },
            quadrantStack: function(ref) {
                return _this.quadrantStackInstance = ref;
            },
            rootTable: function(ref) {
                return _this.rootTableElement = ref;
            },
            rowHeader: function(ref) {
                _this.rowHeaderElement = ref;
                if (ref != null) _this.rowHeaderWidth = ref.clientWidth;
            },
            scrollContainer: function(ref) {
                return _this.scrollContainerElement = ref;
            }
        };
        _this.columnHeaderHeight = _grid.Grid.MIN_COLUMN_HEADER_HEIGHT;
        _this.rowHeaderWidth = _grid.Grid.MIN_ROW_HEADER_WIDTH;
        _this.didColumnHeaderMount = false;
        _this.didRowHeaderMount = false;
        /*
         * This value is set to `true` when all cells finish mounting for the first
         * time. It serves as a signal that we can switch to batch rendering.
         */ _this.didCompletelyMount = false;
        _this.renderTableContents = function(_a) {
            var _b;
            var handleKeyDown = _a.handleKeyDown, handleKeyUp = _a.handleKeyUp;
            var _c = _this.props, children = _c.children, className = _c.className, enableRowHeader = _c.enableRowHeader, loadingOptions = _c.loadingOptions, numRows = _c.numRows, enableColumnInteractionBar = _c.enableColumnInteractionBar;
            var _d = _this.state, horizontalGuides = _d.horizontalGuides, numFrozenColumnsClamped = _d.numFrozenColumnsClamped, numFrozenRowsClamped = _d.numFrozenRowsClamped, verticalGuides = _d.verticalGuides;
            if (!_this.gridDimensionsMatchProps()) // Ensure we're rendering the correct number of rows & columns
            _this.invalidateGrid();
            var grid = _this.validateGrid();
            var classes = _classnamesDefault.default(_classes.TABLE_CONTAINER, (_b = {}, _b[_classes.TABLE_REORDERING] = _this.state.isReordering, _b[_classes.TABLE_NO_VERTICAL_SCROLL] = _this.shouldDisableVerticalScroll(), _b[_classes.TABLE_NO_HORIZONTAL_SCROLL] = _this.shouldDisableHorizontalScroll(), _b[_classes.TABLE_SELECTION_ENABLED] = _table2Utils.isSelectionModeEnabled(_this.props, _regions1.RegionCardinality.CELLS), _b[_classes.TABLE_NO_ROWS] = numRows === 0, _b), className);
            return _react.createElement("div", {
                className: classes,
                ref: _this.refHandlers.rootTable,
                onScroll: _this.handleRootScroll,
                onKeyDown: handleKeyDown,
                onKeyUp: handleKeyUp,
                tabIndex: 0
            }, _react.createElement(_tableQuadrantStack.TableQuadrantStack, {
                bodyRef: _this.refHandlers.cellContainer,
                bodyRenderer: _this.renderBody,
                columnHeaderRenderer: _this.renderColumnHeader,
                columnHeaderRef: _this.refHandlers.columnHeader,
                didHeadersMount: _this.state.didHeadersMount,
                enableColumnInteractionBar: enableColumnInteractionBar,
                enableRowHeader: enableRowHeader,
                grid: grid,
                handleColumnResizeGuide: _this.handleColumnResizeGuide,
                handleColumnsReordering: _this.handleColumnsReordering,
                handleRowResizeGuide: _this.handleRowResizeGuide,
                handleRowsReordering: _this.handleRowsReordering,
                isHorizontalScrollDisabled: _this.shouldDisableHorizontalScroll(),
                isVerticalScrollDisabled: _this.shouldDisableVerticalScroll(),
                loadingOptions: loadingOptions,
                numColumns: _react.Children.count(children),
                numFrozenColumns: numFrozenColumnsClamped,
                numFrozenRows: numFrozenRowsClamped,
                numRows: numRows,
                onScroll: _this.handleBodyScroll,
                ref: _this.refHandlers.quadrantStack,
                menuRenderer: _this.renderMenu,
                rowHeaderRenderer: _this.renderRowHeader,
                rowHeaderRef: _this.refHandlers.rowHeader,
                scrollContainerRef: _this.refHandlers.scrollContainer
            }), _react.createElement("div", {
                className: _classnamesDefault.default(_classes.TABLE_OVERLAY_LAYER, _classes.TABLE_OVERLAY_REORDERING_CURSOR)
            }), _react.createElement(_guides.GuideLayer, {
                className: _classes.TABLE_RESIZE_GUIDES,
                verticalGuides: verticalGuides,
                horizontalGuides: horizontalGuides
            }));
        };
        _this.renderMenu = function(refHandler) {
            var _a;
            var classes = _classnamesDefault.default(_classes.TABLE_MENU, (_a = {}, _a[_classes.TABLE_SELECTION_ENABLED] = _table2Utils.isSelectionModeEnabled(_this.props, _regions1.RegionCardinality.FULL_TABLE), _a));
            return _react.createElement("div", {
                className: classes,
                ref: refHandler,
                onMouseDown: _this.handleMenuMouseDown
            }, _this.maybeRenderRegions(_this.styleMenuRegion));
        };
        _this.handleMenuMouseDown = function(e) {
            // the shift+click interaction expands the region from the focused cell.
            // thus, if shift is pressed we shouldn't move the focused cell.
            _this.selectAll(!e.shiftKey);
        };
        _this.selectAll = function(shouldUpdateFocusedCell) {
            var selectionHandler = _this.getEnabledSelectionHandler(_regions1.RegionCardinality.FULL_TABLE);
            // clicking on upper left hand corner sets selection to "all"
            // regardless of current selection state (clicking twice does not deselect table)
            selectionHandler([
                _regions1.Regions.table()
            ]);
            if (shouldUpdateFocusedCell) {
                var newFocusedCellCoordinates = _regions1.Regions.getFocusCellCoordinatesFromRegion(_regions1.Regions.table());
                _this.handleFocus(_focusedCellUtils.toFullCoordinates(newFocusedCellCoordinates));
            }
        };
        _this.columnHeaderCellRenderer = function(columnIndex) {
            var _a;
            var columnProps = _this.getColumnProps(columnIndex);
            if (columnProps === undefined) return null;
            var id = columnProps.id, cellRenderer = columnProps.cellRenderer, columnHeaderCellRenderer = columnProps.columnHeaderCellRenderer, spreadableProps = _tslib.__rest(columnProps, [
                "id",
                "cellRenderer",
                "columnHeaderCellRenderer"
            ]);
            var columnLoading = _tableUtils.hasLoadingOption(columnProps.loadingOptions, _regions1.ColumnLoadingOption.HEADER) || _tableUtils.hasLoadingOption(_this.props.loadingOptions, _regions1.TableLoadingOption.COLUMN_HEADERS);
            if (columnHeaderCellRenderer != null) {
                var columnHeaderCell = columnHeaderCellRenderer(columnIndex);
                if (columnHeaderCell != null) return _react.cloneElement(columnHeaderCell, {
                    loading: (_a = columnHeaderCell.props.loading) !== null && _a !== void 0 ? _a : columnLoading
                });
            }
            var baseProps = _tslib.__assign({
                index: columnIndex,
                loading: columnLoading
            }, spreadableProps);
            if (columnProps.name != null) return _react.createElement(_columnHeaderCell.ColumnHeaderCell, _tslib.__assign({}, baseProps));
            else return _react.createElement(_columnHeaderCell.ColumnHeaderCell, _tslib.__assign({}, baseProps, {
                name: _utils.Utils.toBase26Alpha(columnIndex)
            }));
        };
        _this.renderColumnHeader = function(refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly) {
            var _a;
            if (showFrozenColumnsOnly === void 0) showFrozenColumnsOnly = false;
            var _b = _this.state, focusedCell = _b.focusedCell, selectedRegions = _b.selectedRegions, viewportRect = _b.viewportRect;
            var _c = _this.props, defaultColumnWidth = _c.defaultColumnWidth, enableMultipleSelection = _c.enableMultipleSelection, enableGhostCells = _c.enableGhostCells, enableColumnReordering = _c.enableColumnReordering, enableColumnResizing = _c.enableColumnResizing, loadingOptions = _c.loadingOptions, maxColumnWidth = _c.maxColumnWidth, minColumnWidth = _c.minColumnWidth, selectedRegionTransform = _c.selectedRegionTransform;
            var classes = _classnamesDefault.default(_classes.TABLE_COLUMN_HEADERS, (_a = {}, _a[_classes.TABLE_SELECTION_ENABLED] = _table2Utils.isSelectionModeEnabled(_this.props, _regions1.RegionCardinality.FULL_COLUMNS), _a));
            if (_this.grid === null || _this.locator === undefined || viewportRect === undefined) // if we haven't mounted yet (which we need in order for grid/viewport calculations),
            // we still want to hand a DOM ref over to TableQuadrantStack for later
            return _react.createElement("div", {
                className: classes,
                ref: refHandler
            });
            // if we have horizontal overflow, no need to render ghost columns
            // (this avoids problems like https://github.com/palantir/blueprint/issues/5027)
            var hasHorizontalOverflow = _this.locator.hasHorizontalOverflow(_this.rowHeaderWidth, viewportRect);
            var columnIndices = _this.grid.getColumnIndicesInRect(viewportRect, hasHorizontalOverflow ? false : enableGhostCells);
            var columnIndexStart = showFrozenColumnsOnly ? 0 : columnIndices.columnIndexStart;
            var columnIndexEnd = showFrozenColumnsOnly ? _this.getMaxFrozenColumnIndex() : columnIndices.columnIndexEnd;
            return _react.createElement("div", {
                className: classes,
                ref: refHandler
            }, _react.createElement(_columnHeader.ColumnHeader, {
                defaultColumnWidth: defaultColumnWidth,
                enableMultipleSelection: enableMultipleSelection,
                cellRenderer: _this.columnHeaderCellRenderer,
                focusedCell: focusedCell,
                grid: _this.grid,
                isReorderable: enableColumnReordering,
                isResizable: enableColumnResizing,
                loading: _tableUtils.hasLoadingOption(loadingOptions, _regions1.TableLoadingOption.COLUMN_HEADERS),
                locator: _this.locator,
                maxColumnWidth: maxColumnWidth,
                minColumnWidth: minColumnWidth,
                onColumnWidthChanged: _this.handleColumnWidthChanged,
                onFocusedCell: _this.handleFocus,
                onMount: _this.handleHeaderMounted,
                onLayoutLock: _this.handleLayoutLock,
                onReordered: _this.handleColumnsReordered,
                onReordering: reorderingHandler,
                onResizeGuide: resizeHandler,
                onSelection: _this.getEnabledSelectionHandler(_regions1.RegionCardinality.FULL_COLUMNS),
                selectedRegions: selectedRegions,
                selectedRegionTransform: selectedRegionTransform,
                columnIndexStart: columnIndexStart,
                columnIndexEnd: columnIndexEnd
            }, _this.props.children), _this.maybeRenderRegions(_this.styleColumnHeaderRegion));
        };
        _this.renderRowHeader = function(refHandler, resizeHandler, reorderingHandler, showFrozenRowsOnly) {
            var _a;
            if (showFrozenRowsOnly === void 0) showFrozenRowsOnly = false;
            var _b = _this.state, focusedCell = _b.focusedCell, selectedRegions = _b.selectedRegions, viewportRect = _b.viewportRect;
            var _c = _this.props, defaultRowHeight = _c.defaultRowHeight, enableMultipleSelection = _c.enableMultipleSelection, enableGhostCells = _c.enableGhostCells, enableRowReordering = _c.enableRowReordering, enableRowResizing = _c.enableRowResizing, loadingOptions = _c.loadingOptions, maxRowHeight = _c.maxRowHeight, minRowHeight = _c.minRowHeight, rowHeaderCellRenderer = _c.rowHeaderCellRenderer, selectedRegionTransform = _c.selectedRegionTransform;
            var classes = _classnamesDefault.default(_classes.TABLE_ROW_HEADERS, (_a = {}, _a[_classes.TABLE_SELECTION_ENABLED] = _table2Utils.isSelectionModeEnabled(_this.props, _regions1.RegionCardinality.FULL_ROWS), _a));
            if (_this.grid === null || _this.locator === undefined || viewportRect === undefined) // if we haven't mounted yet (which we need in order for grid/viewport calculations),
            // we still want to hand a DOM ref over to TableQuadrantStack for later
            return _react.createElement("div", {
                className: classes,
                ref: refHandler
            });
            // if we have vertical overflow, no need to render ghost rows
            // (this avoids problems like https://github.com/palantir/blueprint/issues/5027)
            var hasVerticalOverflow = _this.locator.hasVerticalOverflow(_this.columnHeaderHeight, viewportRect);
            var rowIndices = _this.grid.getRowIndicesInRect({
                includeGhostCells: hasVerticalOverflow ? false : enableGhostCells,
                rect: viewportRect
            });
            var rowIndexStart = showFrozenRowsOnly ? 0 : rowIndices.rowIndexStart;
            var rowIndexEnd = showFrozenRowsOnly ? _this.getMaxFrozenRowIndex() : rowIndices.rowIndexEnd;
            return _react.createElement("div", {
                className: classes,
                ref: refHandler
            }, _react.createElement(_rowHeader.RowHeader, {
                defaultRowHeight: defaultRowHeight,
                enableMultipleSelection: enableMultipleSelection,
                focusedCell: focusedCell,
                grid: _this.grid,
                locator: _this.locator,
                isReorderable: enableRowReordering,
                isResizable: enableRowResizing,
                loading: _tableUtils.hasLoadingOption(loadingOptions, _regions1.TableLoadingOption.ROW_HEADERS),
                maxRowHeight: maxRowHeight,
                minRowHeight: minRowHeight,
                onFocusedCell: _this.handleFocus,
                onLayoutLock: _this.handleLayoutLock,
                onMount: _this.handleHeaderMounted,
                onResizeGuide: resizeHandler,
                onReordered: _this.handleRowsReordered,
                onReordering: reorderingHandler,
                onRowHeightChanged: _this.handleRowHeightChanged,
                onSelection: _this.getEnabledSelectionHandler(_regions1.RegionCardinality.FULL_ROWS),
                rowHeaderCellRenderer: rowHeaderCellRenderer,
                selectedRegions: selectedRegions,
                selectedRegionTransform: selectedRegionTransform,
                rowIndexStart: rowIndexStart,
                rowIndexEnd: rowIndexEnd
            }), _this.maybeRenderRegions(_this.styleRowHeaderRegion));
        };
        _this.bodyCellRenderer = function(rowIndex, columnIndex) {
            var _a;
            var columnProps = _this.getColumnProps(columnIndex);
            if (columnProps === undefined) return undefined;
            var id = columnProps.id, cellRenderer = columnProps.cellRenderer, columnHeaderCellRenderer = columnProps.columnHeaderCellRenderer, name = columnProps.name, nameRenderer = columnProps.nameRenderer, restColumnProps = _tslib.__rest(columnProps, [
                "id",
                "cellRenderer",
                "columnHeaderCellRenderer",
                "name",
                "nameRenderer"
            ]);
            // HACKHACK: cellRenderer prop has a default value, so we can assert non-null
            var cell = cellRenderer(rowIndex, columnIndex);
            if (cell === undefined) return undefined;
            var inheritedIsLoading = _tableUtils.hasLoadingOption(columnProps.loadingOptions, _regions1.ColumnLoadingOption.CELLS) || _tableUtils.hasLoadingOption(_this.props.loadingOptions, _regions1.TableLoadingOption.CELLS);
            return _react.cloneElement(cell, _tslib.__assign(_tslib.__assign({}, restColumnProps), {
                loading: (_a = cell.props.loading) !== null && _a !== void 0 ? _a : inheritedIsLoading
            }));
        };
        _this.renderBody = function(quadrantType, showFrozenRowsOnly, showFrozenColumnsOnly) {
            if (showFrozenRowsOnly === void 0) showFrozenRowsOnly = false;
            if (showFrozenColumnsOnly === void 0) showFrozenColumnsOnly = false;
            var _a = _this.state, focusedCell = _a.focusedCell, numFrozenColumns = _a.numFrozenColumnsClamped, numFrozenRows = _a.numFrozenRowsClamped, selectedRegions = _a.selectedRegions, viewportRect = _a.viewportRect;
            var _b = _this.props, enableMultipleSelection = _b.enableMultipleSelection, enableGhostCells = _b.enableGhostCells, loadingOptions = _b.loadingOptions, bodyContextMenuRenderer = _b.bodyContextMenuRenderer, selectedRegionTransform = _b.selectedRegionTransform;
            if (_this.grid === null || _this.locator === undefined || viewportRect === undefined) return undefined;
            // if we have vertical/horizontal overflow, no need to render ghost rows/columns (respectively)
            // (this avoids problems like https://github.com/palantir/blueprint/issues/5027)
            var hasVerticalOverflow = _this.locator.hasVerticalOverflow(_this.columnHeaderHeight, viewportRect);
            var hasHorizontalOverflow = _this.locator.hasHorizontalOverflow(_this.rowHeaderWidth, viewportRect);
            var rowIndices = _this.grid.getRowIndicesInRect({
                includeGhostCells: hasVerticalOverflow ? false : enableGhostCells,
                rect: viewportRect
            });
            var columnIndices = _this.grid.getColumnIndicesInRect(viewportRect, hasHorizontalOverflow ? false : enableGhostCells);
            // start beyond the frozen area if rendering unrelated quadrants, so we
            // don't render duplicate cells underneath the frozen ones.
            var columnIndexStart = showFrozenColumnsOnly ? 0 : columnIndices.columnIndexStart + numFrozenColumns;
            var rowIndexStart = showFrozenRowsOnly ? 0 : rowIndices.rowIndexStart + numFrozenRows;
            // if rendering frozen rows/columns, subtract one to convert to
            // 0-indexing. if the 1-indexed value is 0, this sets the end index
            // to -1, which avoids rendering absent frozen rows/columns at all.
            var columnIndexEnd = showFrozenColumnsOnly ? numFrozenColumns - 1 : columnIndices.columnIndexEnd;
            var rowIndexEnd = showFrozenRowsOnly ? numFrozenRows - 1 : rowIndices.rowIndexEnd;
            // the main quadrant contains all cells in the table, so listen only to that quadrant
            var onCompleteRender = quadrantType === _tableQuadrant.QuadrantType.MAIN ? _this.handleCompleteRender : undefined;
            return _react.createElement("div", null, _react.createElement(_tableBody.TableBody, {
                enableMultipleSelection: enableMultipleSelection,
                cellRenderer: _this.bodyCellRenderer,
                focusedCell: focusedCell,
                grid: _this.grid,
                loading: _tableUtils.hasLoadingOption(loadingOptions, _regions1.TableLoadingOption.CELLS),
                locator: _this.locator,
                onCompleteRender: onCompleteRender,
                onFocusedCell: _this.handleFocus,
                onSelection: _this.getEnabledSelectionHandler(_regions1.RegionCardinality.CELLS),
                bodyContextMenuRenderer: bodyContextMenuRenderer,
                renderMode: _this.getNormalizedRenderMode(),
                selectedRegions: selectedRegions,
                selectedRegionTransform: selectedRegionTransform,
                viewportRect: viewportRect,
                columnIndexStart: columnIndexStart,
                columnIndexEnd: columnIndexEnd,
                rowIndexStart: rowIndexStart,
                rowIndexEnd: rowIndexEnd,
                numFrozenColumns: showFrozenColumnsOnly ? numFrozenColumns : undefined,
                numFrozenRows: showFrozenRowsOnly ? numFrozenRows : undefined
            }), _this.maybeRenderRegions(_this.styleBodyRegion, quadrantType));
        };
        _this.getEnabledSelectionHandler = function(selectionMode) {
            if (!_table2Utils.isSelectionModeEnabled(_this.props, selectionMode)) // If the selection mode isn't enabled, return a callback that
            // will clear the selection. For example, if row selection is
            // disabled, clicking on the row header will clear the table's
            // selection. If all selection modes are enabled, clicking on the
            // same region twice will clear the selection.
            return _this.clearSelection;
            else return _this.handleSelection;
        };
        _this.handleHeaderMounted = function(whichHeader) {
            var didHeadersMount = _this.state.didHeadersMount;
            if (didHeadersMount) return;
            if (whichHeader === "column") _this.didColumnHeaderMount = true;
            else _this.didRowHeaderMount = true;
            if (_this.didColumnHeaderMount && _this.didRowHeaderMount) _this.setState({
                didHeadersMount: true
            });
        };
        _this.handleCompleteRender = function() {
            // The first onCompleteRender is triggered before the viewportRect is
            // defined and the second after the viewportRect has been set. The cells
            // will only actually render once the viewportRect is defined though, so
            // we defer invoking onCompleteRender until that check passes.
            var _a, _b;
            // Additional note: we run into an unfortunate race condition between the order of execution
            // of this callback and this.handleHeaderMounted(...). The setState() call in the latter
            // does not update this.state quickly enough for us to query for the new state here, so instead
            // we read the private member variables which are the dependent parts of that "didHeadersMount"
            // state.
            var didHeadersMount = _this.didColumnHeaderMount && _this.didRowHeaderMount;
            if (_this.state.viewportRect != null && didHeadersMount) {
                (_b = (_a = _this.props).onCompleteRender) === null || _b === void 0 || _b.call(_a);
                _this.didCompletelyMount = true;
            }
        };
        _this.styleBodyRegion = function(region, quadrantType) {
            var numFrozenColumns = _this.props.numFrozenColumns;
            if (_this.grid == null) return {};
            var cardinality = _regions1.Regions.getRegionCardinality(region);
            var style = _this.grid.getRegionStyle(region);
            // ensure we're not showing borders at the boundary of the frozen-columns area
            var canHideRightBorder = (quadrantType === _tableQuadrant.QuadrantType.TOP_LEFT || quadrantType === _tableQuadrant.QuadrantType.LEFT) && numFrozenColumns != null && numFrozenColumns > 0;
            var fixedHeight = _this.grid.getHeight();
            var fixedWidth = _this.grid.getWidth();
            // include a correction in some cases to hide borders along quadrant boundaries
            var alignmentCorrection = 1;
            var alignmentCorrectionString = "-".concat(alignmentCorrection, "px");
            switch(cardinality){
                case _regions1.RegionCardinality.CELLS:
                    return style;
                case _regions1.RegionCardinality.FULL_COLUMNS:
                    style.top = alignmentCorrectionString;
                    style.height = fixedHeight + alignmentCorrection;
                    return style;
                case _regions1.RegionCardinality.FULL_ROWS:
                    style.left = alignmentCorrectionString;
                    style.width = fixedWidth + alignmentCorrection;
                    if (canHideRightBorder) style.right = alignmentCorrectionString;
                    return style;
                case _regions1.RegionCardinality.FULL_TABLE:
                    style.left = alignmentCorrectionString;
                    style.top = alignmentCorrectionString;
                    style.width = fixedWidth + alignmentCorrection;
                    style.height = fixedHeight + alignmentCorrection;
                    if (canHideRightBorder) style.right = alignmentCorrectionString;
                    return style;
                default:
                    return {
                        display: "none"
                    };
            }
        };
        _this.styleMenuRegion = function(region) {
            var viewportRect = _this.state.viewportRect;
            if (_this.grid == null || viewportRect == null) return {};
            var cardinality = _regions1.Regions.getRegionCardinality(region);
            var style = _this.grid.getRegionStyle(region);
            switch(cardinality){
                case _regions1.RegionCardinality.FULL_TABLE:
                    style.right = "0px";
                    style.bottom = "0px";
                    style.top = "0px";
                    style.left = "0px";
                    style.borderBottom = "none";
                    style.borderRight = "none";
                    return style;
                default:
                    return {
                        display: "none"
                    };
            }
        };
        _this.styleColumnHeaderRegion = function(region) {
            var viewportRect = _this.state.viewportRect;
            if (_this.grid == null || viewportRect == null) return {};
            var cardinality = _regions1.Regions.getRegionCardinality(region);
            var style = _this.grid.getRegionStyle(region);
            switch(cardinality){
                case _regions1.RegionCardinality.FULL_TABLE:
                    style.left = "-1px";
                    style.borderLeft = "none";
                    style.bottom = "-1px";
                    return style;
                case _regions1.RegionCardinality.FULL_COLUMNS:
                    style.bottom = "-1px";
                    return style;
                default:
                    return {
                        display: "none"
                    };
            }
        };
        _this.styleRowHeaderRegion = function(region) {
            var viewportRect = _this.state.viewportRect;
            if (_this.grid == null || viewportRect == null) return {};
            var cardinality = _regions1.Regions.getRegionCardinality(region);
            var style = _this.grid.getRegionStyle(region);
            switch(cardinality){
                case _regions1.RegionCardinality.FULL_TABLE:
                    style.top = "-1px";
                    style.borderTop = "none";
                    style.right = "-1px";
                    return style;
                case _regions1.RegionCardinality.FULL_ROWS:
                    style.right = "-1px";
                    return style;
                default:
                    return {
                        display: "none"
                    };
            }
        };
        _this.handleColumnWidthChanged = function(columnIndex, width) {
            var _a, _b;
            var selectedRegions = _this.state.selectedRegions;
            var columnWidths = _this.state.columnWidths.slice();
            if (_regions1.Regions.hasFullTable(selectedRegions)) for(var col1 = 0; col1 < columnWidths.length; col1++)columnWidths[col1] = width;
            if (_regions1.Regions.hasFullColumn(selectedRegions, columnIndex)) _regions1.Regions.eachUniqueFullColumn(selectedRegions, function(col) {
                columnWidths[col] = width;
            });
            else columnWidths[columnIndex] = width;
            _this.validateGrid({
                columnWidths: columnWidths
            });
            _this.setState({
                columnWidths: columnWidths
            });
            (_b = (_a = _this.props).onColumnWidthChanged) === null || _b === void 0 || _b.call(_a, columnIndex, width);
        };
        _this.handleRowHeightChanged = function(rowIndex, height) {
            var _a, _b;
            var selectedRegions = _this.state.selectedRegions;
            var rowHeights = _this.state.rowHeights.slice();
            if (_regions1.Regions.hasFullTable(selectedRegions)) for(var row1 = 0; row1 < rowHeights.length; row1++)rowHeights[row1] = height;
            if (_regions1.Regions.hasFullRow(selectedRegions, rowIndex)) _regions1.Regions.eachUniqueFullRow(selectedRegions, function(row) {
                rowHeights[row] = height;
            });
            else rowHeights[rowIndex] = height;
            _this.validateGrid({
                rowHeights: rowHeights
            });
            _this.setState({
                rowHeights: rowHeights
            });
            (_b = (_a = _this.props).onRowHeightChanged) === null || _b === void 0 || _b.call(_a, rowIndex, height);
        };
        _this.handleRootScroll = function(_event) {
            // Bug #211 - Native browser text selection events can cause the root
            // element to scroll even though it has a overflow:hidden style. The
            // only viable solution to this is to unscroll the element after the
            // browser scrolls it.
            if (_this.rootTableElement != null) {
                _this.rootTableElement.scrollLeft = 0;
                _this.rootTableElement.scrollTop = 0;
            }
        };
        _this.handleBodyScroll = function(event) {
            // Prevent the event from propagating to avoid a resize event on the resize sensor.
            event.stopPropagation();
            if (_this.locator != null && !_this.state.isLayoutLocked) {
                var newViewportRect = _this.locator.getViewportRect();
                _this.updateViewportRect(newViewportRect);
            }
        };
        _this.clearSelection = function(_selectedRegions) {
            _this.handleSelection([]);
        };
        _this.syncViewportPosition = function(_a) {
            var nextScrollLeft = _a.nextScrollLeft, nextScrollTop = _a.nextScrollTop;
            var viewportRect = _this.state.viewportRect;
            if (_this.scrollContainerElement == null || _this.columnHeaderElement == null || viewportRect === undefined) return;
            if (nextScrollLeft !== undefined || nextScrollTop !== undefined) {
                // we need to modify the scroll container explicitly for the viewport to shift. in so
                // doing, we add the size of the header elements, which are not technically part of the
                // "grid" concept (the grid only consists of body cells at present).
                if (nextScrollTop !== undefined) {
                    var topCorrection = _this.shouldDisableVerticalScroll() ? 0 : _this.columnHeaderElement.clientHeight;
                    _this.scrollContainerElement.scrollTop = nextScrollTop + topCorrection;
                }
                if (nextScrollLeft !== undefined) {
                    var leftCorrection = _this.shouldDisableHorizontalScroll() || _this.rowHeaderElement == null ? 0 : _this.rowHeaderElement.clientWidth;
                    _this.scrollContainerElement.scrollLeft = nextScrollLeft + leftCorrection;
                }
                var nextViewportRect = new _rect.Rect(nextScrollLeft !== null && nextScrollLeft !== void 0 ? nextScrollLeft : 0, nextScrollTop !== null && nextScrollTop !== void 0 ? nextScrollTop : 0, viewportRect.width, viewportRect.height);
                _this.updateViewportRect(nextViewportRect);
            }
        };
        _this.handleFocus = function(focusedCell) {
            var _a, _b;
            if (!_this.props.enableFocusedCell) // don't set focus state if focus is not allowed
            return;
            // only set focused cell state if not specified in props
            if (_this.props.focusedCell == null) _this.setState({
                focusedCell: focusedCell
            });
            (_b = (_a = _this.props).onFocusedCell) === null || _b === void 0 || _b.call(_a, focusedCell);
        };
        _this.handleSelection = function(selectedRegions) {
            // only set selectedRegions state if not specified in props
            if (_this.props.selectedRegions == null) _this.setState({
                selectedRegions: selectedRegions
            });
            var onSelection = _this.props.onSelection;
            if (onSelection != null) onSelection(selectedRegions);
        };
        _this.handleColumnsReordering = function(verticalGuides) {
            _this.setState({
                isReordering: true,
                verticalGuides: verticalGuides
            });
        };
        _this.handleColumnsReordered = function(oldIndex, newIndex, length) {
            var _a, _b;
            _this.setState({
                isReordering: false,
                verticalGuides: []
            });
            (_b = (_a = _this.props).onColumnsReordered) === null || _b === void 0 || _b.call(_a, oldIndex, newIndex, length);
        };
        _this.handleRowsReordering = function(horizontalGuides) {
            _this.setState({
                isReordering: true,
                horizontalGuides: horizontalGuides
            });
        };
        _this.handleRowsReordered = function(oldIndex, newIndex, length) {
            var _a, _b;
            _this.setState({
                isReordering: false,
                horizontalGuides: []
            });
            (_b = (_a = _this.props).onRowsReordered) === null || _b === void 0 || _b.call(_a, oldIndex, newIndex, length);
        };
        _this.handleLayoutLock = function(isLayoutLocked) {
            if (isLayoutLocked === void 0) isLayoutLocked = false;
            _this.setState({
                isLayoutLocked: isLayoutLocked
            });
        };
        _this.updateViewportRect = function(nextViewportRect) {
            if (nextViewportRect === undefined) return;
            var viewportRect = _this.state.viewportRect;
            _this.setState({
                viewportRect: nextViewportRect
            });
            var didViewportChange = viewportRect != null && !viewportRect.equals(nextViewportRect) || viewportRect == null && nextViewportRect != null;
            if (didViewportChange) _this.invokeOnVisibleCellsChangeCallback(nextViewportRect);
        };
        _this.getMaxFrozenColumnIndex = function() {
            return _this.state.numFrozenColumnsClamped - 1;
        };
        _this.getMaxFrozenRowIndex = function() {
            return _this.state.numFrozenRowsClamped - 1;
        };
        _this.handleColumnResizeGuide = function(verticalGuides) {
            _this.setState({
                verticalGuides: verticalGuides
            });
        };
        _this.handleRowResizeGuide = function(horizontalGuides) {
            _this.setState({
                horizontalGuides: horizontalGuides
            });
        };
        var children1 = props.children, columnWidths1 = props.columnWidths, defaultRowHeight1 = props.defaultRowHeight, defaultColumnWidth1 = props.defaultColumnWidth, enableRowHeader1 = props.enableRowHeader, numRows1 = props.numRows, rowHeights1 = props.rowHeights, _a1 = props.selectedRegions, selectedRegions1 = _a1 === void 0 ? [] : _a1;
        var childrenArray = _react.Children.toArray(children1);
        var columnIdToIndex = Table21.createColumnIdIndex(childrenArray);
        // Create height/width arrays using the lengths from props and
        // children, the default values from props, and finally any sparse
        // arrays passed into props.
        var newColumnWidths = childrenArray.map(function() {
            return defaultColumnWidth1;
        });
        if (columnWidths1 !== undefined) newColumnWidths = _utils.Utils.assignSparseValues(newColumnWidths, columnWidths1);
        var newRowHeights = _utils.Utils.times(numRows1, function() {
            return defaultRowHeight1;
        });
        if (rowHeights1 !== undefined) newRowHeights = _utils.Utils.assignSparseValues(newRowHeights, rowHeights1);
        var focusedCell1 = _focusedCellUtils.getInitialFocusedCell(props.enableFocusedCell, props.focusedCell, undefined, selectedRegions1);
        _this.state = {
            childrenArray: childrenArray,
            columnIdToIndex: columnIdToIndex,
            columnWidths: newColumnWidths,
            didHeadersMount: false,
            focusedCell: focusedCell1,
            horizontalGuides: [],
            isLayoutLocked: false,
            isReordering: false,
            numFrozenColumnsClamped: _tableUtils.clampNumFrozenColumns(props),
            numFrozenRowsClamped: _tableUtils.clampNumFrozenRows(props),
            rowHeights: newRowHeights,
            selectedRegions: selectedRegions1,
            verticalGuides: []
        };
        _this.hotkeysImpl = new _tableHotkeys.TableHotkeys(props, _this.state, {
            getEnabledSelectionHandler: _this.getEnabledSelectionHandler,
            handleFocus: _this.handleFocus,
            handleSelection: _this.handleSelection,
            syncViewportPosition: _this.syncViewportPosition
        });
        _this.hotkeys = _table2Utils.getHotkeysFromProps(props, _this.hotkeysImpl);
        if (enableRowHeader1 === false) _this.didRowHeaderMount = true;
        return _this;
    }
    Table21.getDerivedStateFromProps = function(props, state) {
        var children = props.children, defaultColumnWidth = props.defaultColumnWidth, defaultRowHeight = props.defaultRowHeight, enableFocusedCell = props.enableFocusedCell, focusedCell = props.focusedCell, numRows = props.numRows, selectedRegions = props.selectedRegions, selectionModes = props.selectionModes;
        // assign values from state if uncontrolled
        var columnWidths = props.columnWidths, rowHeights = props.rowHeights;
        if (columnWidths == null) columnWidths = state.columnWidths;
        if (rowHeights == null) rowHeights = state.rowHeights;
        var newChildrenArray = _react.Children.toArray(children);
        var didChildrenChange = !_table2Utils.compareChildren(newChildrenArray, state.childrenArray);
        var numCols = newChildrenArray.length;
        var newColumnWidths = columnWidths;
        if (columnWidths !== state.columnWidths || didChildrenChange) {
            // Try to maintain widths of columns by looking up the width of the
            // column that had the same `ID` prop. If none is found, use the
            // previous width at the same index.
            var previousColumnWidths = newChildrenArray.map(function(child, index) {
                var mappedIndex = child.props.id === undefined ? undefined : state.columnIdToIndex[child.props.id];
                return state.columnWidths[mappedIndex !== null && mappedIndex !== void 0 ? mappedIndex : index];
            });
            // Make sure the width/height arrays have the correct length, but keep
            // as many existing widths/heights as possible. Also, apply the
            // sparse width/heights from props.
            newColumnWidths = _utils.Utils.arrayOfLength(newColumnWidths, numCols, defaultColumnWidth);
            newColumnWidths = _utils.Utils.assignSparseValues(newColumnWidths, previousColumnWidths);
            newColumnWidths = _utils.Utils.assignSparseValues(newColumnWidths, columnWidths);
        }
        var newRowHeights = rowHeights;
        if (rowHeights !== state.rowHeights || numRows !== state.rowHeights.length) {
            newRowHeights = _utils.Utils.arrayOfLength(newRowHeights, numRows, defaultRowHeight);
            newRowHeights = _utils.Utils.assignSparseValues(newRowHeights, rowHeights);
        }
        var newSelectedRegions = selectedRegions !== null && selectedRegions !== void 0 ? selectedRegions : state.selectedRegions.filter(function(region) {
            // if we're in uncontrolled mode, filter out all selected regions that don't
            // fit in the current new table dimensions
            var regionCardinality = _regions1.Regions.getRegionCardinality(region);
            return _table2Utils.isSelectionModeEnabled(props, regionCardinality, selectionModes) && _regions1.Regions.isRegionValidForTable(region, numRows, numCols);
        });
        var newFocusedCell = _focusedCellUtils.getInitialFocusedCell(enableFocusedCell, focusedCell, state.focusedCell, newSelectedRegions);
        var nextState = {
            childrenArray: newChildrenArray,
            columnIdToIndex: didChildrenChange ? Table21.createColumnIdIndex(newChildrenArray) : state.columnIdToIndex,
            columnWidths: newColumnWidths,
            focusedCell: newFocusedCell,
            numFrozenColumnsClamped: _tableUtils.clampNumFrozenColumns(props),
            numFrozenRowsClamped: _tableUtils.clampNumFrozenRows(props),
            rowHeights: newRowHeights,
            selectedRegions: newSelectedRegions
        };
        if (!_core.Utils.deepCompareKeys(state, nextState, Table21.SHALLOW_COMPARE_STATE_KEYS_DENYLIST)) return nextState;
        return null;
    };
    Table21.createColumnIdIndex = function(children) {
        var columnIdToIndex = {};
        for(var i = 0; i < children.length; i++){
            var key = children[i].props.id;
            if (key != null) columnIdToIndex[String(key)] = i;
        }
        return columnIdToIndex;
    };
    // Instance methods
    // ================
    /**
     * __Experimental!__ Resizes all rows in the table to the approximate
     * maximum height of wrapped cell content in each row. Works best when each
     * cell contains plain text of a consistent font style (though font style
     * may vary between cells). Since this function uses approximate
     * measurements, results may not be perfect.
     *
     * Approximation parameters can be configured for the entire table or on a
     * per-cell basis. Default values are fine-tuned to work well with default
     * Table font styles.
     */ Table21.prototype.resizeRowsByApproximateHeight = function(getCellText, options) {
        var rowHeights = _resizeRows.resizeRowsByApproximateHeight(this.props.numRows, this.state.columnWidths, getCellText, options);
        this.invalidateGrid();
        this.setState({
            rowHeights: rowHeights
        });
    };
    /**
     * Resize all rows in the table to the height of the tallest visible cell in the specified columns.
     * If no indices are provided, default to using the tallest visible cell from all columns in view.
     */ Table21.prototype.resizeRowsByTallestCell = function(columnIndices) {
        if (this.grid == null || this.state.viewportRect === undefined || this.locator === undefined) {
            console.warn(_errors.TABLE_UNMOUNTED_RESIZE_WARNING);
            return;
        }
        var rowHeights = _resizeRows.resizeRowsByTallestCell(this.grid, this.state.viewportRect, this.locator, this.state.rowHeights.length, columnIndices);
        this.invalidateGrid();
        this.setState({
            rowHeights: rowHeights
        });
    };
    /**
     * Scrolls the table to the target region in a fashion appropriate to the target region's
     * cardinality:
     *
     * - CELLS: Scroll the top-left cell in the target region to the top-left corner of the viewport.
     * - FULL_ROWS: Scroll the top-most row in the target region to the top of the viewport.
     * - FULL_COLUMNS: Scroll the left-most column in the target region to the left side of the viewport.
     * - FULL_TABLE: Scroll the top-left cell in the table to the top-left corner of the viewport.
     *
     * If there are active frozen rows and/or columns, the target region will be positioned in the
     * top-left corner of the non-frozen area (unless the target region itself is in the frozen
     * area).
     *
     * If the target region is close to the bottom-right corner of the table, this function will
     * simply scroll the target region as close to the top-left as possible until the bottom-right
     * corner is reached.
     */ Table21.prototype.scrollToRegion = function(region) {
        var _a = this.state, numFrozenColumns = _a.numFrozenColumnsClamped, numFrozenRows = _a.numFrozenRowsClamped, viewportRect = _a.viewportRect;
        if (viewportRect === undefined || this.grid === null || this.quadrantStackInstance === undefined) return;
        var currScrollLeft = viewportRect.left, currScrollTop = viewportRect.top;
        var _b = _scrollUtils.getScrollPositionForRegion(region, currScrollLeft, currScrollTop, this.grid.getCumulativeWidthBefore, this.grid.getCumulativeHeightBefore, numFrozenRows, numFrozenColumns), scrollLeft = _b.scrollLeft, scrollTop = _b.scrollTop;
        var correctedScrollLeft = this.shouldDisableHorizontalScroll() ? 0 : scrollLeft;
        var correctedScrollTop = this.shouldDisableVerticalScroll() ? 0 : scrollTop;
        // defer to the quadrant stack to keep all quadrant positions in sync
        this.quadrantStackInstance.scrollToPosition(correctedScrollLeft, correctedScrollTop);
    };
    // React lifecycle
    // ===============
    Table21.prototype.getChildContext = function() {
        return {
            enableColumnInteractionBar: this.props.enableColumnInteractionBar
        };
    };
    Table21.prototype.shouldComponentUpdate = function(nextProps, nextState) {
        var propKeysDenylist = {
            exclude: Table21.SHALLOW_COMPARE_PROP_KEYS_DENYLIST
        };
        var stateKeysDenylist = {
            exclude: Table21.SHALLOW_COMPARE_STATE_KEYS_DENYLIST
        };
        return !_core.Utils.shallowCompareKeys(this.props, nextProps, propKeysDenylist) || !_core.Utils.shallowCompareKeys(this.state, nextState, stateKeysDenylist) || !_core.Utils.deepCompareKeys(this.props, nextProps, Table21.SHALLOW_COMPARE_PROP_KEYS_DENYLIST) || !_core.Utils.deepCompareKeys(this.state, nextState, Table21.SHALLOW_COMPARE_STATE_KEYS_DENYLIST);
    };
    Table21.prototype.render = function() {
        return _react.createElement(_core.HotkeysTarget2, {
            hotkeys: this.hotkeys
        }, this.renderTableContents);
    };
    /**
     * When the component mounts, the HTML Element refs will be available, so
     * we constructor the Locator, which queries the elements' bounding
     * ClientRects.
     */ Table21.prototype.componentDidMount = function() {
        var _this = this;
        this.validateGrid();
        if (this.rootTableElement != null && this.scrollContainerElement != null && this.cellContainerElement != null) {
            this.locator = new _locator.Locator(this.rootTableElement, this.scrollContainerElement, this.cellContainerElement);
            this.updateLocator();
            this.updateViewportRect(this.locator.getViewportRect());
            this.resizeSensorDetach = _resizeSensor.ResizeSensor.attach(this.rootTableElement, function() {
                var _a;
                if (!_this.state.isLayoutLocked) _this.updateViewportRect((_a = _this.locator) === null || _a === void 0 ? void 0 : _a.getViewportRect());
            });
            this.forceUpdate();
        }
    };
    Table21.prototype.componentWillUnmount = function() {
        if (this.resizeSensorDetach != null) {
            this.resizeSensorDetach();
            delete this.resizeSensorDetach;
        }
        this.didCompletelyMount = false;
    };
    Table21.prototype.componentDidUpdate = function(prevProps, prevState) {
        var _a2, _b;
        _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
        this.hotkeysImpl.setState(this.state);
        this.hotkeysImpl.setProps(this.props);
        var didChildrenChange = !_table2Utils.compareChildren(_react.Children.toArray(this.props.children), this.state.childrenArray);
        if (this.props.cellRendererDependencies !== undefined && prevProps.cellRendererDependencies === undefined) console.error(_errors.TABLE_INVALID_CELL_RENDERER_DEPS);
        var didCellRendererDependenciesChange = this.props.cellRendererDependencies !== undefined && this.props.cellRendererDependencies.some(function(dep, index) {
            var _a;
            return dep !== ((_a = prevProps.cellRendererDependencies) !== null && _a !== void 0 ? _a : [])[index];
        });
        var didColumnWidthsChange = !_utils.Utils.compareSparseArrays((_a2 = this.props.columnWidths) !== null && _a2 !== void 0 ? _a2 : this.state.columnWidths, prevState.columnWidths);
        var didRowHeightsChange = !_utils.Utils.compareSparseArrays((_b = this.props.rowHeights) !== null && _b !== void 0 ? _b : this.state.rowHeights, prevState.rowHeights);
        var shouldInvalidateGrid = didChildrenChange || didCellRendererDependenciesChange || didColumnWidthsChange || didRowHeightsChange || this.props.numRows !== prevProps.numRows || this.props.forceRerenderOnSelectionChange && this.props.selectedRegions !== prevProps.selectedRegions;
        if (shouldInvalidateGrid) this.invalidateGrid();
        if (this.locator != null) {
            this.validateGrid();
            this.updateLocator();
        }
        var shouldInvalidateHotkeys = this.props.getCellClipboardData !== prevProps.getCellClipboardData || this.props.enableFocusedCell !== prevProps.enableFocusedCell || this.props.enableMultipleSelection !== prevProps.enableMultipleSelection || this.props.selectionModes !== prevProps.selectionModes;
        if (shouldInvalidateHotkeys) this.hotkeys = _table2Utils.getHotkeysFromProps(this.props, this.hotkeysImpl);
        if (didCellRendererDependenciesChange) // force an update with the new grid
        this.forceUpdate();
    };
    Table21.prototype.validateProps = function(props) {
        var children = props.children, columnWidths = props.columnWidths, numFrozenColumns = props.numFrozenColumns, numFrozenRows = props.numFrozenRows, numRows = props.numRows, rowHeights = props.rowHeights;
        var numColumns = _react.Children.count(children);
        // do cheap error-checking first.
        if (numRows != null && numRows < 0) throw new Error(_errors.TABLE_NUM_ROWS_NEGATIVE);
        if (numFrozenRows != null && numFrozenRows < 0) throw new Error(_errors.TABLE_NUM_FROZEN_ROWS_NEGATIVE);
        if (numFrozenColumns != null && numFrozenColumns < 0) throw new Error(_errors.TABLE_NUM_FROZEN_COLUMNS_NEGATIVE);
        if (numRows != null && rowHeights != null && rowHeights.length !== numRows) throw new Error(_errors.TABLE_NUM_ROWS_ROW_HEIGHTS_MISMATCH);
        if (numColumns != null && columnWidths != null && columnWidths.length !== numColumns) throw new Error(_errors.TABLE_NUM_COLUMNS_COLUMN_WIDTHS_MISMATCH);
        _react.Children.forEach(children, function(child) {
            if (!_core.Utils.isElementOfType(child, _column.Column)) throw new Error(_errors.TABLE_NON_COLUMN_CHILDREN_WARNING);
        });
        // these are recoverable scenarios, so just print a warning.
        if (numFrozenRows != null && numRows != null && numFrozenRows > numRows) console.warn(_errors.TABLE_NUM_FROZEN_ROWS_BOUND_WARNING);
        if (numFrozenColumns != null && numFrozenColumns > numColumns) console.warn(_errors.TABLE_NUM_FROZEN_COLUMNS_BOUND_WARNING);
    };
    Table21.prototype.gridDimensionsMatchProps = function() {
        var _a = this.props, children = _a.children, numRows = _a.numRows;
        return this.grid != null && this.grid.numCols === _react.Children.count(children) && this.grid.numRows === numRows;
    };
    // Quadrant refs
    // =============
    Table21.prototype.shouldDisableVerticalScroll = function() {
        var enableGhostCells = this.props.enableGhostCells;
        var viewportRect = this.state.viewportRect;
        if (this.grid === null || viewportRect === undefined) return false;
        var rowIndices = this.grid.getRowIndicesInRect({
            columnHeaderHeight: this.columnHeaderHeight,
            includeGhostCells: enableGhostCells,
            rect: viewportRect
        });
        var isViewportUnscrolledVertically = viewportRect != null && viewportRect.top === 0;
        var areRowHeadersLoading = _tableUtils.hasLoadingOption(this.props.loadingOptions, _regions1.TableLoadingOption.ROW_HEADERS);
        var areGhostRowsVisible = enableGhostCells && this.grid.isGhostIndex(rowIndices.rowIndexEnd, 0);
        return areGhostRowsVisible && (isViewportUnscrolledVertically || areRowHeadersLoading);
    };
    Table21.prototype.shouldDisableHorizontalScroll = function() {
        var enableGhostCells = this.props.enableGhostCells;
        var viewportRect = this.state.viewportRect;
        if (this.grid === null || viewportRect === undefined) return false;
        var columnIndices = this.grid.getColumnIndicesInRect(viewportRect, enableGhostCells);
        var isViewportUnscrolledHorizontally = viewportRect != null && viewportRect.left === 0;
        var areColumnHeadersLoading = _tableUtils.hasLoadingOption(this.props.loadingOptions, _regions1.TableLoadingOption.COLUMN_HEADERS);
        var areGhostColumnsVisible = enableGhostCells && this.grid.isGhostColumn(columnIndices.columnIndexEnd);
        return areGhostColumnsVisible && (isViewportUnscrolledHorizontally || areColumnHeadersLoading);
    };
    Table21.prototype.getColumnProps = function(columnIndex) {
        var column = this.state.childrenArray[columnIndex];
        return column === undefined ? undefined : column.props;
    };
    Table21.prototype.isGuideLayerShowing = function() {
        return this.state.verticalGuides.length > 0 || this.state.horizontalGuides.length > 0;
    };
    Table21.prototype.invalidateGrid = function() {
        this.grid = null;
    };
    /**
     * This method's arguments allow us to support the following use case:
     * In some cases, we want to update the grid _before_ this.setState() is called with updated
     * `columnWidths` or `rowHeights` so that when that setState update _does_ flush through the React render
     * tree, our TableQuadrantStack has the correct updated grid measurements.
     */ Table21.prototype.validateGrid = function(_a) {
        var _b = _a === void 0 ? {} : _a, columnWidths = _b.columnWidths, rowHeights = _b.rowHeights;
        if (this.grid == null || columnWidths !== undefined || rowHeights !== undefined) {
            var _c = this.props, defaultRowHeight = _c.defaultRowHeight, defaultColumnWidth = _c.defaultColumnWidth, numFrozenColumns = _c.numFrozenColumns;
            // gridBleed should always be >= numFrozenColumns since columnIndexStart adds numFrozenColumns
            var gridBleed = Math.max(_grid.Grid.DEFAULT_BLEED, numFrozenColumns);
            this.grid = new _grid.Grid(rowHeights !== null && rowHeights !== void 0 ? rowHeights : this.state.rowHeights, columnWidths !== null && columnWidths !== void 0 ? columnWidths : this.state.columnWidths, gridBleed, defaultRowHeight, defaultColumnWidth);
            this.invokeOnVisibleCellsChangeCallback(this.state.viewportRect);
            this.hotkeysImpl.setGrid(this.grid);
        }
        return this.grid;
    };
    /**
     * Renders a `RegionLayer`, applying styles to the regions using the
     * supplied `RegionStyler`. `RegionLayer` is a pure component, so
     * the `RegionStyler` should be a new instance on every render if we
     * intend to redraw the region layer.
     */ Table21.prototype.maybeRenderRegions = function(getRegionStyle, quadrantType) {
        var _a;
        if (this.isGuideLayerShowing() && !this.state.isReordering) // we want to show guides *and* the selection styles when reordering rows or columns
        return undefined;
        var regionGroups = _regions1.Regions.joinStyledRegionGroups(this.state.selectedRegions, (_a = this.props.styledRegionGroups) !== null && _a !== void 0 ? _a : [], this.state.focusedCell);
        return regionGroups.map(function(regionGroup, index) {
            var regionStyles = regionGroup.regions.map(function(region) {
                return getRegionStyle(region, quadrantType);
            });
            return _react.createElement(_regions.RegionLayer, {
                className: _classnamesDefault.default(regionGroup.className),
                key: index,
                regions: regionGroup.regions,
                regionStyles: regionStyles
            });
        });
    };
    Table21.prototype.updateLocator = function() {
        if (this.locator === undefined || this.grid == null) return;
        this.locator.setGrid(this.grid).setNumFrozenRows(this.state.numFrozenRowsClamped).setNumFrozenColumns(this.state.numFrozenColumnsClamped);
    };
    Table21.prototype.invokeOnVisibleCellsChangeCallback = function(viewportRect) {
        var _a, _b;
        if (this.grid == null) return;
        var columnIndices = this.grid.getColumnIndicesInRect(viewportRect);
        var rowIndices = this.grid.getRowIndicesInRect({
            rect: viewportRect
        });
        (_b = (_a = this.props).onVisibleCellsChange) === null || _b === void 0 || _b.call(_a, rowIndices, columnIndices);
    };
    /**
     * Normalizes RenderMode.BATCH_ON_UPDATE into RenderMode.{BATCH,NONE}. We do
     * this because there are actually multiple updates required before the
     * <Table> is considered fully "mounted," and adding that knowledge to child
     * components would lead to tight coupling. Thus, keep it simple for them.
     */ Table21.prototype.getNormalizedRenderMode = function() {
        var renderMode = this.props.renderMode;
        var shouldBatchRender = renderMode === _renderMode.RenderMode.BATCH || renderMode === _renderMode.RenderMode.BATCH_ON_UPDATE && this.didCompletelyMount;
        return shouldBatchRender ? _renderMode.RenderMode.BATCH : _renderMode.RenderMode.NONE;
    };
    Table21.displayName = "".concat(_core.DISPLAYNAME_PREFIX, ".Table2");
    Table21.defaultProps = {
        defaultColumnWidth: 150,
        defaultRowHeight: 20,
        enableColumnInteractionBar: false,
        enableFocusedCell: false,
        enableGhostCells: false,
        enableMultipleSelection: true,
        enableRowHeader: true,
        forceRerenderOnSelectionChange: false,
        loadingOptions: [],
        maxColumnWidth: 9999,
        maxRowHeight: 9999,
        minColumnWidth: 50,
        minRowHeight: 20,
        numFrozenColumns: 0,
        numFrozenRows: 0,
        numRows: 0,
        renderMode: _renderMode.RenderMode.BATCH_ON_UPDATE,
        rowHeaderCellRenderer: _rowHeader.renderDefaultRowHeader,
        selectionModes: _regions1.SelectionModes.ALL
    };
    Table21.childContextTypes = _context.columnInteractionBarContextTypes;
    Table21.SHALLOW_COMPARE_PROP_KEYS_DENYLIST = [
        "selectedRegions"
    ];
    Table21.SHALLOW_COMPARE_STATE_KEYS_DENYLIST = [
        "selectedRegions",
        "viewportRect", 
    ];
    return Table21;
}(_core.AbstractComponent2);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","./column":"lpdUA","./common/classes":"76ljs","./common/context":"hbEMV","./common/errors":"9OyVd","./common/grid":"iVPk8","./common/internal/focusedCellUtils":"iMxUs","./common/internal/scrollUtils":"f5X1Y","./common/rect":"9bJ19","./common/renderMode":"kUIjf","./common/utils":"ee8Nq","./headers/columnHeader":"eQw4A","./headers/columnHeaderCell":"2aZF9","./headers/rowHeader":"ekwRV","./interactions/resizeSensor":"ag3P3","./layers/guides":"1bx1t","./layers/regions":"bnd0x","./locator":"fuMWh","./quadrants/tableQuadrant":"c6liI","./quadrants/tableQuadrantStack":"464PV","./regions":"8S4uE","./resizeRows":"j0PZc","./table2Utils":"bEgdU","./tableBody":"iDlyW","./tableHotkeys":"967oE","./tableUtils":"0561q","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"f5X1Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Returns the scroll{Left,Top} offsets of the provided region based on its
 * cardinality.
 */ parcelHelpers.export(exports, "getScrollPositionForRegion", ()=>getScrollPositionForRegion
);
/**
 * Returns the thickness of the target scroll bar in pixels.
 * If the target scroll bar is not present, 0 is returned.
 */ parcelHelpers.export(exports, "measureScrollBarThickness", ()=>measureScrollBarThickness
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _regions = require("../../regions");
function getScrollPositionForRegion(region, currScrollLeft, currScrollTop, getLeftOffset, getTopOffset, numFrozenRows, numFrozenColumns) {
    if (numFrozenRows === void 0) numFrozenRows = 0;
    if (numFrozenColumns === void 0) numFrozenColumns = 0;
    var cardinality = _regions.Regions.getRegionCardinality(region);
    var scrollTop = currScrollTop;
    var scrollLeft = currScrollLeft;
    // if these were max-frozen-index values, we would have added 1 before passing to the get*Offset
    // functions, but the counts are already 1-indexed, so we can just pass those.
    var frozenColumnsCumulativeWidth = getLeftOffset(numFrozenColumns);
    var frozenRowsCumulativeHeight = getTopOffset(numFrozenRows);
    switch(cardinality){
        case _regions.RegionCardinality.CELLS:
            // scroll to the top-left corner of the block of cells
            var topOffset = getTopOffset(region.rows[0]);
            var leftOffset = getLeftOffset(region.cols[0]);
            scrollTop = getClampedScrollPosition(topOffset, frozenRowsCumulativeHeight);
            scrollLeft = getClampedScrollPosition(leftOffset, frozenColumnsCumulativeWidth);
            break;
        case _regions.RegionCardinality.FULL_ROWS:
            // scroll to the top of the row block
            var topOffset = getTopOffset(region.rows[0]);
            scrollTop = getClampedScrollPosition(topOffset, frozenRowsCumulativeHeight);
            break;
        case _regions.RegionCardinality.FULL_COLUMNS:
            // scroll to the left side of the column block
            var leftOffset = getLeftOffset(region.cols[0]);
            scrollLeft = getClampedScrollPosition(leftOffset, frozenColumnsCumulativeWidth);
            break;
        default:
            // if it's a FULL_TABLE region, scroll back to the top-left cell of the table
            scrollTop = 0;
            scrollLeft = 0;
            break;
    }
    return {
        scrollLeft: scrollLeft,
        scrollTop: scrollTop
    };
}
function measureScrollBarThickness(element, direction) {
    if (element == null) return 0;
    // offset size includes the scroll bar. client size does not.
    // the difference gives the thickness of the scroll bar.
    return direction === "horizontal" ? element.offsetHeight - element.clientHeight : element.offsetWidth - element.clientWidth;
}
/**
 * Adjust the scroll position to align content just beyond the frozen region, if necessary.
 */ function getClampedScrollPosition(scrollOffset, frozenRegionCumulativeSize) {
    // if the new scroll offset falls within the frozen region, clamp it to 0
    return Math.max(scrollOffset - frozenRegionCumulativeSize, 0);
}

},{"../../regions":"8S4uE","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eQw4A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ColumnHeader", ()=>ColumnHeader
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _classes = require("../common/classes");
var _index = require("../common/index");
var _resizeHandle = require("../interactions/resizeHandle");
var _regions = require("../regions");
var _columnHeaderCell = require("./columnHeaderCell");
var _header = require("./header");
var ColumnHeader = /** @class */ function(_super) {
    _tslib.__extends(ColumnHeader1, _super);
    function ColumnHeader1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.wrapCells = function(cells) {
            var _a = _this.props, columnIndexStart = _a.columnIndexStart, grid = _a.grid;
            var tableWidth = grid.getRect().width;
            var scrollLeftCorrection = _this.props.grid.getCumulativeWidthBefore(columnIndexStart);
            var style = {
                // only header cells in view will render, but we need to reposition them to stay in view
                // as we scroll horizontally.
                transform: "translateX(".concat(scrollLeftCorrection || 0, "px)"),
                // reduce the width to clamp the sliding window as we approach the final headers; otherwise,
                // we'll have tons of useless whitespace at the end.
                width: tableWidth - scrollLeftCorrection
            };
            var classes = _classnamesDefault.default(_classes.TABLE_THEAD, _classes.TABLE_COLUMN_HEADER_TR);
            // add a wrapper set to the full-table width to ensure container styles stretch from the first
            // cell all the way to the last
            return _react.createElement("div", {
                style: {
                    width: tableWidth
                }
            }, _react.createElement("div", {
                style: style,
                className: classes,
                ref: _this.props.measurableElementRef
            }, cells));
        };
        _this.convertPointToColumn = function(clientXOrY, useMidpoint) {
            return _this.props.locator.convertPointToColumn(clientXOrY, useMidpoint);
        };
        _this.getCellExtremaClasses = function(index, indexEnd) {
            return _this.props.grid.getExtremaClasses(0, index, 1, indexEnd);
        };
        _this.getColumnWidth = function(index) {
            return _this.props.grid.getColumnRect(index).width;
        };
        _this.getDragCoordinate = function(clientCoords) {
            return clientCoords[0]; // x-coordinate
        };
        _this.getMouseCoordinate = function(event) {
            return event.clientX;
        };
        _this.handleResizeEnd = function(index, size) {
            _this.props.onResizeGuide(null);
            _this.props.onColumnWidthChanged(index, size);
        };
        _this.handleResizeDoubleClick = function(index) {
            var _a = _this.props, minColumnWidth = _a.minColumnWidth, maxColumnWidth = _a.maxColumnWidth;
            var width = _this.props.locator.getWidestVisibleCellInColumn(index);
            var clampedWidth = _index.Utils.clamp(width, minColumnWidth, maxColumnWidth);
            _this.props.onResizeGuide(null);
            _this.props.onColumnWidthChanged(index, clampedWidth);
        };
        _this.handleSizeChanged = function(index, size) {
            var rect = _this.props.grid.getColumnRect(index);
            _this.props.onResizeGuide([
                rect.left + size
            ]);
        };
        _this.isCellSelected = function(index) {
            return _regions.Regions.hasFullColumn(_this.props.selectedRegions, index);
        };
        _this.isGhostIndex = function(index) {
            return _this.props.grid.isGhostIndex(-1, index);
        };
        _this.renderGhostCell = function(index, extremaClasses) {
            var _a = _this.props, grid = _a.grid, loading = _a.loading;
            var rect = grid.getGhostCellRect(0, index);
            var style = {
                flexBasis: "".concat(rect.width, "px"),
                width: "".concat(rect.width, "px")
            };
            return _react.createElement(_columnHeaderCell.ColumnHeaderCell, {
                className: _classnamesDefault.default(extremaClasses),
                index: index,
                key: _classes.columnIndexClass(index),
                loading: loading,
                style: style
            });
        };
        _this.toRegion = function(index1, index2) {
            return _regions.Regions.column(index1, index2);
        };
        return _this;
    }
    ColumnHeader1.prototype.componentDidMount = function() {
        var _a, _b;
        (_b = (_a = this.props).onMount) === null || _b === void 0 || _b.call(_a, "column");
    };
    ColumnHeader1.prototype.render = function() {
        var _a = this.props, // from IColumnHeaderProps
        renderHeaderCell = _a.cellRenderer, onColumnWidthChanged = _a.onColumnWidthChanged, // from IColumnWidths
        minSize = _a.minColumnWidth, maxSize = _a.maxColumnWidth, defaultColumnWidth = _a.defaultColumnWidth, // from ColumnIndices
        indexStart = _a.columnIndexStart, indexEnd = _a.columnIndexEnd, // from IHeaderProps
        spreadableProps = _tslib.__rest(_a, [
            "cellRenderer",
            "onColumnWidthChanged",
            "minColumnWidth",
            "maxColumnWidth",
            "defaultColumnWidth",
            "columnIndexStart",
            "columnIndexEnd"
        ]);
        return _react.createElement(_header.Header, _tslib.__assign({
            convertPointToIndex: this.convertPointToColumn,
            fullRegionCardinality: _regions.RegionCardinality.FULL_COLUMNS,
            getCellExtremaClasses: this.getCellExtremaClasses,
            getCellIndexClass: _classes.columnCellIndexClass,
            getCellSize: this.getColumnWidth,
            getDragCoordinate: this.getDragCoordinate,
            getIndexClass: _classes.columnIndexClass,
            getMouseCoordinate: this.getMouseCoordinate,
            ghostCellRenderer: this.renderGhostCell,
            handleResizeDoubleClick: this.handleResizeDoubleClick,
            handleResizeEnd: this.handleResizeEnd,
            handleSizeChanged: this.handleSizeChanged,
            headerCellIsReorderablePropName: "enableColumnReordering",
            headerCellIsSelectedPropName: "isColumnSelected",
            headerCellRenderer: renderHeaderCell,
            indexEnd: indexEnd,
            indexStart: indexStart,
            isCellSelected: this.isCellSelected,
            isGhostIndex: this.isGhostIndex,
            maxSize: maxSize,
            minSize: minSize,
            resizeOrientation: _resizeHandle.Orientation.VERTICAL,
            selectedRegions: [],
            toRegion: this.toRegion,
            wrapCells: this.wrapCells
        }, spreadableProps));
    };
    ColumnHeader1.defaultProps = {
        isReorderable: false,
        isResizable: true,
        loading: false
    };
    return ColumnHeader1;
}(_react.Component);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","../common/classes":"76ljs","../common/index":"kdBMl","../interactions/resizeHandle":"jMlCL","../regions":"8S4uE","./columnHeaderCell":"2aZF9","./header":"23PjI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"23PjI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Header", ()=>Header
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
var _utils = require("../common/utils");
var _dragEvents = require("../interactions/dragEvents");
var _reorderable = require("../interactions/reorderable");
var _resizable = require("../interactions/resizable");
var _selectable = require("../interactions/selectable");
var _regions = require("../regions");
var SHALLOW_COMPARE_PROP_KEYS_DENYLIST = [
    "focusedCell",
    "selectedRegions"
];
var Header = /** @class */ function(_super) {
    _tslib.__extends(Header1, _super);
    function Header1(props) {
        var _this = _super.call(this, props) || this;
        _this.activationIndex = null;
        _this.convertEventToIndex = function(event) {
            var coord = _this.props.getMouseCoordinate(event);
            return _this.props.convertPointToIndex(coord);
        };
        _this.locateClick = function(event) {
            _this.activationIndex = _this.convertEventToIndex(event);
            return _this.props.toRegion(_this.activationIndex);
        };
        _this.locateDragForSelection = function(_event, coords, returnEndOnly) {
            if (returnEndOnly === void 0) returnEndOnly = false;
            var coord = _this.props.getDragCoordinate(coords.current);
            var indexEnd = _this.props.convertPointToIndex(coord);
            if (returnEndOnly) return _this.props.toRegion(indexEnd);
            else if (_this.activationIndex !== null) return _this.props.toRegion(_this.activationIndex, indexEnd);
            else // invalid state, cannot end a drag before starting one
            return {};
        };
        _this.locateDragForReordering = function(_event, coords) {
            var coord = _this.props.getDragCoordinate(coords.current);
            var guideIndex = _this.props.convertPointToIndex(coord, true);
            return guideIndex < 0 ? undefined : guideIndex;
        };
        _this.renderCells = function() {
            var _a = _this.props, indexStart = _a.indexStart, indexEnd = _a.indexEnd;
            var cells = [];
            for(var index = indexStart; index <= indexEnd; index++){
                var cell = _this.renderNewCell(index);
                if (cell != null) cells.push(cell);
            }
            return cells;
        };
        _this.renderNewCell = function(index) {
            var extremaClasses = _this.props.getCellExtremaClasses(index, _this.props.indexEnd);
            var renderer = _this.props.isGhostIndex(index) ? _this.props.ghostCellRenderer : _this.renderCell;
            return renderer(index, extremaClasses);
        };
        _this.renderCell = function(index, extremaClasses) {
            var _a1, _b1;
            var _c = _this.props, getIndexClass = _c.getIndexClass, selectedRegions = _c.selectedRegions;
            var cell = _this.props.headerCellRenderer(index);
            if (cell == null) return null;
            var isLoading = cell.props.loading != null ? cell.props.loading : _this.props.loading;
            var isSelected = _this.props.isCellSelected(index);
            var isEntireCellTargetReorderable = _this.isEntireCellTargetReorderable(index);
            var className = _classnamesDefault.default(extremaClasses, (_a1 = {}, _a1[_classes.TABLE_HEADER_REORDERABLE] = isEntireCellTargetReorderable, _a1), _this.props.getCellIndexClass(index), cell.props.className);
            var cellProps = (_b1 = {
                className: className,
                index: index
            }, _b1[_this.props.headerCellIsSelectedPropName] = isSelected, _b1[_this.props.headerCellIsReorderablePropName] = isEntireCellTargetReorderable, _b1.loading = isLoading, _b1.reorderHandle = _this.maybeRenderReorderHandle(index), _b1);
            var modifiedHandleSizeChanged = function(size) {
                return _this.props.handleSizeChanged(index, size);
            };
            var modifiedHandleResizeEnd = function(size) {
                return _this.props.handleResizeEnd(index, size);
            };
            var modifiedHandleResizeHandleDoubleClick = function() {
                var _a, _b;
                return (_b = (_a = _this.props).handleResizeDoubleClick) === null || _b === void 0 ? void 0 : _b.call(_a, index);
            };
            var baseChildren = _react.createElement(_selectable.DragSelectable, {
                enableMultipleSelection: _this.props.enableMultipleSelection,
                disabled: _this.isDragSelectableDisabled,
                focusedCell: _this.props.focusedCell,
                ignoredSelectors: [
                    ".".concat(_classes.TABLE_REORDER_HANDLE_TARGET)
                ],
                key: getIndexClass(index),
                locateClick: _this.locateClick,
                locateDrag: _this.locateDragForSelection,
                onFocusedCell: _this.props.onFocusedCell,
                onSelection: _this.handleDragSelectableSelection,
                onSelectionEnd: _this.handleDragSelectableSelectionEnd,
                selectedRegions: selectedRegions,
                selectedRegionTransform: _this.props.selectedRegionTransform
            }, _react.createElement(_resizable.Resizable, {
                isResizable: _this.props.isResizable,
                maxSize: _this.props.maxSize,
                minSize: _this.props.minSize,
                // eslint-disable-next-line react/jsx-no-bind
                onDoubleClick: modifiedHandleResizeHandleDoubleClick,
                onLayoutLock: _this.props.onLayoutLock,
                // eslint-disable-next-line react/jsx-no-bind
                onResizeEnd: modifiedHandleResizeEnd,
                // eslint-disable-next-line react/jsx-no-bind
                onSizeChanged: modifiedHandleSizeChanged,
                orientation: _this.props.resizeOrientation,
                size: _this.props.getCellSize(index)
            }, _react.cloneElement(cell, cellProps)));
            return _this.isReorderHandleEnabled() ? baseChildren // reordering will be handled by interacting with the reorder handle
             : _this.wrapInDragReorderable(index, baseChildren, _this.isDragReorderableDisabled);
        };
        _this.handleDragSelectableSelection = function(selectedRegions) {
            _this.props.onSelection(selectedRegions);
            _this.setState({
                hasValidSelection: false
            });
        };
        _this.handleDragSelectableSelectionEnd = function() {
            _this.activationIndex = null; // not strictly required, but good practice
            _this.setState({
                hasValidSelection: true
            });
        };
        _this.isDragSelectableDisabled = function(event) {
            if (_dragEvents.DragEvents.isAdditive(event)) // if the meta/ctrl key was pressed, we want to forcefully ignore
            // reordering interactions and prioritize drag-selection
            // interactions (e.g. to make it possible to deselect a row).
            return false;
            var cellIndex = _this.convertEventToIndex(event);
            return _this.isEntireCellTargetReorderable(cellIndex);
        };
        _this.isDragReorderableDisabled = function(event) {
            var isSelectionEnabled = !_this.isDragSelectableDisabled(event);
            if (isSelectionEnabled) // if drag-selection is enabled, we don't want drag-reordering
            // interactions to compete. otherwise, a mouse-drag might both expand a
            // selection and reorder the same selection simultaneously - confusing!
            return true;
            var cellIndex = _this.convertEventToIndex(event);
            return !_this.isEntireCellTargetReorderable(cellIndex);
        };
        _this.isEntireCellTargetReorderable = function(index) {
            var _a = _this.props, _b = _a.isReorderable, isReorderable = _b === void 0 ? false : _b, selectedRegions = _a.selectedRegions;
            // although reordering may be generally enabled for this row/column (via props.isReorderable), the
            // row/column shouldn't actually become reorderable from a user perspective until a few other
            // conditions are true:
            return isReorderable && // the row/column should be the only selection (or it should be part of the only selection),
            // because reordering multiple disjoint row/column selections is a UX morass with no clear best
            // behavior.
            _this.props.isCellSelected(index) && _this.state.hasValidSelection && _regions.Regions.getRegionCardinality(selectedRegions[0]) === _this.props.fullRegionCardinality && // selected regions can be updated during mousedown+drag and before mouseup; thus, we
            // add a final check to make sure we don't enable reordering until the selection
            // interaction is complete. this prevents one click+drag interaction from triggering
            // both selection and reordering behavior.
            selectedRegions.length === 1 && // columns are reordered via a reorder handle, so drag-selection needn't be disabled
            !_this.isReorderHandleEnabled();
        };
        _this.state = {
            hasValidSelection: _this.isSelectedRegionsControlledAndNonEmpty(props)
        };
        return _this;
    }
    Header1.prototype.componentDidUpdate = function(_, prevState) {
        var nextHasValidSection = this.isSelectedRegionsControlledAndNonEmpty(this.props);
        if (prevState.hasValidSelection !== nextHasValidSection) this.setState({
            hasValidSelection: nextHasValidSection
        });
    };
    Header1.prototype.shouldComponentUpdate = function(nextProps, nextState) {
        return !_core.Utils.shallowCompareKeys(this.state, nextState) || !_core.Utils.shallowCompareKeys(this.props, nextProps, {
            exclude: SHALLOW_COMPARE_PROP_KEYS_DENYLIST
        }) || !_core.Utils.deepCompareKeys(this.props, nextProps, SHALLOW_COMPARE_PROP_KEYS_DENYLIST);
    };
    Header1.prototype.render = function() {
        return this.props.wrapCells(this.renderCells());
    };
    Header1.prototype.isSelectedRegionsControlledAndNonEmpty = function(props) {
        if (props === void 0) props = this.props;
        return props.selectedRegions != null && props.selectedRegions.length > 0;
    };
    Header1.prototype.isReorderHandleEnabled = function() {
        // the reorder handle can only appear in the column interaction bar
        return this.isColumnHeader() && this.props.isReorderable;
    };
    Header1.prototype.maybeRenderReorderHandle = function(index) {
        return !this.isReorderHandleEnabled() ? undefined : this.wrapInDragReorderable(index, _react.createElement("div", {
            className: _classes.TABLE_REORDER_HANDLE_TARGET
        }, _react.createElement("div", {
            className: _classnamesDefault.default(_classes.TABLE_REORDER_HANDLE, _utils.CLASSNAME_EXCLUDED_FROM_TEXT_MEASUREMENT)
        }, _react.createElement(_core.Icon, {
            icon: "drag-handle-vertical",
            title: "Press down to drag"
        }))), false);
    };
    Header1.prototype.isColumnHeader = function() {
        return this.props.fullRegionCardinality === _regions.RegionCardinality.FULL_COLUMNS;
    };
    Header1.prototype.wrapInDragReorderable = function(index, children, disabled) {
        return _react.createElement(_reorderable.DragReorderable, {
            disabled: disabled,
            key: this.props.getIndexClass(index),
            locateClick: this.locateClick,
            locateDrag: this.locateDragForReordering,
            onReordered: this.props.onReordered,
            onReordering: this.props.onReordering,
            onSelection: this.props.onSelection,
            onFocusedCell: this.props.onFocusedCell,
            selectedRegions: this.props.selectedRegions,
            toRegion: this.props.toRegion
        }, children);
    };
    return Header1;
}(_react.Component);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","../common/utils":"ee8Nq","../interactions/dragEvents":"h0G2f","../interactions/reorderable":"aQE2i","../interactions/resizable":"4GMWv","../interactions/selectable":"lssvA","../regions":"8S4uE","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"aQE2i":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DragReorderable", ()=>DragReorderable
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _utils = require("../common/utils");
var _regions = require("../regions");
var _draggable = require("./draggable");
var DragReorderable = /** @class */ function(_super) {
    _tslib.__extends(DragReorderable1, _super);
    function DragReorderable1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selectedRegionLength = 0;
        _this.handleActivate = function(event) {
            if (_this.shouldIgnoreMouseDown(event)) return false;
            var region = _this.props.locateClick(event);
            if (!_regions.Regions.isValid(region)) return false;
            var cardinality = _regions.Regions.getRegionCardinality(region);
            var isColumnHeader = cardinality === _regions.RegionCardinality.FULL_COLUMNS;
            var isRowHeader = cardinality === _regions.RegionCardinality.FULL_ROWS;
            if (!isColumnHeader && !isRowHeader) return false;
            var _a = _this.props.selectedRegions, selectedRegions = _a === void 0 ? [] : _a;
            var selectedRegionIndex = _regions.Regions.findContainingRegion(selectedRegions, region);
            if (selectedRegionIndex >= 0) {
                var selectedRegion = selectedRegions[selectedRegionIndex];
                if (_regions.Regions.getRegionCardinality(selectedRegion) !== cardinality) // ignore FULL_TABLE selections
                return false;
                // cache for easy access later in the lifecycle
                var selectedInterval = isRowHeader ? selectedRegion.rows : selectedRegion.cols;
                _this.selectedRegionStartIndex = selectedInterval[0];
                // add 1 because the selected interval is inclusive, which simple subtraction doesn't
                // account for (e.g. in a FULL_COLUMNS range from 3 to 6, 6 - 3 = 3, but the selection
                // actually includes four columns: 3, 4, 5, and 6)
                _this.selectedRegionLength = selectedInterval[1] - selectedInterval[0] + 1;
            } else {
                // select the new region to avoid complex and unintuitive UX w/r/t the existing selection
                _this.maybeSelectRegion(region);
                var regionRange = isRowHeader ? region.rows : region.cols;
                _this.selectedRegionStartIndex = regionRange[0];
                _this.selectedRegionLength = regionRange[1] - regionRange[0] + 1;
            }
            return true;
        };
        _this.handleDragMove = function(event, coords) {
            var oldIndex = _this.selectedRegionStartIndex;
            var guideIndex = _this.props.locateDrag(event, coords);
            if (oldIndex === undefined || guideIndex === undefined) return;
            var length = _this.selectedRegionLength;
            var reorderedIndex = _utils.Utils.guideIndexToReorderedIndex(oldIndex, guideIndex, length);
            _this.props.onReordering(oldIndex, reorderedIndex, length);
        };
        _this.handleDragEnd = function(event, coords) {
            var oldIndex = _this.selectedRegionStartIndex;
            var guideIndex = _this.props.locateDrag(event, coords);
            if (oldIndex === undefined || guideIndex === undefined) return;
            var length = _this.selectedRegionLength;
            var reorderedIndex = _utils.Utils.guideIndexToReorderedIndex(oldIndex, guideIndex, length);
            _this.props.onReordered(oldIndex, reorderedIndex, length);
            // the newly reordered region becomes the only selection
            var newRegion = _this.props.toRegion(reorderedIndex, reorderedIndex + length - 1);
            _this.maybeSelectRegion(newRegion);
            // resetting is not strictly required, but it's cleaner
            _this.selectedRegionStartIndex = undefined;
            _this.selectedRegionLength = 0;
        };
        return _this;
    }
    DragReorderable1.prototype.render = function() {
        var draggableProps = this.getDraggableProps();
        return _react.createElement(_draggable.Draggable, _tslib.__assign({}, draggableProps, {
            preventDefault: false
        }), this.props.children);
    };
    DragReorderable1.prototype.getDraggableProps = function() {
        return this.props.onReordered == null ? {} : {
            onActivate: this.handleActivate,
            onDragEnd: this.handleDragEnd,
            onDragMove: this.handleDragMove
        };
    };
    DragReorderable1.prototype.shouldIgnoreMouseDown = function(event) {
        var disabled = this.props.disabled;
        var isDisabled = _core.Utils.isFunction(disabled) ? disabled === null || disabled === void 0 ? void 0 : disabled(event) : disabled;
        return !_utils.Utils.isLeftClick(event) || isDisabled;
    };
    DragReorderable1.prototype.maybeSelectRegion = function(region) {
        var nextSelectedRegions = [
            region
        ];
        if (!_core.Utils.deepCompareKeys(nextSelectedRegions, this.props.selectedRegions)) {
            this.props.onSelection(nextSelectedRegions);
            // move the focused cell into the newly selected region
            this.props.onFocusedCell(_tslib.__assign(_tslib.__assign({}, _regions.Regions.getFocusCellCoordinatesFromRegion(region)), {
                focusSelectionIndex: 0
            }));
        }
    };
    DragReorderable1.defaultProps = {
        selectedRegions: []
    };
    return DragReorderable1;
}(_react.PureComponent);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/utils":"ee8Nq","../regions":"8S4uE","./draggable":"3iPrI","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4GMWv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Resizable", ()=>Resizable
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _index = require("../common/index");
var _resizeHandle = require("./resizeHandle");
var Resizable = /** @class */ function(_super) {
    _tslib.__extends(Resizable1, _super);
    function Resizable1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            size: _this.props.size,
            unclampedSize: _this.props.size
        };
        _this.onResizeMove = function(_offset, delta) {
            var _a, _b;
            _this.offsetSize(delta);
            (_b = (_a = _this.props).onSizeChanged) === null || _b === void 0 || _b.call(_a, _this.state.size);
        };
        _this.onResizeEnd = function(_offset) {
            var _a, _b;
            // reset "unclamped" size on end
            _this.setState({
                unclampedSize: _this.state.size
            });
            (_b = (_a = _this.props).onResizeEnd) === null || _b === void 0 || _b.call(_a, _this.state.size);
        };
        return _this;
    }
    Resizable1.getDerivedStateFromProps = function(_a, prevState) {
        var size = _a.size;
        if (prevState == null) return {
            size: size,
            unclampedSize: size
        };
        return null;
    };
    Resizable1.prototype.componentDidUpdate = function(prevProps) {
        if (prevProps.size !== this.props.size) this.setState(Resizable1.getDerivedStateFromProps(this.props, null));
    };
    Resizable1.prototype.render = function() {
        var child = _react.Children.only(this.props.children);
        var style = _tslib.__assign(_tslib.__assign({}, child.props.style), this.getStyle());
        if (this.props.isResizable === false) return _react.cloneElement(child, {
            style: style
        });
        var resizeHandle = this.renderResizeHandle();
        return _react.cloneElement(child, {
            style: style,
            resizeHandle: resizeHandle
        });
    };
    Resizable1.prototype.renderResizeHandle = function() {
        var _a = this.props, onLayoutLock = _a.onLayoutLock, onDoubleClick = _a.onDoubleClick, orientation = _a.orientation;
        return _react.createElement(_resizeHandle.ResizeHandle, {
            key: "resize-handle",
            onDoubleClick: onDoubleClick,
            onLayoutLock: onLayoutLock,
            onResizeEnd: this.onResizeEnd,
            onResizeMove: this.onResizeMove,
            orientation: orientation
        });
    };
    /**
     * Returns the CSS style to apply to the child element given the state's
     * size value.
     */ Resizable1.prototype.getStyle = function() {
        if (this.props.orientation === _resizeHandle.Orientation.VERTICAL) return {
            flexBasis: "".concat(this.state.size, "px"),
            minWidth: "0px",
            width: "".concat(this.state.size, "px")
        };
        else return {
            flexBasis: "".concat(this.state.size, "px"),
            height: "".concat(this.state.size, "px"),
            minHeight: "0px"
        };
    };
    Resizable1.prototype.offsetSize = function(offset) {
        var unclampedSize = this.state.unclampedSize + offset;
        this.setState({
            size: _index.Utils.clamp(unclampedSize, this.props.minSize, this.props.maxSize),
            unclampedSize: unclampedSize
        });
    };
    Resizable1.defaultProps = {
        isResizable: true,
        minSize: 0
    };
    return Resizable1;
}(_core.AbstractPureComponent2);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/index":"kdBMl","./resizeHandle":"jMlCL","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ekwRV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RowHeader", ()=>RowHeader
);
/**
 * A default implementation of `IRowHeaderRenderer` that displays 1-indexed
 * numbers for each row.
 */ parcelHelpers.export(exports, "renderDefaultRowHeader", ()=>renderDefaultRowHeader
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _classes = require("../common/classes");
var _resizeHandle = require("../interactions/resizeHandle");
var _regions = require("../regions");
var _header = require("./header");
var _rowHeaderCell = require("./rowHeaderCell");
var RowHeader = /** @class */ function(_super) {
    _tslib.__extends(RowHeader1, _super);
    function RowHeader1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.wrapCells = function(cells) {
            var _a = _this.props, rowIndexStart = _a.rowIndexStart, grid = _a.grid;
            var tableHeight = grid.getRect().height;
            var scrollTopCorrection = _this.props.grid.getCumulativeHeightBefore(rowIndexStart);
            var style = {
                // reduce the height to clamp the sliding window as we approach the final headers; otherwise,
                // we'll have tons of useless whitespace at the end.
                height: tableHeight - scrollTopCorrection,
                // only header cells in view will render, but we need to reposition them to stay in view
                // as we scroll vertically.
                transform: "translateY(".concat(scrollTopCorrection || 0, "px)")
            };
            // add a wrapper set to the full-table height to ensure container styles stretch from the first
            // cell all the way to the last
            return _react.createElement("div", {
                style: {
                    height: tableHeight
                }
            }, _react.createElement("div", {
                className: _classes.TABLE_ROW_HEADERS_CELLS_CONTAINER,
                style: style
            }, cells));
        };
        _this.convertPointToRow = function(clientXOrY, useMidpoint) {
            var _a;
            return (_a = _this.props.locator) === null || _a === void 0 ? void 0 : _a.convertPointToRow(clientXOrY, useMidpoint);
        };
        _this.getCellExtremaClasses = function(index, indexEnd) {
            return _this.props.grid.getExtremaClasses(index, 0, indexEnd, 1);
        };
        _this.getRowHeight = function(index) {
            return _this.props.grid.getRowRect(index).height;
        };
        _this.getDragCoordinate = function(clientCoords) {
            return clientCoords[1]; // y-coordinate
        };
        _this.getMouseCoordinate = function(event) {
            return event.clientY;
        };
        _this.handleResizeEnd = function(index, size) {
            _this.props.onResizeGuide(null);
            _this.props.onRowHeightChanged(index, size);
        };
        _this.handleSizeChanged = function(index, size) {
            var rect = _this.props.grid.getRowRect(index);
            _this.props.onResizeGuide([
                rect.top + size
            ]);
        };
        _this.isCellSelected = function(index) {
            return _regions.Regions.hasFullRow(_this.props.selectedRegions, index);
        };
        _this.isGhostIndex = function(index) {
            return _this.props.grid.isGhostIndex(index, -1);
        };
        _this.renderGhostCell = function(index, extremaClasses) {
            var rect = _this.props.grid.getGhostCellRect(index, 0);
            return _react.createElement(_rowHeaderCell.RowHeaderCell, {
                className: _classnamesDefault.default(extremaClasses),
                index: index,
                key: _classes.rowIndexClass(index),
                loading: _this.props.loading,
                style: {
                    height: "".concat(rect.height, "px")
                }
            });
        };
        _this.toRegion = function(index1, index2) {
            // the `this` value is messed up for Regions.row, so we have to have a wrapper function here
            return _regions.Regions.row(index1, index2);
        };
        return _this;
    }
    RowHeader1.prototype.componentDidMount = function() {
        var _a, _b;
        (_b = (_a = this.props).onMount) === null || _b === void 0 || _b.call(_a, "row");
    };
    RowHeader1.prototype.render = function() {
        var _a = this.props, // from IRowHeaderProps
        onRowHeightChanged = _a.onRowHeightChanged, rowHeaderCellRenderer = _a.rowHeaderCellRenderer, // from IRowHeights
        minSize = _a.minRowHeight, maxSize = _a.maxRowHeight, defaultRowHeight = _a.defaultRowHeight, // from IRowIndices
        indexStart = _a.rowIndexStart, indexEnd = _a.rowIndexEnd, // from IHeaderProps
        spreadableProps = _tslib.__rest(_a, [
            "onRowHeightChanged",
            "rowHeaderCellRenderer",
            "minRowHeight",
            "maxRowHeight",
            "defaultRowHeight",
            "rowIndexStart",
            "rowIndexEnd"
        ]);
        return _react.createElement(_header.Header, _tslib.__assign({
            convertPointToIndex: this.convertPointToRow,
            fullRegionCardinality: _regions.RegionCardinality.FULL_ROWS,
            getCellExtremaClasses: this.getCellExtremaClasses,
            getCellIndexClass: _classes.rowCellIndexClass,
            getCellSize: this.getRowHeight,
            getDragCoordinate: this.getDragCoordinate,
            getIndexClass: _classes.rowIndexClass,
            getMouseCoordinate: this.getMouseCoordinate,
            ghostCellRenderer: this.renderGhostCell,
            handleResizeEnd: this.handleResizeEnd,
            handleSizeChanged: this.handleSizeChanged,
            headerCellIsReorderablePropName: "enableRowReordering",
            headerCellIsSelectedPropName: "isRowSelected",
            headerCellRenderer: rowHeaderCellRenderer,
            indexEnd: indexEnd,
            indexStart: indexStart,
            isCellSelected: this.isCellSelected,
            isGhostIndex: this.isGhostIndex,
            maxSize: maxSize,
            minSize: minSize,
            resizeOrientation: _resizeHandle.Orientation.HORIZONTAL,
            selectedRegions: [],
            toRegion: this.toRegion,
            wrapCells: this.wrapCells
        }, spreadableProps));
    };
    RowHeader1.defaultProps = {
        rowHeaderCellRenderer: renderDefaultRowHeader
    };
    return RowHeader1;
}(_react.Component);
function renderDefaultRowHeader(rowIndex) {
    return _react.createElement(_rowHeaderCell.RowHeaderCell, {
        index: rowIndex,
        name: "".concat(rowIndex + 1)
    });
}

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","../common/classes":"76ljs","../interactions/resizeHandle":"jMlCL","../regions":"8S4uE","./header":"23PjI","./rowHeaderCell":"fXVTu","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"ag3P3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ResizeSensor", ()=>ResizeSensor
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _classes = require("../common/classes");
/**
 * Efficiently detect when an HTMLElement is resized.
 *
 * Attaches an invisible "resize-sensor" div to the element. Then it checks
 * the element's offsetWidth and offsetHeight whenever a scroll event is
 * triggered on the "resize-sensor" children. These events are further
 * debounced using requestAnimationFrame.
 *
 * Inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js
 */ var ResizeSensor = /** @class */ function() {
    function ResizeSensor1() {}
    ResizeSensor1.attach = function(element, callback) {
        var lifecycle = ResizeSensor1.debounce(callback);
        var resizeSensor = document.createElement("div");
        resizeSensor.className = _classes.TABLE_RESIZE_SENSOR;
        resizeSensor.style.cssText = ResizeSensor1.RESIZE_SENSOR_STYLE;
        resizeSensor.innerHTML = ResizeSensor1.RESIZE_SENSOR_HTML;
        element.appendChild(resizeSensor);
        if (getComputedStyle(element, null).getPropertyValue("position") === "static") element.style.position = "relative";
        var expand = resizeSensor.childNodes[0];
        var expandChild = expand.childNodes[0];
        var shrink = resizeSensor.childNodes[1];
        var reset = function() {
            expandChild.style.width = "100000px";
            expandChild.style.height = "100000px";
            expand.scrollLeft = 100000;
            expand.scrollTop = 100000;
            shrink.scrollLeft = 100000;
            shrink.scrollTop = 100000;
        };
        reset();
        var lastWidth;
        var lastHeight;
        var onScroll = function() {
            if (element == null) return;
            var currentWidth = element.offsetWidth;
            var currentHeight = element.offsetHeight;
            if (currentWidth !== lastWidth || currentHeight !== lastHeight) {
                lastWidth = currentWidth;
                lastHeight = currentHeight;
                lifecycle.trigger();
            }
            reset();
        };
        expand.addEventListener("scroll", onScroll);
        shrink.addEventListener("scroll", onScroll);
        return function() {
            element.removeChild(resizeSensor);
            lifecycle.cancelled = true;
        };
    };
    ResizeSensor1.debounce = function(callback) {
        var scope = {
            cancelled: false,
            trigger: function() {
                if (scope.triggered || scope.cancelled) return;
                scope.triggered = true;
                requestAnimationFrame(function() {
                    scope.triggered = false;
                    if (!scope.cancelled) callback();
                });
            },
            triggered: false
        };
        return scope;
    };
    ResizeSensor1.RESIZE_SENSOR_STYLE = "position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;";
    ResizeSensor1.RESIZE_SENSOR_HTML = "<div class=\"".concat(_classes.TABLE_RESIZE_SENSOR_EXPAND, "\"\n        style=\"").concat(ResizeSensor1.RESIZE_SENSOR_STYLE, "\"><div style=\"position: absolute; left: 0; top: 0; transition: 0s;\"\n        ></div></div><div class=\"").concat(_classes.TABLE_RESIZE_SENSOR_SHRINK, "\" style=\"").concat(ResizeSensor1.RESIZE_SENSOR_STYLE, "\"\n        ><div style=\"position: absolute; left: 0; top: 0; transition: 0s; width: 200%; height: 200%;\"></div></div>");
    return ResizeSensor1;
}();

},{"../common/classes":"76ljs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"1bx1t":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "GuideLayer", ()=>GuideLayer
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
var GuideLayer = /** @class */ function(_super) {
    _tslib.__extends(GuideLayer1, _super);
    function GuideLayer1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderVerticalGuide = function(offset, index) {
            var _a;
            var style = {
                left: "".concat(offset, "px")
            };
            var className = _classnamesDefault.default(_classes.TABLE_OVERLAY, _classes.TABLE_VERTICAL_GUIDE, (_a = {}, _a["".concat(_classes.TABLE_VERTICAL_GUIDE, "-flush-left")] = offset === 0, _a));
            return _react.createElement("div", {
                className: className,
                key: index,
                style: style
            });
        };
        _this.renderHorizontalGuide = function(offset, index) {
            var _a;
            var style = {
                top: "".concat(offset, "px")
            };
            var className = _classnamesDefault.default(_classes.TABLE_OVERLAY, _classes.TABLE_HORIZONTAL_GUIDE, (_a = {}, _a["".concat(_classes.TABLE_HORIZONTAL_GUIDE, "-flush-top")] = offset === 0, _a));
            return _react.createElement("div", {
                className: className,
                key: index,
                style: style
            });
        };
        return _this;
    }
    GuideLayer1.prototype.shouldComponentUpdate = function(nextProps) {
        if (this.props.className !== nextProps.className) return true;
        // shallow-comparing guide arrays leads to tons of unnecessary re-renders, so we check the
        // array contents explicitly.
        return !_core.Utils.arraysEqual(this.props.verticalGuides, nextProps.verticalGuides) || !_core.Utils.arraysEqual(this.props.horizontalGuides, nextProps.horizontalGuides);
    };
    GuideLayer1.prototype.render = function() {
        var _a = this.props, verticalGuides = _a.verticalGuides, horizontalGuides = _a.horizontalGuides, className = _a.className;
        var verticals = verticalGuides == null ? undefined : verticalGuides.map(this.renderVerticalGuide);
        var horizontals = horizontalGuides == null ? undefined : horizontalGuides.map(this.renderHorizontalGuide);
        return _react.createElement("div", {
            className: _classnamesDefault.default(className, _classes.TABLE_OVERLAY_LAYER)
        }, verticals, horizontals);
    };
    return GuideLayer1;
}(_react.Component);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bnd0x":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RegionLayer", ()=>RegionLayer
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
var _regions = require("../regions");
// don't include "regions" or "regionStyles" in here, because they can't be shallowly compared
var UPDATE_PROPS_KEYS = [
    "className"
];
var RegionLayer = /** @class */ function(_super) {
    _tslib.__extends(RegionLayer1, _super);
    function RegionLayer1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderRegion = function(_region, index) {
            var _a = _this.props, className = _a.className, regionStyles = _a.regionStyles;
            return _react.createElement("div", {
                className: _classnamesDefault.default(_classes.TABLE_OVERLAY, _classes.TABLE_REGION, className),
                key: index,
                style: regionStyles === undefined ? undefined : regionStyles[index]
            });
        };
        return _this;
    }
    RegionLayer1.prototype.shouldComponentUpdate = function(nextProps) {
        var _a, _b, _c, _d;
        // shallowly comparable props like "className" tend not to change in the default table
        // implementation, so do that check last with hope that we return earlier and avoid it
        // altogether.
        return !_core.Utils.arraysEqual((_a = this.props.regions) !== null && _a !== void 0 ? _a : [], (_b = nextProps.regions) !== null && _b !== void 0 ? _b : [], _regions.Regions.regionsEqual) || !_core.Utils.arraysEqual((_c = this.props.regionStyles) !== null && _c !== void 0 ? _c : [], (_d = nextProps.regionStyles) !== null && _d !== void 0 ? _d : [], _core.Utils.shallowCompareKeys) || !_core.Utils.shallowCompareKeys(this.props, nextProps, {
            include: UPDATE_PROPS_KEYS
        });
    };
    RegionLayer1.prototype.render = function() {
        return _react.createElement("div", {
            className: _classes.TABLE_OVERLAY_LAYER
        }, this.renderRegionChildren());
    };
    RegionLayer1.prototype.renderRegionChildren = function() {
        var regions = this.props.regions;
        if (regions == null) return undefined;
        return regions.map(this.renderRegion);
    };
    return RegionLayer1;
}(_react.Component);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","../regions":"8S4uE","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"c6liI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "QuadrantType", ()=>QuadrantType
);
parcelHelpers.export(exports, "TableQuadrant", ()=>TableQuadrant
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
var _errors = require("../common/errors");
var QuadrantType;
(function(QuadrantType1) {
    /**
     * The main quadrant beneath any frozen rows or columns.
     */ QuadrantType1["MAIN"] = "main";
    /**
     * The top quadrant, containing column headers and frozen rows.
     */ QuadrantType1["TOP"] = "top";
    /**
     * The left quadrant, containing row headers and frozen columns.
     */ QuadrantType1["LEFT"] = "left";
    /**
     * The top-left quadrant, containing the headers and cells common to both
     * the frozen columns and frozen rows.
     */ QuadrantType1["TOP_LEFT"] = "top-left";
})(QuadrantType || (QuadrantType = {}));
var TableQuadrant = /** @class */ function(_super) {
    _tslib.__extends(TableQuadrant1, _super);
    function TableQuadrant1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TableQuadrant1.prototype.render = function() {
        var _a, _b, _c, _d, _e, _f;
        var _g = this.props, grid = _g.grid, enableRowHeader = _g.enableRowHeader, quadrantType = _g.quadrantType, bodyRenderer = _g.bodyRenderer;
        var showFrozenRowsOnly = quadrantType === QuadrantType.TOP || quadrantType === QuadrantType.TOP_LEFT;
        var showFrozenColumnsOnly = quadrantType === QuadrantType.LEFT || quadrantType === QuadrantType.TOP_LEFT;
        var className = _classnamesDefault.default(_classes.TABLE_QUADRANT, this.getQuadrantCssClass(), this.props.className);
        var maybeMenu = enableRowHeader && ((_b = (_a = this.props).menuRenderer) === null || _b === void 0 ? void 0 : _b.call(_a));
        var maybeRowHeader = enableRowHeader && ((_d = (_c = this.props).rowHeaderCellRenderer) === null || _d === void 0 ? void 0 : _d.call(_c, showFrozenRowsOnly));
        var maybeColumnHeader = (_f = (_e = this.props).columnHeaderCellRenderer) === null || _f === void 0 ? void 0 : _f.call(_e, showFrozenColumnsOnly);
        var body = bodyRenderer(quadrantType, showFrozenRowsOnly, showFrozenColumnsOnly);
        // need to set bottom container size to prevent overlay clipping on scroll
        var bottomContainerStyle = {
            height: grid.getHeight(),
            width: grid.getWidth()
        };
        return _react.createElement("div", {
            className: className,
            style: this.props.style,
            ref: this.props.quadrantRef
        }, _react.createElement("div", {
            className: _classes.TABLE_QUADRANT_SCROLL_CONTAINER,
            ref: this.props.scrollContainerRef,
            onScroll: this.props.onScroll,
            onWheel: this.props.onWheel
        }, _react.createElement("div", {
            className: _classes.TABLE_TOP_CONTAINER
        }, maybeMenu, maybeColumnHeader), _react.createElement("div", {
            className: _classes.TABLE_BOTTOM_CONTAINER,
            style: bottomContainerStyle
        }, maybeRowHeader, _react.createElement("div", {
            className: _classes.TABLE_QUADRANT_BODY_CONTAINER,
            ref: this.props.bodyRef
        }, body))));
    };
    TableQuadrant1.prototype.validateProps = function(nextProps) {
        var quadrantType = nextProps.quadrantType;
        if (nextProps.onScroll != null && quadrantType != null && quadrantType !== QuadrantType.MAIN) console.warn(_errors.QUADRANT_ON_SCROLL_UNNECESSARILY_DEFINED);
    };
    TableQuadrant1.prototype.getQuadrantCssClass = function() {
        switch(this.props.quadrantType){
            case QuadrantType.MAIN:
                return _classes.TABLE_QUADRANT_MAIN;
            case QuadrantType.TOP:
                return _classes.TABLE_QUADRANT_TOP;
            case QuadrantType.LEFT:
                return _classes.TABLE_QUADRANT_LEFT;
            case QuadrantType.TOP_LEFT:
                return _classes.TABLE_QUADRANT_TOP_LEFT;
            default:
                return undefined;
        }
    };
    // we want the user to explicitly pass a quadrantType. define defaultProps as a Partial to avoid
    // declaring that and other required props here.
    TableQuadrant1.defaultProps = {
        enableRowHeader: true
    };
    return TableQuadrant1;
}(_core.AbstractComponent2);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","../common/errors":"9OyVd","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"464PV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TableQuadrantStack", ()=>TableQuadrantStack
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("../common/classes");
var _scrollUtils = require("../common/internal/scrollUtils");
var _utils = require("../common/utils");
var _tableQuadrant = require("./tableQuadrant");
var _tableQuadrantStackCache = require("./tableQuadrantStackCache");
// Used on first render of the top-left and top quadrants to avoid collapsing
// their heights to 0. originally defined in headers/_common.scss
var MIN_COL_HEADER_HEIGHT = 30;
// Used on first render of the top-left and left quadrants to avoid collapsing
// their widths to 0. originally defined in headers/_common.scss
var MIN_ROW_HEADER_WIDTH = 30;
// the debounce delay for updating the view on scroll. elements will be resized
// and rejiggered once scroll has ceased for at least this long, but not before.
var DEFAULT_VIEW_SYNC_DELAY = 500;
// if there are no frozen rows or columns, we still want the quadrant to be 1px
// bigger to reveal the header border. this border leaks into the cell grid to
// ensure that selection overlay borders (e.g.) will be perfectly flush with it.
var QUADRANT_MIN_SIZE = 1;
// a list of props that trigger layout changes. when these props change,
// quadrant views need to be explicitly resynchronized.
var SYNC_TRIGGER_PROP_KEYS = [
    "enableRowHeader",
    "loadingOptions",
    "numFrozenColumns",
    "numFrozenRows",
    "numColumns",
    "numRows",
    "enableColumnInteractionBar",
    "didHeadersMount", 
];
var TableQuadrantStack = /** @class */ function(_super) {
    _tslib.__extends(TableQuadrantStack1, _super);
    // Public
    // ======
    function TableQuadrantStack1(props, context) {
        var _a1, _b1;
        var _this = _super.call(this, props, context) || this;
        // Instance variables
        // ==================
        _this.quadrantRefs = (_a1 = {}, _a1[_tableQuadrant.QuadrantType.MAIN] = {}, _a1[_tableQuadrant.QuadrantType.TOP] = {}, _a1[_tableQuadrant.QuadrantType.LEFT] = {}, _a1[_tableQuadrant.QuadrantType.TOP_LEFT] = {}, _a1);
        _this.quadrantRefHandlers = (_b1 = {}, _b1[_tableQuadrant.QuadrantType.MAIN] = _this.generateQuadrantRefHandlers(_tableQuadrant.QuadrantType.MAIN), _b1[_tableQuadrant.QuadrantType.TOP] = _this.generateQuadrantRefHandlers(_tableQuadrant.QuadrantType.TOP), _b1[_tableQuadrant.QuadrantType.LEFT] = _this.generateQuadrantRefHandlers(_tableQuadrant.QuadrantType.LEFT), _b1[_tableQuadrant.QuadrantType.TOP_LEFT] = _this.generateQuadrantRefHandlers(_tableQuadrant.QuadrantType.TOP_LEFT), _b1);
        // this flag helps us avoid redundant work in the MAIN quadrant's onScroll callback, if the
        // callback was triggered from a manual scrollTop/scrollLeft update within an onWheel.
        _this.wasMainQuadrantScrollTriggeredByWheelEvent = false;
        // Quadrant-specific renderers
        // ===========================
        // Menu
        _this.renderMainQuadrantMenu = function() {
            var _a, _b;
            return (_b = (_a = _this.props).menuRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.MAIN].menu);
        };
        _this.renderTopQuadrantMenu = function() {
            var _a, _b;
            return (_b = (_a = _this.props).menuRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP].menu);
        };
        _this.renderLeftQuadrantMenu = function() {
            var _a, _b;
            return (_b = (_a = _this.props).menuRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.LEFT].menu);
        };
        _this.renderTopLeftQuadrantMenu = function() {
            var _a, _b;
            return (_b = (_a = _this.props).menuRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP_LEFT].menu);
        };
        // Column header
        _this.renderMainQuadrantColumnHeader = function(showFrozenColumnsOnly) {
            var _a, _b;
            var refHandler = _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.MAIN].columnHeader;
            var resizeHandler = _this.handleColumnResizeGuideMain;
            var reorderingHandler = _this.handleColumnsReordering;
            if (refHandler === undefined) return undefined;
            return (_b = (_a = _this.props).columnHeaderRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly);
        };
        _this.renderTopQuadrantColumnHeader = function(showFrozenColumnsOnly) {
            var _a, _b;
            var refHandler = _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP].columnHeader;
            var resizeHandler = _this.handleColumnResizeGuideTop;
            var reorderingHandler = _this.handleColumnsReordering;
            if (refHandler === undefined) return undefined;
            return (_b = (_a = _this.props).columnHeaderRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly);
        };
        _this.renderLeftQuadrantColumnHeader = function(showFrozenColumnsOnly) {
            var _a, _b;
            var refHandler = _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.LEFT].columnHeader;
            var resizeHandler = _this.handleColumnResizeGuideLeft;
            var reorderingHandler = _this.handleColumnsReordering;
            if (refHandler === undefined) return undefined;
            return (_b = (_a = _this.props).columnHeaderRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly);
        };
        _this.renderTopLeftQuadrantColumnHeader = function(showFrozenColumnsOnly) {
            var _a, _b;
            var refHandler = _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP_LEFT].columnHeader;
            var resizeHandler = _this.handleColumnResizeGuideTopLeft;
            var reorderingHandler = _this.handleColumnsReordering;
            if (refHandler === undefined) return undefined;
            return (_b = (_a = _this.props).columnHeaderRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, refHandler, resizeHandler, reorderingHandler, showFrozenColumnsOnly);
        };
        // Row header
        _this.renderMainQuadrantRowHeader = function(showFrozenRowsOnly) {
            var _a, _b;
            var refHandler = _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.MAIN].rowHeader;
            if (refHandler === undefined) return undefined;
            return (_b = (_a = _this.props).rowHeaderRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, refHandler, _this.handleRowResizeGuideMain, _this.handleRowsReordering, showFrozenRowsOnly);
        };
        _this.renderTopQuadrantRowHeader = function(showFrozenRowsOnly) {
            var _a, _b;
            var refHandler = _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP].rowHeader;
            if (refHandler === undefined) return undefined;
            return (_b = (_a = _this.props).rowHeaderRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, refHandler, _this.handleRowResizeGuideTop, _this.handleRowsReordering, showFrozenRowsOnly);
        };
        _this.renderLeftQuadrantRowHeader = function(showFrozenRowsOnly) {
            var _a, _b;
            var refHandler = _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.LEFT].rowHeader;
            if (refHandler === undefined) return undefined;
            return (_b = (_a = _this.props).rowHeaderRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, refHandler, _this.handleRowResizeGuideLeft, _this.handleRowsReordering, showFrozenRowsOnly);
        };
        _this.renderTopLeftQuadrantRowHeader = function(showFrozenRowsOnly) {
            var _a, _b;
            var refHandler = _this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP_LEFT].rowHeader;
            if (refHandler === undefined) return undefined;
            return (_b = (_a = _this.props).rowHeaderRenderer) === null || _b === void 0 ? void 0 : _b.call(_a, refHandler, _this.handleRowResizeGuideTopLeft, _this.handleRowsReordering, showFrozenRowsOnly);
        };
        // Event handlers
        // ==============
        // Scrolling
        // ---------
        _this.handleMainQuadrantScroll = function(event) {
            var _a, _b;
            if (_this.wasMainQuadrantScrollTriggeredByWheelEvent) {
                _this.wasMainQuadrantScrollTriggeredByWheelEvent = false;
                return;
            }
            var mainScrollContainer = _this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].scrollContainer;
            if (mainScrollContainer == null) return;
            // invoke onScroll - which may read current scroll position - before
            // forcing a reflow with upcoming .scroll{Top,Left} setters.
            (_b = (_a = _this.props).onScroll) === null || _b === void 0 || _b.call(_a, event);
            // batch DOM reads here. note that onScroll events don't include deltas
            // like onWheel events do, so we have to read from the DOM directly.
            var nextScrollLeft = mainScrollContainer.scrollLeft;
            var nextScrollTop = mainScrollContainer.scrollTop;
            // with the "scroll" event, scroll offsets are updated prior to the
            // event's firing, so no explicit update needed.
            _this.handleScrollOffsetChange("scrollLeft", nextScrollLeft);
            _this.handleScrollOffsetChange("scrollTop", nextScrollTop);
            // sync less important view stuff when scrolling/wheeling stops.
            _this.syncQuadrantViewsDebounced();
        };
        _this.handleWheel = function(event) {
            var _a, _b;
            // again, let the listener read the current scroll position before we
            // force a reflow by resizing or repositioning stuff.
            (_b = (_a = _this.props).onScroll) === null || _b === void 0 || _b.call(_a, event);
            // this helper performs DOM reads, so do them together before the writes below.
            var nextScrollLeft = _this.getNextScrollOffset("horizontal", event.deltaX);
            var nextScrollTop = _this.getNextScrollOffset("vertical", event.deltaY);
            // update this flag before updating the main quadrant scroll offsets,
            // since we need this set before onScroll fires.
            if (nextScrollLeft != null || nextScrollTop != null) _this.wasMainQuadrantScrollTriggeredByWheelEvent = true;
            // manually update the affected quadrant's scroll position to make sure
            // it stays perfectly in sync with dependent quadrants in each frame.
            // note: these DOM writes are batched together after the reads above.
            if (nextScrollLeft !== undefined) {
                _this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].scrollContainer.scrollLeft = nextScrollLeft;
                _this.handleScrollOffsetChange("scrollLeft", nextScrollLeft);
            }
            if (nextScrollTop !== undefined) {
                _this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].scrollContainer.scrollTop = nextScrollTop;
                _this.handleScrollOffsetChange("scrollTop", nextScrollTop);
            }
            // sync less important view stuff when scrolling/wheeling stops.
            _this.syncQuadrantViewsDebounced();
        };
        _this.getNextScrollOffset = function(direction, delta) {
            var _a = _this.props, grid = _a.grid, isHorizontalScrollDisabled = _a.isHorizontalScrollDisabled, isVerticalScrollDisabled = _a.isVerticalScrollDisabled;
            var isHorizontal = direction === "horizontal";
            var scrollKey = isHorizontal ? "scrollLeft" : "scrollTop";
            var isScrollDisabled = isHorizontal ? isHorizontalScrollDisabled : isVerticalScrollDisabled;
            if (isScrollDisabled) return undefined;
            // measure client size on the first event of the current wheel gesture,
            // then grab cached values on successive events to eliminate DOM reads.
            // requires clearing the cached values in the debounced view-update at
            // the end of the wheel event.
            // ASSUMPTION: the client size won't change during the wheel event.
            var clientSize = isHorizontal ? _this.cache.getScrollContainerClientWidth() : _this.cache.getScrollContainerClientHeight();
            if (clientSize == null) // should trigger only on the first scroll of the wheel gesture.
            // will save client width and height sizes in the cache.
            clientSize = _this.updateScrollContainerClientSize(isHorizontal);
            // By now, the client width and height will have been saved in cache, so
            // they can't be undefined anymore. Also, events can only happen after
            // mount, so we're guaranteed to have measured the header sizes in
            // syncQuadrantViews() by now too, as it's invoked on mount.
            var containerSize = isHorizontal ? _this.cache.getScrollContainerClientWidth() - _this.cache.getRowHeaderWidth() : _this.cache.getScrollContainerClientHeight() - _this.cache.getColumnHeaderHeight();
            var gridSize = isHorizontal ? grid.getWidth() : grid.getHeight();
            var maxScrollOffset = Math.max(0, gridSize - containerSize);
            var currScrollOffset = _this.cache.getScrollOffset(scrollKey);
            var nextScrollOffset = _core.Utils.clamp(currScrollOffset + delta, 0, maxScrollOffset);
            return nextScrollOffset;
        };
        // Resizing
        // --------
        // Columns
        _this.handleColumnResizeGuideMain = function(verticalGuides) {
            _this.invokeColumnResizeHandler(verticalGuides, _tableQuadrant.QuadrantType.MAIN);
        };
        _this.handleColumnResizeGuideTop = function(verticalGuides) {
            _this.invokeColumnResizeHandler(verticalGuides, _tableQuadrant.QuadrantType.TOP);
        };
        _this.handleColumnResizeGuideLeft = function(verticalGuides) {
            _this.invokeColumnResizeHandler(verticalGuides, _tableQuadrant.QuadrantType.LEFT);
        };
        _this.handleColumnResizeGuideTopLeft = function(verticalGuides) {
            _this.invokeColumnResizeHandler(verticalGuides, _tableQuadrant.QuadrantType.TOP_LEFT);
        };
        _this.invokeColumnResizeHandler = function(verticalGuides, quadrantType) {
            var _a, _b;
            var adjustedGuides = _this.adjustVerticalGuides(verticalGuides, quadrantType);
            (_b = (_a = _this.props).handleColumnResizeGuide) === null || _b === void 0 || _b.call(_a, adjustedGuides);
        };
        // Rows
        _this.handleRowResizeGuideMain = function(horizontalGuides) {
            _this.invokeRowResizeHandler(horizontalGuides, _tableQuadrant.QuadrantType.MAIN);
        };
        _this.handleRowResizeGuideTop = function(horizontalGuides) {
            _this.invokeRowResizeHandler(horizontalGuides, _tableQuadrant.QuadrantType.TOP);
        };
        _this.handleRowResizeGuideLeft = function(horizontalGuides) {
            _this.invokeRowResizeHandler(horizontalGuides, _tableQuadrant.QuadrantType.LEFT);
        };
        _this.handleRowResizeGuideTopLeft = function(horizontalGuides) {
            _this.invokeRowResizeHandler(horizontalGuides, _tableQuadrant.QuadrantType.TOP_LEFT);
        };
        _this.invokeRowResizeHandler = function(horizontalGuides, quadrantType) {
            var _a, _b;
            var adjustedGuides = _this.adjustHorizontalGuides(horizontalGuides, quadrantType);
            (_b = (_a = _this.props).handleRowResizeGuide) === null || _b === void 0 || _b.call(_a, adjustedGuides);
        };
        // Reordering
        // ----------
        // Columns
        _this.handleColumnsReordering = function(oldIndex, newIndex, length) {
            var _a, _b;
            var guideIndex = _utils.Utils.reorderedIndexToGuideIndex(oldIndex, newIndex, length);
            var leftOffset = _this.props.grid.getCumulativeWidthBefore(guideIndex);
            var _c = _this.props.numFrozenColumns, numFrozenColumns = _c === void 0 ? 0 : _c;
            var quadrantType = guideIndex <= numFrozenColumns ? _tableQuadrant.QuadrantType.TOP_LEFT : _tableQuadrant.QuadrantType.TOP;
            var verticalGuides = _this.adjustVerticalGuides([
                leftOffset
            ], quadrantType);
            (_b = (_a = _this.props).handleColumnsReordering) === null || _b === void 0 || _b.call(_a, verticalGuides);
        };
        // Rows
        _this.handleRowsReordering = function(oldIndex, newIndex, length) {
            var _a, _b;
            var guideIndex = _utils.Utils.reorderedIndexToGuideIndex(oldIndex, newIndex, length);
            var topOffset = _this.props.grid.getCumulativeHeightBefore(guideIndex);
            var _c = _this.props.numFrozenRows, numFrozenRows = _c === void 0 ? 0 : _c;
            var quadrantType = guideIndex <= numFrozenRows ? _tableQuadrant.QuadrantType.TOP_LEFT : _tableQuadrant.QuadrantType.LEFT;
            var horizontalGuides = _this.adjustHorizontalGuides([
                topOffset
            ], quadrantType);
            (_b = (_a = _this.props).handleRowsReordering) === null || _b === void 0 || _b.call(_a, horizontalGuides);
        };
        // Size syncing
        // ============
        _this.syncQuadrantViewsDebounced = function() {
            var _a;
            var viewSyncDelay = _this.props.viewSyncDelay;
            if (viewSyncDelay < 0) // update synchronously
            _this.syncQuadrantViews();
            else {
                // update asynchronously after a debounced delay
                (_a = _this.cancelPendingViewSync) === null || _a === void 0 || _a.call(_this);
                _this.cancelPendingViewSync = _this.setTimeout(_this.syncQuadrantViews, viewSyncDelay);
            }
        };
        _this.syncQuadrantViews = function() {
            var mainRefs = _this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN];
            var mainScrollContainer = mainRefs.scrollContainer;
            //
            // Reads (batched to avoid DOM thrashing)
            //
            var rowHeaderWidth = _this.measureDesiredRowHeaderWidth();
            var columnHeaderHeight = _this.measureDesiredColumnHeaderHeight();
            var leftQuadrantGridWidth = _this.getSecondaryQuadrantGridSize("width");
            var topQuadrantGridHeight = _this.getSecondaryQuadrantGridSize("height");
            var leftQuadrantWidth = rowHeaderWidth + leftQuadrantGridWidth;
            var topQuadrantHeight = columnHeaderHeight + topQuadrantGridHeight;
            var rightScrollBarWidth = _scrollUtils.measureScrollBarThickness(mainScrollContainer, "vertical");
            var bottomScrollBarHeight = _scrollUtils.measureScrollBarThickness(mainScrollContainer, "horizontal");
            // ensure neither of these measurements confusingly clamps to zero height.
            var adjustedColumnHeaderHeight = _this.maybeIncreaseToMinColHeaderHeight(columnHeaderHeight);
            var adjustedTopQuadrantHeight = _this.maybeIncreaseToMinColHeaderHeight(topQuadrantHeight);
            // Update cache: let's read now whatever values we might need later.
            // prevents unnecessary reflows in the future.
            _this.cache.setRowHeaderWidth(rowHeaderWidth);
            _this.cache.setColumnHeaderHeight(columnHeaderHeight);
            // ...however, we also clear the cached client size, so we can read it
            // again when a new scroll begins. not safe to assume this won't change.
            // TODO: maybe use the ResizeSensor?
            _this.cache.setScrollContainerClientWidth(undefined);
            _this.cache.setScrollContainerClientHeight(undefined);
            //
            // Writes (batched to avoid DOM thrashing)
            //
            // Quadrant-size sync'ing: make the quadrants precisely as big as they
            // need to be to fit their variable-sized headers and/or frozen areas.
            _this.maybesSetQuadrantRowHeaderSizes(rowHeaderWidth);
            _this.maybeSetQuadrantMenuElementSizes(rowHeaderWidth, adjustedColumnHeaderHeight);
            _this.maybeSetQuadrantSizes(leftQuadrantWidth, adjustedTopQuadrantHeight);
            // Scrollbar clearance: tweak the quadrant bottom/right offsets to
            // reveal the MAIN-quadrant scrollbars if they're visible.
            _this.maybeSetQuadrantPositionOffset(_tableQuadrant.QuadrantType.TOP, "right", rightScrollBarWidth);
            _this.maybeSetQuadrantPositionOffset(_tableQuadrant.QuadrantType.LEFT, "bottom", bottomScrollBarHeight);
            // Scroll syncing: sync the scroll offsets of quadrants that may or may
            // not have been around prior to this update.
            _this.maybeSetQuadrantScrollOffset(_tableQuadrant.QuadrantType.LEFT, "scrollTop");
            _this.maybeSetQuadrantScrollOffset(_tableQuadrant.QuadrantType.TOP, "scrollLeft");
        };
        _this.maybeSetQuadrantSizes = function(width, height) {
            _this.maybesSetQuadrantSize(_tableQuadrant.QuadrantType.LEFT, "width", _utils.Utils.clamp(width, MIN_ROW_HEADER_WIDTH));
            _this.maybesSetQuadrantSize(_tableQuadrant.QuadrantType.TOP, "height", _utils.Utils.clamp(height, MIN_COL_HEADER_HEIGHT));
            _this.maybesSetQuadrantSize(_tableQuadrant.QuadrantType.TOP_LEFT, "width", _utils.Utils.clamp(width, MIN_ROW_HEADER_WIDTH));
            _this.maybesSetQuadrantSize(_tableQuadrant.QuadrantType.TOP_LEFT, "height", _utils.Utils.clamp(height, MIN_COL_HEADER_HEIGHT));
        };
        _this.maybesSetQuadrantSize = function(quadrantType, dimension, value) {
            var quadrant = _this.quadrantRefs[quadrantType].quadrant;
            if (quadrant != null) quadrant.style[dimension] = "".concat(value, "px");
        };
        _this.maybeSetQuadrantPositionOffset = function(quadrantType, side, value) {
            var quadrant = _this.quadrantRefs[quadrantType].quadrant;
            if (quadrant != null) quadrant.style[side] = "".concat(value, "px");
        };
        _this.maybesSetQuadrantRowHeaderSizes = function(width) {
            var clampedWidth = _utils.Utils.clamp(width, MIN_ROW_HEADER_WIDTH);
            _this.maybeSetQuadrantRowHeaderSize(_tableQuadrant.QuadrantType.MAIN, clampedWidth);
            _this.maybeSetQuadrantRowHeaderSize(_tableQuadrant.QuadrantType.TOP, clampedWidth);
            _this.maybeSetQuadrantRowHeaderSize(_tableQuadrant.QuadrantType.LEFT, clampedWidth);
            _this.maybeSetQuadrantRowHeaderSize(_tableQuadrant.QuadrantType.TOP_LEFT, clampedWidth);
        };
        _this.maybeSetQuadrantRowHeaderSize = function(quadrantType, width) {
            var rowHeader = _this.quadrantRefs[quadrantType].rowHeader;
            if (rowHeader != null) rowHeader.style.width = "".concat(width, "px");
        };
        _this.maybeSetQuadrantMenuElementSizes = function(width, height) {
            var clampedWidth = _utils.Utils.clamp(width, MIN_ROW_HEADER_WIDTH);
            _this.maybeSetQuadrantMenuElementSize(_tableQuadrant.QuadrantType.MAIN, clampedWidth, height);
            _this.maybeSetQuadrantMenuElementSize(_tableQuadrant.QuadrantType.TOP, clampedWidth, height);
            _this.maybeSetQuadrantMenuElementSize(_tableQuadrant.QuadrantType.LEFT, clampedWidth, height);
            _this.maybeSetQuadrantMenuElementSize(_tableQuadrant.QuadrantType.TOP_LEFT, clampedWidth, height);
        };
        _this.maybeSetQuadrantMenuElementSize = function(quadrantType, width, height) {
            var menu = _this.quadrantRefs[quadrantType].menu;
            if (menu != null) {
                menu.style.width = "".concat(width, "px");
                menu.style.height = "".concat(height, "px");
            }
        };
        _this.maybeSetQuadrantScrollOffset = function(quadrantType, scrollKey, newOffset) {
            var scrollContainer = _this.quadrantRefs[quadrantType].scrollContainer;
            var scrollOffset = newOffset != null ? newOffset : _this.cache.getScrollOffset(scrollKey);
            if (scrollContainer != null) scrollContainer[scrollKey] = scrollOffset;
        };
        _this.handleScrollOffsetChange = function(scrollKey, offset) {
            _this.cache.setScrollOffset(scrollKey, offset);
            var dependentQuadrantType = scrollKey === "scrollLeft" ? _tableQuadrant.QuadrantType.TOP : _tableQuadrant.QuadrantType.LEFT;
            _this.maybeSetQuadrantScrollOffset(dependentQuadrantType, scrollKey);
        };
        // callbacks trigger too frequently unless we throttle scroll and wheel
        // events. declare these functions on the component instance since
        // they're stateful.
        _this.throttledHandleMainQuadrantScroll = _core.Utils.throttleReactEventCallback(_this.handleMainQuadrantScroll);
        _this.throttledHandleWheel = _core.Utils.throttleReactEventCallback(_this.handleWheel);
        _this.cache = new _tableQuadrantStackCache.TableQuadrantStackCache();
        return _this;
    }
    /**
     * Scroll the main quadrant to the specified scroll offset, keeping all other quadrants in sync.
     */ TableQuadrantStack1.prototype.scrollToPosition = function(scrollLeft, scrollTop) {
        var scrollContainer = this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].scrollContainer;
        if (scrollContainer == null) return;
        this.wasMainQuadrantScrollTriggeredByWheelEvent = false;
        // this will trigger the main quadrant's scroll callback below
        scrollContainer.scrollLeft = scrollLeft;
        scrollContainer.scrollTop = scrollTop;
        this.syncQuadrantViews();
    };
    /**
     * Synchronizes quadrant sizes and scroll offsets based on the current
     * column, row, and header sizes. Useful for correcting quadrant sizes after
     * explicitly resizing columns and rows, for instance.
     *
     * Invoking this method imperatively is cheaper than providing columnWidths
     * or rowHeights array props to TableQuadrantStack and forcing it to run
     * expensive array diffs upon every update.
     */ TableQuadrantStack1.prototype.synchronizeQuadrantViews = function() {
        this.syncQuadrantViews();
    };
    TableQuadrantStack1.prototype.componentDidMount = function() {
        this.emitRefs();
        this.syncQuadrantViews();
    };
    TableQuadrantStack1.prototype.componentDidUpdate = function(prevProps) {
        if (// sync'ing quadrant views triggers expensive reflows, so we only call
        // it when layout-affecting props change.
        !_core.Utils.shallowCompareKeys(this.props, prevProps, {
            include: SYNC_TRIGGER_PROP_KEYS
        }) || // in addition to those props, we also care about frozen parts of the grid
        // which may cause the top / left quadrants to change height / width
        this.didFrozenColumnWidthsChange(prevProps) || this.didFrozenRowHeightsChange(prevProps)) {
            this.emitRefs();
            this.syncQuadrantViews();
        }
    };
    TableQuadrantStack1.prototype.render = function() {
        var _a = this.props, grid = _a.grid, enableRowHeader = _a.enableRowHeader, bodyRenderer = _a.bodyRenderer, throttleScrolling = _a.throttleScrolling;
        // use the more generic "scroll" event for the main quadrant to capture
        // *both* scrollbar interactions and trackpad/mousewheel gestures.
        var onMainQuadrantScroll = throttleScrolling ? this.throttledHandleMainQuadrantScroll : this.handleMainQuadrantScroll;
        var onWheel = throttleScrolling ? this.throttledHandleWheel : this.handleWheel;
        var baseProps = {
            bodyRenderer: bodyRenderer,
            enableRowHeader: enableRowHeader,
            grid: grid,
            onWheel: onWheel
        };
        var shouldRenderLeftQuadrants = this.shouldRenderLeftQuadrants();
        var maybeLeftQuadrant = shouldRenderLeftQuadrants ? _react.createElement(_tableQuadrant.TableQuadrant, _tslib.__assign({}, baseProps, {
            quadrantRef: this.quadrantRefHandlers[_tableQuadrant.QuadrantType.LEFT].quadrant,
            quadrantType: _tableQuadrant.QuadrantType.LEFT,
            columnHeaderCellRenderer: this.renderLeftQuadrantColumnHeader,
            menuRenderer: this.renderLeftQuadrantMenu,
            rowHeaderCellRenderer: this.renderLeftQuadrantRowHeader,
            scrollContainerRef: this.quadrantRefHandlers[_tableQuadrant.QuadrantType.LEFT].scrollContainer
        })) : undefined;
        var maybeTopLeftQuadrant = shouldRenderLeftQuadrants ? _react.createElement(_tableQuadrant.TableQuadrant, _tslib.__assign({}, baseProps, {
            quadrantRef: this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP_LEFT].quadrant,
            quadrantType: _tableQuadrant.QuadrantType.TOP_LEFT,
            columnHeaderCellRenderer: this.renderTopLeftQuadrantColumnHeader,
            menuRenderer: this.renderTopLeftQuadrantMenu,
            rowHeaderCellRenderer: this.renderTopLeftQuadrantRowHeader,
            scrollContainerRef: this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP_LEFT].scrollContainer
        })) : undefined;
        return _react.createElement("div", {
            className: _classes.TABLE_QUADRANT_STACK
        }, _react.createElement(_tableQuadrant.TableQuadrant, _tslib.__assign({}, baseProps, {
            bodyRef: this.props.bodyRef,
            onScroll: onMainQuadrantScroll,
            quadrantRef: this.quadrantRefHandlers[_tableQuadrant.QuadrantType.MAIN].quadrant,
            quadrantType: _tableQuadrant.QuadrantType.MAIN,
            columnHeaderCellRenderer: this.renderMainQuadrantColumnHeader,
            menuRenderer: this.renderMainQuadrantMenu,
            rowHeaderCellRenderer: this.renderMainQuadrantRowHeader,
            scrollContainerRef: this.quadrantRefHandlers[_tableQuadrant.QuadrantType.MAIN].scrollContainer
        })), _react.createElement(_tableQuadrant.TableQuadrant, _tslib.__assign({}, baseProps, {
            quadrantRef: this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP].quadrant,
            quadrantType: _tableQuadrant.QuadrantType.TOP,
            columnHeaderCellRenderer: this.renderTopQuadrantColumnHeader,
            menuRenderer: this.renderTopQuadrantMenu,
            rowHeaderCellRenderer: this.renderTopQuadrantRowHeader,
            scrollContainerRef: this.quadrantRefHandlers[_tableQuadrant.QuadrantType.TOP].scrollContainer
        })), maybeLeftQuadrant, maybeTopLeftQuadrant);
    };
    // Ref handlers
    // ============
    TableQuadrantStack1.prototype.generateQuadrantRefHandlers = function(quadrantType) {
        var _this = this;
        var reducer = function(agg, key) {
            agg[key] = function(ref) {
                return _this.quadrantRefs[quadrantType][key] = ref;
            };
            return agg;
        };
        var refHandlers = [
            "columnHeader",
            "menu",
            "quadrant",
            "rowHeader",
            "scrollContainer", 
        ];
        return refHandlers.reduce(reducer, {});
    };
    // Emitters
    // ========
    TableQuadrantStack1.prototype.emitRefs = function() {
        _core.setRef(this.props.quadrantRef, this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].quadrant);
        _core.setRef(this.props.rowHeaderRef, this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].rowHeader);
        _core.setRef(this.props.columnHeaderRef, this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].columnHeader);
        _core.setRef(this.props.scrollContainerRef, this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].scrollContainer);
    };
    // this function is named 'update' instead of 'set', because a 'set'
    // function typically takes the new value as a parameter. we avoid that to
    // keep the isHorizontal logic tree contained within this function.
    TableQuadrantStack1.prototype.updateScrollContainerClientSize = function(isHorizontal) {
        var mainScrollContainer = this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].scrollContainer;
        if (isHorizontal) {
            this.cache.setScrollContainerClientWidth(mainScrollContainer === null || mainScrollContainer === void 0 ? void 0 : mainScrollContainer.clientWidth);
            return this.cache.getScrollContainerClientWidth();
        } else {
            this.cache.setScrollContainerClientHeight(mainScrollContainer === null || mainScrollContainer === void 0 ? void 0 : mainScrollContainer.clientHeight);
            return this.cache.getScrollContainerClientHeight();
        }
    };
    TableQuadrantStack1.prototype.maybeIncreaseToMinColHeaderHeight = function(height) {
        return height <= QUADRANT_MIN_SIZE ? MIN_COL_HEADER_HEIGHT : height;
    };
    // Helpers
    // =======
    /** Returns true the cumulative width of all frozen columns in the grid changed. */ TableQuadrantStack1.prototype.didFrozenColumnWidthsChange = function(prevProps) {
        return this.props.numFrozenColumns > 0 && this.props.grid !== prevProps.grid && this.props.grid.getCumulativeWidthAt(this.props.numFrozenColumns - 1) !== prevProps.grid.getCumulativeWidthAt(prevProps.numFrozenColumns - 1);
    };
    /** Returns true the cumulative height of all frozen rows in the grid changed. */ TableQuadrantStack1.prototype.didFrozenRowHeightsChange = function(prevProps) {
        return this.props.numFrozenRows > 0 && this.props.grid !== prevProps.grid && this.props.grid.getCumulativeHeightAt(this.props.numFrozenRows - 1) !== prevProps.grid.getCumulativeHeightAt(prevProps.numFrozenRows - 1);
    };
    /**
     * Returns the width or height of *only the grid* in the secondary quadrants
     * (TOP, LEFT, TOP_LEFT), based on the number of frozen rows and columns.
     */ TableQuadrantStack1.prototype.getSecondaryQuadrantGridSize = function(dimension) {
        var _a;
        var _b = this.props, grid = _b.grid, numFrozenColumns = _b.numFrozenColumns, numFrozenRows = _b.numFrozenRows;
        var numFrozen = (_a = dimension === "width" ? numFrozenColumns : numFrozenRows) !== null && _a !== void 0 ? _a : 0;
        var getterFn = dimension === "width" ? grid.getCumulativeWidthAt : grid.getCumulativeHeightAt;
        // both getter functions do O(1) lookups.
        return numFrozen > 0 ? getterFn(numFrozen - 1) : QUADRANT_MIN_SIZE;
    };
    /**
     * Measures the desired width of the row header based on its tallest
     * contents.
     */ TableQuadrantStack1.prototype.measureDesiredRowHeaderWidth = function() {
        // the MAIN row header serves as the source of truth
        var mainRowHeader = this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].rowHeader;
        if (mainRowHeader == null) return 0;
        else {
            // (alas, we must force a reflow to measure the row header's "desired" width)
            mainRowHeader.style.width = "auto";
            return _utils.Utils.clamp(mainRowHeader.clientWidth, MIN_ROW_HEADER_WIDTH);
        }
    };
    /**
     * Measures the desired height of the column header based on its tallest
     * contents.
     */ TableQuadrantStack1.prototype.measureDesiredColumnHeaderHeight = function() {
        // unlike the row headers, the column headers are in a display-flex
        // layout and are not actually bound by any fixed `height` that we set,
        // so they'll grow freely to their necessary size. makes measuring easy!
        var mainColumnHeader = this.quadrantRefs[_tableQuadrant.QuadrantType.MAIN].columnHeader;
        return mainColumnHeader == null ? 0 : _utils.Utils.clamp(mainColumnHeader.clientHeight, MIN_COL_HEADER_HEIGHT);
    };
    TableQuadrantStack1.prototype.shouldRenderLeftQuadrants = function(props) {
        if (props === void 0) props = this.props;
        var enableRowHeader = props.enableRowHeader, numFrozenColumns = props.numFrozenColumns;
        return enableRowHeader || numFrozenColumns != null && numFrozenColumns > 0;
    };
    // Resizing
    // should return empty array [] if we just finished resizing
    TableQuadrantStack1.prototype.adjustVerticalGuides = function(verticalGuides, quadrantType) {
        var _a;
        var isFrozenQuadrant = quadrantType === _tableQuadrant.QuadrantType.LEFT || quadrantType === _tableQuadrant.QuadrantType.TOP_LEFT;
        var scrollAmount = isFrozenQuadrant ? 0 : this.cache.getScrollOffset("scrollLeft");
        var rowHeaderWidth = this.cache.getRowHeaderWidth();
        return (_a = verticalGuides === null || verticalGuides === void 0 ? void 0 : verticalGuides.map(function(verticalGuide) {
            return verticalGuide - scrollAmount + rowHeaderWidth;
        })) !== null && _a !== void 0 ? _a : [];
    };
    // should return empty array [] if we just finished resizing
    TableQuadrantStack1.prototype.adjustHorizontalGuides = function(horizontalGuides, quadrantType) {
        var _a;
        var isFrozenQuadrant = quadrantType === _tableQuadrant.QuadrantType.TOP || quadrantType === _tableQuadrant.QuadrantType.TOP_LEFT;
        var scrollAmount = isFrozenQuadrant ? 0 : this.cache.getScrollOffset("scrollTop");
        var columnHeaderHeight = this.cache.getColumnHeaderHeight();
        return (_a = horizontalGuides === null || horizontalGuides === void 0 ? void 0 : horizontalGuides.map(function(horizontalGuide) {
            return horizontalGuide - scrollAmount + columnHeaderHeight;
        })) !== null && _a !== void 0 ? _a : [];
    };
    // we want the user to explicitly pass a quadrantType. define defaultProps as a Partial to avoid
    // declaring that and other required props here.
    TableQuadrantStack1.defaultProps = {
        enableColumnInteractionBar: undefined,
        enableRowHeader: true,
        isHorizontalScrollDisabled: false,
        isVerticalScrollDisabled: false,
        throttleScrolling: true,
        viewSyncDelay: DEFAULT_VIEW_SYNC_DELAY
    };
    return TableQuadrantStack1;
}(_core.AbstractComponent2);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","../common/classes":"76ljs","../common/internal/scrollUtils":"f5X1Y","../common/utils":"ee8Nq","./tableQuadrant":"c6liI","./tableQuadrantStackCache":"au4ua","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"au4ua":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TableQuadrantStackCache", ()=>TableQuadrantStackCache
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var TableQuadrantStackCache = /** @class */ function() {
    function TableQuadrantStackCache1() {
        this.cachedRowHeaderWidth = 0;
        this.cachedColumnHeaderHeight = 0;
        this.cachedScrollLeft = 0;
        this.cachedScrollTop = 0;
        this.reset();
    }
    TableQuadrantStackCache1.prototype.reset = function() {
        this.cachedRowHeaderWidth = 0;
        this.cachedColumnHeaderHeight = 0;
        this.cachedScrollLeft = 0;
        this.cachedScrollTop = 0;
    };
    // Getters
    // =======
    TableQuadrantStackCache1.prototype.getScrollOffset = function(scrollKey) {
        return scrollKey === "scrollLeft" ? this.cachedScrollLeft : this.cachedScrollTop;
    };
    TableQuadrantStackCache1.prototype.getRowHeaderWidth = function() {
        return this.cachedRowHeaderWidth;
    };
    TableQuadrantStackCache1.prototype.getColumnHeaderHeight = function() {
        return this.cachedColumnHeaderHeight;
    };
    TableQuadrantStackCache1.prototype.getScrollContainerClientWidth = function() {
        return this.cachedScrollContainerClientWidth;
    };
    TableQuadrantStackCache1.prototype.getScrollContainerClientHeight = function() {
        return this.cachedScrollContainerClientHeight;
    };
    // Setters
    // =======
    TableQuadrantStackCache1.prototype.setColumnHeaderHeight = function(height) {
        this.cachedColumnHeaderHeight = height;
    };
    TableQuadrantStackCache1.prototype.setRowHeaderWidth = function(width) {
        this.cachedRowHeaderWidth = width;
    };
    TableQuadrantStackCache1.prototype.setScrollOffset = function(scrollKey, offset) {
        if (scrollKey === "scrollLeft") this.cachedScrollLeft = offset;
        else this.cachedScrollTop = offset;
    };
    TableQuadrantStackCache1.prototype.setScrollContainerClientWidth = function(clientWidth) {
        this.cachedScrollContainerClientWidth = clientWidth;
    };
    TableQuadrantStackCache1.prototype.setScrollContainerClientHeight = function(clientHeight) {
        this.cachedScrollContainerClientHeight = clientHeight;
    };
    return TableQuadrantStackCache1;
}();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"j0PZc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Resizes all rows in the table to the approximate
 * maximum height of wrapped cell content in each row. Works best when each
 * cell contains plain text of a consistent font style (though font style
 * may vary between cells). Since this function uses approximate
 * measurements, results may not be perfect.
 */ parcelHelpers.export(exports, "resizeRowsByApproximateHeight", ()=>resizeRowsByApproximateHeight
);
/**
 * Resize all rows in the table to the height of the tallest visible cell in the specified columns.
 * If no indices are provided, default to using the tallest visible cell from all columns in view.
 */ parcelHelpers.export(exports, "resizeRowsByTallestCell", ()=>resizeRowsByTallestCell
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _utils = require("./common/utils");
var _locator = require("./locator");
// these default values for `resizeRowsByApproximateHeight` have been
// fine-tuned to work well with default Table font styles.
var resizeRowsByApproximateHeightDefaults = {
    getApproximateCharWidth: 8,
    getApproximateLineHeight: 18,
    getCellHorizontalPadding: 2 * _locator.Locator.CELL_HORIZONTAL_PADDING,
    getNumBufferLines: 1
};
/**
 * Returns an object with option keys mapped to their resolved values
 * (falling back to default values as necessary).
 */ function resolveResizeRowsByApproximateHeightOptions(options, rowIndex, columnIndex) {
    var optionKeys = Object.keys(resizeRowsByApproximateHeightDefaults);
    var optionReducer = function(agg, key) {
        var valueOrMapper = options === null || options === void 0 ? void 0 : options[key];
        if (typeof valueOrMapper === "function") agg[key] = valueOrMapper(rowIndex, columnIndex);
        else if (valueOrMapper != null) agg[key] = valueOrMapper;
        else agg[key] = resizeRowsByApproximateHeightDefaults[key];
        return agg;
    };
    return optionKeys.reduce(optionReducer, {});
}
function resizeRowsByApproximateHeight(numRows, columnWidths, getCellText, options) {
    var numColumns = columnWidths.length;
    var rowHeights = [];
    for(var rowIndex = 0; rowIndex < numRows; rowIndex++){
        var maxCellHeightInRow = 0;
        // iterate through each cell in the row
        for(var columnIndex = 0; columnIndex < numColumns; columnIndex++){
            // resolve all parameters to raw values
            var _a = resolveResizeRowsByApproximateHeightOptions(options, rowIndex, columnIndex), approxCharWidth = _a.getApproximateCharWidth, approxLineHeight = _a.getApproximateLineHeight, horizontalPadding = _a.getCellHorizontalPadding, numBufferLines = _a.getNumBufferLines;
            var cellText = getCellText(rowIndex, columnIndex);
            var approxCellHeight = _utils.Utils.getApproxCellHeight(cellText, columnWidths[columnIndex], approxCharWidth, approxLineHeight, horizontalPadding, numBufferLines);
            if (approxCellHeight > maxCellHeightInRow) maxCellHeightInRow = approxCellHeight;
        }
        rowHeights.push(maxCellHeightInRow);
    }
    return rowHeights;
}
function resizeRowsByTallestCell(grid, viewportRect, locator, numRows, columnIndices) {
    var tallest = 0;
    if (columnIndices === undefined) {
        // Consider all columns currently in viewport
        var viewportColumnIndices = grid.getColumnIndicesInRect(viewportRect);
        for(var col = viewportColumnIndices.columnIndexStart; col <= viewportColumnIndices.columnIndexEnd; col++)tallest = Math.max(tallest, locator.getTallestVisibleCellInColumn(col));
    } else {
        var columnIndicesArray = Array.isArray(columnIndices) ? columnIndices : [
            columnIndices
        ];
        var tallestByColumns = columnIndicesArray.map(function(col) {
            return locator.getTallestVisibleCellInColumn(col);
        });
        tallest = Math.max.apply(Math, tallestByColumns);
    }
    return Array(numRows).fill(tallest);
}

},{"./common/utils":"ee8Nq","./locator":"fuMWh","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"bEgdU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isSelectionModeEnabled", ()=>isSelectionModeEnabled
);
parcelHelpers.export(exports, "getHotkeysFromProps", ()=>getHotkeysFromProps
);
/**
 * @returns true if new and old children arrays are the same
 */ parcelHelpers.export(exports, "compareChildren", ()=>compareChildren
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _react = require("react");
var _regions = require("./regions");
function isSelectionModeEnabled(props, selectionMode, selectionModes) {
    if (selectionModes === void 0) selectionModes = props.selectionModes;
    var children = props.children, numRows = props.numRows;
    var numColumns = _react.Children.count(children);
    return selectionModes.indexOf(selectionMode) >= 0 && numRows > 0 && numColumns > 0;
}
function getHotkeysFromProps(props, hotkeysImpl) {
    var getCellClipboardData = props.getCellClipboardData, enableFocusedCell = props.enableFocusedCell, enableMultipleSelection = props.enableMultipleSelection, selectionModes = props.selectionModes;
    var hotkeys = [];
    if (getCellClipboardData != null) hotkeys.push({
        combo: "mod+c",
        group: "Table",
        label: "Copy selected table cells",
        onKeyDown: hotkeysImpl.handleCopy
    });
    var isSomeSelectionModeEnabled = selectionModes.length > 0;
    if (enableMultipleSelection && isSomeSelectionModeEnabled) hotkeys.push({
        combo: "shift+up",
        group: "Table",
        label: "Resize selection upward",
        onKeyDown: hotkeysImpl.handleSelectionResizeUp
    }, {
        combo: "shift+down",
        group: "Table",
        label: "Resize selection downward",
        onKeyDown: hotkeysImpl.handleSelectionResizeDown
    }, {
        combo: "shift+left",
        group: "Table",
        label: "Resize selection leftward",
        onKeyDown: hotkeysImpl.handleSelectionResizeLeft
    }, {
        combo: "shift+right",
        group: "Table",
        label: "Resize selection rightward",
        onKeyDown: hotkeysImpl.handleSelectionResizeRight
    });
    if (enableFocusedCell != null) hotkeys.push({
        combo: "left",
        group: "Table",
        label: "Move focus cell left",
        onKeyDown: hotkeysImpl.handleFocusMoveLeft
    }, {
        combo: "right",
        group: "Table",
        label: "Move focus cell right",
        onKeyDown: hotkeysImpl.handleFocusMoveRight
    }, {
        combo: "up",
        group: "Table",
        label: "Move focus cell up",
        onKeyDown: hotkeysImpl.handleFocusMoveUp
    }, {
        combo: "down",
        group: "Table",
        label: "Move focus cell down",
        onKeyDown: hotkeysImpl.handleFocusMoveDown
    }, {
        allowInInput: true,
        combo: "tab",
        group: "Table",
        label: "Move focus cell tab",
        onKeyDown: hotkeysImpl.handleFocusMoveRightInternal
    }, {
        allowInInput: true,
        combo: "shift+tab",
        group: "Table",
        label: "Move focus cell shift tab",
        onKeyDown: hotkeysImpl.handleFocusMoveLeftInternal
    }, {
        allowInInput: true,
        combo: "enter",
        group: "Table",
        label: "Move focus cell enter",
        onKeyDown: hotkeysImpl.handleFocusMoveDownInternal
    }, {
        allowInInput: true,
        combo: "shift+enter",
        group: "Table",
        label: "Move focus cell shift enter",
        onKeyDown: hotkeysImpl.handleFocusMoveUpInternal
    });
    if (isSelectionModeEnabled(props, _regions.RegionCardinality.FULL_TABLE)) hotkeys.push({
        combo: "mod+a",
        group: "Table",
        label: "Select all",
        onKeyDown: hotkeysImpl.handleSelectAllHotkey
    });
    return hotkeys;
}
function compareChildren(newChildren, oldChildren) {
    return newChildren.length === oldChildren.length && newChildren.every(function(child, index) {
        return child.key === oldChildren[index].key;
    });
}

},{"react":"21dqq","./regions":"8S4uE","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"iDlyW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TableBody", ()=>TableBody
);
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _classes = require("./common/classes");
var _contextMenuTargetWrapper = require("./common/contextMenuTargetWrapper");
var _renderMode = require("./common/renderMode");
var _menus = require("./interactions/menus");
var _selectable = require("./interactions/selectable");
var _regions = require("./regions");
var _tableBodyCells = require("./tableBodyCells");
var DEEP_COMPARE_KEYS = [
    "selectedRegions"
];
var TableBody = /** @class */ function(_super) {
    _tslib.__extends(TableBody1, _super);
    function TableBody1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.activationCell = null;
        _this.renderContextMenu = function(e) {
            var _a = _this.props, grid = _a.grid, onFocusedCell = _a.onFocusedCell, onSelection = _a.onSelection, bodyContextMenuRenderer = _a.bodyContextMenuRenderer, _b = _a.selectedRegions, selectedRegions = _b === void 0 ? [] : _b;
            var numRows = grid.numRows, numCols = grid.numCols;
            if (bodyContextMenuRenderer == null) return undefined;
            var targetRegion = _this.locateClick(e.nativeEvent);
            var nextSelectedRegions = selectedRegions;
            // if the event did not happen within a selected region, clear all
            // selections and select the right-clicked cell.
            var foundIndex = _regions.Regions.findContainingRegion(selectedRegions, targetRegion);
            if (foundIndex < 0) {
                nextSelectedRegions = [
                    targetRegion
                ];
                onSelection(nextSelectedRegions);
                // move the focused cell to the new region.
                var nextFocusedCell = _tslib.__assign(_tslib.__assign({}, _regions.Regions.getFocusCellCoordinatesFromRegion(targetRegion)), {
                    focusSelectionIndex: 0
                });
                onFocusedCell(nextFocusedCell);
            }
            var menuContext = new _menus.MenuContext(targetRegion, nextSelectedRegions, numRows, numCols);
            var contextMenu = bodyContextMenuRenderer(menuContext);
            return contextMenu == null ? undefined : contextMenu;
        };
        // Callbacks
        // =========
        _this.handleSelectionEnd = function() {
            _this.activationCell = null; // not strictly required, but good practice
        };
        _this.locateClick = function(event) {
            _this.activationCell = _this.props.locator.convertPointToCell(event.clientX, event.clientY);
            return _regions.Regions.cell(_this.activationCell.row, _this.activationCell.col);
        };
        _this.locateDrag = function(_event, coords, returnEndOnly) {
            if (returnEndOnly === void 0) returnEndOnly = false;
            if (_this.activationCell === null) return undefined;
            var start = _this.activationCell;
            var end = _this.props.locator.convertPointToCell(coords.current[0], coords.current[1]);
            return returnEndOnly ? _regions.Regions.cell(end.row, end.col) : _regions.Regions.cell(start.row, start.col, end.row, end.col);
        };
        return _this;
    }
    /**
     * @deprecated, will be removed from public API in the next major version
     */ TableBody1.cellClassNames = function(rowIndex, columnIndex) {
        return _tableBodyCells.cellClassNames(rowIndex, columnIndex);
    };
    TableBody1.prototype.shouldComponentUpdate = function(nextProps) {
        return !_core.Utils.shallowCompareKeys(this.props, nextProps, {
            exclude: DEEP_COMPARE_KEYS
        }) || !_core.Utils.deepCompareKeys(this.props, nextProps, DEEP_COMPARE_KEYS);
    };
    TableBody1.prototype.render = function() {
        var _a = this.props, grid = _a.grid, numFrozenColumns = _a.numFrozenColumns, numFrozenRows = _a.numFrozenRows;
        var defaultStyle = grid.getRect().sizeStyle();
        var style = {
            height: numFrozenRows != null ? grid.getCumulativeHeightAt(numFrozenRows - 1) : defaultStyle.height,
            width: numFrozenColumns != null ? grid.getCumulativeWidthAt(numFrozenColumns - 1) : defaultStyle.width
        };
        return _react.createElement(_selectable.DragSelectable, {
            enableMultipleSelection: this.props.enableMultipleSelection,
            focusedCell: this.props.focusedCell,
            locateClick: this.locateClick,
            locateDrag: this.locateDrag,
            onFocusedCell: this.props.onFocusedCell,
            onSelection: this.props.onSelection,
            onSelectionEnd: this.handleSelectionEnd,
            selectedRegions: this.props.selectedRegions,
            selectedRegionTransform: this.props.selectedRegionTransform
        }, _react.createElement(_contextMenuTargetWrapper.ContextMenuTargetWrapper, {
            className: _classnamesDefault.default(_classes.TABLE_BODY_VIRTUAL_CLIENT, _classes.TABLE_CELL_CLIENT),
            renderContextMenu: this.renderContextMenu,
            style: style
        }, _react.createElement(_tableBodyCells.TableBodyCells, {
            cellRenderer: this.props.cellRenderer,
            focusedCell: this.props.focusedCell,
            grid: grid,
            loading: this.props.loading,
            onCompleteRender: this.props.onCompleteRender,
            renderMode: this.props.renderMode,
            columnIndexStart: this.props.columnIndexStart,
            columnIndexEnd: this.props.columnIndexEnd,
            rowIndexStart: this.props.rowIndexStart,
            rowIndexEnd: this.props.rowIndexEnd,
            viewportRect: this.props.viewportRect
        })));
    };
    TableBody1.defaultProps = {
        loading: false,
        renderMode: _renderMode.RenderMode.BATCH
    };
    return TableBody1;
}(_core.AbstractComponent2);

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","./common/classes":"76ljs","./common/contextMenuTargetWrapper":"kXhaM","./common/renderMode":"kUIjf","./interactions/menus":"epbBF","./interactions/selectable":"lssvA","./regions":"8S4uE","./tableBodyCells":"6PryY","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"kXhaM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ContextMenuTargetWrapper", ()=>ContextMenuTargetWrapper
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
/* eslint-disable deprecation/deprecation */ var _react = require("react");
var _core = require("@blueprintjs/core");
/**
 * Since the ContextMenuTarget uses the `onContextMenu` prop instead
 * `element.addEventListener`, the prop can be lost. This wrapper helps us
 * maintain context menu fuctionality when doing fancy React.cloneElement
 * chains.
 */ var ContextMenuTargetWrapper = /** @class */ function(_super) {
    _tslib.__extends(ContextMenuTargetWrapper1, _super);
    function ContextMenuTargetWrapper1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ContextMenuTargetWrapper1.prototype.render = function() {
        var _a = this.props, className = _a.className, children = _a.children, style = _a.style;
        return _react.createElement("div", {
            className: className,
            style: style
        }, children);
    };
    ContextMenuTargetWrapper1.prototype.renderContextMenu = function(e) {
        return this.props.renderContextMenu(e);
    };
    ContextMenuTargetWrapper1 = _tslib.__decorate([
        _core.ContextMenuTarget
    ], ContextMenuTargetWrapper1);
    return ContextMenuTargetWrapper1;
}(_react.PureComponent);

},{"tslib":"gB4KC","react":"21dqq","@blueprintjs/core":"3LcXQ","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6PryY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TableBodyCells", ()=>TableBodyCells
);
/**
 * Returns the array of class names that must be applied to each table
 * cell so that we can locate any cell based on its coordinate.
 */ parcelHelpers.export(exports, "cellClassNames", ()=>cellClassNames
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _tslib = require("tslib");
var _classnames = require("classnames");
var _classnamesDefault = parcelHelpers.interopDefault(_classnames);
var _react = require("react");
var _core = require("@blueprintjs/core");
var _cell = require("./cell/cell");
var _batcher = require("./common/batcher");
var _classes = require("./common/classes");
var _rect = require("./common/rect");
var _renderMode = require("./common/renderMode");
var SHALLOW_COMPARE_DENYLIST = [
    "viewportRect"
];
/**
 * We don't want to reset the batcher when this set of keys changes. Any other
 * changes should reset the batcher's internal cache.
 */ var BATCHER_RESET_PROP_KEYS_DENYLIST = [
    "columnIndexEnd",
    "columnIndexStart",
    "rowIndexEnd",
    "rowIndexStart", 
];
var TableBodyCells = /** @class */ function(_super) {
    _tslib.__extends(TableBodyCells1, _super);
    function TableBodyCells1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.batcher = new _batcher.Batcher();
        // Cell renderers
        // ==============
        _this.renderNewCell = function(rowIndex, columnIndex) {
            var _a = _this.props, columnIndexEnd = _a.columnIndexEnd, grid = _a.grid, rowIndexEnd = _a.rowIndexEnd;
            var extremaClasses = grid.getExtremaClasses(rowIndex, columnIndex, rowIndexEnd, columnIndexEnd);
            var isGhost = grid.isGhostIndex(rowIndex, columnIndex);
            return _this.renderCell(rowIndex, columnIndex, extremaClasses, isGhost);
        };
        _this.renderCell = function(rowIndex, columnIndex, extremaClasses, isGhost) {
            var _a;
            var _b = _this.props, cellRenderer = _b.cellRenderer, focusedCell = _b.focusedCell, loading = _b.loading, grid = _b.grid;
            var baseCell = isGhost ? _cell.emptyCellRenderer() : cellRenderer(rowIndex, columnIndex);
            // cellRenderer still may return null
            baseCell = baseCell == null ? _cell.emptyCellRenderer() : baseCell;
            var className = _classnamesDefault.default(cellClassNames(rowIndex, columnIndex), extremaClasses, (_a = {}, _a[_classes.TABLE_CELL_GHOST] = isGhost, _a[_classes.TABLE_CELL_LEDGER_ODD] = rowIndex % 2 === 1, _a[_classes.TABLE_CELL_LEDGER_EVEN] = rowIndex % 2 === 0, _a), baseCell.props.className);
            var key = TableBodyCells1.cellReactKey(rowIndex, columnIndex);
            var rect = isGhost ? grid.getGhostCellRect(rowIndex, columnIndex) : grid.getCellRect(rowIndex, columnIndex);
            var cellLoading = baseCell.props.loading != null ? baseCell.props.loading : loading;
            var style = _tslib.__assign(_tslib.__assign({}, baseCell.props.style), _rect.Rect.style(rect));
            var isFocused = focusedCell != null && focusedCell.row === rowIndex && focusedCell.col === columnIndex;
            return _react.cloneElement(baseCell, {
                className: className,
                isFocused: isFocused,
                key: key,
                loading: cellLoading,
                style: style
            });
        };
        // Other
        // =====
        _this.didViewportRectChange = function(nextViewportRect, currViewportRect) {
            if (nextViewportRect == null && currViewportRect == null) return false;
            else if (nextViewportRect == null || currViewportRect == null) return true;
            else return !nextViewportRect.equals(currViewportRect);
        };
        return _this;
    }
    TableBodyCells1.cellReactKey = function(rowIndex, columnIndex) {
        return "cell-".concat(rowIndex, "-").concat(columnIndex);
    };
    TableBodyCells1.prototype.componentDidMount = function() {
        this.maybeInvokeOnCompleteRender();
    };
    TableBodyCells1.prototype.shouldComponentUpdate = function(nextProps) {
        return !_core.Utils.shallowCompareKeys(nextProps, this.props, {
            exclude: SHALLOW_COMPARE_DENYLIST
        }) || // "viewportRect" is not a plain object, so we can't just deep
        // compare; we need custom logic.
        this.didViewportRectChange(nextProps.viewportRect, this.props.viewportRect);
    };
    TableBodyCells1.prototype.componentDidUpdate = function(prevProps) {
        var shouldResetBatcher = !_core.Utils.shallowCompareKeys(prevProps, this.props, {
            exclude: BATCHER_RESET_PROP_KEYS_DENYLIST
        });
        if (shouldResetBatcher) this.batcher.reset();
        this.maybeInvokeOnCompleteRender();
    };
    TableBodyCells1.prototype.componentWillUnmount = function() {
        this.batcher.cancelOutstandingCallback();
    };
    TableBodyCells1.prototype.render = function() {
        var renderMode = this.props.renderMode;
        var cells = renderMode === _renderMode.RenderMode.BATCH ? this.renderBatchedCells() : this.renderAllCells();
        return _react.createElement("div", {
            className: _classes.TABLE_BODY_CELLS
        }, cells);
    };
    // Render modes
    // ============
    TableBodyCells1.prototype.renderBatchedCells = function() {
        var _this = this;
        var _a = this.props, columnIndexEnd = _a.columnIndexEnd, columnIndexStart = _a.columnIndexStart, rowIndexEnd = _a.rowIndexEnd, rowIndexStart = _a.rowIndexStart;
        // render cells in batches
        this.batcher.startNewBatch();
        for(var rowIndex = rowIndexStart; rowIndex <= rowIndexEnd; rowIndex++)for(var columnIndex = columnIndexStart; columnIndex <= columnIndexEnd; columnIndex++)this.batcher.addArgsToBatch(rowIndex, columnIndex);
        this.batcher.removeOldAddNew(this.renderNewCell);
        if (!this.batcher.isDone()) this.batcher.idleCallback(function() {
            return _this.forceUpdate();
        });
        return this.batcher.getList();
    };
    TableBodyCells1.prototype.renderAllCells = function() {
        var _a = this.props, columnIndexEnd = _a.columnIndexEnd, columnIndexStart = _a.columnIndexStart, rowIndexEnd = _a.rowIndexEnd, rowIndexStart = _a.rowIndexStart;
        var cells = [];
        var cellsArgs = [];
        for(var rowIndex = rowIndexStart; rowIndex <= rowIndexEnd; rowIndex++)for(var columnIndex = columnIndexStart; columnIndex <= columnIndexEnd; columnIndex++){
            cells.push(this.renderNewCell(rowIndex, columnIndex));
            cellsArgs.push([
                rowIndex,
                columnIndex
            ]);
        }
        // pretend we did an entire rendering pass using the batcher. that way,
        // if we switch from `RenderMode.NONE` to `RenderMode.BATCH`, we don't
        // have to re-paint every cell still in view.
        this.batcher.setList(cellsArgs, cells);
        return cells;
    };
    // Callbacks
    // =========
    TableBodyCells1.prototype.maybeInvokeOnCompleteRender = function() {
        var _a = this.props, onCompleteRender = _a.onCompleteRender, renderMode = _a.renderMode;
        if (renderMode === _renderMode.RenderMode.NONE || renderMode === _renderMode.RenderMode.BATCH && this.batcher.isDone()) onCompleteRender === null || onCompleteRender === void 0 || onCompleteRender();
    };
    TableBodyCells1.defaultProps = {
        renderMode: _renderMode.RenderMode.BATCH
    };
    return TableBodyCells1;
}(_core.AbstractComponent2);
function cellClassNames(rowIndex, columnIndex) {
    return [
        _classes.rowCellIndexClass(rowIndex),
        _classes.columnCellIndexClass(columnIndex)
    ];
}

},{"tslib":"gB4KC","classnames":"jocGM","react":"21dqq","@blueprintjs/core":"3LcXQ","./cell/cell":"fhDSO","./common/batcher":"jNmZ0","./common/classes":"76ljs","./common/rect":"9bJ19","./common/renderMode":"kUIjf","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"jNmZ0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Batcher", ()=>Batcher
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _requestIdleCallback = require("./requestIdleCallback");
/**
 * This class helps batch updates to large lists.
 *
 * For example, if your React component has many children, updating them all at
 * once may cause jank when reconciling the DOM. This class helps you update
 * only a few children per frame.
 *
 * A typical usage would be:
 *
 * ```tsx
 * public renderChildren = (allChildrenKeys: string[]) => {
 *
 *     batcher.startNewBatch();
 *
 *     allChildrenKeys.forEach((prop1: string, index: number) => {
 *         batcher.addArgsToBatch(prop1, "prop2", index);
 *     });
 *
 *     batcher.removeOldAddNew((prop1: string, prop2: string, other: number) => {
 *         return <Child prop1={prop1} prop2={prop2} other={other} />;
 *     });
 *
 *     if (!batcher.isDone()) {
 *         batcher.idleCallback(this.forceUpdate());
 *     }
 *
 *     const currentChildren = batcher.getList();
 *     return currentChildren;
 * }
 *
 * ```
 */ var Batcher = /** @class */ function() {
    function Batcher1() {
        var _this = this;
        this.currentObjects = {};
        this.oldObjects = {};
        this.batchArgs = {};
        this.done = true;
        this.handleIdleCallback = function() {
            var callback = _this.callback;
            delete _this.callback;
            callback === null || callback === void 0 || callback();
        };
        this.mapCurrentObjectKey = function(key) {
            return _this.currentObjects[key];
        };
    }
    /**
     * Resets the "batch" and "current" sets. This essentially clears the cache
     * and prevents accidental re-use of "current" objects.
     */ Batcher1.prototype.reset = function() {
        this.batchArgs = {};
        this.oldObjects = this.currentObjects;
        this.currentObjects = {};
    };
    /**
     * Starts a new "batch" argument set
     */ Batcher1.prototype.startNewBatch = function() {
        this.batchArgs = {};
    };
    /**
     * Stores the variadic arguments to be later batched together.
     *
     * The arguments must be simple stringifyable objects.
     */ Batcher1.prototype.addArgsToBatch = function() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++)args[_i] = arguments[_i];
        this.batchArgs[this.getKey(args)] = args;
    };
    /**
     * Compares the set of "batch" arguments to the "current" set. Creates any
     * new objects using the callback as a factory. Removes old objects.
     *
     * Arguments that are in the "current" set but were not part of the last
     * "batch" set are considered candidates for removal. Similarly, Arguments
     * that are part of the "batch" set but not the "current" set are candidates
     * for addition.
     *
     * The number of objects added and removed may be limited with the
     * `...Limit` parameters.
     *
     * Finally, the batcher determines if the batching is complete if the
     * "current" arguments match the "batch" arguments.
     */ Batcher1.prototype.removeOldAddNew = function(callback, addNewLimit, removeOldLimit, updateLimit) {
        var _this = this;
        if (addNewLimit === void 0) addNewLimit = Batcher1.DEFAULT_ADD_LIMIT;
        if (removeOldLimit === void 0) removeOldLimit = Batcher1.DEFAULT_REMOVE_LIMIT;
        if (updateLimit === void 0) updateLimit = Batcher1.DEFAULT_UPDATE_LIMIT;
        // remove old
        var keysToRemove = this.setKeysDifference(this.currentObjects, this.batchArgs, removeOldLimit);
        keysToRemove.forEach(function(key) {
            return delete _this.currentObjects[key];
        });
        // remove ALL old objects not in batch
        var keysToRemoveOld = this.setKeysDifference(this.oldObjects, this.batchArgs, -1);
        keysToRemoveOld.forEach(function(key) {
            return delete _this.oldObjects[key];
        });
        // copy ALL old objects into current objects if not defined
        var keysToShallowCopy = Object.keys(this.oldObjects);
        keysToShallowCopy.forEach(function(key) {
            if (_this.currentObjects[key] == null) _this.currentObjects[key] = _this.oldObjects[key];
        });
        // update old objects with factory
        var keysToUpdate = this.setKeysIntersection(this.oldObjects, this.currentObjects, updateLimit);
        keysToUpdate.forEach(function(key) {
            delete _this.oldObjects[key];
            _this.currentObjects[key] = callback.apply(undefined, _this.batchArgs[key]);
        });
        // add new objects with factory
        var keysToAdd = this.setKeysDifference(this.batchArgs, this.currentObjects, addNewLimit);
        keysToAdd.forEach(function(key) {
            return _this.currentObjects[key] = callback.apply(undefined, _this.batchArgs[key]);
        });
        // set `done` to true if sets match exactly after add/remove and there
        // are no "old objects" remaining
        this.done = this.setHasSameKeys(this.batchArgs, this.currentObjects) && Object.keys(this.oldObjects).length === 0;
    };
    /**
     * Returns true if the "current" set matches the "batch" set.
     */ Batcher1.prototype.isDone = function() {
        return this.done;
    };
    /**
     * Returns all the objects in the "current" set.
     */ Batcher1.prototype.getList = function() {
        return Object.keys(this.currentObjects).map(this.mapCurrentObjectKey);
    };
    /**
     * Registers a callback to be invoked on the next idle frame. If a callback
     * has already been registered, we do not register a new one.
     */ Batcher1.prototype.idleCallback = function(callback) {
        if (!this.callback) {
            this.callback = callback;
            _requestIdleCallback.requestIdleCallback(this.handleIdleCallback);
        }
    };
    Batcher1.prototype.cancelOutstandingCallback = function() {
        delete this.callback;
    };
    /**
     * Forcibly overwrites the current list of batched objects. Not recommended
     * for normal usage.
     */ Batcher1.prototype.setList = function(objectsArgs, objects) {
        var _this = this;
        this.reset();
        objectsArgs.forEach(function(args, i) {
            _this.addArgsToBatch.apply(_this, args);
            _this.currentObjects[_this.getKey(args)] = objects[i];
        });
        this.done = true;
    };
    Batcher1.prototype.getKey = function(args) {
        return args.join(Batcher1.ARG_DELIMITER);
    };
    Batcher1.prototype.setKeysDifference = function(a, b, limit) {
        return this.setKeysOperation(a, b, "difference", limit);
    };
    Batcher1.prototype.setKeysIntersection = function(a, b, limit) {
        return this.setKeysOperation(a, b, "intersect", limit);
    };
    /**
     * Compares the keys of A from B -- and performs an "intersection" or
     * "difference" operation on the keys.
     *
     * Note that the order of operands A and B matters for the "difference"
     * operation.
     *
     * Returns an array of at most `limit` keys.
     */ Batcher1.prototype.setKeysOperation = function(a, b, operation, limit) {
        var result = [];
        var aKeys = Object.keys(a);
        for(var i = 0; i < aKeys.length && (limit < 0 || result.length < limit); i++){
            var key = aKeys[i];
            if (operation === "difference" && a[key] && !b[key] || operation === "intersect" && a[key] && b[key]) result.push(key);
        }
        return result;
    };
    /**
     * Returns true of objects `a` and `b` have exactly the same keys.
     */ Batcher1.prototype.setHasSameKeys = function(a, b) {
        var aKeys = Object.keys(a);
        var bKeys = Object.keys(b);
        if (aKeys.length !== bKeys.length) return false;
        for(var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++){
            var aKey = aKeys_1[_i];
            if (b[aKey] === undefined) return false;
        }
        return true;
    };
    Batcher1.DEFAULT_ADD_LIMIT = 20;
    Batcher1.DEFAULT_UPDATE_LIMIT = 20;
    Batcher1.DEFAULT_REMOVE_LIMIT = 20;
    Batcher1.ARG_DELIMITER = "|";
    return Batcher1;
}();

},{"./requestIdleCallback":"4p5PC","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4p5PC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "requestIdleCallback", ()=>requestIdleCallback
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /**
 * Event name for `postMessage`
 */ var MESSAGE_EVENT_DATA = "blueprint-table-post-message";
/**
 * Object that holds state for managing idle callbacks
 */ var IDLE_STATE = {
    callbacks: [],
    triggered: false
};
var handleIdle = function(event) {
    if (event.source !== window || event.data !== MESSAGE_EVENT_DATA) return;
    IDLE_STATE.triggered = false;
    var callback = null;
    if (IDLE_STATE.callbacks.length > 0) callback = IDLE_STATE.callbacks.shift();
    if (IDLE_STATE.callbacks.length > 0) triggerIdleFrame();
    // finally, invoke the callback. exceptions will be propagated
    if (callback) callback();
};
// check for window since we might be in a headless server environment
if (typeof window !== "undefined") {
    if (window.addEventListener != null) window.addEventListener("message", handleIdle, false);
}
var triggerIdleFrame = function() {
    if (IDLE_STATE.triggered) return;
    IDLE_STATE.triggered = true;
    /**
     * This is the magic that will wait for the browser to be "idle" before
     * invoking the callback.
     *
     * First, we use nested calls to `requestAnimationFrame` which will cause
     * the inner callback to be invoked on the NEXT FRAME.
     *
     * Then, we call to `postMessage` to invoke the `handleIdle` method only
     * once the current stack frame is empty.
     *
     * With this approach, the idle callback will be invoked at most once per
     * frame and only after the stack frame is empty.
     */ requestAnimationFrame(function() {
        requestAnimationFrame(function() {
            postMessage(MESSAGE_EVENT_DATA, "*");
        });
    });
};
var requestIdleCallback = function(callback) {
    IDLE_STATE.callbacks.push(callback);
    triggerIdleFrame();
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"967oE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "TableHotkeys", ()=>TableHotkeys
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _react = require("react");
var _clipboard = require("./common/clipboard");
var _direction = require("./common/direction");
var _errors = require("./common/errors");
var _focusedCellUtils = require("./common/internal/focusedCellUtils");
var _selectionUtils = require("./common/internal/selectionUtils");
var _regions = require("./regions");
var TableHotkeys = /** @class */ function() {
    function TableHotkeys1(props, state, tableHandlers) {
        var _this = this;
        this.props = props;
        this.state = state;
        this.tableHandlers = tableHandlers;
        // Selection
        // =========
        this.selectAll = function(shouldUpdateFocusedCell) {
            var selectionHandler = _this.tableHandlers.getEnabledSelectionHandler(_regions.RegionCardinality.FULL_TABLE);
            // clicking on upper left hand corner sets selection to "all"
            // regardless of current selection state (clicking twice does not deselect table)
            selectionHandler([
                _regions.Regions.table()
            ]);
            if (shouldUpdateFocusedCell) {
                var newFocusedCellCoordinates = _regions.Regions.getFocusCellCoordinatesFromRegion(_regions.Regions.table());
                _this.tableHandlers.handleFocus(_focusedCellUtils.toFullCoordinates(newFocusedCellCoordinates));
            }
        };
        this.handleSelectAllHotkey = function(e) {
            // prevent "real" select all from happening as well
            e.preventDefault();
            e.stopPropagation();
            // selecting-all via the keyboard should not move the focused cell.
            _this.selectAll(false);
        };
        this.handleSelectionResizeUp = function(e) {
            return _this.handleSelectionResize(e, _direction.Direction.UP);
        };
        this.handleSelectionResizeDown = function(e) {
            return _this.handleSelectionResize(e, _direction.Direction.DOWN);
        };
        this.handleSelectionResizeLeft = function(e) {
            return _this.handleSelectionResize(e, _direction.Direction.LEFT);
        };
        this.handleSelectionResizeRight = function(e) {
            return _this.handleSelectionResize(e, _direction.Direction.RIGHT);
        };
        this.handleSelectionResize = function(e, direction) {
            e.preventDefault();
            e.stopPropagation();
            var _a = _this.state, focusedCell = _a.focusedCell, selectedRegions = _a.selectedRegions;
            var index = _focusedCellUtils.getFocusedOrLastSelectedIndex(selectedRegions, focusedCell);
            if (index === undefined) return;
            var region = selectedRegions[index];
            var nextRegion = _selectionUtils.resizeRegion(region, direction, focusedCell);
            _this.updateSelectedRegionAtIndex(nextRegion, index);
        };
        // Focus
        // =====
        this.handleFocusMoveLeft = function(e) {
            return _this.handleFocusMove(e, "left");
        };
        this.handleFocusMoveLeftInternal = function(e) {
            return _this.handleFocusMoveInternal(e, "left");
        };
        this.handleFocusMoveRight = function(e) {
            return _this.handleFocusMove(e, "right");
        };
        this.handleFocusMoveRightInternal = function(e) {
            return _this.handleFocusMoveInternal(e, "right");
        };
        this.handleFocusMoveUp = function(e) {
            return _this.handleFocusMove(e, "up");
        };
        this.handleFocusMoveUpInternal = function(e) {
            return _this.handleFocusMoveInternal(e, "up");
        };
        this.handleFocusMoveDown = function(e) {
            return _this.handleFocusMove(e, "down");
        };
        this.handleFocusMoveDownInternal = function(e) {
            return _this.handleFocusMoveInternal(e, "down");
        };
        // no good way to call arrow-key keyboard events from tests
        /* istanbul ignore next */ this.handleFocusMove = function(e, direction) {
            e.preventDefault();
            e.stopPropagation();
            var focusedCell = _this.state.focusedCell;
            if (focusedCell == null) // halt early if we have a selectedRegionTransform or something else in play that nixes
            // the focused cell.
            return;
            var newFocusedCell = {
                col: focusedCell.col,
                focusSelectionIndex: 0,
                row: focusedCell.row
            };
            switch(direction){
                case "up":
                    newFocusedCell.row -= 1;
                    break;
                case "down":
                    newFocusedCell.row += 1;
                    break;
                case "left":
                    newFocusedCell.col -= 1;
                    break;
                case "right":
                    newFocusedCell.col += 1;
                    break;
                default:
                    break;
            }
            if (newFocusedCell.row < 0 || newFocusedCell.row >= _this.grid.numRows || newFocusedCell.col < 0 || newFocusedCell.col >= _this.grid.numCols) return;
            // change selection to match new focus cell location
            var newSelectionRegions = [
                _regions.Regions.cell(newFocusedCell.row, newFocusedCell.col)
            ];
            var selectedRegionTransform = _this.props.selectedRegionTransform;
            var transformedSelectionRegions = selectedRegionTransform != null ? newSelectionRegions.map(function(region) {
                return selectedRegionTransform(region, e);
            }) : newSelectionRegions;
            _this.tableHandlers.handleSelection(transformedSelectionRegions);
            _this.tableHandlers.handleFocus(newFocusedCell);
            // keep the focused cell in view
            _this.scrollBodyToFocusedCell(newFocusedCell);
        };
        // no good way to call arrow-key keyboard events from tests
        /* istanbul ignore next */ this.handleFocusMoveInternal = function(e, direction) {
            e.preventDefault();
            e.stopPropagation();
            var _a = _this.state, focusedCell = _a.focusedCell, selectedRegions = _a.selectedRegions;
            if (focusedCell == null) // halt early if we have a selectedRegionTransform or something else in play that nixes
            // the focused cell.
            return;
            var newFocusedCell = {
                col: focusedCell.col,
                focusSelectionIndex: focusedCell.focusSelectionIndex,
                row: focusedCell.row
            };
            // if we're not in any particular focus cell region, and one exists, go to the first cell of the first one
            if (focusedCell.focusSelectionIndex == null && selectedRegions.length > 0) {
                var focusCellRegion = _regions.Regions.getCellRegionFromRegion(selectedRegions[0], _this.grid.numRows, _this.grid.numCols);
                newFocusedCell = {
                    col: focusCellRegion.cols[0],
                    focusSelectionIndex: 0,
                    row: focusCellRegion.rows[0]
                };
            } else {
                if (selectedRegions.length === 0) {
                    _this.handleFocusMove(e, direction);
                    return;
                }
                var focusCellRegion = _regions.Regions.getCellRegionFromRegion(selectedRegions[focusedCell.focusSelectionIndex], _this.grid.numRows, _this.grid.numCols);
                if (focusCellRegion.cols[0] === focusCellRegion.cols[1] && focusCellRegion.rows[0] === focusCellRegion.rows[1] && selectedRegions.length === 1) {
                    _this.handleFocusMove(e, direction);
                    return;
                }
                switch(direction){
                    case "up":
                        newFocusedCell = _this.moveFocusCell("row", "col", true, newFocusedCell, focusCellRegion);
                        break;
                    case "left":
                        newFocusedCell = _this.moveFocusCell("col", "row", true, newFocusedCell, focusCellRegion);
                        break;
                    case "down":
                        newFocusedCell = _this.moveFocusCell("row", "col", false, newFocusedCell, focusCellRegion);
                        break;
                    case "right":
                        newFocusedCell = _this.moveFocusCell("col", "row", false, newFocusedCell, focusCellRegion);
                        break;
                    default:
                        break;
                }
            }
            if (newFocusedCell.row < 0 || newFocusedCell.row >= _this.grid.numRows || newFocusedCell.col < 0 || newFocusedCell.col >= _this.grid.numCols) return;
            _this.tableHandlers.handleFocus(newFocusedCell);
            // keep the focused cell in view
            _this.scrollBodyToFocusedCell(newFocusedCell);
        };
        this.scrollBodyToFocusedCell = function(focusedCell) {
            var row = focusedCell.row, col = focusedCell.col;
            var viewportRect = _this.state.viewportRect;
            if (viewportRect === undefined || _this.grid === undefined) return;
            // sort keys in normal CSS position order (per the trusty TRBL/"trouble" acronym)
            // tslint:disable:object-literal-sort-keys
            var viewportBounds = {
                top: viewportRect.top,
                right: viewportRect.left + viewportRect.width,
                bottom: viewportRect.top + viewportRect.height,
                left: viewportRect.left
            };
            var focusedCellBounds = {
                top: _this.grid.getCumulativeHeightBefore(row),
                right: _this.grid.getCumulativeWidthAt(col),
                bottom: _this.grid.getCumulativeHeightAt(row),
                left: _this.grid.getCumulativeWidthBefore(col)
            };
            // tslint:enable:object-literal-sort-keys
            var focusedCellWidth = focusedCellBounds.right - focusedCellBounds.left;
            var focusedCellHeight = focusedCellBounds.bottom - focusedCellBounds.top;
            var isFocusedCellWiderThanViewport = focusedCellWidth > viewportRect.width;
            var isFocusedCellTallerThanViewport = focusedCellHeight > viewportRect.height;
            var ss = {};
            // keep the top end of an overly tall focused cell in view when moving left and right
            // (without this OR check, the body seesaws to fit the top end, then the bottom end, etc.)
            if (focusedCellBounds.top < viewportBounds.top || isFocusedCellTallerThanViewport) // scroll up (minus one pixel to avoid clipping the focused-cell border)
            ss.nextScrollTop = Math.max(0, focusedCellBounds.top - 1);
            else if (focusedCellBounds.bottom > viewportBounds.bottom) {
                // scroll down
                var scrollDelta = focusedCellBounds.bottom - viewportBounds.bottom;
                ss.nextScrollTop = viewportBounds.top + scrollDelta;
            }
            // keep the left end of an overly wide focused cell in view when moving up and down
            if (focusedCellBounds.left < viewportBounds.left || isFocusedCellWiderThanViewport) // scroll left (again minus one additional pixel)
            ss.nextScrollLeft = Math.max(0, focusedCellBounds.left - 1);
            else if (focusedCellBounds.right > viewportBounds.right) {
                // scroll right
                var scrollDelta = focusedCellBounds.right - viewportBounds.right;
                ss.nextScrollLeft = viewportBounds.left + scrollDelta;
            }
            _this.tableHandlers.syncViewportPosition(ss);
        };
        this.handleCopy = function(e) {
            var _a = _this.props, getCellClipboardData = _a.getCellClipboardData, onCopy = _a.onCopy;
            var selectedRegions = _this.state.selectedRegions;
            if (getCellClipboardData == null || _this.grid === undefined) return;
            // prevent "real" copy from being called
            e.preventDefault();
            e.stopPropagation();
            var cells = _regions.Regions.enumerateUniqueCells(selectedRegions, _this.grid.numRows, _this.grid.numCols);
            var sparse = _regions.Regions.sparseMapCells(cells, getCellClipboardData);
            if (sparse != null) _clipboard.Clipboard.copyCells(sparse).then(function() {
                return onCopy === null || onCopy === void 0 ? void 0 : onCopy(true);
            }).catch(function(reason) {
                console.error(_errors.TABLE_COPY_FAILED, reason);
                onCopy === null || onCopy === void 0 || onCopy(false);
            });
        };
    // no-op
    }
    TableHotkeys1.prototype.setGrid = function(grid) {
        this.grid = grid;
    };
    TableHotkeys1.prototype.setProps = function(props) {
        this.props = props;
    };
    TableHotkeys1.prototype.setState = function(state) {
        this.state = state;
    };
    /**
     * Replaces the selected region at the specified array index, with the
     * region provided.
     */ TableHotkeys1.prototype.updateSelectedRegionAtIndex = function(region, index) {
        var _a = this.props, children = _a.children, numRows = _a.numRows;
        var selectedRegions = this.state.selectedRegions;
        var numColumns = _react.Children.count(children);
        var maxRowIndex = Math.max(0, numRows - 1);
        var maxColumnIndex = Math.max(0, numColumns - 1);
        var clampedNextRegion = _regions.Regions.clampRegion(region, maxRowIndex, maxColumnIndex);
        var nextSelectedRegions = _regions.Regions.update(selectedRegions, clampedNextRegion, index);
        this.tableHandlers.handleSelection(nextSelectedRegions);
    };
    // Quadrant refs
    // =============
    TableHotkeys1.prototype.moveFocusCell = function(primaryAxis, secondaryAxis, isUpOrLeft, newFocusedCell, focusCellRegion) {
        var selectedRegions = this.state.selectedRegions;
        var primaryAxisPlural = primaryAxis === "row" ? "rows" : "cols";
        var secondaryAxisPlural = secondaryAxis === "row" ? "rows" : "cols";
        var movementDirection = isUpOrLeft ? -1 : 1;
        var regionIntervalIndex = isUpOrLeft ? 1 : 0;
        // try moving the cell in the direction along the primary axis
        newFocusedCell[primaryAxis] += movementDirection;
        var isPrimaryIndexOutOfBounds = isUpOrLeft ? newFocusedCell[primaryAxis] < focusCellRegion[primaryAxisPlural][0] : newFocusedCell[primaryAxis] > focusCellRegion[primaryAxisPlural][1];
        if (isPrimaryIndexOutOfBounds) {
            // if we moved outside the bounds of selection region,
            // move to the start (or end) of the primary axis, and move one along the secondary
            newFocusedCell[primaryAxis] = focusCellRegion[primaryAxisPlural][regionIntervalIndex];
            newFocusedCell[secondaryAxis] += movementDirection;
            var isSecondaryIndexOutOfBounds = isUpOrLeft ? newFocusedCell[secondaryAxis] < focusCellRegion[secondaryAxisPlural][0] : newFocusedCell[secondaryAxis] > focusCellRegion[secondaryAxisPlural][1];
            if (isSecondaryIndexOutOfBounds) {
                // if moving along the secondary also moves us outside
                // go to the start (or end) of the next (or previous region)
                // (note that if there's only one region you'll be moving to the opposite corner, which is fine)
                var newFocusCellSelectionIndex = newFocusedCell.focusSelectionIndex + movementDirection;
                // newFocusCellSelectionIndex should be one more (or less), unless we need to wrap around
                if (isUpOrLeft ? newFocusCellSelectionIndex < 0 : newFocusCellSelectionIndex >= selectedRegions.length) newFocusCellSelectionIndex = isUpOrLeft ? selectedRegions.length - 1 : 0;
                var newFocusCellRegion = _regions.Regions.getCellRegionFromRegion(selectedRegions[newFocusCellSelectionIndex], this.grid.numRows, this.grid.numCols);
                newFocusedCell = {
                    col: newFocusCellRegion.cols[regionIntervalIndex],
                    focusSelectionIndex: newFocusCellSelectionIndex,
                    row: newFocusCellRegion.rows[regionIntervalIndex]
                };
            }
        }
        return newFocusedCell;
    };
    return TableHotkeys1;
}();

},{"react":"21dqq","./common/clipboard":"dw2dA","./common/direction":"eYkwi","./common/errors":"9OyVd","./common/internal/focusedCellUtils":"iMxUs","./common/internal/selectionUtils":"6uctM","./regions":"8S4uE","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"eYkwi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Direction", ()=>Direction
);
var Direction;
(function(Direction1) {
    Direction1["UP"] = "up";
    Direction1["DOWN"] = "down";
    Direction1["LEFT"] = "left";
    Direction1["RIGHT"] = "right";
})(Direction || (Direction = {}));

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"6uctM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Resizes the provided region by 1 row/column in the specified direction,
 * returning a new region instance. The region may either expand *or* contract
 * depending on the presence and location of the focused cell.
 *
 * If no focused cell is provided, the region will always be *expanded* in the
 * specified direction.
 *
 * If a focused cell *is* provided, the behavior will change depending on where
 * the focused cell is within the region:
 *
 *   1. If along a top/bottom boundary while resizing UP/DOWN, the resize will
 *      expand from or shrink to the focused cell (same if along a left/right
 *      boundary while moving LEFT/RIGHT).
 *   2. If *not* along a top/bottom boundary while resizing UP/DOWN (or if *not*
 *      along a left/right boundary while moving LEFT/RIGHT), the region will
 *      simply expand in the specified direction.
 *
 * Other notes:
 * - A CELLS region can be resized vertically or horizontally.
 * - A FULL_ROWS region can be resized only vertically.
 * - A FULL_COLUMNS region can be resized only horizontally.
 * - A FULL_TABLE region cannot be resized.
 *
 * This function does not clamp the indices of the returned region; that is the
 * responsibility of the caller.
 */ parcelHelpers.export(exports, "resizeRegion", ()=>resizeRegion
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _regions = require("../../regions");
var _direction = require("../direction");
var _directionUtils = require("./directionUtils");
var _focusedCellUtils = require("./focusedCellUtils");
function resizeRegion(region, direction, focusedCell) {
    if (_regions.Regions.getRegionCardinality(region) === _regions.RegionCardinality.FULL_TABLE) // return the same instance to maintain referential integrity and
    // possibly avoid unnecessary update lifecycles.
    return region;
    var nextRegion = _regions.Regions.copy(region);
    var affectedRowIndex = 0;
    var affectedColumnIndex = 0;
    if (focusedCell != null) {
        var isAtTop = _focusedCellUtils.isFocusedCellAtRegionTop(nextRegion, focusedCell);
        var isAtBottom = _focusedCellUtils.isFocusedCellAtRegionBottom(nextRegion, focusedCell);
        var isAtLeft = _focusedCellUtils.isFocusedCellAtRegionLeft(nextRegion, focusedCell);
        var isAtRight = _focusedCellUtils.isFocusedCellAtRegionRight(nextRegion, focusedCell);
        // the focused cell is found along the top and bottom boundary
        // simultaneously when the region is 1 row tall. check for this and
        // similar special cases.
        if (direction === _direction.Direction.UP) affectedRowIndex = isAtTop && !isAtBottom ? 1 : 0;
        else if (direction === _direction.Direction.DOWN) affectedRowIndex = isAtBottom && !isAtTop ? 0 : 1;
        else if (direction === _direction.Direction.LEFT) affectedColumnIndex = isAtLeft && !isAtRight ? 1 : 0;
        else // i.e. `Direction.RIGHT:`
        affectedColumnIndex = isAtRight && !isAtLeft ? 0 : 1;
    } else {
        // when there is no focused cell, expand in the specified direction.
        affectedRowIndex = direction === _direction.Direction.DOWN ? 1 : 0;
        affectedColumnIndex = direction === _direction.Direction.RIGHT ? 1 : 0;
    }
    var delta = _directionUtils.directionToDelta(direction);
    if (nextRegion.rows != null) nextRegion.rows[affectedRowIndex] += delta.rows;
    if (nextRegion.cols != null) nextRegion.cols[affectedColumnIndex] += delta.cols;
    // the new coordinates might be out of bounds. the caller is responsible for
    // sanitizing the result.
    return nextRegion;
}

},{"../../regions":"8S4uE","../direction":"eYkwi","./directionUtils":"3qd9H","./focusedCellUtils":"iMxUs","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"3qd9H":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "directionToDelta", ()=>directionToDelta
);
/*
 * Copyright 2017 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _direction = require("../direction");
function directionToDelta(direction) {
    switch(direction){
        case _direction.Direction.UP:
            return {
                rows: -1,
                cols: 0
            };
        case _direction.Direction.DOWN:
            return {
                rows: 1,
                cols: 0
            };
        case _direction.Direction.LEFT:
            return {
                rows: 0,
                cols: -1
            };
        case _direction.Direction.RIGHT:
            return {
                rows: 0,
                cols: 1
            };
    }
}

},{"../direction":"eYkwi","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"0561q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "clampNumFrozenColumns", ()=>clampNumFrozenColumns
);
parcelHelpers.export(exports, "clampNumFrozenRows", ()=>clampNumFrozenRows
);
parcelHelpers.export(exports, "hasLoadingOption", ()=>hasLoadingOption
);
/*
 * Copyright 2021 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var _react = require("react");
var _utils = require("./common/utils");
function clampNumFrozenColumns(props) {
    var numFrozenColumns = props.numFrozenColumns;
    var numColumns = _react.Children.count(props.children);
    return maybeClampValue(numFrozenColumns, numColumns);
}
function clampNumFrozenRows(props) {
    var numFrozenRows = props.numFrozenRows, numRows = props.numRows;
    return maybeClampValue(numFrozenRows, numRows);
}
function maybeClampValue(value, max) {
    return value === undefined ? 0 : _utils.Utils.clamp(value, 0, max);
}
function hasLoadingOption(loadingOptions, loadingOption) {
    if (loadingOptions === undefined) return false;
    return loadingOptions.indexOf(loadingOption) >= 0;
}

},{"react":"21dqq","./common/utils":"ee8Nq","@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"4xnao":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>Fuse
);
/**
 * Fuse.js v6.5.3 - Lightweight fuzzy-search (http://fusejs.io)
 *
 * Copyright (c) 2021 Kiro Risk (http://kiro.me)
 * All Rights Reserved. Apache Software License 2.0
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */ function isArray(value) {
    return !Array.isArray ? getTag(value) === '[object Array]' : Array.isArray(value);
}
// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js
const INFINITY = 1 / 0;
function baseToString(value) {
    // Exit early for strings to avoid a performance hit in some environments.
    if (typeof value == 'string') return value;
    let result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
}
function toString(value) {
    return value == null ? '' : baseToString(value);
}
function isString(value) {
    return typeof value === 'string';
}
function isNumber(value) {
    return typeof value === 'number';
}
// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js
function isBoolean(value) {
    return value === true || value === false || isObjectLike(value) && getTag(value) == '[object Boolean]';
}
function isObject(value) {
    return typeof value === 'object';
}
// Checks if `value` is object-like.
function isObjectLike(value) {
    return isObject(value) && value !== null;
}
function isDefined(value) {
    return value !== undefined && value !== null;
}
function isBlank(value) {
    return !value.trim().length;
}
// Gets the `toStringTag` of `value`.
// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js
function getTag(value) {
    return value == null ? value === undefined ? '[object Undefined]' : '[object Null]' : Object.prototype.toString.call(value);
}
const EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';
const INCORRECT_INDEX_TYPE = "Incorrect 'index' type";
const LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key)=>`Invalid value for key ${key}`
;
const PATTERN_LENGTH_TOO_LARGE = (max)=>`Pattern length exceeds max of ${max}.`
;
const MISSING_KEY_PROPERTY = (name)=>`Missing ${name} property in key`
;
const INVALID_KEY_WEIGHT_VALUE = (key)=>`Property 'weight' in key '${key}' must be a positive integer`
;
const hasOwn = Object.prototype.hasOwnProperty;
class KeyStore {
    constructor(keys){
        this._keys = [];
        this._keyMap = {};
        let totalWeight = 0;
        keys.forEach((key)=>{
            let obj = createKey(key);
            totalWeight += obj.weight;
            this._keys.push(obj);
            this._keyMap[obj.id] = obj;
            totalWeight += obj.weight;
        });
        // Normalize weights so that their sum is equal to 1
        this._keys.forEach((key)=>{
            key.weight /= totalWeight;
        });
    }
    get(keyId) {
        return this._keyMap[keyId];
    }
    keys() {
        return this._keys;
    }
    toJSON() {
        return JSON.stringify(this._keys);
    }
}
function createKey(key) {
    let path = null;
    let id = null;
    let src = null;
    let weight = 1;
    if (isString(key) || isArray(key)) {
        src = key;
        path = createKeyPath(key);
        id = createKeyId(key);
    } else {
        if (!hasOwn.call(key, 'name')) throw new Error(MISSING_KEY_PROPERTY('name'));
        const name = key.name;
        src = name;
        if (hasOwn.call(key, 'weight')) {
            weight = key.weight;
            if (weight <= 0) throw new Error(INVALID_KEY_WEIGHT_VALUE(name));
        }
        path = createKeyPath(name);
        id = createKeyId(name);
    }
    return {
        path,
        id,
        weight,
        src
    };
}
function createKeyPath(key) {
    return isArray(key) ? key : key.split('.');
}
function createKeyId(key) {
    return isArray(key) ? key.join('.') : key;
}
function get(obj1, path1) {
    let list = [];
    let arr = false;
    const deepGet = (obj, path, index)=>{
        if (!isDefined(obj)) return;
        if (!path[index]) // If there's no path left, we've arrived at the object we care about.
        list.push(obj);
        else {
            let key = path[index];
            const value = obj[key];
            if (!isDefined(value)) return;
            // If we're at the last value in the path, and if it's a string/number/bool,
            // add it to the list
            if (index === path.length - 1 && (isString(value) || isNumber(value) || isBoolean(value))) list.push(toString(value));
            else if (isArray(value)) {
                arr = true;
                // Search each item in the array.
                for(let i = 0, len = value.length; i < len; i += 1)deepGet(value[i], path, index + 1);
            } else if (path.length) // An object. Recurse further.
            deepGet(value, path, index + 1);
        }
    };
    // Backwards compatibility (since path used to be a string)
    deepGet(obj1, isString(path1) ? path1.split('.') : path1, 0);
    return arr ? list : list[0];
}
const MatchOptions = {
    // Whether the matches should be included in the result set. When `true`, each record in the result
    // set will include the indices of the matched characters.
    // These can consequently be used for highlighting purposes.
    includeMatches: false,
    // When `true`, the matching function will continue to the end of a search pattern even if
    // a perfect match has already been located in the string.
    findAllMatches: false,
    // Minimum number of characters that must be matched before a result is considered a match
    minMatchCharLength: 1
};
const BasicOptions = {
    // When `true`, the algorithm continues searching to the end of the input even if a perfect
    // match is found before the end of the same input.
    isCaseSensitive: false,
    // When true, the matching function will continue to the end of a search pattern even if
    includeScore: false,
    // List of properties that will be searched. This also supports nested properties.
    keys: [],
    // Whether to sort the result list, by score
    shouldSort: true,
    // Default sort function: sort by ascending score, ascending index
    sortFn: (a, b)=>a.score === b.score ? a.idx < b.idx ? -1 : 1 : a.score < b.score ? -1 : 1
};
const FuzzyOptions = {
    // Approximately where in the text is the pattern expected to be found?
    location: 0,
    // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match
    // (of both letters and location), a threshold of '1.0' would match anything.
    threshold: 0.6,
    // Determines how close the match must be to the fuzzy location (specified above).
    // An exact letter match which is 'distance' characters away from the fuzzy location
    // would score as a complete mismatch. A distance of '0' requires the match be at
    // the exact location specified, a threshold of '1000' would require a perfect match
    // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.
    distance: 100
};
const AdvancedOptions = {
    // When `true`, it enables the use of unix-like search commands
    useExtendedSearch: false,
    // The get function to use when fetching an object's properties.
    // The default will search nested paths *ie foo.bar.baz*
    getFn: get,
    // When `true`, search will ignore `location` and `distance`, so it won't matter
    // where in the string the pattern appears.
    // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score
    ignoreLocation: false,
    // When `true`, the calculation for the relevance score (used for sorting) will
    // ignore the field-length norm.
    // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm
    ignoreFieldNorm: false,
    // The weight to determine how much field length norm effects scoring.
    fieldNormWeight: 1
};
var Config = {
    ...BasicOptions,
    ...MatchOptions,
    ...FuzzyOptions,
    ...AdvancedOptions
};
const SPACE = /[^ ]+/g;
// Field-length norm: the shorter the field, the higher the weight.
// Set to 3 decimals to reduce index size.
function norm(weight = 1, mantissa = 3) {
    const cache = new Map();
    const m = Math.pow(10, mantissa);
    return {
        get (value) {
            const numTokens = value.match(SPACE).length;
            if (cache.has(numTokens)) return cache.get(numTokens);
            // Default function is 1/sqrt(x), weight makes that variable
            const norm1 = 1 / Math.pow(numTokens, 0.5 * weight);
            // In place of `toFixed(mantissa)`, for faster computation
            const n = parseFloat(Math.round(norm1 * m) / m);
            cache.set(numTokens, n);
            return n;
        },
        clear () {
            cache.clear();
        }
    };
}
class FuseIndex {
    constructor({ getFn =Config.getFn , fieldNormWeight =Config.fieldNormWeight  } = {}){
        this.norm = norm(fieldNormWeight, 3);
        this.getFn = getFn;
        this.isCreated = false;
        this.setIndexRecords();
    }
    setSources(docs = []) {
        this.docs = docs;
    }
    setIndexRecords(records = []) {
        this.records = records;
    }
    setKeys(keys = []) {
        this.keys = keys;
        this._keysMap = {};
        keys.forEach((key, idx)=>{
            this._keysMap[key.id] = idx;
        });
    }
    create() {
        if (this.isCreated || !this.docs.length) return;
        this.isCreated = true;
        // List is Array<String>
        if (isString(this.docs[0])) this.docs.forEach((doc, docIndex)=>{
            this._addString(doc, docIndex);
        });
        else // List is Array<Object>
        this.docs.forEach((doc, docIndex)=>{
            this._addObject(doc, docIndex);
        });
        this.norm.clear();
    }
    // Adds a doc to the end of the index
    add(doc) {
        const idx = this.size();
        if (isString(doc)) this._addString(doc, idx);
        else this._addObject(doc, idx);
    }
    // Removes the doc at the specified index of the index
    removeAt(idx) {
        this.records.splice(idx, 1);
        // Change ref index of every subsquent doc
        for(let i = idx, len = this.size(); i < len; i += 1)this.records[i].i -= 1;
    }
    getValueForItemAtKeyId(item, keyId) {
        return item[this._keysMap[keyId]];
    }
    size() {
        return this.records.length;
    }
    _addString(doc, docIndex) {
        if (!isDefined(doc) || isBlank(doc)) return;
        let record = {
            v: doc,
            i: docIndex,
            n: this.norm.get(doc)
        };
        this.records.push(record);
    }
    _addObject(doc, docIndex) {
        let record = {
            i: docIndex,
            $: {}
        };
        // Iterate over every key (i.e, path), and fetch the value at that key
        this.keys.forEach((key, keyIndex)=>{
            // console.log(key)
            let value = this.getFn(doc, key.path);
            if (!isDefined(value)) return;
            if (isArray(value)) {
                let subRecords = [];
                const stack = [
                    {
                        nestedArrIndex: -1,
                        value
                    }
                ];
                while(stack.length){
                    const { nestedArrIndex , value  } = stack.pop();
                    if (!isDefined(value)) continue;
                    if (isString(value) && !isBlank(value)) {
                        let subRecord = {
                            v: value,
                            i: nestedArrIndex,
                            n: this.norm.get(value)
                        };
                        subRecords.push(subRecord);
                    } else if (isArray(value)) value.forEach((item, k)=>{
                        stack.push({
                            nestedArrIndex: k,
                            value: item
                        });
                    });
                }
                record.$[keyIndex] = subRecords;
            } else if (!isBlank(value)) {
                let subRecord = {
                    v: value,
                    n: this.norm.get(value)
                };
                record.$[keyIndex] = subRecord;
            }
        });
        this.records.push(record);
    }
    toJSON() {
        return {
            keys: this.keys,
            records: this.records
        };
    }
}
function createIndex(keys, docs, { getFn =Config.getFn , fieldNormWeight =Config.fieldNormWeight  } = {}) {
    const myIndex = new FuseIndex({
        getFn,
        fieldNormWeight
    });
    myIndex.setKeys(keys.map(createKey));
    myIndex.setSources(docs);
    myIndex.create();
    return myIndex;
}
function parseIndex(data, { getFn =Config.getFn , fieldNormWeight =Config.fieldNormWeight  } = {}) {
    const { keys , records  } = data;
    const myIndex = new FuseIndex({
        getFn,
        fieldNormWeight
    });
    myIndex.setKeys(keys);
    myIndex.setIndexRecords(records);
    return myIndex;
}
function computeScore$1(pattern, { errors =0 , currentLocation =0 , expectedLocation =0 , distance =Config.distance , ignoreLocation =Config.ignoreLocation  } = {}) {
    const accuracy = errors / pattern.length;
    if (ignoreLocation) return accuracy;
    const proximity = Math.abs(expectedLocation - currentLocation);
    if (!distance) // Dodge divide by zero error.
    return proximity ? 1.0 : accuracy;
    return accuracy + proximity / distance;
}
function convertMaskToIndices(matchmask = [], minMatchCharLength = Config.minMatchCharLength) {
    let indices = [];
    let start = -1;
    let end = -1;
    let i = 0;
    for(let len = matchmask.length; i < len; i += 1){
        let match = matchmask[i];
        if (match && start === -1) start = i;
        else if (!match && start !== -1) {
            end = i - 1;
            if (end - start + 1 >= minMatchCharLength) indices.push([
                start,
                end
            ]);
            start = -1;
        }
    }
    // (i-1 - start) + 1 => i - start
    if (matchmask[i - 1] && i - start >= minMatchCharLength) indices.push([
        start,
        i - 1
    ]);
    return indices;
}
// Machine word size
const MAX_BITS = 32;
function search(text, pattern, patternAlphabet, { location =Config.location , distance =Config.distance , threshold =Config.threshold , findAllMatches =Config.findAllMatches , minMatchCharLength =Config.minMatchCharLength , includeMatches =Config.includeMatches , ignoreLocation =Config.ignoreLocation  } = {}) {
    if (pattern.length > MAX_BITS) throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));
    const patternLen = pattern.length;
    // Set starting location at beginning text and initialize the alphabet.
    const textLen = text.length;
    // Handle the case when location > text.length
    const expectedLocation = Math.max(0, Math.min(location, textLen));
    // Highest score beyond which we give up.
    let currentThreshold = threshold;
    // Is there a nearby exact match? (speedup)
    let bestLocation = expectedLocation;
    // Performance: only computer matches when the minMatchCharLength > 1
    // OR if `includeMatches` is true.
    const computeMatches = minMatchCharLength > 1 || includeMatches;
    // A mask of the matches, used for building the indices
    const matchMask = computeMatches ? Array(textLen) : [];
    let index;
    // Get all exact matches, here for speed up
    while((index = text.indexOf(pattern, bestLocation)) > -1){
        let score = computeScore$1(pattern, {
            currentLocation: index,
            expectedLocation,
            distance,
            ignoreLocation
        });
        currentThreshold = Math.min(score, currentThreshold);
        bestLocation = index + patternLen;
        if (computeMatches) {
            let i = 0;
            while(i < patternLen){
                matchMask[index + i] = 1;
                i += 1;
            }
        }
    }
    // Reset the best location
    bestLocation = -1;
    let lastBitArr = [];
    let finalScore = 1;
    let binMax = patternLen + textLen;
    const mask = 1 << patternLen - 1;
    for(let i = 0; i < patternLen; i += 1){
        // Scan for the best match; each iteration allows for one more error.
        // Run a binary search to determine how far from the match location we can stray
        // at this error level.
        let binMin = 0;
        let binMid = binMax;
        while(binMin < binMid){
            const score = computeScore$1(pattern, {
                errors: i,
                currentLocation: expectedLocation + binMid,
                expectedLocation,
                distance,
                ignoreLocation
            });
            if (score <= currentThreshold) binMin = binMid;
            else binMax = binMid;
            binMid = Math.floor((binMax - binMin) / 2 + binMin);
        }
        // Use the result from this iteration as the maximum for the next.
        binMax = binMid;
        let start = Math.max(1, expectedLocation - binMid + 1);
        let finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;
        // Initialize the bit array
        let bitArr = Array(finish + 2);
        bitArr[finish + 1] = (1 << i) - 1;
        for(let j = finish; j >= start; j -= 1){
            let currentLocation = j - 1;
            let charMatch = patternAlphabet[text.charAt(currentLocation)];
            if (computeMatches) // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)
            matchMask[currentLocation] = +!!charMatch;
            // First pass: exact match
            bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;
            // Subsequent passes: fuzzy match
            if (i) bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];
            if (bitArr[j] & mask) {
                finalScore = computeScore$1(pattern, {
                    errors: i,
                    currentLocation,
                    expectedLocation,
                    distance,
                    ignoreLocation
                });
                // This match will almost certainly be better than any existing match.
                // But check anyway.
                if (finalScore <= currentThreshold) {
                    // Indeed it is
                    currentThreshold = finalScore;
                    bestLocation = currentLocation;
                    // Already passed `loc`, downhill from here on in.
                    if (bestLocation <= expectedLocation) break;
                    // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.
                    start = Math.max(1, 2 * expectedLocation - bestLocation);
                }
            }
        }
        // No hope for a (better) match at greater error levels.
        const score = computeScore$1(pattern, {
            errors: i + 1,
            currentLocation: expectedLocation,
            expectedLocation,
            distance,
            ignoreLocation
        });
        if (score > currentThreshold) break;
        lastBitArr = bitArr;
    }
    const result = {
        isMatch: bestLocation >= 0,
        // Count exact matches (those with a score of 0) to be "almost" exact
        score: Math.max(0.001, finalScore)
    };
    if (computeMatches) {
        const indices = convertMaskToIndices(matchMask, minMatchCharLength);
        if (!indices.length) result.isMatch = false;
        else if (includeMatches) result.indices = indices;
    }
    return result;
}
function createPatternAlphabet(pattern) {
    let mask = {};
    for(let i = 0, len = pattern.length; i < len; i += 1){
        const char = pattern.charAt(i);
        mask[char] = (mask[char] || 0) | 1 << len - i - 1;
    }
    return mask;
}
class BitapSearch {
    constructor(pattern1, { location =Config.location , threshold =Config.threshold , distance =Config.distance , includeMatches =Config.includeMatches , findAllMatches =Config.findAllMatches , minMatchCharLength =Config.minMatchCharLength , isCaseSensitive =Config.isCaseSensitive , ignoreLocation =Config.ignoreLocation  } = {}){
        this.options = {
            location,
            threshold,
            distance,
            includeMatches,
            findAllMatches,
            minMatchCharLength,
            isCaseSensitive,
            ignoreLocation
        };
        this.pattern = isCaseSensitive ? pattern1 : pattern1.toLowerCase();
        this.chunks = [];
        if (!this.pattern.length) return;
        const addChunk = (pattern, startIndex)=>{
            this.chunks.push({
                pattern,
                alphabet: createPatternAlphabet(pattern),
                startIndex
            });
        };
        const len = this.pattern.length;
        if (len > MAX_BITS) {
            let i = 0;
            const remainder = len % MAX_BITS;
            const end = len - remainder;
            while(i < end){
                addChunk(this.pattern.substr(i, MAX_BITS), i);
                i += MAX_BITS;
            }
            if (remainder) {
                const startIndex = len - MAX_BITS;
                addChunk(this.pattern.substr(startIndex), startIndex);
            }
        } else addChunk(this.pattern, 0);
    }
    searchIn(text) {
        const { isCaseSensitive , includeMatches  } = this.options;
        if (!isCaseSensitive) text = text.toLowerCase();
        // Exact match
        if (this.pattern === text) {
            let result = {
                isMatch: true,
                score: 0
            };
            if (includeMatches) result.indices = [
                [
                    0,
                    text.length - 1
                ]
            ];
            return result;
        }
        // Otherwise, use Bitap algorithm
        const { location , distance , threshold , findAllMatches , minMatchCharLength , ignoreLocation  } = this.options;
        let allIndices = [];
        let totalScore = 0;
        let hasMatches = false;
        this.chunks.forEach(({ pattern , alphabet , startIndex  })=>{
            const { isMatch , score , indices  } = search(text, pattern, alphabet, {
                location: location + startIndex,
                distance,
                threshold,
                findAllMatches,
                minMatchCharLength,
                includeMatches,
                ignoreLocation
            });
            if (isMatch) hasMatches = true;
            totalScore += score;
            if (isMatch && indices) allIndices = [
                ...allIndices,
                ...indices
            ];
        });
        let result = {
            isMatch: hasMatches,
            score: hasMatches ? totalScore / this.chunks.length : 1
        };
        if (hasMatches && includeMatches) result.indices = allIndices;
        return result;
    }
}
class BaseMatch {
    constructor(pattern){
        this.pattern = pattern;
    }
    static isMultiMatch(pattern) {
        return getMatch(pattern, this.multiRegex);
    }
    static isSingleMatch(pattern) {
        return getMatch(pattern, this.singleRegex);
    }
    search() {}
}
function getMatch(pattern, exp) {
    const matches = pattern.match(exp);
    return matches ? matches[1] : null;
}
// Token: 'file
class ExactMatch extends BaseMatch {
    constructor(pattern){
        super(pattern);
    }
    static get type() {
        return 'exact';
    }
    static get multiRegex() {
        return /^="(.*)"$/;
    }
    static get singleRegex() {
        return /^=(.*)$/;
    }
    search(text) {
        const isMatch = text === this.pattern;
        return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [
                0,
                this.pattern.length - 1
            ]
        };
    }
}
// Token: !fire
class InverseExactMatch extends BaseMatch {
    constructor(pattern){
        super(pattern);
    }
    static get type() {
        return 'inverse-exact';
    }
    static get multiRegex() {
        return /^!"(.*)"$/;
    }
    static get singleRegex() {
        return /^!(.*)$/;
    }
    search(text) {
        const index = text.indexOf(this.pattern);
        const isMatch = index === -1;
        return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [
                0,
                text.length - 1
            ]
        };
    }
}
// Token: ^file
class PrefixExactMatch extends BaseMatch {
    constructor(pattern){
        super(pattern);
    }
    static get type() {
        return 'prefix-exact';
    }
    static get multiRegex() {
        return /^\^"(.*)"$/;
    }
    static get singleRegex() {
        return /^\^(.*)$/;
    }
    search(text) {
        const isMatch = text.startsWith(this.pattern);
        return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [
                0,
                this.pattern.length - 1
            ]
        };
    }
}
// Token: !^fire
class InversePrefixExactMatch extends BaseMatch {
    constructor(pattern){
        super(pattern);
    }
    static get type() {
        return 'inverse-prefix-exact';
    }
    static get multiRegex() {
        return /^!\^"(.*)"$/;
    }
    static get singleRegex() {
        return /^!\^(.*)$/;
    }
    search(text) {
        const isMatch = !text.startsWith(this.pattern);
        return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [
                0,
                text.length - 1
            ]
        };
    }
}
// Token: .file$
class SuffixExactMatch extends BaseMatch {
    constructor(pattern){
        super(pattern);
    }
    static get type() {
        return 'suffix-exact';
    }
    static get multiRegex() {
        return /^"(.*)"\$$/;
    }
    static get singleRegex() {
        return /^(.*)\$$/;
    }
    search(text) {
        const isMatch = text.endsWith(this.pattern);
        return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [
                text.length - this.pattern.length,
                text.length - 1
            ]
        };
    }
}
// Token: !.file$
class InverseSuffixExactMatch extends BaseMatch {
    constructor(pattern){
        super(pattern);
    }
    static get type() {
        return 'inverse-suffix-exact';
    }
    static get multiRegex() {
        return /^!"(.*)"\$$/;
    }
    static get singleRegex() {
        return /^!(.*)\$$/;
    }
    search(text) {
        const isMatch = !text.endsWith(this.pattern);
        return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices: [
                0,
                text.length - 1
            ]
        };
    }
}
class FuzzyMatch extends BaseMatch {
    constructor(pattern, { location =Config.location , threshold =Config.threshold , distance =Config.distance , includeMatches =Config.includeMatches , findAllMatches =Config.findAllMatches , minMatchCharLength =Config.minMatchCharLength , isCaseSensitive =Config.isCaseSensitive , ignoreLocation =Config.ignoreLocation  } = {}){
        super(pattern);
        this._bitapSearch = new BitapSearch(pattern, {
            location,
            threshold,
            distance,
            includeMatches,
            findAllMatches,
            minMatchCharLength,
            isCaseSensitive,
            ignoreLocation
        });
    }
    static get type() {
        return 'fuzzy';
    }
    static get multiRegex() {
        return /^"(.*)"$/;
    }
    static get singleRegex() {
        return /^(.*)$/;
    }
    search(text) {
        return this._bitapSearch.searchIn(text);
    }
}
// Token: 'file
class IncludeMatch extends BaseMatch {
    constructor(pattern){
        super(pattern);
    }
    static get type() {
        return 'include';
    }
    static get multiRegex() {
        return /^'"(.*)"$/;
    }
    static get singleRegex() {
        return /^'(.*)$/;
    }
    search(text) {
        let location = 0;
        let index;
        const indices = [];
        const patternLen = this.pattern.length;
        // Get all exact matches
        while((index = text.indexOf(this.pattern, location)) > -1){
            location = index + patternLen;
            indices.push([
                index,
                location - 1
            ]);
        }
        const isMatch = !!indices.length;
        return {
            isMatch,
            score: isMatch ? 0 : 1,
            indices
        };
    }
}
// ❗Order is important. DO NOT CHANGE.
const searchers = [
    ExactMatch,
    IncludeMatch,
    PrefixExactMatch,
    InversePrefixExactMatch,
    InverseSuffixExactMatch,
    SuffixExactMatch,
    InverseExactMatch,
    FuzzyMatch
];
const searchersLen = searchers.length;
// Regex to split by spaces, but keep anything in quotes together
const SPACE_RE = / +(?=([^\"]*\"[^\"]*\")*[^\"]*$)/;
const OR_TOKEN = '|';
// Return a 2D array representation of the query, for simpler parsing.
// Example:
// "^core go$ | rb$ | py$ xy$" => [["^core", "go$"], ["rb$"], ["py$", "xy$"]]
function parseQuery(pattern, options = {}) {
    return pattern.split(OR_TOKEN).map((item1)=>{
        let query = item1.trim().split(SPACE_RE).filter((item)=>item && !!item.trim()
        );
        let results = [];
        for(let i = 0, len = query.length; i < len; i += 1){
            const queryItem = query[i];
            // 1. Handle multiple query match (i.e, once that are quoted, like `"hello world"`)
            let found = false;
            let idx = -1;
            while(!found && ++idx < searchersLen){
                const searcher = searchers[idx];
                let token = searcher.isMultiMatch(queryItem);
                if (token) {
                    results.push(new searcher(token, options));
                    found = true;
                }
            }
            if (found) continue;
            // 2. Handle single query matches (i.e, once that are *not* quoted)
            idx = -1;
            while(++idx < searchersLen){
                const searcher = searchers[idx];
                let token = searcher.isSingleMatch(queryItem);
                if (token) {
                    results.push(new searcher(token, options));
                    break;
                }
            }
        }
        return results;
    });
}
// These extended matchers can return an array of matches, as opposed
// to a singl match
const MultiMatchSet = new Set([
    FuzzyMatch.type,
    IncludeMatch.type
]);
/**
 * Command-like searching
 * ======================
 *
 * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,
 * search in a given text.
 *
 * Search syntax:
 *
 * | Token       | Match type                 | Description                            |
 * | ----------- | -------------------------- | -------------------------------------- |
 * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |
 * | `=scheme`   | exact-match                | Items that are `scheme`                |
 * | `'python`   | include-match              | Items that include `python`            |
 * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |
 * | `^java`     | prefix-exact-match         | Items that start with `java`           |
 * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |
 * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |
 * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |
 *
 * A single pipe character acts as an OR operator. For example, the following
 * query matches entries that start with `core` and end with either`go`, `rb`,
 * or`py`.
 *
 * ```
 * ^core go$ | rb$ | py$
 * ```
 */ class ExtendedSearch {
    constructor(pattern, { isCaseSensitive =Config.isCaseSensitive , includeMatches =Config.includeMatches , minMatchCharLength =Config.minMatchCharLength , ignoreLocation =Config.ignoreLocation , findAllMatches =Config.findAllMatches , location =Config.location , threshold =Config.threshold , distance =Config.distance  } = {}){
        this.query = null;
        this.options = {
            isCaseSensitive,
            includeMatches,
            minMatchCharLength,
            findAllMatches,
            ignoreLocation,
            location,
            threshold,
            distance
        };
        this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
        this.query = parseQuery(this.pattern, this.options);
    }
    static condition(_, options) {
        return options.useExtendedSearch;
    }
    searchIn(text) {
        const query = this.query;
        if (!query) return {
            isMatch: false,
            score: 1
        };
        const { includeMatches , isCaseSensitive  } = this.options;
        text = isCaseSensitive ? text : text.toLowerCase();
        let numMatches = 0;
        let allIndices = [];
        let totalScore = 0;
        // ORs
        for(let i = 0, qLen = query.length; i < qLen; i += 1){
            const searchers1 = query[i];
            // Reset indices
            allIndices.length = 0;
            numMatches = 0;
            // ANDs
            for(let j = 0, pLen = searchers1.length; j < pLen; j += 1){
                const searcher = searchers1[j];
                const { isMatch , indices , score  } = searcher.search(text);
                if (isMatch) {
                    numMatches += 1;
                    totalScore += score;
                    if (includeMatches) {
                        const type = searcher.constructor.type;
                        if (MultiMatchSet.has(type)) allIndices = [
                            ...allIndices,
                            ...indices
                        ];
                        else allIndices.push(indices);
                    }
                } else {
                    totalScore = 0;
                    numMatches = 0;
                    allIndices.length = 0;
                    break;
                }
            }
            // OR condition, so if TRUE, return
            if (numMatches) {
                let result = {
                    isMatch: true,
                    score: totalScore / numMatches
                };
                if (includeMatches) result.indices = allIndices;
                return result;
            }
        }
        // Nothing was matched
        return {
            isMatch: false,
            score: 1
        };
    }
}
const registeredSearchers = [];
function register(...args) {
    registeredSearchers.push(...args);
}
function createSearcher(pattern, options) {
    for(let i = 0, len = registeredSearchers.length; i < len; i += 1){
        let searcherClass = registeredSearchers[i];
        if (searcherClass.condition(pattern, options)) return new searcherClass(pattern, options);
    }
    return new BitapSearch(pattern, options);
}
const LogicalOperator = {
    AND: '$and',
    OR: '$or'
};
const KeyType = {
    PATH: '$path',
    PATTERN: '$val'
};
const isExpression = (query)=>!!(query[LogicalOperator.AND] || query[LogicalOperator.OR])
;
const isPath = (query)=>!!query[KeyType.PATH]
;
const isLeaf = (query)=>!isArray(query) && isObject(query) && !isExpression(query)
;
const convertToExplicit = (query)=>({
        [LogicalOperator.AND]: Object.keys(query).map((key)=>({
                [key]: query[key]
            })
        )
    })
;
// When `auto` is `true`, the parse function will infer and initialize and add
// the appropriate `Searcher` instance
function parse(query1, options, { auto =true  } = {}) {
    const next = (query)=>{
        let keys = Object.keys(query);
        const isQueryPath = isPath(query);
        if (!isQueryPath && keys.length > 1 && !isExpression(query)) return next(convertToExplicit(query));
        if (isLeaf(query)) {
            const key = isQueryPath ? query[KeyType.PATH] : keys[0];
            const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];
            if (!isString(pattern)) throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key));
            const obj = {
                keyId: createKeyId(key),
                pattern
            };
            if (auto) obj.searcher = createSearcher(pattern, options);
            return obj;
        }
        let node = {
            children: [],
            operator: keys[0]
        };
        keys.forEach((key)=>{
            const value = query[key];
            if (isArray(value)) value.forEach((item)=>{
                node.children.push(next(item));
            });
        });
        return node;
    };
    if (!isExpression(query1)) query1 = convertToExplicit(query1);
    return next(query1);
}
// Practical scoring function
function computeScore(results, { ignoreFieldNorm =Config.ignoreFieldNorm  }) {
    results.forEach((result)=>{
        let totalScore = 1;
        result.matches.forEach(({ key , norm: norm2 , score  })=>{
            const weight = key ? key.weight : null;
            totalScore *= Math.pow(score === 0 && weight ? Number.EPSILON : score, (weight || 1) * (ignoreFieldNorm ? 1 : norm2));
        });
        result.score = totalScore;
    });
}
function transformMatches(result, data) {
    const matches = result.matches;
    data.matches = [];
    if (!isDefined(matches)) return;
    matches.forEach((match)=>{
        if (!isDefined(match.indices) || !match.indices.length) return;
        const { indices , value  } = match;
        let obj = {
            indices,
            value
        };
        if (match.key) obj.key = match.key.src;
        if (match.idx > -1) obj.refIndex = match.idx;
        data.matches.push(obj);
    });
}
function transformScore(result, data) {
    data.score = result.score;
}
function format(results, docs, { includeMatches =Config.includeMatches , includeScore =Config.includeScore  } = {}) {
    const transformers = [];
    if (includeMatches) transformers.push(transformMatches);
    if (includeScore) transformers.push(transformScore);
    return results.map((result)=>{
        const { idx  } = result;
        const data = {
            item: docs[idx],
            refIndex: idx
        };
        if (transformers.length) transformers.forEach((transformer)=>{
            transformer(result, data);
        });
        return data;
    });
}
class Fuse {
    constructor(docs, options = {}, index){
        this.options = {
            ...Config,
            ...options
        };
        this.options.useExtendedSearch;
        this._keyStore = new KeyStore(this.options.keys);
        this.setCollection(docs, index);
    }
    setCollection(docs, index) {
        this._docs = docs;
        if (index && !(index instanceof FuseIndex)) throw new Error(INCORRECT_INDEX_TYPE);
        this._myIndex = index || createIndex(this.options.keys, this._docs, {
            getFn: this.options.getFn,
            fieldNormWeight: this.options.fieldNormWeight
        });
    }
    add(doc) {
        if (!isDefined(doc)) return;
        this._docs.push(doc);
        this._myIndex.add(doc);
    }
    remove(predicate = ()=>false
    ) {
        const results = [];
        for(let i = 0, len = this._docs.length; i < len; i += 1){
            const doc = this._docs[i];
            if (predicate(doc, i)) {
                this.removeAt(i);
                i -= 1;
                len -= 1;
                results.push(doc);
            }
        }
        return results;
    }
    removeAt(idx) {
        this._docs.splice(idx, 1);
        this._myIndex.removeAt(idx);
    }
    getIndex() {
        return this._myIndex;
    }
    search(query, { limit =-1  } = {}) {
        const { includeMatches , includeScore , shouldSort , sortFn , ignoreFieldNorm  } = this.options;
        let results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);
        computeScore(results, {
            ignoreFieldNorm
        });
        if (shouldSort) results.sort(sortFn);
        if (isNumber(limit) && limit > -1) results = results.slice(0, limit);
        return format(results, this._docs, {
            includeMatches,
            includeScore
        });
    }
    _searchStringList(query) {
        const searcher = createSearcher(query, this.options);
        const { records  } = this._myIndex;
        const results = [];
        // Iterate over every string in the index
        records.forEach(({ v: text , i: idx , n: norm3  })=>{
            if (!isDefined(text)) return;
            const { isMatch , score , indices  } = searcher.searchIn(text);
            if (isMatch) results.push({
                item: text,
                idx,
                matches: [
                    {
                        score,
                        value: text,
                        norm: norm3,
                        indices
                    }
                ]
            });
        });
        return results;
    }
    _searchLogical(query) {
        const expression = parse(query, this.options);
        const evaluate = (node, item, idx)=>{
            if (!node.children) {
                const { keyId , searcher  } = node;
                const matches = this._findMatches({
                    key: this._keyStore.get(keyId),
                    value: this._myIndex.getValueForItemAtKeyId(item, keyId),
                    searcher
                });
                if (matches && matches.length) return [
                    {
                        idx,
                        item,
                        matches
                    }
                ];
                return [];
            }
            const res = [];
            for(let i = 0, len = node.children.length; i < len; i += 1){
                const child = node.children[i];
                const result = evaluate(child, item, idx);
                if (result.length) res.push(...result);
                else if (node.operator === LogicalOperator.AND) return [];
            }
            return res;
        };
        const records = this._myIndex.records;
        const resultMap = {};
        const results = [];
        records.forEach(({ $: item , i: idx  })=>{
            if (isDefined(item)) {
                let expResults = evaluate(expression, item, idx);
                if (expResults.length) {
                    // Dedupe when adding
                    if (!resultMap[idx]) {
                        resultMap[idx] = {
                            idx,
                            item,
                            matches: []
                        };
                        results.push(resultMap[idx]);
                    }
                    expResults.forEach(({ matches  })=>{
                        resultMap[idx].matches.push(...matches);
                    });
                }
            }
        });
        return results;
    }
    _searchObjectList(query) {
        const searcher = createSearcher(query, this.options);
        const { keys , records  } = this._myIndex;
        const results = [];
        // List is Array<Object>
        records.forEach(({ $: item , i: idx  })=>{
            if (!isDefined(item)) return;
            let matches = [];
            // Iterate over every key (i.e, path), and fetch the value at that key
            keys.forEach((key, keyIndex)=>{
                matches.push(...this._findMatches({
                    key,
                    value: item[keyIndex],
                    searcher
                }));
            });
            if (matches.length) results.push({
                idx,
                item,
                matches
            });
        });
        return results;
    }
    _findMatches({ key , value , searcher  }) {
        if (!isDefined(value)) return [];
        let matches = [];
        if (isArray(value)) value.forEach(({ v: text , i: idx , n: norm4  })=>{
            if (!isDefined(text)) return;
            const { isMatch , score , indices  } = searcher.searchIn(text);
            if (isMatch) matches.push({
                score,
                key,
                value: text,
                idx,
                norm: norm4,
                indices
            });
        });
        else {
            const { v: text , n: norm5  } = value;
            const { isMatch , score , indices  } = searcher.searchIn(text);
            if (isMatch) matches.push({
                score,
                key,
                value: text,
                norm: norm5,
                indices
            });
        }
        return matches;
    }
}
Fuse.version = '6.5.3';
Fuse.createIndex = createIndex;
Fuse.parseIndex = parseIndex;
Fuse.config = Config;
Fuse.parseQuery = parse;
register(ExtendedSearch);

},{"@parcel/transformer-js/src/esmodule-helpers.js":"gkKU3"}],"km3Ru":[function(require,module,exports) {
"use strict";
var Refresh = require('react-refresh/runtime');
function debounce(func, delay) {
    var args1;
    var timeout = undefined;
    return function(args) {
        clearTimeout(timeout);
        timeout = setTimeout(function() {
            timeout = undefined;
            func.call(null, args);
        }, delay);
    };
}
var enqueueUpdate = debounce(function() {
    Refresh.performReactRefresh();
}, 30); // Everthing below is either adapted or copied from
// https://github.com/facebook/metro/blob/61de16bd1edd7e738dd0311c89555a644023ab2d/packages/metro/src/lib/polyfills/require.js
// MIT License - Copyright (c) Facebook, Inc. and its affiliates.
module.exports.prelude = function(module) {
    window.$RefreshReg$ = function(type, id) {
        Refresh.register(type, module.id + ' ' + id);
    };
    window.$RefreshSig$ = Refresh.createSignatureFunctionForTransform;
};
module.exports.postlude = function(module) {
    if (isReactRefreshBoundary(module.exports)) {
        registerExportsForReactRefresh(module);
        if (module.hot) {
            module.hot.dispose(function(data) {
                if (Refresh.hasUnrecoverableErrors()) window.location.reload();
                data.prevExports = module.exports;
            });
            module.hot.accept(function(getParents) {
                var prevExports = module.hot.data.prevExports;
                var nextExports = module.exports; // Since we just executed the code for it, it's possible
                // that the new exports make it ineligible for being a boundary.
                var isNoLongerABoundary = !isReactRefreshBoundary(nextExports); // It can also become ineligible if its exports are incompatible
                // with the previous exports.
                // For example, if you add/remove/change exports, we'll want
                // to re-execute the importing modules, and force those components
                // to re-render. Similarly, if you convert a class component
                // to a function, we want to invalidate the boundary.
                var didInvalidate = shouldInvalidateReactRefreshBoundary(prevExports, nextExports);
                if (isNoLongerABoundary || didInvalidate) {
                    // We'll be conservative. The only case in which we won't do a full
                    // reload is if all parent modules are also refresh boundaries.
                    // In that case we'll add them to the current queue.
                    var parents = getParents();
                    if (parents.length === 0) {
                        // Looks like we bubbled to the root. Can't recover from that.
                        window.location.reload();
                        return;
                    }
                    return parents;
                }
                enqueueUpdate();
            });
        }
    }
};
function isReactRefreshBoundary(exports) {
    if (Refresh.isLikelyComponentType(exports)) return true;
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    return false;
    var hasExports = false;
    var areAllExportsComponents = true;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        hasExports = true;
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) // Don't invoke getters for CJS as they may have side effects.
        return false;
        var exportValue = exports[key];
        if (!Refresh.isLikelyComponentType(exportValue)) areAllExportsComponents = false;
    }
    return hasExports && areAllExportsComponents;
}
function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
    var prevSignature = getRefreshBoundarySignature(prevExports);
    var nextSignature = getRefreshBoundarySignature(nextExports);
    if (prevSignature.length !== nextSignature.length) return true;
    for(var i = 0; i < nextSignature.length; i++){
        if (prevSignature[i] !== nextSignature[i]) return true;
    }
    return false;
} // When this signature changes, it's unsafe to stop at this refresh boundary.
function getRefreshBoundarySignature(exports) {
    var signature = [];
    signature.push(Refresh.getFamilyByType(exports));
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return signature;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        if (key === '__esModule') continue;
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        signature.push(key);
        signature.push(Refresh.getFamilyByType(exportValue));
    }
    return signature;
}
function registerExportsForReactRefresh(module) {
    var exports = module.exports, id = module.id;
    Refresh.register(exports, id + ' %exports%');
    if (exports == null || typeof exports !== 'object') // Exit if we can't iterate over exports.
    // (This is important for legacy environments.)
    return;
    let isESM = '__esModule' in exports;
    for(var key in exports){
        var desc = Object.getOwnPropertyDescriptor(exports, key);
        if (desc && desc.get && !isESM) continue;
        var exportValue = exports[key];
        Refresh.register(exportValue, id + ' %exports% ' + key);
    }
}

},{"react-refresh/runtime":"786KC"}]},["kn9T2","hOxwo","4aBH6"], "4aBH6", "parcelRequirefd87")

//# sourceMappingURL=index.2d3ace14.js.map
